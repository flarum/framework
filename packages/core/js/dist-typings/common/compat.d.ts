declare var _default: {
    extend: any;
    Session: typeof Session;
    Store: typeof Store;
    'utils/BasicEditorDriver': typeof BasicEditorDriver;
    'utils/evented': {
        handlers: Record<string, unknown>;
        getHandlers(event: string): Function[];
        trigger(event: string, ...args: any[]): void;
        on(event: string, handler: Function): void;
        one(event: string, handler: Function): void;
        off(event: string, handler: Function): void;
    };
    'utils/liveHumanTimes': typeof liveHumanTimes;
    'utils/ItemList': typeof ItemList;
    'utils/mixin': typeof mixin;
    'utils/humanTime': typeof humanTime;
    'utils/computed': typeof computed;
    'utils/insertText': typeof insertText;
    'utils/styleSelectedText': typeof styleSelectedText;
    'utils/Drawer': typeof Drawer;
    'utils/anchorScroll': typeof anchorScroll;
    'utils/RequestError': typeof RequestError;
    'utils/abbreviateNumber': typeof abbreviateNumber;
    'utils/string': typeof string;
    'utils/SubtreeRetainer': typeof SubtreeRetainer;
    'utils/escapeRegExp': typeof escapeRegExp;
    'utils/extract': typeof extract;
    'utils/ScrollListener': typeof ScrollListener;
    'utils/stringToColor': typeof stringToColor;
    'utils/Stream': typeof Stream;
    'utils/subclassOf': typeof subclassOf;
    'utils/setRouteWithForcedRefresh': typeof setRouteWithForcedRefresh;
    'utils/patchMithril': typeof patchMithril;
    'utils/proxifyCompat': typeof proxifyCompat;
    'utils/classList': (...classes: import("clsx").ClassValue[]) => string;
    'utils/extractText': typeof extractText;
    'utils/formatNumber': typeof formatNumber;
    'utils/mapRoutes': typeof mapRoutes;
    'utils/withAttr': (key: string, cb: Function) => (this: Element) => void;
    'utils/throttleDebounce': typeof ThrottleDebounce;
    'utils/isObject': typeof isObject;
    'utils/focusTrap': typeof FocusTrap;
    'models/Notification': typeof Notification;
    'models/User': typeof User;
    'models/Post': typeof Post;
    'models/Discussion': typeof Discussion;
    'models/Group': typeof Group;
    'models/Forum': typeof Forum;
    Component: typeof Component;
    Fragment: typeof Fragment;
    Translator: typeof Translator;
    'components/AlertManager': typeof AlertManager;
    'components/Page': typeof Page;
    'components/Switch': typeof Switch;
    'components/Badge': typeof Badge;
    'components/LoadingIndicator': typeof LoadingIndicator;
    'components/Placeholder': typeof Placeholder;
    'components/Separator': typeof Separator;
    'components/Dropdown': typeof Dropdown;
    'components/SplitDropdown': typeof SplitDropdown;
    'components/RequestErrorModal': typeof RequestErrorModal;
    'components/FieldSet': typeof FieldSet;
    'components/Select': typeof Select;
    'components/Navigation': typeof Navigation;
    'components/Alert': typeof Alert;
    'components/Link': typeof Link;
    'components/LinkButton': typeof LinkButton;
    'components/Checkbox': typeof Checkbox;
    'components/ColorPreviewInput': typeof ColorPreviewInput;
    'components/SelectDropdown': typeof SelectDropdown;
    'components/ModalManager': typeof ModalManager;
    'components/Button': typeof Button;
    'components/Modal': typeof Modal;
    'components/GroupBadge': typeof GroupBadge;
    'components/TextEditor': typeof TextEditor;
    'components/TextEditorButton': typeof TextEditorButton;
    'components/Tooltip': typeof Tooltip;
    'components/EditUserModal': typeof EditUserModal;
    Model: typeof Model;
    Application: typeof Application;
    'helpers/fullTime': typeof fullTime;
    'helpers/avatar': typeof avatar;
    'helpers/icon': typeof icon;
    'helpers/humanTime': typeof humanTimeHelper;
    'helpers/punctuateSeries': typeof punctuateSeries;
    'helpers/highlight': typeof highlight;
    'helpers/username': typeof username;
    'helpers/userOnline': typeof userOnline;
    'helpers/listItems': typeof listItems;
    'resolvers/DefaultResolver': typeof DefaultResolver;
    'states/PaginatedListState': typeof PaginatedListState;
};
export default _default;
import Session from "./Session";
import Store from "./Store";
import BasicEditorDriver from "./utils/BasicEditorDriver";
import liveHumanTimes from "./utils/liveHumanTimes";
import ItemList from "./utils/ItemList";
import mixin from "./utils/mixin";
import humanTime from "./utils/humanTime";
import computed from "./utils/computed";
import insertText from "./utils/insertText";
import styleSelectedText from "./utils/styleSelectedText";
import Drawer from "./utils/Drawer";
import anchorScroll from "./utils/anchorScroll";
import RequestError from "./utils/RequestError";
import abbreviateNumber from "./utils/abbreviateNumber";
import * as string from "./utils/string";
import SubtreeRetainer from "./utils/SubtreeRetainer";
import escapeRegExp from "./utils/escapeRegExp";
import extract from "./utils/extract";
import ScrollListener from "./utils/ScrollListener";
import stringToColor from "./utils/stringToColor";
import Stream from "./utils/Stream";
import subclassOf from "./utils/subclassOf";
import setRouteWithForcedRefresh from "./utils/setRouteWithForcedRefresh";
import patchMithril from "./utils/patchMithril";
import proxifyCompat from "./utils/proxifyCompat";
import extractText from "./utils/extractText";
import formatNumber from "./utils/formatNumber";
import mapRoutes from "./utils/mapRoutes";
import * as ThrottleDebounce from "./utils/throttleDebounce";
import isObject from "./utils/isObject";
import * as FocusTrap from "./utils/focusTrap";
import Notification from "./models/Notification";
import User from "./models/User";
import Post from "./models/Post";
import Discussion from "./models/Discussion";
import Group from "./models/Group";
import Forum from "./models/Forum";
import Component from "./Component";
import Fragment from "./Fragment";
import Translator from "./Translator";
import AlertManager from "./components/AlertManager";
import Page from "./components/Page";
import Switch from "./components/Switch";
import Badge from "./components/Badge";
import LoadingIndicator from "./components/LoadingIndicator";
import Placeholder from "./components/Placeholder";
import Separator from "./components/Separator";
import Dropdown from "./components/Dropdown";
import SplitDropdown from "./components/SplitDropdown";
import RequestErrorModal from "./components/RequestErrorModal";
import FieldSet from "./components/FieldSet";
import Select from "./components/Select";
import Navigation from "./components/Navigation";
import Alert from "./components/Alert";
import Link from "./components/Link";
import LinkButton from "./components/LinkButton";
import Checkbox from "./components/Checkbox";
import ColorPreviewInput from "./components/ColorPreviewInput";
import SelectDropdown from "./components/SelectDropdown";
import ModalManager from "./components/ModalManager";
import Button from "./components/Button";
import Modal from "./components/Modal";
import GroupBadge from "./components/GroupBadge";
import TextEditor from "./components/TextEditor";
import TextEditorButton from "./components/TextEditorButton";
import Tooltip from "./components/Tooltip";
import EditUserModal from "./components/EditUserModal";
import Model from "./Model";
import Application from "./Application";
import fullTime from "./helpers/fullTime";
import avatar from "./helpers/avatar";
import icon from "./helpers/icon";
import humanTimeHelper from "./helpers/humanTime";
import punctuateSeries from "./helpers/punctuateSeries";
import highlight from "./helpers/highlight";
import username from "./helpers/username";
import userOnline from "./helpers/userOnline";
import listItems from "./helpers/listItems";
import DefaultResolver from "./resolvers/DefaultResolver";
import PaginatedListState from "./states/PaginatedListState";
