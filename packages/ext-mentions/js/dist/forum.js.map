{"version":3,"sources":["webpack://@flarum/mentions/webpack/bootstrap","webpack://@flarum/mentions/external \"flarum.core.compat['common/extend']\"","webpack://@flarum/mentions/external \"flarum.core.compat['app']\"","webpack://@flarum/mentions/external \"flarum.core.compat['extend']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/string']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/components/PostPreview']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/helpers/username']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/components/EditPostComposer']\"","webpack://@flarum/mentions/external \"flarum.core.compat['Fragment']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/Notification']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/components/TextEditor']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/username']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/extractText']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/Model']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/models/Post']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/components/Link']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/helpers/punctuateSeries']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/Button']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/icon']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/components/TextEditorButton']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/components/ReplyComposer']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/helpers/highlight']\"","webpack://@flarum/mentions/external \"flarum.core.compat['forum/utils/KeyboardNavigatable']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/utils/string']\"","webpack://@flarum/mentions/external \"flarum.core.compat['common/utils/throttleDebounce']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/UserPage']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/LinkButton']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/PostsUserPage']\"","webpack://@flarum/mentions/external \"flarum.core\"","webpack://@flarum/mentions/./src/forum/utils/getCleanDisplayName.js","webpack://@flarum/mentions/./src/forum/utils/getMentionText.js","webpack://@flarum/mentions/./src/forum/utils/reply.js","webpack://@flarum/mentions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/mentions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/mentions/./src/forum/fragments/PostQuoteButton.js","webpack://@flarum/mentions/./src/forum/utils/selectedText.js","webpack://@flarum/mentions/./src/forum/fragments/AutocompleteDropdown.js","webpack://@flarum/mentions/./src/forum/addComposerAutocomplete.js","webpack://@flarum/mentions/./src/forum/components/PostMentionedNotification.js","webpack://@flarum/mentions/./src/forum/components/UserMentionedNotification.js","webpack://@flarum/mentions/./src/forum/components/MentionsUserPage.js","webpack://@flarum/mentions/./src/forum/utils/textFormatter.js","webpack://@flarum/mentions/./src/forum/compat.js","webpack://@flarum/mentions/./src/forum/index.js","webpack://@flarum/mentions/./src/forum/addPostMentionPreviews.js","webpack://@flarum/mentions/./src/forum/addMentionedByList.js","webpack://@flarum/mentions/./src/forum/addPostReplyAction.js","webpack://@flarum/mentions/./src/forum/addPostQuoteButton.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","getDeletedUserText","extractText","app","translator","trans","getCleanDisplayName","user","useDisplayName","displayName","username","replace","getMentionText","postId","undefined","forum","attribute","id","insertMention","post","composer","quote","Promise","resolve","mention","fields","content","body","attrs","originalContent","cursorPosition","editor","getSelectionRange","preceding","slice","precedingNewlines","length","match","insertAtCursor","Array","join","trim","reply","bodyMatches","EditPostComposer","discussion","DiscussionControls","replyAction","then","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","PostQuoteButton","view","class","onclick","icon","className","show","left","top","$this","this","$","parentOffset","offsetParent","offset","css","hideHandler","hide","document","on","showStart","window","scrollTop","outerHeight","showEnd","right","bottom","outerWidth","off","Fragment","selectedText","selection","getSelection","rangeCount","range","getRangeAt","parent","commonAncestorContainer","contains","clone","append","cloneContents","find","replaceWith","alt","src","innerText","href","text","AutocompleteDropdown","items","active","index","keyWasJustPressed","map","item","navigate","delta","setIndex","clearTimeout","keyWasJustPressedTimeout","setTimeout","complete","eq","click","scrollToItem","$dropdown","$items","rangedIndex","$item","removeClass","addClass","dropdownScroll","dropdownTop","dropdownBottom","itemTop","itemBottom","parseInt","stop","animate","throttledSearch","throttle","typed","searched","returnedUsers","returnedUserIds","dropdown","buildSuggestions","typedLower","toLowerCase","includes","store","filter","q","page","limit","results","forEach","u","has","add","push","addComposerAutocomplete","$container","extend","TextEditor","$editor","wrap","navigator","KeyboardNavigatable","when","onUp","onDown","onSelect","onCancel","bindTo","after","params","relMentionStart","absMentionStart","matchTyped","from","all","Set","inputListeners","cursor","lastChunk","getLastNChars","substr","test","substring","makeSuggestion","replacement","usernameHelper","children","highlight","replaceBeforeCursor","applySuggestion","onmouseenter","avatar","userMatches","some","suggestions","ReplyComposer","composerAttrs","composerPost","posts","contentType","number","sort","a","b","createdAt","splice","truncate","contentPlain","render","coordinates","getCaretCoordinates","width","height","Math","max","PostMentionedNotification","notification","subject","route","replyNumber","fromUser","count","excerpt","Notification","UserMentionedNotification","MentionsUserPage","loadResults","type","mentioned","loadLimit","PostsUserPage","filterUserMentions","tag","hasAttribute","getBy","getAttribute","getById","setAttribute","slug","invalidate","filterPostMentions","textFormatter","initializers","addPreviews","contentHtml","oldPostContentHtml","isEditing","parentPost","$parentPost","e","set","preventDefault","each","timeout","data","$preview","getPostElement","showPreview","$post","visible","pageYOffset","positionPreview","previewHeight","showPost","title","PostPreview","component","LoadingIndicator","hidePreview","hasClass","one","cancelable","hover","stopPropagation","CommentPost","addPostMentionPreviews","Post","mentionedBy","Model","hasMany","replies","is","data-number","users","repliers","session","indexOf","overLimit","names","punctuateSeries","addMentionedByList","isHidden","canReply","$postBody","button","handler","rects","getClientRects","firstRect","clientY","clientX","lastRect","addEventListener","notificationComponents","postMentioned","userMentioned","NotificationGrid","label","routes","path","UserPage","LinkButton","getPlainContent","removeSelectors","assign","mentionsCompat"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAY,K,cCAzCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAe,Q,cCA5CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAiB,U,cCA9CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/components/PostPreview'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['forum/components/EditPostComposer'];","module.exports = flarum.core.compat['Fragment'];","module.exports = flarum.core.compat['components/Notification'];","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/models/Post'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/helpers/punctuateSeries'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['forum/utils/DiscussionControls'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['common/components/TextEditorButton'];","module.exports = flarum.core.compat['forum/components/ReplyComposer'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/helpers/highlight'];","module.exports = flarum.core.compat['forum/utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['common/utils/string'];","module.exports = flarum.core.compat['common/utils/throttleDebounce'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/PostsUserPage'];","module.exports = flarum.core;","import extractText from 'flarum/common/utils/extractText';\n\n/**\n * Whether to use the old mentions format.\n *\n * `'@username'` or `'@\"Display name\"'`\n */\nexport const shouldUseOldFormat = () => app.forum.attribute('allowUsernameMentionFormat') || false;\n\nconst getDeletedUserText = () => extractText(app.translator.trans('core.lib.username.deleted_text'));\n\n/**\n * Fetches a user's username or display name.\n *\n * Chooses based on the format option set in the admin settings page.\n *\n * @param user An instance of the User model to fetch the username for\n * @param useDisplayName If `true`, uses `user.displayName()`, otherwise, uses `user.username()`\n */\nexport default function getCleanDisplayName(user, useDisplayName = true) {\n  if (!user) return getDeletedUserText().replace(/\"#[a-z]{0,3}[0-9]+/, '_');\n\n  const text = (useDisplayName ? user.displayName() : user.username()) || getDeletedUserText();\n\n  return text.replace(/\"#[a-z]{0,3}[0-9]+/, '_');\n}\n","import getCleanDisplayName, { shouldUseOldFormat } from './getCleanDisplayName';\n\n/**\n * Fetches the mention text for a specified user (and optionally a post ID for replies).\n *\n * Automatically determines which mention syntax to be used based on the option in the\n * admin dashboard. Also performs display name clean-up automatically.\n *\n * @example <caption>New display name syntax</caption>\n * // '@\"User\"#1'\n * getMentionText(User) // User is ID 1, display name is 'User'\n *\n * @example <caption>Replying</caption>\n * // '@\"User\"#p13'\n * getMentionText(User, 13) // User display name is 'User', post ID is 13\n *\n * @example <caption>Using old syntax</caption>\n * // '@username'\n * getMentionText(User) // User's username is 'username'\n */\nexport default function getMentionText(user, postId) {\n  if (postId === undefined) {\n    if (shouldUseOldFormat()) {\n      // Plain @username\n      const cleanText = getCleanDisplayName(user, false);\n      return `@${cleanText}`;\n    }\n    // @\"Display name\"#UserID\n    const cleanText = getCleanDisplayName(user);\n    return `@\"${cleanText}\"#${user.id()}`;\n  } else {\n    // @\"Display name\"#pPostID\n    const cleanText = getCleanDisplayName(user);\n    return `@\"${cleanText}\"#p${postId}`;\n  }\n}\n","import DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport EditPostComposer from 'flarum/forum/components/EditPostComposer';\nimport getMentionText from './getMentionText';\n\nexport function insertMention(post, composer, quote) {\n  return new Promise((resolve) => {\n    const user = post.user();\n    const mention = getMentionText(user, post.id()) + ' ';\n\n    // If the composer is empty, then assume we're starting a new reply.\n    // In which case we don't want the user to have to confirm if they\n    // close the composer straight away.\n    if (!composer.fields.content()) {\n      composer.body.attrs.originalContent = mention;\n    }\n\n    const cursorPosition = composer.editor.getSelectionRange()[0];\n    const preceding = composer.fields.content().slice(0, cursorPosition);\n    const precedingNewlines = preceding.length == 0 ? 0 : 3 - preceding.match(/(\\n{0,2})$/)[0].length;\n\n    composer.editor.insertAtCursor(\n      Array(precedingNewlines).join('\\n') + // Insert up to two newlines, depending on preceding whitespace\n        (quote ? '> ' + mention + quote.trim().replace(/\\n/g, '\\n> ') + '\\n\\n' : mention),\n      false\n    );\n    return resolve(composer);\n  });\n}\n\nexport default function reply(post, quote) {\n  if (app.composer.bodyMatches(EditPostComposer) && app.composer.body.attrs.post.discussion() === post.discussion()) {\n    // If we're already editing a post in the discussion of post we're quoting,\n    // insert the mention directly.\n    return insertMention(post, app.composer, quote);\n  } else {\n    // The default \"Reply\" action behavior will only open a new composer if\n    // necessary, but it will always be a ReplyComposer, hence the exceptional\n    // case above.\n    return DiscussionControls.replyAction.call(post.discussion()).then((composer) => insertMention(post, composer, quote));\n  }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Fragment from 'flarum/Fragment';\nimport icon from 'flarum/helpers/icon';\n\nimport reply from '../utils/reply';\n\nexport default class PostQuoteButton extends Fragment {\n  constructor(post) {\n    super();\n\n    this.post = post;\n  }\n\n  view() {\n    return (\n      <button\n        class=\"Button PostQuoteButton\"\n        onclick={() => {\n          reply(this.post, this.content);\n        }}\n      >\n        {icon('fas fa-quote-left', { className: 'Button-icon' })}\n        {app.translator.trans('flarum-mentions.forum.post.quote_button')}\n      </button>\n    );\n  }\n\n  show(left, top) {\n    const $this = this.$().show();\n    const parentOffset = $this.offsetParent().offset();\n\n    $this.css('left', left - parentOffset.left).css('top', top - parentOffset.top);\n\n    this.hideHandler = this.hide.bind(this);\n    $(document).on('mouseup', this.hideHandler);\n  }\n\n  showStart(left, top) {\n    const $this = this.$();\n\n    this.show(left, $(window).scrollTop() + top - $this.outerHeight() - 5);\n  }\n\n  showEnd(right, bottom) {\n    const $this = this.$();\n\n    this.show(right - $this.outerWidth(), $(window).scrollTop() + bottom + 5);\n  }\n\n  hide() {\n    this.$().hide();\n    $(document).off('mouseup', this.hideHandler);\n  }\n}\n","/**\n * Finds the selected text in the provided composer body.\n */\nexport default function selectedText(body) {\n  const selection = window.getSelection();\n\n  if (selection?.rangeCount) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      const clone = $('<div>').append(range.cloneContents());\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function () {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function () {\n        return `![](${this.src})`;\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function () {\n        return `[${this.innerText}](${this.href})`;\n      });\n\n      return clone.text();\n    }\n  }\n  return '';\n}\n","import Fragment from 'flarum/Fragment';\n\nexport default class AutocompleteDropdown extends Fragment {\n  items = [];\n  active = false;\n  index = 0;\n  keyWasJustPressed = false;\n\n  view() {\n    return (\n      <ul className=\"Dropdown-menu MentionsDropdown\">\n        {this.items.map((item) => (\n          <li>{item}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  show(left, top) {\n    this.$()\n      .show()\n      .css({\n        left: left + 'px',\n        top: top + 'px',\n      });\n    this.active = true;\n  }\n\n  hide() {\n    this.$().hide();\n    this.active = false;\n  }\n\n  navigate(delta) {\n    this.keyWasJustPressed = true;\n    this.setIndex(this.index + delta, true);\n    clearTimeout(this.keyWasJustPressedTimeout);\n    this.keyWasJustPressedTimeout = setTimeout(() => (this.keyWasJustPressed = false), 500);\n  }\n\n  complete() {\n    this.$('li').eq(this.index).find('button').click();\n  }\n\n  setIndex(index, scrollToItem) {\n    if (this.keyWasJustPressed && !scrollToItem) return;\n\n    const $dropdown = this.$();\n    const $items = $dropdown.find('li');\n    let rangedIndex = index;\n\n    if (rangedIndex < 0) {\n      rangedIndex = $items.length - 1;\n    } else if (rangedIndex >= $items.length) {\n      rangedIndex = 0;\n    }\n\n    this.index = rangedIndex;\n\n    const $item = $items.removeClass('active').eq(rangedIndex).addClass('active');\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({ scrollTop }, 100);\n      }\n    }\n  }\n}\n","import { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport TextEditorButton from 'flarum/common/components/TextEditorButton';\nimport ReplyComposer from 'flarum/forum/components/ReplyComposer';\nimport EditPostComposer from 'flarum/forum/components/EditPostComposer';\nimport avatar from 'flarum/common/helpers/avatar';\nimport usernameHelper from 'flarum/common/helpers/username';\nimport highlight from 'flarum/common/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/forum/utils/KeyboardNavigatable';\nimport { truncate } from 'flarum/common/utils/string';\nimport { throttle } from 'flarum/common/utils/throttleDebounce';\n\nimport AutocompleteDropdown from './fragments/AutocompleteDropdown';\nimport getMentionText from './utils/getMentionText';\n\nconst throttledSearch = throttle(\n  250, // 250ms timeout\n  function (typed, searched, returnedUsers, returnedUserIds, dropdown, buildSuggestions) {\n    const typedLower = typed.toLowerCase();\n    if (!searched.includes(typedLower)) {\n      app.store.find('users', { filter: { q: typed }, page: { limit: 5 } }).then((results) => {\n        results.forEach((u) => {\n          if (!returnedUserIds.has(u.id())) {\n            returnedUserIds.add(u.id());\n            returnedUsers.push(u);\n          }\n        });\n\n        buildSuggestions();\n      });\n      searched.push(typedLower);\n    }\n  }\n);\n\nexport default function addComposerAutocomplete() {\n  const $container = $('<div class=\"ComposerBody-mentionsDropdownContainer\"></div>');\n  const dropdown = new AutocompleteDropdown();\n\n  extend(TextEditor.prototype, 'oncreate', function () {\n    const $editor = this.$('.TextEditor-editor').wrap('<div class=\"ComposerBody-mentionsWrapper\"></div>');\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .when(() => dropdown.active)\n      .onUp(() => dropdown.navigate(-1))\n      .onDown(() => dropdown.navigate(1))\n      .onSelect(dropdown.complete.bind(dropdown))\n      .onCancel(dropdown.hide.bind(dropdown))\n      .bindTo($editor);\n\n    $editor.after($container);\n  });\n\n  extend(TextEditor.prototype, 'buildEditorParams', function (params) {\n    const searched = [];\n    let relMentionStart;\n    let absMentionStart;\n    let typed;\n    let matchTyped;\n\n    // We store users returned from an API here to preserve order in which they are returned\n    // This prevents the user list jumping around while users are returned.\n    // We also use a hashset for user IDs to provide O(1) lookup for the users already in the list.\n    const returnedUsers = Array.from(app.store.all('users'));\n    const returnedUserIds = new Set(returnedUsers.map((u) => u.id()));\n\n    const applySuggestion = (replacement) => {\n      this.attrs.composer.editor.replaceBeforeCursor(absMentionStart - 1, replacement + ' ');\n\n      dropdown.hide();\n    };\n\n    params.inputListeners.push(() => {\n      const selection = this.attrs.composer.editor.getSelectionRange();\n\n      const cursor = selection[0];\n\n      if (selection[1] - cursor > 0) return;\n\n      // Search backwards from the cursor for an '@' symbol. If we find one,\n      // we will want to show the autocomplete dropdown!\n      const lastChunk = this.attrs.composer.editor.getLastNChars(30);\n      absMentionStart = 0;\n      for (let i = lastChunk.length - 1; i >= 0; i--) {\n        const character = lastChunk.substr(i, 1);\n        if (character === '@' && (i == 0 || /\\s/.test(lastChunk.substr(i - 1, 1)))) {\n          relMentionStart = i + 1;\n          absMentionStart = cursor - lastChunk.length + i + 1;\n          break;\n        }\n      }\n\n      dropdown.hide();\n      dropdown.active = false;\n\n      if (absMentionStart) {\n        typed = lastChunk.substring(relMentionStart).toLowerCase();\n        matchTyped = typed.match(/^[\"|“]((?:(?!\"#).)+)$/);\n        typed = (matchTyped && matchTyped[1]) || typed;\n\n        const makeSuggestion = function (user, replacement, content, className = '') {\n          const username = usernameHelper(user);\n\n          if (typed) {\n            username.children = [highlight(username.text, typed)];\n            delete username.text;\n          }\n\n          return (\n            <button\n              className={'PostPreview ' + className}\n              onclick={() => applySuggestion(replacement)}\n              onmouseenter={function () {\n                dropdown.setIndex($(this).parent().index());\n              }}\n            >\n              <span className=\"PostPreview-content\">\n                {avatar(user)}\n                {username} {content}\n              </span>\n            </button>\n          );\n        };\n\n        const userMatches = function (user) {\n          const names = [user.username(), user.displayName()];\n\n          return names.some((name) => name.toLowerCase().substr(0, typed.length) === typed);\n        };\n\n        const buildSuggestions = () => {\n          const suggestions = [];\n\n          // If the user has started to type a username, then suggest users\n          // matching that username.\n          if (typed) {\n            returnedUsers.forEach((user) => {\n              if (!userMatches(user)) return;\n\n              suggestions.push(makeSuggestion(user, getMentionText(user), '', 'MentionsDropdown-user'));\n            });\n          }\n\n          // If the user is replying to a discussion, or if they are editing a\n          // post, then we can suggest other posts in the discussion to mention.\n          // We will add the 5 most recent comments in the discussion which\n          // match any username characters that have been typed.\n          if (this.attrs.composer.bodyMatches(ReplyComposer) || this.attrs.composer.bodyMatches(EditPostComposer)) {\n            const composerAttrs = this.attrs.composer.body.attrs;\n            const composerPost = composerAttrs.post;\n            const discussion = (composerPost && composerPost.discussion()) || composerAttrs.discussion;\n\n            if (discussion) {\n              discussion\n                .posts()\n                // Filter to only comment posts, and replies before this message\n                .filter((post) => post && post.contentType() === 'comment' && (!composerPost || post.number() < composerPost.number()))\n                // Sort by new to old\n                .sort((a, b) => b.createdAt() - a.createdAt())\n                // Filter to where the user matches what is being typed\n                .filter((post) => {\n                  const user = post.user();\n                  return user && userMatches(user);\n                })\n                // Get the first 5\n                .splice(0, 5)\n                // Make the suggestions\n                .forEach((post) => {\n                  const user = post.user();\n                  suggestions.push(\n                    makeSuggestion(\n                      user,\n                      getMentionText(user, post.id()),\n                      [\n                        app.translator.trans('flarum-mentions.forum.composer.reply_to_post_text', { number: post.number() }),\n                        ' — ',\n                        truncate(post.contentPlain(), 200),\n                      ],\n                      'MentionsDropdown-post'\n                    )\n                  );\n                });\n            }\n          }\n\n          if (suggestions.length) {\n            dropdown.items = suggestions;\n            m.render($container[0], dropdown.render());\n\n            dropdown.show();\n            const coordinates = this.attrs.composer.editor.getCaretCoordinates(absMentionStart);\n            const width = dropdown.$().outerWidth();\n            const height = dropdown.$().outerHeight();\n            const parent = dropdown.$().offsetParent();\n            let left = coordinates.left;\n            let top = coordinates.top + 15;\n\n            // Keep the dropdown inside the editor.\n            if (top + height > parent.height()) {\n              top = coordinates.top - height - 15;\n            }\n            if (left + width > parent.width()) {\n              left = parent.width() - width;\n            }\n\n            // Prevent the dropdown from going off screen on mobile\n            top = Math.max(-(parent.offset().top - $(document).scrollTop()), top);\n            left = Math.max(-parent.offset().left, left);\n\n            dropdown.show(left, top);\n          } else {\n            dropdown.active = false;\n            dropdown.hide();\n          }\n        };\n\n        dropdown.active = true;\n\n        buildSuggestions();\n\n        dropdown.setIndex(0);\n        dropdown.$().scrollTop(0);\n\n        // Don't send API calls searching for users until at least 2 characters have been typed.\n        // This focuses the mention results on users and posts in the discussion.\n        if (typed.length > 1 && app.forum.attribute('canSearchUsers')) {\n          throttledSearch(typed, searched, returnedUsers, returnedUserIds, dropdown, buildSuggestions);\n        }\n      }\n    });\n  });\n\n  extend(TextEditor.prototype, 'toolbarItems', function (items) {\n    items.add(\n      'mention',\n      <TextEditorButton onclick={() => this.attrs.composer.editor.insertAtCursor(' @')} icon=\"fas fa-at\">\n        {app.translator.trans('flarum-mentions.forum.composer.mention_tooltip')}\n      </TextEditorButton>\n    );\n  });\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class PostMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-reply';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n    const content = notification.content();\n\n    return app.route.discussion(post.discussion(), content && content.replyNumber);\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.post_mentioned_text', { user, count: 1 });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class UserMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-at';\n  }\n\n  href() {\n    const post = this.attrs.notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    const user = this.attrs.notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.user_mentioned_text', { user });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import PostsUserPage from 'flarum/components/PostsUserPage';\n\n/**\n * The `MentionsUserPage` component shows post which user Mentioned at\n */\nexport default class MentionsUserPage extends PostsUserPage {\n  /**\n   * Load a new page of the user's activity feed.\n   *\n   * @param {Integer} [offset] The position to start getting results from.\n   * @return {Promise}\n   * @protected\n   */\n  loadResults(offset) {\n    return app.store.find('posts', {\n      filter: {\n        type: 'comment',\n        mentioned: this.user.id(),\n      },\n      page: { offset, limit: this.loadLimit },\n      sort: '-createdAt',\n    });\n  }\n}\n","import username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\n\nexport function filterUserMentions(tag) {\n  let user;\n\n  if (app.forum.attribute('allowUsernameMentionFormat') && tag.hasAttribute('username'))\n    user = app.store.getBy('users', 'username', tag.getAttribute('username'));\n  else if (tag.hasAttribute('id')) user = app.store.getById('users', tag.getAttribute('id'));\n\n  if (user) {\n    tag.setAttribute('id', user.id());\n    tag.setAttribute('slug', user.slug());\n    tag.setAttribute('displayname', extractText(username(user)));\n\n    return true;\n  }\n\n  tag.invalidate();\n}\n\nexport function filterPostMentions(tag) {\n  const post = app.store.getById('posts', tag.getAttribute('id'));\n\n  if (post) {\n    tag.setAttribute('discussionid', post.discussion().id());\n    tag.setAttribute('number', post.number());\n    tag.setAttribute('displayname', extractText(username(post.user())));\n\n    return true;\n  }\n}\n","import MentionsUserPage from './components/MentionsUserPage';\nimport PostMentionedNotification from './components/PostMentionedNotification';\nimport UserMentionedNotification from './components/UserMentionedNotification';\nimport AutocompleteDropdown from './fragments/AutocompleteDropdown';\nimport PostQuoteButton from './fragments/PostQuoteButton';\nimport getCleanDisplayName from './utils/getCleanDisplayName';\nimport getMentionText from './utils/getMentionText';\nimport * as reply from './utils/reply';\nimport selectedText from './utils/selectedText';\nimport * as textFormatter from './utils/textFormatter';\n\nexport default {\n  'mentions/components/MentionsUserPage': MentionsUserPage,\n  'mentions/components/PostMentionedNotification': PostMentionedNotification,\n  'mentions/components/UserMentionedNotification': UserMentionedNotification,\n  'mentions/fragments/AutocompleteDropdown': AutocompleteDropdown,\n  'mentions/fragments/PostQuoteButton': PostQuoteButton,\n  'mentions/utils/getCleanDisplayName': getCleanDisplayName,\n  'mentions/utils/getMentionText': getMentionText,\n  'mentions/utils/reply': reply,\n  'mentions/utils/selectedText': selectedText,\n  'mentions/utils/textFormatter': textFormatter,\n};\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\nimport { getPlainContent } from 'flarum/utils/string';\n\nimport addPostMentionPreviews from './addPostMentionPreviews';\nimport addMentionedByList from './addMentionedByList';\nimport addPostReplyAction from './addPostReplyAction';\nimport addPostQuoteButton from './addPostQuoteButton';\nimport addComposerAutocomplete from './addComposerAutocomplete';\nimport PostMentionedNotification from './components/PostMentionedNotification';\nimport UserMentionedNotification from './components/UserMentionedNotification';\nimport UserPage from 'flarum/components/UserPage';\nimport LinkButton from 'flarum/components/LinkButton';\nimport MentionsUserPage from './components/MentionsUserPage';\n\napp.initializers.add('flarum-mentions', function () {\n  // For every mention of a post inside a post's content, set up a hover handler\n  // that shows a preview of the mentioned post.\n  addPostMentionPreviews();\n\n  // In the footer of each post, show information about who has replied (i.e.\n  // who the post has been mentioned by).\n  addMentionedByList();\n\n  // Add a 'reply' control to the footer of each post. When clicked, it will\n  // open up the composer and add a post mention to its contents.\n  addPostReplyAction();\n\n  // Show a Quote button when Post text is selected\n  addPostQuoteButton();\n\n  // After typing '@' in the composer, show a dropdown suggesting a bunch of\n  // posts or users that the user could mention.\n  addComposerAutocomplete();\n\n  app.notificationComponents.postMentioned = PostMentionedNotification;\n  app.notificationComponents.userMentioned = UserMentionedNotification;\n\n  // Add notification preferences.\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('postMentioned', {\n      name: 'postMentioned',\n      icon: 'fas fa-reply',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_post_mentioned_label'),\n    });\n\n    items.add('userMentioned', {\n      name: 'userMentioned',\n      icon: 'fas fa-at',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_user_mentioned_label'),\n    });\n  });\n\n  // Add mentions tab in user profile\n  app.routes['user.mentions'] = { path: '/u/:username/mentions', component: MentionsUserPage };\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const user = this.user;\n    items.add(\n      'mentions',\n      LinkButton.component(\n        {\n          href: app.route('user.mentions', { username: user.slug() }),\n          name: 'mentions',\n          icon: 'fas fa-at',\n        },\n        app.translator.trans('flarum-mentions.forum.user.mentions_link')\n      ),\n      80\n    );\n  });\n\n  // Remove post mentions when rendering post previews.\n  getPlainContent.removeSelectors.push('a.PostMention');\n});\n\nexport * from './utils/textFormatter';\n\n// Expose compat API\nimport mentionsCompat from './compat';\nimport { compat } from '@flarum/core/forum';\n\nObject.assign(compat, mentionsCompat);\n","import { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport PostPreview from 'flarum/forum/components/PostPreview';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nexport default function addPostMentionPreviews() {\n  function addPreviews() {\n    const contentHtml = this.attrs.post.contentHtml();\n\n    if (contentHtml === this.oldPostContentHtml || this.isEditing()) return;\n\n    this.oldPostContentHtml = contentHtml;\n\n    const parentPost = this.attrs.post;\n    const $parentPost = this.$();\n\n    this.$().on('click', '.UserMention:not(.UserMention--deleted), .PostMention:not(.PostMention--deleted)', function (e) {\n      m.route.set(this.getAttribute('href'));\n      e.preventDefault();\n    });\n\n    this.$('.PostMention:not(.PostMention--deleted)').each(function () {\n      const $this = $(this);\n      const id = $this.data('id');\n      let timeout;\n\n      // Wrap the mention link in a wrapper element so that we can insert a\n      // preview popup as its sibling and relatively position it.\n      const $preview = $('<ul class=\"Dropdown-menu PostMention-preview fade\"/>');\n      $parentPost.append($preview);\n\n      const getPostElement = () => {\n        return $(`.PostStream-item[data-id=\"${id}\"]`);\n      };\n\n      const showPreview = () => {\n        // When the user hovers their mouse over the mention, look for the\n        // post that it's referring to in the stream, and determine if it's\n        // in the viewport. If it is, we will \"pulsate\" it.\n        const $post = getPostElement();\n        let visible = false;\n        if ($post.length) {\n          const top = $post.offset().top;\n          const scrollTop = window.pageYOffset;\n          if (top > scrollTop && top + $post.height() < scrollTop + $(window).height()) {\n            $post.addClass('pulsate');\n            visible = true;\n          }\n        }\n\n        // Otherwise, we will show a popup preview of the post. If the post\n        // hasn't yet been loaded, we will need to do that.\n        if (!visible) {\n          // Position the preview so that it appears above the mention.\n          // (The offsetParent should be .Post-body.)\n          const positionPreview = () => {\n            const previewHeight = $preview.outerHeight(true);\n            let offset = 0;\n\n            // If the preview goes off the top of the viewport, reposition it to\n            // be below the mention.\n            if ($this.offset().top - previewHeight < $(window).scrollTop() + $('#header').outerHeight()) {\n              offset += $this.outerHeight(true);\n            } else {\n              offset -= previewHeight;\n            }\n\n            $preview\n              .show()\n              .css('top', $this.offset().top - $parentPost.offset().top + offset)\n              .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n              .css('max-width', $this.offsetParent().width());\n          };\n\n          const showPost = (post) => {\n            const discussion = post.discussion();\n\n            m.render($preview[0], [\n              discussion !== parentPost.discussion() ? (\n                <li>\n                  <span className=\"PostMention-preview-discussion\">{discussion.title()}</span>\n                </li>\n              ) : (\n                ''\n              ),\n              <li>{PostPreview.component({ post })}</li>,\n            ]);\n            positionPreview();\n          };\n\n          const post = app.store.getById('posts', id);\n          if (post && post.discussion()) {\n            showPost(post);\n          } else {\n            m.render($preview[0], LoadingIndicator.component());\n            app.store.find('posts', id).then(showPost);\n            positionPreview();\n          }\n\n          setTimeout(() => $preview.off('transitionend').addClass('in'));\n        }\n      };\n\n      const hidePreview = () => {\n        getPostElement().removeClass('pulsate');\n        if ($preview.hasClass('in')) {\n          $preview.removeClass('in').one('transitionend', () => $preview.hide());\n        }\n      };\n\n      // On a touch (mobile) device we cannot hover the link to reveal the preview.\n      // Instead we cancel the navigation so that a click reveals the preview.\n      // Users can then click on the preview to go to the post if desired.\n      $this.on('touchend', (e) => {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      });\n\n      $this\n        .add($preview)\n        .hover(\n          () => {\n            clearTimeout(timeout);\n            timeout = setTimeout(showPreview, 250);\n          },\n          () => {\n            clearTimeout(timeout);\n            getPostElement().removeClass('pulsate');\n            timeout = setTimeout(hidePreview, 250);\n          }\n        )\n        .on('touchend', (e) => {\n          showPreview();\n          e.stopPropagation();\n        });\n\n      $(document).on('touchend', hidePreview);\n    });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', addPreviews);\n  extend(CommentPost.prototype, 'onupdate', addPreviews);\n}\n","import { extend } from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Post from 'flarum/common/models/Post';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Link from 'flarum/common/components/Link';\nimport PostPreview from 'flarum/forum/components/PostPreview';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport username from 'flarum/common/helpers/username';\nimport icon from 'flarum/common/helpers/icon';\n\nexport default function addMentionedByList() {\n  Post.prototype.mentionedBy = Model.hasMany('mentionedBy');\n\n  function hidePreview() {\n    this.$('.Post-mentionedBy-preview')\n      .removeClass('in')\n      .one('transitionend', function () {\n        $(this).hide();\n      });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', function () {\n    let timeout;\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const $preview = $('<ul class=\"Dropdown-menu Post-mentionedBy-preview fade\"/>');\n      this.$().append($preview);\n\n      const $parentPost = this.$();\n      const $this = this.$('.Post-mentionedBy');\n\n      const showPreview = () => {\n        if (!$preview.hasClass('in') && $preview.is(':visible')) return;\n\n        // When the user hovers their mouse over the list of people who have\n        // replied to the post, render a list of reply previews into a\n        // popup.\n        m.render(\n          $preview[0],\n          replies.map((reply) => (\n            <li data-number={reply.number()}>\n              {PostPreview.component({\n                post: reply,\n                onclick: hidePreview.bind(this),\n              })}\n            </li>\n          ))\n        );\n\n        $preview\n          .show()\n          .css('top', $this.offset().top - $parentPost.offset().top + $this.outerHeight(true))\n          .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n          .css('max-width', $parentPost.width());\n\n        setTimeout(() => $preview.off('transitionend').addClass('in'));\n      };\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(hidePreview, 250);\n        }\n      );\n\n      // Whenever the user hovers their mouse over a particular name in the\n      // list of repliers, highlight the corresponding post in the preview\n      // popup.\n      this.$()\n        .find('.Post-mentionedBy-summary a')\n        .hover(\n          function () {\n            $preview.find('[data-number=\"' + $(this).data('number') + '\"]').addClass('active');\n          },\n          function () {\n            $preview.find('[data-number]').removeClass('active');\n          }\n        );\n    }\n  });\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const users = [];\n      const repliers = replies\n        .sort((reply) => (reply.user() === app.session.user ? -1 : 0))\n        .filter((reply) => {\n          const user = reply.user();\n          if (users.indexOf(user) === -1) {\n            users.push(user);\n            return true;\n          }\n        });\n\n      const limit = 4;\n      const overLimit = repliers.length > limit;\n\n      // Create a list of unique users who have replied. So even if a user has\n      // replied twice, they will only be in this array once.\n      const names = repliers.slice(0, overLimit ? limit - 1 : limit).map((reply) => {\n        const user = reply.user();\n\n        return (\n          <Link href={app.route.post(reply)} onclick={hidePreview.bind(this)} data-number={reply.number()}>\n            {app.session.user === user ? app.translator.trans('flarum-mentions.forum.post.you_text') : username(user)}\n          </Link>\n        );\n      });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = repliers.length - names.length;\n\n        names.push(app.translator.trans('flarum-mentions.forum.post.others_text', { count }));\n      }\n\n      items.add(\n        'replies',\n        <div className=\"Post-mentionedBy\">\n          <span className=\"Post-mentionedBy-summary\">\n            {icon('fas fa-reply')}\n            {app.translator.trans('flarum-mentions.forum.post.mentioned_by' + (repliers[0].user() === app.session.user ? '_self' : '') + '_text', {\n              count: names.length,\n              users: punctuateSeries(names),\n            })}\n          </span>\n        </div>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport reply from './utils/reply';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    items.add(\n      'reply',\n      <Button className=\"Button Button--link\" onclick={() => reply(post)}>\n        {app.translator.trans('flarum-mentions.forum.post.reply_link')}\n      </Button>\n    );\n  });\n}\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport PostQuoteButton from './fragments/PostQuoteButton';\nimport selectedText from './utils/selectedText';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'oncreate', function () {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render\n    // button into it.\n    const $container = $('<div class=\"Post-quoteButtonContainer\"></div>');\n\n    const button = new PostQuoteButton(post);\n\n    const handler = function (e) {\n      setTimeout(() => {\n        const content = selectedText($postBody);\n        if (content) {\n          button.content = content;\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n"],"sourceRoot":""}