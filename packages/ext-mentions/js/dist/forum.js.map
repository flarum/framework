{"version":3,"sources":["webpack://@flarum/mentions/webpack/bootstrap","webpack://@flarum/mentions/external \"flarum.core.compat['extend']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flarum/mentions/external \"flarum.core.compat['app']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/string']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/username']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/PostPreview']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/icon']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/EditPostComposer']\"","webpack://@flarum/mentions/external \"flarum.core.compat['Fragment']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/Notification']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/TextEditor']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/extractText']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@flarum/mentions/external \"flarum.core.compat['Model']\"","webpack://@flarum/mentions/external \"flarum.core.compat['models/Post']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/Link']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/punctuateSeries']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/Button']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/TextEditorButton']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/ReplyComposer']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/avatar']\"","webpack://@flarum/mentions/external \"flarum.core.compat['helpers/highlight']\"","webpack://@flarum/mentions/external \"flarum.core.compat['utils/KeyboardNavigatable']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/UserPage']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/LinkButton']\"","webpack://@flarum/mentions/external \"flarum.core.compat['components/PostsUserPage']\"","webpack://@flarum/mentions/./src/forum/utils/cleanDisplayName.js","webpack://@flarum/mentions/./src/forum/utils/reply.js","webpack://@flarum/mentions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/mentions/./src/forum/fragments/PostQuoteButton.js","webpack://@flarum/mentions/./src/forum/addPostQuoteButton.js","webpack://@flarum/mentions/./src/forum/utils/selectedText.js","webpack://@flarum/mentions/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@flarum/mentions/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@flarum/mentions/./src/forum/fragments/AutocompleteDropdown.js","webpack://@flarum/mentions/./src/forum/addComposerAutocomplete.js","webpack://@flarum/mentions/./src/forum/components/PostMentionedNotification.js","webpack://@flarum/mentions/./src/forum/components/UserMentionedNotification.js","webpack://@flarum/mentions/./src/forum/components/MentionsUserPage.js","webpack://@flarum/mentions/./src/forum/utils/textFormatter.js","webpack://@flarum/mentions/./src/forum/index.js","webpack://@flarum/mentions/./src/forum/addPostMentionPreviews.js","webpack://@flarum/mentions/./src/forum/addMentionedByList.js","webpack://@flarum/mentions/./src/forum/addPostReplyAction.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","cleanDisplayName","user","displayName","replace","insertMention","post","composer","quote","mention","app","translator","trans","id","fields","content","body","attrs","originalContent","cursorPosition","editor","getSelectionRange","preceding","slice","precedingNewlines","length","match","insertAtCursor","Array","join","trim","reply","bodyMatches","EditPostComposer","discussion","DiscussionControls","replyAction","then","_inheritsLoose","subClass","superClass","constructor","__proto__","PostQuoteButton","view","class","onclick","icon","className","show","left","top","$this","this","$","parentOffset","offsetParent","offset","css","hideHandler","hide","document","on","showStart","window","scrollTop","outerHeight","showEnd","right","bottom","outerWidth","off","Fragment","addPostQuoteButton","extend","CommentPost","isHidden","session","canReply","$postBody","$container","button","handler","e","setTimeout","selection","getSelection","rangeCount","range","getRangeAt","parent","commonAncestorContainer","contains","clone","append","cloneContents","find","replaceWith","alt","src","innerText","href","text","selectedText","render","rects","getClientRects","firstRect","clientY","clientX","lastRect","after","addEventListener","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","configurable","writable","AutocompleteDropdown","items","map","item","active","navigate","delta","keyWasJustPressed","setIndex","index","clearTimeout","keyWasJustPressedTimeout","complete","eq","click","scrollToItem","$dropdown","$items","rangedIndex","$item","removeClass","addClass","dropdownScroll","dropdownTop","dropdownBottom","itemTop","itemBottom","parseInt","stop","animate","addComposerAutocomplete","dropdown","TextEditor","params","$editor","wrap","navigator","KeyboardNavigatable","when","onUp","onDown","onSelect","onCancel","bindTo","relMentionStart","absMentionStart","typed","matchTyped","searchTimeout","searched","returnedUsers","from","store","all","returnedUserIds","Set","u","inputListeners","push","cursor","lastChunk","getLastNChars","substr","test","substring","toLowerCase","makeSuggestion","replacement","username","usernameHelper","children","highlight","replaceBeforeCursor","applySuggestion","onmouseenter","avatar","userMatches","some","buildSuggestions","suggestions","forEach","ReplyComposer","composerAttrs","composerPost","posts","filter","contentType","number","sort","a","b","createdAt","splice","truncate","contentPlain","coordinates","getCaretCoordinates","width","height","Math","max","typedLower","indexOf","q","page","limit","results","has","add","PostMentionedNotification","notification","subject","route","replyNumber","fromUser","count","excerpt","Notification","UserMentionedNotification","MentionsUserPage","loadResults","type","mentioned","loadLimit","PostsUserPage","filterUserMentions","tag","forum","attribute","hasAttribute","getBy","getAttribute","getById","setAttribute","slug","extractText","invalidate","filterPostMentions","initializers","addPreviews","contentHtml","oldPostContentHtml","isEditing","parentPost","$parentPost","set","preventDefault","each","timeout","data","$preview","getPostElement","showPreview","$post","visible","pageYOffset","positionPreview","previewHeight","showPost","title","PostPreview","component","LoadingIndicator","hidePreview","hasClass","one","cancelable","hover","stopPropagation","addPostMentionPreviews","Post","mentionedBy","Model","hasMany","replies","is","data-number","users","repliers","overLimit","names","punctuateSeries","addMentionedByList","notificationComponents","postMentioned","userMentioned","NotificationGrid","label","routes","path","UserPage","LinkButton","getPlainContent","removeSelectors"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAe,Q,cCA5CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAY,K,cCAzCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAiB,U,cCA9CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAc,O,cCA3CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,+YCArB,SAASC,EAAiBC,GACvC,OAAOA,EAAKC,cAAcC,QAAQ,qBAAsB,KCG1D,SAASC,EAAcC,EAAMC,EAAUC,GACrC,IAAMN,EAAOI,EAAKJ,OACZO,EAAU,MAAMP,GAAQD,EAAiBC,IAAUQ,IAAIC,WAAWC,MAAM,mCAAjE,MAAwGN,EAAKO,KAA7G,IAKRN,EAASO,OAAOC,YACnBR,EAASS,KAAKC,MAAMC,gBAAkBT,GAGxC,IAAMU,EAAiBZ,EAASa,OAAOC,oBAAoB,GACrDC,EAAYf,EAASO,OAAOC,UAAUQ,MAAM,EAAGJ,GAC/CK,EAAwC,GAApBF,EAAUG,OAAc,EAAI,EAAIH,EAAUI,MAAM,cAAc,GAAGD,OAE3FlB,EAASa,OAAOO,eACdC,MAAMJ,GAAmBK,KAAK,OAC7BrB,EACG,KAAOC,EAAUD,EAAMsB,OAAO1B,QAAQ,MAAO,QAAU,OACvDK,IACJ,GAIW,SAASsB,EAAMzB,EAAME,GAC9BE,IAAIH,SAASyB,YAAYC,MAAqBvB,IAAIH,SAASS,KAAKC,MAAMX,KAAK4B,eAAiB5B,EAAK4B,aAGnG7B,EAAcC,EAAMI,IAAIH,SAAUC,GAKlC2B,IAAmBC,YAAYnE,KAAKqC,EAAK4B,cACtCG,MAAK,SAAA9B,GAAQ,OAAIF,EAAcC,EAAMC,EAAUC,MCtCvC,SAAS8B,EAAeC,EAAUC,GAC/CD,EAAS7C,UAAYlB,OAAOY,OAAOoD,EAAW9C,WAC9C6C,EAAS7C,UAAU+C,YAAcF,EACjCA,EAASG,UAAYF,E,oBCEFG,E,YACnB,WAAYrC,GAAM,aAChB,sBAEKA,KAAOA,EAHI,E,kCAMlBsC,K,WAAO,WACL,OACE,YAAQC,MAAM,yBAAyBC,QAAS,WAC9Cf,EAAM,EAAKzB,KAAM,EAAKS,WAErBgC,IAAK,oBAAqB,CAAEC,UAAW,gBACvCtC,IAAIC,WAAWC,MAAM,6C,EAK5BqC,K,SAAKC,EAAMC,GACT,IAAMC,EAAQC,KAAKC,IAAIL,OACjBM,EAAeH,EAAMI,eAAeC,SAE1CL,EACGM,IAAI,OAAQR,EAAOK,EAAaL,MAChCQ,IAAI,MAAOP,EAAMI,EAAaJ,KAGjCE,KAAKM,YAAcN,KAAKO,KAAKtE,KAAK+D,MAClCC,EAAEO,UAAUC,GAAG,UAAWT,KAAKM,c,EAGjCI,U,SAAUb,EAAMC,GACd,IAAMC,EAAQC,KAAKC,IAEnBD,KAAKJ,KAAKC,EAAMI,EAAEU,QAAQC,YAAcd,EAAMC,EAAMc,cAAgB,I,EAGtEC,Q,SAAQC,EAAOC,GACb,IAAMjB,EAAQC,KAAKC,IAEnBD,KAAKJ,KAAKmB,EAAQhB,EAAMkB,aAAchB,EAAEU,QAAQC,YAAcI,EAAS,I,EAGzET,K,WACEP,KAAKC,IAAIM,OACTN,EAAEO,UAAUU,IAAI,UAAWlB,KAAKM,c,GA7CSa,KCC9B,SAASC,IACtBC,iBAAOC,IAAYjF,UAAW,YAAY,WACxC,IAAMY,EAAO+C,KAAKpC,MAAMX,KAExB,KAAIA,EAAKsE,YAAelE,IAAImE,QAAQ3E,OAASI,EAAK4B,aAAa4C,YAA/D,CAEA,IAAMC,EAAY1B,KAAKC,EAAE,cAInB0B,EAAa1B,EAAE,iDAEf2B,EAAS,IAAItC,EAAgBrC,GAE7B4E,EAAU,SAASC,GACvBC,YAAW,WACT,IAAMrE,ECtBC,SAAsBC,GACnC,IAAMqE,EAAYrB,OAAOsB,eACzB,GAAID,EAAUE,WAAY,CACxB,IAAMC,EAAQH,EAAUI,WAAW,GAC7BC,EAASF,EAAMG,wBACrB,GAAI3E,EAAK,KAAO0E,GAAUpC,EAAEsC,SAAS5E,EAAK,GAAI0E,GAAS,CACrD,IAAMG,EAAQvC,EAAE,SAASwC,OAAON,EAAMO,iBAiBtC,OAdAF,EAAMG,KAAK,aAAaC,aAAY,WAClC,OAAO5C,KAAK6C,OAIdL,EAAMG,KAAK,OAAOC,aAAY,WAC5B,MAAO,OAAS5C,KAAK8C,IAAM,OAI7BN,EAAMG,KAAK,KAAKC,aAAY,WAC1B,MAAO,IAAM5C,KAAK+C,UAAY,KAAO/C,KAAKgD,KAAO,OAG5CR,EAAMS,QAGjB,MAAO,GDJeC,CAAaxB,GAC7B,GAAIhE,EAAS,CACXkE,EAAOlE,QAAUA,EACjB7C,EAAEsI,OAAOxB,EAAW,GAAIC,EAAOuB,UAE/B,IAAMC,EAAQzC,OAAOsB,eAAeG,WAAW,GAAGiB,iBAC5CC,EAAYF,EAAM,GAExB,GAAItB,EAAEyB,QAAUD,EAAUtC,QAAUc,EAAE0B,QAAUF,EAAUvC,MAAQuC,EAAUzD,KAAOiC,EAAE0B,QACnF5B,EAAOlB,UAAU4C,EAAUzD,KAAMyD,EAAUxD,SACtC,CACL,IAAM2D,EAAWL,EAAMA,EAAMhF,OAAS,GACtCwD,EAAOd,QAAQ2C,EAAS1C,MAAO0C,EAASzC,YAG3C,IAGLhB,KAAKC,IAAIyD,MAAM/B,GAAYlB,GAAG,UAAWoB,GAErC,iBAAkBlB,QACpBH,SAASmD,iBAAiB,kBAAmB9B,GAAS,O,2GE3C7C,SAAS+B,GAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,ECLM,SAASE,GAAgBC,EAAKhI,EAAKN,GAYhD,OAXIM,KAAOgI,EACT7I,OAAOC,eAAe4I,EAAKhI,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZ4I,cAAc,EACdC,UAAU,IAGZF,EAAIhI,GAAON,EAGNsI,E,ICVYG,G,sKACX,I,uBACC,G,qBACD,G,kCACY,G,oCAEpB5E,K,WACE,OACE,QAAII,UAAU,kCACXK,KAAKoE,MAAMC,KAAI,SAAAC,GAAI,OAAI,YAAKA,Q,EAKnC1E,K,SAAKC,EAAMC,GACTE,KAAKC,IAAIL,OAAOS,IAAI,CAClBR,KAAMA,EAAO,KACbC,IAAKA,EAAM,OAEbE,KAAKuE,QAAS,G,EAGhBhE,K,WACEP,KAAKC,IAAIM,OACTP,KAAKuE,QAAS,G,EAGhBC,S,SAASC,GAAO,WACdzE,KAAK0E,mBAAoB,EACzB1E,KAAK2E,SAAS3E,KAAK4E,MAAQH,GAAO,GAClCI,aAAa7E,KAAK8E,0BAClB9E,KAAK8E,yBAA2B/C,YAAW,kBAAM,EAAK2C,mBAAoB,IAAO,M,EAGnFK,S,WACE/E,KAAKC,EAAE,MAAM+E,GAAGhF,KAAK4E,OAAOjC,KAAK,UAAUsC,S,EAG7CN,S,SAASC,EAAOM,GACd,IAAIlF,KAAK0E,mBAAsBQ,EAA/B,CAEA,IAAMC,EAAYnF,KAAKC,IACjBmF,EAASD,EAAUxC,KAAK,MAC1B0C,EAAcT,EAEdS,EAAc,EAChBA,EAAcD,EAAOhH,OAAS,EACrBiH,GAAeD,EAAOhH,SAC/BiH,EAAc,GAGhBrF,KAAK4E,MAAQS,EAEb,IAAMC,EAAQF,EAAOG,YAAY,UAAUP,GAAGK,GAAaG,SAAS,UAEpE,GAAIN,EAAc,CAChB,IAMItE,EANE6E,EAAiBN,EAAUvE,YAC3B8E,EAAcP,EAAU/E,SAASN,IACjC6F,EAAiBD,EAAcP,EAAUtE,cACzC+E,EAAUN,EAAMlF,SAASN,IACzB+F,EAAaD,EAAUN,EAAMzE,cAG/B+E,EAAUF,EACZ9E,EAAY6E,EAAiBC,EAAcE,EAAUE,SAASX,EAAU9E,IAAI,eAAgB,IACnFwF,EAAaF,IACtB/E,EAAY6E,EAAiBE,EAAiBE,EAAaC,SAASX,EAAU9E,IAAI,kBAAmB,UAG9E,IAAdO,GACTuE,EAAUY,MAAK,GAAMC,QAAQ,CAAEpF,aAAa,Q,GAtEFO,KCYnC,SAAS8E,KACtB,IAAMtE,EAAa1B,EAAE,8DACfiG,EAAW,IAAI/B,GAErB9C,iBAAO8E,IAAW9J,UAAW,YAAY,SAAU+J,GACjD,IAAMC,EAAUrG,KAAKC,EAAE,sBAAsBqG,KAAK,oDAElDtG,KAAKuG,UAAY,IAAIC,KACrBxG,KAAKuG,UACFE,MAAK,kBAAMP,EAAS3B,UACpBmC,MAAK,kBAAMR,EAAS1B,UAAU,MAC9BmC,QAAO,kBAAMT,EAAS1B,SAAS,MAC/BoC,SAASV,EAASnB,SAAS9I,KAAKiK,IAChCW,SAASX,EAAS3F,KAAKtE,KAAKiK,IAC5BY,OAAOT,GAEVA,EAAQ3C,MAAM/B,MAGhBN,iBAAO8E,IAAW9J,UAAW,qBAAqB,SAAU+J,GAC1D,IACIW,EACAC,EACAC,EACAC,EACAC,EALEC,EAAW,GAUXC,EAAgB9I,MAAM+I,KAAKjK,IAAIkK,MAAMC,IAAI,UACzCC,EAAkB,IAAIC,IAAIL,EAAchD,KAAI,SAAAsD,GAAC,OAAIA,EAAEnK,SAQzD4I,EAAOwB,eAAeC,MAAK,SAAS/F,GAChC,IAAME,EAAY3E,IAAIH,SAASa,OAAOC,oBAEhC8J,EAAS9F,EAAU,GAEzB,KAAIA,EAAU,GAAK8F,EAAS,GAA5B,CAIA,IAAMC,EAAY1K,IAAIH,SAASa,OAAOiK,cAAc,IACpDhB,EAAkB,EAClB,IAAK,IAAIvM,EAAIsN,EAAU3J,OAAS,EAAG3D,GAAK,EAAGA,IAAK,CAE9C,GAAkB,MADAsN,EAAUE,OAAOxN,EAAG,KACP,GAALA,GAAU,KAAKyN,KAAKH,EAAUE,OAAOxN,EAAI,EAAG,KAAM,CAC1EsM,EAAkBtM,EAAI,EACtBuM,EAAkBc,EAASC,EAAU3J,OAAS3D,EAAI,EAClD,OAOJ,GAHAyL,EAAS3F,OACT2F,EAAS3B,QAAS,EAEdyC,EAAiB,CACnBC,EAAQc,EAAUI,UAAUpB,GAAiBqB,cAC7ClB,EAAaD,EAAM5I,MAAM,yBACzB4I,EAASC,GAAcA,EAAW,IAAOD,EAEzC,IAAMoB,EAAiB,SAASxL,EAAMyL,EAAa5K,EAASiC,QAAgB,IAAhBA,MAAY,IACtE,IAAM4I,EAAWC,IAAe3L,GAMhC,OALIoK,IACFsB,EAASE,SAAW,CAACC,IAAUH,EAAStF,KAAMgE,WACvCsB,EAAStF,MAIhB,YAAQtD,UAAW,eAAiBA,EAClCF,QAAS,kBA3CG,SAAC6I,GACvBjL,IAAIH,SAASa,OAAO4K,oBAAoB3B,EAAkB,EAAGsB,EAAc,KAE3EpC,EAAS3F,OAwCgBqI,CAAgBN,IAC/BO,aAAc,WACZ3C,EAASvB,SAAS1E,EAAED,MAAMqC,SAASuC,WAErC,UAAMjF,UAAU,uBACbmJ,IAAOjM,GACP0L,EAFH,IAEc,IACX7K,KAMHqL,EAAc,SAASlM,GAM3B,MALc,CACZA,EAAK0L,WACL1L,EAAKC,eAGMkM,MAAK,SAAAhO,GAAI,OAAIA,EAAKoN,cAAcH,OAAO,EAAGhB,EAAM7I,UAAY6I,MAGrEgC,EAAmB,WACvB,IAAMC,EAAc,GAkBpB,GAdIjC,GACFI,EAAc8B,SAAQ,SAAAtM,GACfkM,EAAYlM,IAEjBqM,EAAYrB,KACVQ,EAAexL,EAAD,KAAYD,EAAiBC,GAA7B,KAAuCA,EAAKW,KAAQ,GAAI,6BASxEH,IAAIH,SAASyB,YAAYyK,MAAkB/L,IAAIH,SAASyB,YAAYC,KAAmB,CACzF,IAAMyK,EAAgBhM,IAAIH,SAASS,KAAKC,MAClC0L,EAAeD,EAAcpM,KAC7B4B,EAAcyK,GAAgBA,EAAazK,cAAiBwK,EAAcxK,WAE5EA,GACFA,EAAW0K,QACRC,QAAO,SAAAvM,GAAI,OAAIA,GAA+B,YAAvBA,EAAKwM,iBAAiCH,GAAgBrM,EAAKyM,SAAWJ,EAAaI,aAC1GC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,YAAcF,EAAEE,eACjCN,QAAO,SAAAvM,GACN,IAAMJ,EAAOI,EAAKJ,OAClB,OAAOA,GAAQkM,EAAYlM,MAE5BkN,OAAO,EAAG,GACVZ,SAAQ,SAAAlM,GACP,IAAMJ,EAAOI,EAAKJ,OAClBqM,EAAYrB,KACVQ,EAAexL,EAAD,KAAYD,EAAiBC,GAA7B,MAAwCI,EAAKO,KAAQ,CACjEH,IAAIC,WAAWC,MAAM,oDAAqD,CAACmM,OAAQzM,EAAKyM,WAAY,MACpGM,mBAAS/M,EAAKgN,eAAgB,MAC7B,6BAMb,GAAIf,EAAY9K,OAAQ,CACtB8H,EAAS9B,MAAQ8E,EACjBrO,EAAEsI,OAAOxB,EAAW,GAAIuE,EAAS/C,UAEjC+C,EAAStG,OACT,IAAMsK,EAAc7M,IAAIH,SAASa,OAAOoM,oBAAoBnD,GACtDoD,EAAQlE,EAASjG,IAAIgB,aACrBoJ,EAASnE,EAASjG,IAAIY,cACtBwB,EAAS6D,EAASjG,IAAIE,eACxBN,EAAOqK,EAAYrK,KACnBC,EAAMoK,EAAYpK,IAAM,GAGxBA,EAAMuK,EAAShI,EAAOgI,WACxBvK,EAAMoK,EAAYpK,IAAMuK,EAAS,IAE/BxK,EAAOuK,EAAQ/H,EAAO+H,UACxBvK,EAAOwC,EAAO+H,QAAUA,GAI1BtK,EAAMwK,KAAKC,MAAMlI,EAAOjC,SAASN,IAAMG,EAAEO,UAAUI,aAAcd,GACjED,EAAOyK,KAAKC,KAAKlI,EAAOjC,SAASP,KAAMA,GAEvCqG,EAAStG,KAAKC,EAAMC,QAEpBoG,EAAS3B,QAAS,EAClB2B,EAAS3F,QAIb2F,EAAS3B,QAAS,EAElB0E,IAEA/C,EAASvB,SAAS,GAClBuB,EAASjG,IAAIW,UAAU,GAEvBiE,aAAasC,GAGTF,EAAM7I,OAAS,IACjB+I,EAAgBpF,YAAW,WACzB,IAAMyI,EAAavD,EAAMmB,eACa,IAAlChB,EAASqD,QAAQD,KACnBnN,IAAIkK,MAAM5E,KAAK,QAAS,CAAE6G,OAAQ,CAAEkB,EAAGzD,GAAS0D,KAAM,CAAEC,MAAO,KAAO5L,MAAK,SAAA6L,GACzEA,EAAQ1B,SAAQ,SAAAxB,GACTF,EAAgBqD,IAAInD,EAAEnK,QACzBiK,EAAgBsD,IAAIpD,EAAEnK,MACtB6J,EAAcQ,KAAKF,OAGnBzB,EAAS3B,QAAQ0E,OAEvB7B,EAASS,KAAK2C,MAEf,cAMbnJ,iBAAO8E,IAAW9J,UAAW,gBAAgB,SAAS+H,GAAO,WAC3DA,EAAM2G,IAAI,UACR,EAAC,IAAD,CAAkBtL,QAAS,kBAAM,EAAK7B,MAAMV,SAASa,OAAOO,eAAe,OAAOoB,KAAK,aACpFrC,IAAIC,WAAWC,MAAM,uD,uBC3NTyN,G,gGACnBtL,K,WACE,MAAO,gB,EAGTsD,K,WACE,IAAMiI,EAAejL,KAAKpC,MAAMqN,aAC1BhO,EAAOgO,EAAaC,UACpBxN,EAAUuN,EAAavN,UAE7B,OAAOL,IAAI8N,MAAMtM,WAAW5B,EAAK4B,aAAcnB,GAAWA,EAAQ0N,c,EAGpE1N,Q,WACE,IACMb,EADemD,KAAKpC,MAAMqN,aACNI,WAE1B,OAAOhO,IAAIC,WAAWC,MAAM,0DAA2D,CAACV,OAAMyO,MAAO,K,EAGvGC,Q,WACE,OAAOvB,mBAAShK,KAAKpC,MAAMqN,aAAaC,UAAUjB,eAAgB,M,GArBfuB,MCAlCC,G,gGACnB/L,K,WACE,MAAO,a,EAGTsD,K,WACE,IAAM/F,EAAO+C,KAAKpC,MAAMqN,aAAaC,UAErC,OAAO7N,IAAI8N,MAAMtM,WAAW5B,EAAK4B,aAAc5B,EAAKyM,W,EAGtDhM,Q,WACE,IAAMb,EAAOmD,KAAKpC,MAAMqN,aAAaI,WAErC,OAAOhO,IAAIC,WAAWC,MAAM,0DAA2D,CAACV,U,EAG1F0O,Q,WACE,OAAOvB,mBAAShK,KAAKpC,MAAMqN,aAAaC,UAAUjB,eAAgB,M,GAlBfuB,M,iDCElCE,G,wFAQnBC,Y,SAAYvL,GACV,OAAO/C,IAAIkK,MAAM5E,KAAK,QAAS,CAC7B6G,OAAQ,CACNoC,KAAM,UACNC,UAAW7L,KAAKnD,KAAKW,MAEvBmN,KAAM,CAACvK,SAAQwK,MAAO5K,KAAK8L,WAC3BnC,KAAM,gB,WAfkCoC,G,oBCFvC,SAASC,GAAmBC,GACjC,IAAIpP,EAOJ,GALIQ,IAAI6O,MAAMC,UAAU,+BAAiCF,EAAIG,aAAa,YACxEvP,EAAOQ,IAAIkK,MAAM8E,MAAM,QAAS,WAAYJ,EAAIK,aAAa,aACtDL,EAAIG,aAAa,QACxBvP,EAAOQ,IAAIkK,MAAMgF,QAAQ,QAASN,EAAIK,aAAa,QAEjDzP,EAKF,OAJAoP,EAAIO,aAAa,KAAM3P,EAAKW,MAC5ByO,EAAIO,aAAa,OAAQ3P,EAAK4P,QAC9BR,EAAIO,aAAa,cAAeE,KAAYnE,IAAS1L,MAE9C,EAGToP,EAAIU,aAGC,SAASC,GAAmBX,GACjC,IAAMhP,EAAOI,IAAIkK,MAAMgF,QAAQ,QAASN,EAAIK,aAAa,OAEzD,GAAIrP,EAKF,OAJAgP,EAAIO,aAAa,eAAgBvP,EAAK4B,aAAarB,MACnDyO,EAAIO,aAAa,SAAUvP,EAAKyM,UAChCuC,EAAIO,aAAa,cAAeE,KAAYnE,IAAStL,EAAKJ,WAEnD,ECdXQ,IAAIwP,aAAa9B,IAAI,mBAAmB,YCXzB,WACb,SAAS+B,IACP,IAAMC,EAAc/M,KAAKpC,MAAMX,KAAK8P,cAEpC,GAAIA,IAAgB/M,KAAKgN,qBAAsBhN,KAAKiN,YAApD,CAEAjN,KAAKgN,mBAAqBD,EAE1B,IAAMG,EAAalN,KAAKpC,MAAMX,KACxBkQ,EAAcnN,KAAKC,IAEzBD,KAAKC,IAAIQ,GAAG,QAAS,oFAAoF,SAAUqB,GACjHjH,EAAEsQ,MAAMiC,IAAIpN,KAAKsM,aAAa,SAC9BxK,EAAEuL,oBAGJrN,KAAKC,EAAE,2CAA2CqN,MAAK,WACrD,IAEIC,EAFExN,EAAQE,EAAED,MACVxC,EAAKuC,EAAMyN,KAAK,MAKhBC,EAAWxN,EAAE,wDACnBkN,EAAY1K,OAAOgL,GAEnB,IAAMC,EAAiB,WACrB,OAAOzN,EAAE,6BAA6BzC,EAA9B,OAGJmQ,EAAc,WAIlB,IAAMC,EAAQF,IACVG,GAAU,EACd,GAAID,EAAMxP,OAAQ,CAChB,IAAM0B,EAAM8N,EAAMxN,SAASN,IACrBc,EAAYD,OAAOmN,YACrBhO,EAAMc,GAAad,EAAM8N,EAAMvD,SAAWzJ,EAAYX,EAAEU,QAAQ0J,WAClEuD,EAAMpI,SAAS,WACfqI,GAAU,GAMd,IAAKA,EAAS,CAGZ,IAAME,EAAkB,WACtB,IAAMC,EAAgBP,EAAS5M,aAAY,GACvCT,EAAS,EAITL,EAAMK,SAASN,IAAMkO,EAAgB/N,EAAEU,QAAQC,YAAcX,EAAE,WAAWY,cAC5ET,GAAUL,EAAMc,aAAY,GAE5BT,GAAU4N,EAGZP,EAAS7N,OACNS,IAAI,MAAON,EAAMK,SAASN,IAAMqN,EAAY/M,SAASN,IAAMM,GAC3DC,IAAI,OAAQN,EAAMI,eAAeC,SAASP,KAAOsN,EAAY/M,SAASP,MACtEQ,IAAI,YAAaN,EAAMI,eAAeiK,UAGrC6D,EAAW,SAAAhR,GACf,IAAM4B,EAAa5B,EAAK4B,aAExBhE,EAAEsI,OAAOsK,EAAS,GAAI,CACpB5O,IAAeqO,EAAWrO,aACtB,YAAI,UAAMc,UAAU,kCAAkCd,EAAWqP,UACjE,GACJ,YAAKC,IAAYC,UAAU,CAACnR,YAE9B8Q,KAGI9Q,EAAOI,IAAIkK,MAAMgF,QAAQ,QAAS/O,GACpCP,GAAQA,EAAK4B,aACfoP,EAAShR,IAETpC,EAAEsI,OAAOsK,EAAS,GAAIY,IAAiBD,aACvC/Q,IAAIkK,MAAM5E,KAAK,QAASnF,GAAIwB,KAAKiP,GACjCF,KAGFhM,YAAW,kBAAM0L,EAASvM,IAAI,iBAAiBsE,SAAS,WAItD8I,EAAc,WAClBZ,IAAiBnI,YAAY,WACzBkI,EAASc,SAAS,OACpBd,EAASlI,YAAY,MAAMiJ,IAAI,iBAAiB,kBAAMf,EAASlN,WAOnER,EAAMU,GAAG,YAAY,SAAAqB,GACfA,EAAE2M,YACJ3M,EAAEuL,oBAINtN,EAAMgL,IAAI0C,GAAUiB,OAClB,WACE7J,aAAa0I,GACbA,EAAUxL,WAAW4L,EAAa,QAEpC,WACE9I,aAAa0I,GACbG,IAAiBnI,YAAY,WAC7BgI,EAAUxL,WAAWuM,EAAa,QAGnC7N,GAAG,YAAY,SAAAqB,GACd6L,IACA7L,EAAE6M,qBAGN1O,EAAEO,UAAUC,GAAG,WAAY6N,OAI/BjN,iBAAOC,IAAYjF,UAAW,WAAYyQ,GAC1CzL,iBAAOC,IAAYjF,UAAW,WAAYyQ,GDpH1C8B,GETa,WAGb,SAASN,IACPtO,KAAKC,EAAE,6BACJsF,YAAY,MACZiJ,IAAI,iBAAiB,WAAavO,EAAED,MAAMO,UAL/CsO,IAAKxS,UAAUyS,YAAcC,IAAMC,QAAQ,eAQ3C3N,iBAAOC,IAAYjF,UAAW,YAAY,WAAW,IAC/CkR,EAD+C,OAG7C0B,EADOjP,KAAKpC,MAAMX,KACH6R,cAErB,GAAIG,GAAWA,EAAQ7Q,OAAQ,CAC7B,IAAMqP,EAAWxN,EAAE,6DACnBD,KAAKC,IAAIwC,OAAOgL,GAEhB,IAAMN,EAAcnN,KAAKC,IACnBF,EAAQC,KAAKC,EAAE,qBAEf0N,EAAc,YACbF,EAASc,SAAS,OAASd,EAASyB,GAAG,cAK5CrU,EAAEsI,OAAOsK,EAAS,GAAIwB,EAAQ5K,KAAI,SAAA3F,GAAK,OACrC,QAAIyQ,cAAazQ,EAAMgL,UACpByE,IAAYC,UAAU,CACrBnR,KAAMyB,EACNe,QAAS6O,EAAYrS,KAAK,UAKhCwR,EAAS7N,OACNS,IAAI,MAAON,EAAMK,SAASN,IAAMqN,EAAY/M,SAASN,IAAMC,EAAMc,aAAY,IAC7ER,IAAI,OAAQN,EAAMI,eAAeC,SAASP,KAAOsN,EAAY/M,SAASP,MACtEQ,IAAI,YAAa8M,EAAY/C,SAEhCrI,YAAW,kBAAM0L,EAASvM,IAAI,iBAAiBsE,SAAS,WAG1DzF,EAAMgL,IAAI0C,GAAUiB,OAClB,WACE7J,aAAa0I,GACbA,EAAUxL,WAAW4L,EAAa,QAEpC,WACE9I,aAAa0I,GACbA,EAAUxL,WAAWuM,EAAa,QAOtCtO,KAAKC,IAAI0C,KAAK,+BAA+B+L,OAAM,WACjDjB,EAAS9K,KAAK,iBAAmB1C,EAAED,MAAMwN,KAAK,UAAY,MAAMhI,SAAS,aACxE,WACDiI,EAAS9K,KAAK,iBAAiB4C,YAAY,iBAKjDlE,iBAAOC,IAAYjF,UAAW,eAAe,SAAS+H,GAAO,WAErD6K,EADOjP,KAAKpC,MAAMX,KACH6R,cAErB,GAAIG,GAAWA,EAAQ7Q,OAAQ,CAC7B,IAAMgR,EAAQ,GACRC,EAAWJ,EACdtF,MAAK,SAAAjL,GAAK,OAAIA,EAAM7B,SAAWQ,IAAImE,QAAQ3E,MAAQ,EAAI,KACvD2M,QAAO,SAAA9K,GACN,IAAM7B,EAAO6B,EAAM7B,OACnB,IAA6B,IAAzBuS,EAAM3E,QAAQ5N,GAEhB,OADAuS,EAAMvH,KAAKhL,IACJ,KAKPyS,EAAYD,EAASjR,OADb,EAKRmR,EAAQF,EACXnR,MAAM,EAAGoR,EAAY1E,EANV,GAOXvG,KAAI,SAAA3F,GACH,IAAM7B,EAAO6B,EAAM7B,OAEnB,OACE,EAAC,IAAD,CAAMmG,KAAM3F,IAAI8N,MAAMlO,KAAKyB,GACxBe,QAAS6O,EAAYrS,KAAK,GAC1BkT,cAAazQ,EAAMgL,UACnBrM,IAAImE,QAAQ3E,OAASA,EAAOQ,IAAIC,WAAWC,MAAM,uCAAyCgL,IAAS1L,OAQ5G,GAAIyS,EAAW,CACb,IAAMhE,EAAQ+D,EAASjR,OAASmR,EAAMnR,OAEtCmR,EAAM1H,KACJxK,IAAIC,WAAWC,MAAM,yCAA0C,CAAC+N,WAIpElH,EAAM2G,IAAI,UACR,SAAKpL,UAAU,oBACb,UAAMA,UAAU,4BACbD,IAAK,gBACLrC,IAAIC,WAAWC,MAAM,2CAA6C8R,EAAS,GAAGxS,SAAWQ,IAAImE,QAAQ3E,KAAO,QAAU,IAAM,QAAS,CACpIyO,MAAOiE,EAAMnR,OACbgR,MAAOI,IAAgBD,YFzGnCE,GGhBApO,iBAAOC,IAAYjF,UAAW,eAAe,SAAU+H,GAErD,IAAMnH,EAAO+C,KAAKpC,MAAMX,KAEpBA,EAAKsE,YAAelE,IAAImE,QAAQ3E,OAASI,EAAK4B,aAAa4C,YAE/D2C,EAAM2G,IAAI,QACR,EAAC,IAAD,CAAQpL,UAAU,sBAAsBF,QAAS,kBAAMf,EAAMzB,KAC1DI,IAAIC,WAAWC,MAAM,8CHe5B6D,IAIA6E,KAEA5I,IAAIqS,uBAAuBC,cAAgB3E,GAC3C3N,IAAIqS,uBAAuBE,cAAgBnE,GAG3CpK,iBAAOwO,IAAiBxT,UAAW,qBAAqB,SAAS+H,GAC/DA,EAAM2G,IAAI,gBAAiB,CACzB/P,KAAM,gBACN0E,KAAM,eACNoQ,MAAOzS,IAAIC,WAAWC,MAAM,gEAG9B6G,EAAM2G,IAAI,gBAAiB,CACzB/P,KAAM,gBACN0E,KAAM,YACNoQ,MAAOzS,IAAIC,WAAWC,MAAM,mEAKhCF,IAAI0S,OAAO,iBAAmB,CAACC,KAAM,wBAAyB5B,UAAW1C,IACzErK,iBAAO4O,KAAS5T,UAAW,YAAY,SAAS+H,GAC9C,IAAMvH,EAAOmD,KAAKnD,KAClBuH,EAAM2G,IAAI,WACRmF,KAAW9B,UAAU,CACnBpL,KAAM3F,IAAI8N,MAAM,gBAAiB,CAAC5C,SAAU1L,EAAK4P,SACjDzR,KAAM,WACN0E,KAAM,aACLrC,IAAIC,WAAWC,MAAM,6CACxB,OAKJ4S,kBAAgBC,gBAAgBvI,KAAK","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['components/PostPreview'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/EditPostComposer'];","module.exports = flarum.core.compat['Fragment'];","module.exports = flarum.core.compat['components/Notification'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['helpers/punctuateSeries'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/TextEditorButton'];","module.exports = flarum.core.compat['components/ReplyComposer'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/PostsUserPage'];","export default function cleanDisplayName(user) {\n  return user.displayName().replace(/\"#[a-z]{0,3}[0-9]+/, '_');\n};\n","import DiscussionControls from 'flarum/utils/DiscussionControls';\nimport EditPostComposer from 'flarum/components/EditPostComposer';\nimport cleanDisplayName from './cleanDisplayName';\n\nfunction insertMention(post, composer, quote) {\n  const user = post.user();\n  const mention = `@\"${(user && cleanDisplayName(user)) || app.translator.trans('core.lib.username.deleted_text')}\"#p${post.id()} `;\n\n  // If the composer is empty, then assume we're starting a new reply.\n  // In which case we don't want the user to have to confirm if they\n  // close the composer straight away.\n  if (!composer.fields.content()) {\n    composer.body.attrs.originalContent = mention;\n  }\n\n  const cursorPosition = composer.editor.getSelectionRange()[0];\n  const preceding = composer.fields.content().slice(0, cursorPosition);\n  const precedingNewlines = preceding.length == 0 ? 0 : 3 - preceding.match(/(\\n{0,2})$/)[0].length;\n\n  composer.editor.insertAtCursor(\n    Array(precedingNewlines).join('\\n') + // Insert up to two newlines, depending on preceding whitespace\n    (quote\n      ? '> ' + mention + quote.trim().replace(/\\n/g, '\\n> ') + '\\n\\n'\n      : mention),\n    false\n  );\n}\n\nexport default function reply(post, quote) {\n  if (app.composer.bodyMatches(EditPostComposer) && app.composer.body.attrs.post.discussion() === post.discussion()) {\n    // If we're already editing a post in the discussion of post we're quoting,\n    // insert the mention directly.\n    insertMention(post, app.composer, quote);\n  } else {\n    // The default \"Reply\" action behavior will only open a new composer if\n    // necessary, but it will always be a ReplyComposer, hence the exceptional\n    // case above.\n    DiscussionControls.replyAction.call(post.discussion())\n      .then(composer => insertMention(post, composer, quote));\n  }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Fragment from 'flarum/Fragment';\nimport icon from 'flarum/helpers/icon';\n\nimport reply from '../utils/reply';\n\nexport default class PostQuoteButton extends Fragment {\n  constructor(post) {\n    super();\n\n    this.post = post;\n  }\n\n  view() {\n    return (\n      <button class=\"Button PostQuoteButton\" onclick={() => {\n        reply(this.post, this.content);\n      }}>\n        {icon('fas fa-quote-left', { className: 'Button-icon' })}\n        {app.translator.trans('flarum-mentions.forum.post.quote_button')}\n      </button>\n    );\n  }\n\n  show(left, top) {\n    const $this = this.$().show();\n    const parentOffset = $this.offsetParent().offset();\n\n    $this\n      .css('left', left - parentOffset.left)\n      .css('top', top - parentOffset.top);\n\n\n    this.hideHandler = this.hide.bind(this);\n    $(document).on('mouseup', this.hideHandler);\n  }\n\n  showStart(left, top) {\n    const $this = this.$();\n\n    this.show(left, $(window).scrollTop() + top - $this.outerHeight() - 5);\n  }\n\n  showEnd(right, bottom) {\n    const $this = this.$();\n\n    this.show(right - $this.outerWidth(), $(window).scrollTop() + bottom + 5);\n  }\n\n  hide() {\n    this.$().hide();\n    $(document).off('mouseup', this.hideHandler);\n  }\n}\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport PostQuoteButton from './fragments/PostQuoteButton';\nimport selectedText from './utils/selectedText';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'oncreate', function() {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render\n    // button into it.\n    const $container = $('<div class=\"Post-quoteButtonContainer\"></div>');\n\n    const button = new PostQuoteButton(post);\n\n    const handler = function(e) {\n      setTimeout(() => {\n        const content = selectedText($postBody);\n        if (content) {\n          button.content = content;\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n","export default function selectedText(body) {\n  const selection = window.getSelection();\n  if (selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      const clone = $(\"<div>\").append(range.cloneContents());\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function() {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function() {\n        return '![](' + this.src + ')';\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function() {\n        return '[' + this.innerText + '](' + this.href + ')';\n      });\n\n      return clone.text();\n    }\n  }\n  return \"\";\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Fragment from 'flarum/Fragment';\n\nexport default class AutocompleteDropdown extends Fragment {\n  items = [];\n  active = false;\n  index = 0;\n  keyWasJustPressed = false;\n\n  view() {\n    return (\n      <ul className=\"Dropdown-menu MentionsDropdown\">\n        {this.items.map(item => <li>{item}</li>)}\n      </ul>\n    );\n  }\n\n  show(left, top) {\n    this.$().show().css({\n      left: left + 'px',\n      top: top + 'px'\n    });\n    this.active = true;\n  }\n\n  hide() {\n    this.$().hide();\n    this.active = false;\n  }\n\n  navigate(delta) {\n    this.keyWasJustPressed = true;\n    this.setIndex(this.index + delta, true);\n    clearTimeout(this.keyWasJustPressedTimeout);\n    this.keyWasJustPressedTimeout = setTimeout(() => this.keyWasJustPressed = false, 500);\n  }\n\n  complete() {\n    this.$('li').eq(this.index).find('button').click();\n  }\n\n  setIndex(index, scrollToItem) {\n    if (this.keyWasJustPressed && !scrollToItem) return;\n\n    const $dropdown = this.$();\n    const $items = $dropdown.find('li');\n    let rangedIndex = index;\n\n    if (rangedIndex < 0) {\n      rangedIndex = $items.length - 1;\n    } else if (rangedIndex >= $items.length) {\n      rangedIndex = 0;\n    }\n\n    this.index = rangedIndex;\n\n    const $item = $items.removeClass('active').eq(rangedIndex).addClass('active');\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({ scrollTop }, 100);\n      }\n    }\n  }\n}\n","import { extend } from 'flarum/extend';\nimport TextEditor from 'flarum/components/TextEditor';\nimport TextEditorButton from 'flarum/components/TextEditorButton';\nimport ReplyComposer from 'flarum/components/ReplyComposer';\nimport EditPostComposer from 'flarum/components/EditPostComposer';\nimport avatar from 'flarum/helpers/avatar';\nimport usernameHelper from 'flarum/helpers/username';\nimport highlight from 'flarum/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/utils/KeyboardNavigatable';\nimport { truncate } from 'flarum/utils/string';\n\nimport AutocompleteDropdown from './fragments/AutocompleteDropdown';\nimport cleanDisplayName from './utils/cleanDisplayName';\n\nexport default function addComposerAutocomplete() {\n  const $container = $('<div class=\"ComposerBody-mentionsDropdownContainer\"></div>');\n  const dropdown = new AutocompleteDropdown();\n\n  extend(TextEditor.prototype, 'oncreate', function (params) {\n    const $editor = this.$('.TextEditor-editor').wrap('<div class=\"ComposerBody-mentionsWrapper\"></div>');\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .when(() => dropdown.active)\n      .onUp(() => dropdown.navigate(-1))\n      .onDown(() => dropdown.navigate(1))\n      .onSelect(dropdown.complete.bind(dropdown))\n      .onCancel(dropdown.hide.bind(dropdown))\n      .bindTo($editor);\n\n    $editor.after($container);\n  });\n\n  extend(TextEditor.prototype, 'buildEditorParams', function (params) {\n    const searched = [];\n    let relMentionStart;\n    let absMentionStart;\n    let typed;\n    let matchTyped;\n    let searchTimeout;\n\n    // We store users returned from an API here to preserve order in which they are returned\n    // This prevents the user list jumping around while users are returned.\n    // We also use a hashset for user IDs to provide O(1) lookup for the users already in the list.\n    const returnedUsers = Array.from(app.store.all('users'));\n    const returnedUserIds = new Set(returnedUsers.map(u => u.id()));\n\n    const applySuggestion = (replacement) => {\n      app.composer.editor.replaceBeforeCursor(absMentionStart - 1, replacement + ' ');\n\n      dropdown.hide();\n    };\n\n    params.inputListeners.push(function(e) {\n        const selection = app.composer.editor.getSelectionRange();\n\n        const cursor = selection[0];\n\n        if (selection[1] - cursor > 0) return;\n\n        // Search backwards from the cursor for an '@' symbol. If we find one,\n        // we will want to show the autocomplete dropdown!\n        const lastChunk = app.composer.editor.getLastNChars(30);\n        absMentionStart = 0;\n        for (let i = lastChunk.length - 1; i >= 0; i--) {\n          const character = lastChunk.substr(i, 1);\n          if (character === '@' && (i == 0 || /\\s/.test(lastChunk.substr(i - 1, 1)))) {\n            relMentionStart = i + 1;\n            absMentionStart = cursor - lastChunk.length + i + 1;\n            break;\n          }\n        }\n\n        dropdown.hide();\n        dropdown.active = false;\n\n        if (absMentionStart) {\n          typed = lastChunk.substring(relMentionStart).toLowerCase();\n          matchTyped = typed.match(/^[\"|“]((?:(?!\"#).)+)$/);\n          typed = (matchTyped && matchTyped[1]) || typed;\n\n          const makeSuggestion = function(user, replacement, content, className = '') {\n            const username = usernameHelper(user);\n            if (typed) {\n              username.children = [highlight(username.text, typed)];\n              delete username.text;\n            }\n\n            return (\n              <button className={'PostPreview ' + className}\n                onclick={() => applySuggestion(replacement)}\n                onmouseenter={function() {\n                  dropdown.setIndex($(this).parent().index());\n                }}>\n                <span className=\"PostPreview-content\">\n                  {avatar(user)}\n                  {username} {' '}\n                  {content}\n                </span>\n              </button>\n            );\n          };\n\n          const userMatches = function(user) {\n            const names = [\n              user.username(),\n              user.displayName()\n            ];\n\n            return names.some(name => name.toLowerCase().substr(0, typed.length) === typed);\n          };\n\n          const buildSuggestions = () => {\n            const suggestions = [];\n\n            // If the user has started to type a username, then suggest users\n            // matching that username.\n            if (typed) {\n              returnedUsers.forEach(user => {\n                if (!userMatches(user)) return;\n\n                suggestions.push(\n                  makeSuggestion(user, `@\"${cleanDisplayName(user)}\"#${user.id()}`, '', 'MentionsDropdown-user')\n                );\n              });\n            }\n\n            // If the user is replying to a discussion, or if they are editing a\n            // post, then we can suggest other posts in the discussion to mention.\n            // We will add the 5 most recent comments in the discussion which\n            // match any username characters that have been typed.\n            if (app.composer.bodyMatches(ReplyComposer) || app.composer.bodyMatches(EditPostComposer)) {\n              const composerAttrs = app.composer.body.attrs;\n              const composerPost = composerAttrs.post;\n              const discussion = (composerPost && composerPost.discussion()) || composerAttrs.discussion;\n\n              if (discussion) {\n                discussion.posts()\n                  .filter(post => post && post.contentType() === 'comment' && (!composerPost || post.number() < composerPost.number()))\n                  .sort((a, b) => b.createdAt() - a.createdAt())\n                  .filter(post => {\n                    const user = post.user();\n                    return user && userMatches(user);\n                  })\n                  .splice(0, 5)\n                  .forEach(post => {\n                    const user = post.user();\n                    suggestions.push(\n                      makeSuggestion(user, `@\"${cleanDisplayName(user)}\"#p${post.id()}`, [\n                        app.translator.trans('flarum-mentions.forum.composer.reply_to_post_text', {number: post.number()}), ' — ',\n                        truncate(post.contentPlain(), 200)\n                      ], 'MentionsDropdown-post')\n                    );\n                  });\n              }\n            }\n\n            if (suggestions.length) {\n              dropdown.items = suggestions;\n              m.render($container[0], dropdown.render());\n\n              dropdown.show();\n              const coordinates = app.composer.editor.getCaretCoordinates(absMentionStart);\n              const width = dropdown.$().outerWidth();\n              const height = dropdown.$().outerHeight();\n              const parent = dropdown.$().offsetParent();\n              let left = coordinates.left;\n              let top = coordinates.top + 15;\n\n              // Keep the dropdown inside the editor.\n              if (top + height > parent.height()) {\n                top = coordinates.top - height - 15;\n              }\n              if (left + width > parent.width()) {\n                left = parent.width() - width;\n              }\n\n              // Prevent the dropdown from going off screen on mobile\n              top = Math.max(-(parent.offset().top - $(document).scrollTop()), top);\n              left = Math.max(-parent.offset().left, left);\n\n              dropdown.show(left, top);\n            } else {\n              dropdown.active = false;\n              dropdown.hide();\n            }\n          };\n\n          dropdown.active = true;\n\n          buildSuggestions();\n\n          dropdown.setIndex(0);\n          dropdown.$().scrollTop(0);\n\n          clearTimeout(searchTimeout);\n          // Don't send API calls searching for users until at least 2 characters have been typed.\n          // This focuses the mention results on users and posts in the discussion.\n          if (typed.length > 1) {\n            searchTimeout = setTimeout(function() {\n              const typedLower = typed.toLowerCase();\n              if (searched.indexOf(typedLower) === -1) {\n                app.store.find('users', { filter: { q: typed }, page: { limit: 5 } }).then(results => {\n                  results.forEach(u => {\n                    if (!returnedUserIds.has(u.id())) {\n                      returnedUserIds.add(u.id());\n                      returnedUsers.push(u);\n                    }\n                  })\n                  if (dropdown.active) buildSuggestions();\n                });\n                searched.push(typedLower);\n              }\n            }, 250);\n          }\n        }\n      });\n  });\n\n  extend(TextEditor.prototype, 'toolbarItems', function(items) {\n    items.add('mention', (\n      <TextEditorButton onclick={() => this.attrs.composer.editor.insertAtCursor(' @')} icon=\"fas fa-at\">\n        {app.translator.trans('flarum-mentions.forum.composer.mention_tooltip')}\n      </TextEditorButton>\n    ));\n  });\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class PostMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-reply';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n    const content = notification.content();\n\n    return app.route.discussion(post.discussion(), content && content.replyNumber);\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.post_mentioned_text', {user, count: 1});\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class UserMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-at';\n  }\n\n  href() {\n    const post = this.attrs.notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    const user = this.attrs.notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.user_mentioned_text', {user});\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import PostsUserPage from 'flarum/components/PostsUserPage';\n\n/**\n * The `MentionsUserPage` component shows post which user Mentioned at\n */\nexport default class MentionsUserPage extends PostsUserPage {\n  /**\n   * Load a new page of the user's activity feed.\n   *\n   * @param {Integer} [offset] The position to start getting results from.\n   * @return {Promise}\n   * @protected\n   */\n  loadResults(offset) {\n    return app.store.find('posts', {\n      filter: {\n        type: 'comment',\n        mentioned: this.user.id()\n      },\n      page: {offset, limit: this.loadLimit},\n      sort: '-createdAt'\n    });\n  }\n}\n","import username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\n\nexport function filterUserMentions(tag) {\n  let user;\n\n  if (app.forum.attribute('allowUsernameMentionFormat') && tag.hasAttribute('username'))\n    user = app.store.getBy('users', 'username', tag.getAttribute('username'));\n  else if (tag.hasAttribute('id'))\n    user = app.store.getById('users', tag.getAttribute('id'));\n\n  if (user) {\n    tag.setAttribute('id', user.id());\n    tag.setAttribute('slug', user.slug());\n    tag.setAttribute('displayname', extractText(username(user)));\n\n    return true;\n  }\n\n  tag.invalidate();\n}\n\nexport function filterPostMentions(tag) {\n  const post = app.store.getById('posts', tag.getAttribute('id'));\n\n  if (post) {\n    tag.setAttribute('discussionid', post.discussion().id());\n    tag.setAttribute('number', post.number());\n    tag.setAttribute('displayname', extractText(username(post.user())));\n\n    return true;\n  }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\nimport { getPlainContent } from 'flarum/utils/string';\n\nimport addPostMentionPreviews from './addPostMentionPreviews';\nimport addMentionedByList from './addMentionedByList';\nimport addPostReplyAction from './addPostReplyAction';\nimport addPostQuoteButton from './addPostQuoteButton';\nimport addComposerAutocomplete from './addComposerAutocomplete';\nimport PostMentionedNotification from './components/PostMentionedNotification';\nimport UserMentionedNotification from './components/UserMentionedNotification';\nimport UserPage from 'flarum/components/UserPage'\nimport LinkButton from 'flarum/components/LinkButton';\nimport MentionsUserPage from './components/MentionsUserPage';\n\napp.initializers.add('flarum-mentions', function() {\n  // For every mention of a post inside a post's content, set up a hover handler\n  // that shows a preview of the mentioned post.\n  addPostMentionPreviews();\n\n  // In the footer of each post, show information about who has replied (i.e.\n  // who the post has been mentioned by).\n  addMentionedByList();\n\n  // Add a 'reply' control to the footer of each post. When clicked, it will\n  // open up the composer and add a post mention to its contents.\n  addPostReplyAction();\n\n  // Show a Quote button when Post text is selected\n  addPostQuoteButton();\n\n  // After typing '@' in the composer, show a dropdown suggesting a bunch of\n  // posts or users that the user could mention.\n  addComposerAutocomplete();\n\n  app.notificationComponents.postMentioned = PostMentionedNotification;\n  app.notificationComponents.userMentioned = UserMentionedNotification;\n\n  // Add notification preferences.\n  extend(NotificationGrid.prototype, 'notificationTypes', function(items) {\n    items.add('postMentioned', {\n      name: 'postMentioned',\n      icon: 'fas fa-reply',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_post_mentioned_label')\n    });\n\n    items.add('userMentioned', {\n      name: 'userMentioned',\n      icon: 'fas fa-at',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_user_mentioned_label')\n    });\n  });\n\n  // Add mentions tab in user profile\n  app.routes['user.mentions'] = {path: '/u/:username/mentions', component: MentionsUserPage};\n  extend(UserPage.prototype, 'navItems', function(items) {\n    const user = this.user;\n    items.add('mentions',\n      LinkButton.component({\n        href: app.route('user.mentions', {username: user.slug()}),\n        name: 'mentions',\n        icon: 'fas fa-at'\n      }, app.translator.trans('flarum-mentions.forum.user.mentions_link')),\n      80\n    );\n  });\n\n  // Remove post mentions when rendering post previews.\n  getPlainContent.removeSelectors.push('a.PostMention');\n});\n\nexport * from './utils/textFormatter';\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport PostPreview from 'flarum/components/PostPreview';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\n\nexport default function addPostMentionPreviews() {\n  function addPreviews() {\n    const contentHtml = this.attrs.post.contentHtml();\n\n    if (contentHtml === this.oldPostContentHtml || this.isEditing()) return;\n\n    this.oldPostContentHtml = contentHtml;\n\n    const parentPost = this.attrs.post;\n    const $parentPost = this.$();\n\n    this.$().on('click', '.UserMention:not(.UserMention--deleted), .PostMention:not(.PostMention--deleted)', function (e) {\n      m.route.set(this.getAttribute('href'));\n      e.preventDefault();\n    });\n\n    this.$('.PostMention:not(.PostMention--deleted)').each(function() {\n      const $this = $(this);\n      const id = $this.data('id');\n      let timeout;\n\n      // Wrap the mention link in a wrapper element so that we can insert a\n      // preview popup as its sibling and relatively position it.\n      const $preview = $('<ul class=\"Dropdown-menu PostMention-preview fade\"/>');\n      $parentPost.append($preview);\n\n      const getPostElement = () => {\n        return $(`.PostStream-item[data-id=\"${id}\"]`);\n      };\n\n      const showPreview = () => {\n        // When the user hovers their mouse over the mention, look for the\n        // post that it's referring to in the stream, and determine if it's\n        // in the viewport. If it is, we will \"pulsate\" it.\n        const $post = getPostElement();\n        let visible = false;\n        if ($post.length) {\n          const top = $post.offset().top;\n          const scrollTop = window.pageYOffset;\n          if (top > scrollTop && top + $post.height() < scrollTop + $(window).height()) {\n            $post.addClass('pulsate');\n            visible = true;\n          }\n        }\n\n        // Otherwise, we will show a popup preview of the post. If the post\n        // hasn't yet been loaded, we will need to do that.\n        if (!visible) {\n          // Position the preview so that it appears above the mention.\n          // (The offsetParent should be .Post-body.)\n          const positionPreview = () => {\n            const previewHeight = $preview.outerHeight(true);\n            let offset = 0;\n\n            // If the preview goes off the top of the viewport, reposition it to\n            // be below the mention.\n            if ($this.offset().top - previewHeight < $(window).scrollTop() + $('#header').outerHeight()) {\n              offset += $this.outerHeight(true);\n            } else {\n              offset -= previewHeight;\n            }\n\n            $preview.show()\n              .css('top', $this.offset().top - $parentPost.offset().top + offset)\n              .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n              .css('max-width', $this.offsetParent().width());\n          };\n\n          const showPost = post => {\n            const discussion = post.discussion();\n\n            m.render($preview[0], [\n              discussion !== parentPost.discussion()\n                ? <li><span className=\"PostMention-preview-discussion\">{discussion.title()}</span></li>\n                : '',\n              <li>{PostPreview.component({post})}</li>\n            ]);\n            positionPreview();\n          };\n\n          const post = app.store.getById('posts', id);\n          if (post && post.discussion()) {\n            showPost(post);\n          } else {\n            m.render($preview[0], LoadingIndicator.component());\n            app.store.find('posts', id).then(showPost);\n            positionPreview();\n          }\n\n          setTimeout(() => $preview.off('transitionend').addClass('in'));\n        }\n      };\n\n      const hidePreview = () => {\n        getPostElement().removeClass('pulsate');\n        if ($preview.hasClass('in')) {\n          $preview.removeClass('in').one('transitionend', () => $preview.hide());\n        }\n      };\n\n      // On a touch (mobile) device we cannot hover the link to reveal the preview.\n      // Instead we cancel the navigation so that a click reveals the preview.\n      // Users can then click on the preview to go to the post if desired.\n      $this.on('touchend', e => {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      });\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          getPostElement().removeClass('pulsate');\n          timeout = setTimeout(hidePreview, 250);\n        }\n      )\n        .on('touchend', e => {\n          showPreview();\n          e.stopPropagation();\n        });\n\n      $(document).on('touchend', hidePreview);\n    });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', addPreviews);\n  extend(CommentPost.prototype, 'onupdate', addPreviews);\n}\n","import { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Post from 'flarum/models/Post';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Link from 'flarum/components/Link';\nimport PostPreview from 'flarum/components/PostPreview';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\nimport icon from 'flarum/helpers/icon';\n\nexport default function addMentionedByList() {\n  Post.prototype.mentionedBy = Model.hasMany('mentionedBy');\n\n  function hidePreview() {\n    this.$('.Post-mentionedBy-preview')\n      .removeClass('in')\n      .one('transitionend', function() { $(this).hide(); });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', function() {\n    let timeout;\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const $preview = $('<ul class=\"Dropdown-menu Post-mentionedBy-preview fade\"/>');\n      this.$().append($preview);\n\n      const $parentPost = this.$();\n      const $this = this.$('.Post-mentionedBy');\n\n      const showPreview = () => {\n        if (!$preview.hasClass('in') && $preview.is(':visible')) return;\n\n        // When the user hovers their mouse over the list of people who have\n        // replied to the post, render a list of reply previews into a\n        // popup.\n        m.render($preview[0], replies.map(reply => (\n          <li data-number={reply.number()}>\n            {PostPreview.component({\n              post: reply,\n              onclick: hidePreview.bind(this)\n            })}\n          </li>\n        )));\n\n        $preview.show()\n          .css('top', $this.offset().top - $parentPost.offset().top + $this.outerHeight(true))\n          .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n          .css('max-width', $parentPost.width());\n\n        setTimeout(() => $preview.off('transitionend').addClass('in'));\n      }\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(hidePreview, 250);\n        }\n      );\n\n      // Whenever the user hovers their mouse over a particular name in the\n      // list of repliers, highlight the corresponding post in the preview\n      // popup.\n      this.$().find('.Post-mentionedBy-summary a').hover(function() {\n        $preview.find('[data-number=\"' + $(this).data('number') + '\"]').addClass('active');\n      }, function() {\n        $preview.find('[data-number]').removeClass('active');\n      });\n    }\n  });\n\n  extend(CommentPost.prototype, 'footerItems', function(items) {\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const users = [];\n      const repliers = replies\n        .sort(reply => reply.user() === app.session.user ? -1 : 0)\n        .filter(reply => {\n          const user = reply.user();\n          if (users.indexOf(user) === -1) {\n            users.push(user);\n            return true;\n          }\n        });\n\n      const limit = 4;\n      const overLimit = repliers.length > limit;\n\n      // Create a list of unique users who have replied. So even if a user has\n      // replied twice, they will only be in this array once.\n      const names = repliers\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map(reply => {\n          const user = reply.user();\n\n          return (\n            <Link href={app.route.post(reply)}\n               onclick={hidePreview.bind(this)}\n               data-number={reply.number()}>\n              {app.session.user === user ? app.translator.trans('flarum-mentions.forum.post.you_text') : username(user)}\n            </Link>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = repliers.length - names.length;\n\n        names.push(\n          app.translator.trans('flarum-mentions.forum.post.others_text', {count})\n        );\n      }\n\n      items.add('replies',\n        <div className=\"Post-mentionedBy\">\n          <span className=\"Post-mentionedBy-summary\">\n            {icon('fas fa-reply')}\n            {app.translator.trans('flarum-mentions.forum.post.mentioned_by' + (repliers[0].user() === app.session.user ? '_self' : '') + '_text', {\n              count: names.length,\n              users: punctuateSeries(names)\n            })}\n          </span>\n        </div>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport reply from './utils/reply';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n\n    const post = this.attrs.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    items.add('reply',\n      <Button className='Button Button--link' onclick={() => reply(post)}>\n        {app.translator.trans('flarum-mentions.forum.post.reply_link')}\n      </Button>\n    );\n  });\n}\n"],"sourceRoot":""}