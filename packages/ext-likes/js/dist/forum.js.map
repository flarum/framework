{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/likes/webpack/bootstrap","webpack://@flarum/likes/webpack/runtime/compat get default export","webpack://@flarum/likes/webpack/runtime/define property getters","webpack://@flarum/likes/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/likes/webpack/runtime/make namespace object","webpack://@flarum/likes/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/models/Post']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/Model']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Link']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/punctuateSeries']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/likes/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/likes/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flarum/likes/./src/forum/components/PostLikesModal.js","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/utils/string']\"","webpack://@flarum/likes/./src/forum/components/PostLikedNotification.js","webpack://@flarum/likes/./src/forum/index.js","webpack://@flarum/likes/./src/forum/addLikeAction.js","webpack://@flarum/likes/./src/forum/addLikesList.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/punctuateSeries'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\n\nexport default class PostLikesModal extends Modal {\n  className() {\n    return 'PostLikesModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-likes.forum.post_likes.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <ul className=\"PostLikesModal-list\">\n          {this.attrs.post.likes().map((user) => (\n            <li>\n              <Link href={app.route.user(user)}>\n                {avatar(user)} {username(user)}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostLikedNotification extends Notification {\n  icon() {\n    return 'far fa-thumbs-up';\n  }\n\n  href() {\n    return app.route.post(this.attrs.notification.subject());\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.trans('flarum-likes.forum.notifications.post_liked_text', { user, count: 1 });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Post from 'flarum/common/models/Post';\nimport Model from 'flarum/common/Model';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nimport addLikeAction from './addLikeAction';\nimport addLikesList from './addLikesList';\nimport PostLikedNotification from './components/PostLikedNotification';\n\napp.initializers.add('flarum-likes', () => {\n  app.notificationComponents.postLiked = PostLikedNotification;\n\n  Post.prototype.canLike = Model.attribute('canLike');\n  Post.prototype.likes = Model.hasMany('likes');\n\n  addLikeAction();\n  addLikesList();\n\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('postLiked', {\n      name: 'postLiked',\n      icon: 'far fa-thumbs-up',\n      label: app.translator.trans('flarum-likes.forum.settings.notify_post_liked_label'),\n    });\n  });\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || !post.canLike()) return;\n\n    const likes = post.likes();\n\n    let isLiked = app.session.user && likes && likes.some((user) => user === app.session.user);\n\n    items.add(\n      'like',\n      Button.component(\n        {\n          className: 'Button Button--link',\n          onclick: () => {\n            isLiked = !isLiked;\n\n            post.save({ isLiked });\n\n            // We've saved the fact that we do or don't like the post, but in order\n            // to provide instantaneous feedback to the user, we'll need to add or\n            // remove the like from the relationship data manually.\n            const data = post.data.relationships.likes.data;\n            data.some((like, i) => {\n              if (like.id === app.session.user.id()) {\n                data.splice(i, 1);\n                return true;\n              }\n            });\n\n            if (isLiked) {\n              data.unshift({ type: 'users', id: app.session.user.id() });\n            }\n          },\n        },\n        app.translator.trans(isLiked ? 'flarum-likes.forum.post.unlike_link' : 'flarum-likes.forum.post.like_link')\n      )\n    );\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Link from 'flarum/common/components/Link';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport username from 'flarum/common/helpers/username';\nimport icon from 'flarum/common/helpers/icon';\n\nimport PostLikesModal from './components/PostLikesModal';\n\nexport default function () {\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const post = this.attrs.post;\n    const likes = post.likes();\n\n    if (likes && likes.length) {\n      const limit = 4;\n      const overLimit = likes.length > limit;\n\n      // Construct a list of names of users who have liked this post. Make sure the\n      // current user is first in the list, and cap a maximum of 4 items.\n      const names = likes\n        .sort((a) => (a === app.session.user ? -1 : 1))\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map((user) => {\n          return (\n            <Link href={app.route.user(user)}>\n              {user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user)}\n            </Link>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = likes.length - names.length;\n\n        names.push(\n          <a\n            href=\"#\"\n            onclick={(e) => {\n              e.preventDefault();\n              app.modal.show(PostLikesModal, { post });\n            }}\n          >\n            {app.translator.trans('flarum-likes.forum.post.others_link', { count })}\n          </a>\n        );\n      }\n\n      items.add(\n        'liked',\n        <div className=\"Post-likedBy\">\n          {icon('far fa-thumbs-up')}\n          {app.translator.trans('flarum-likes.forum.post.liked_by' + (likes[0] === app.session.user ? '_self' : '') + '_text', {\n            count: names.length,\n            users: punctuateSeries(names),\n          })}\n        </div>\n      );\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","PostLikesModal","className","title","app","content","this","attrs","post","likes","map","user","href","avatar","username","Modal","PostLikedNotification","icon","notification","subject","fromUser","count","excerpt","truncate","contentPlain","Notification","Post","Model","extend","CommentPost","items","isHidden","canLike","isLiked","some","add","Button","onclick","save","data","relationships","like","i","id","splice","unshift","type","length","overLimit","names","sort","slice","limit","push","e","preventDefault","users","punctuateSeries","NotificationGrid","name","label"],"sourceRoot":""}