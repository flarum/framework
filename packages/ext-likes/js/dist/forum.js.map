{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/likes/webpack/bootstrap","webpack://@flarum/likes/webpack/runtime/compat get default export","webpack://@flarum/likes/webpack/runtime/define property getters","webpack://@flarum/likes/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/likes/webpack/runtime/make namespace object","webpack://@flarum/likes/external root \"flarum.core.compat['extend']\"","webpack://@flarum/likes/external root \"flarum.core.compat['app']\"","webpack://@flarum/likes/external root \"flarum.core.compat['models/Post']\"","webpack://@flarum/likes/external root \"flarum.core.compat['Model']\"","webpack://@flarum/likes/external root \"flarum.core.compat['components/NotificationGrid']\"","webpack://@flarum/likes/external root \"flarum.core.compat['components/Button']\"","webpack://@flarum/likes/external root \"flarum.core.compat['components/CommentPost']\"","webpack://@flarum/likes/external root \"flarum.core.compat['components/Link']\"","webpack://@flarum/likes/external root \"flarum.core.compat['helpers/punctuateSeries']\"","webpack://@flarum/likes/external root \"flarum.core.compat['helpers/username']\"","webpack://@flarum/likes/external root \"flarum.core.compat['helpers/icon']\"","webpack://@flarum/likes/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/likes/external root \"flarum.core.compat['components/Modal']\"","webpack://@flarum/likes/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@flarum/likes/./src/forum/components/PostLikesModal.js","webpack://@flarum/likes/external root \"flarum.core.compat['components/Notification']\"","webpack://@flarum/likes/external root \"flarum.core.compat['utils/string']\"","webpack://@flarum/likes/./src/forum/components/PostLikedNotification.js","webpack://@flarum/likes/./src/forum/index.js","webpack://@flarum/likes/./src/forum/addLikeAction.js","webpack://@flarum/likes/./src/forum/addLikesList.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/punctuateSeries'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/icon'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","import Modal from 'flarum/components/Modal';\nimport Link from 'flarum/components/Link';\nimport avatar from 'flarum/helpers/avatar';\nimport username from 'flarum/helpers/username';\n\nexport default class PostLikesModal extends Modal {\n  className() {\n    return 'PostLikesModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-likes.forum.post_likes.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <ul className=\"PostLikesModal-list\">\n          {this.attrs.post.likes().map(user => (\n            <li>\n              <Link href={app.route.user(user)}>\n                {avatar(user)} {' '}\n                {username(user)}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/string'];","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class PostLikedNotification extends Notification {\n  icon() {\n    return 'far fa-thumbs-up';\n  }\n\n  href() {\n    return app.route.post(this.attrs.notification.subject());\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.trans('flarum-likes.forum.notifications.post_liked_text', {user, count: 1});\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Post from 'flarum/models/Post';\nimport Model from 'flarum/Model';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\n\nimport addLikeAction from './addLikeAction';\nimport addLikesList from './addLikesList';\nimport PostLikedNotification from './components/PostLikedNotification';\n\napp.initializers.add('flarum-likes', () => {\n  app.notificationComponents.postLiked = PostLikedNotification;\n\n  Post.prototype.canLike = Model.attribute('canLike');\n  Post.prototype.likes = Model.hasMany('likes');\n\n  addLikeAction();\n  addLikesList();\n\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('postLiked', {\n      name: 'postLiked',\n      icon: 'far fa-thumbs-up',\n      label: app.translator.trans('flarum-likes.forum.settings.notify_post_liked_label')\n    });\n  });\n});\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nexport default function() {\n  extend(CommentPost.prototype, 'actionItems', function(items) {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || !post.canLike()) return;\n\n    const likes = post.likes();\n\n    let isLiked = app.session.user && likes && likes.some(user => user === app.session.user);\n\n    items.add('like',\n      Button.component({\n        className: 'Button Button--link',\n        onclick: () => {\n          isLiked = !isLiked;\n\n          post.save({isLiked});\n\n          // We've saved the fact that we do or don't like the post, but in order\n          // to provide instantaneous feedback to the user, we'll need to add or\n          // remove the like from the relationship data manually.\n          const data = post.data.relationships.likes.data;\n          data.some((like, i) => {\n            if (like.id === app.session.user.id()) {\n              data.splice(i, 1);\n              return true;\n            }\n          });\n\n          if (isLiked) {\n            data.unshift({type: 'users', id: app.session.user.id()});\n          }\n        }\n      }, app.translator.trans(isLiked ? 'flarum-likes.forum.post.unlike_link' : 'flarum-likes.forum.post.like_link'))\n    );\n  });\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Link from 'flarum/components/Link';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\nimport icon from 'flarum/helpers/icon';\n\nimport PostLikesModal from './components/PostLikesModal';\n\nexport default function() {\n  extend(CommentPost.prototype, 'footerItems', function(items) {\n    const post = this.attrs.post;\n    const likes = post.likes();\n\n    if (likes && likes.length) {\n      const limit = 4;\n      const overLimit = likes.length > limit;\n\n      // Construct a list of names of users who have liked this post. Make sure the\n      // current user is first in the list, and cap a maximum of 4 items.\n      const names = likes.sort(a => a === app.session.user ? -1 : 1)\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map(user => {\n          return (\n            <Link href={app.route.user(user)}>\n              {user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user)}\n            </Link>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = likes.length - names.length;\n\n        names.push(\n          <a href=\"#\" onclick={e => {\n            e.preventDefault();\n            app.modal.show(PostLikesModal, {post});\n          }}>\n            {app.translator.trans('flarum-likes.forum.post.others_link', {count})}\n          </a>\n        );\n      }\n\n      items.add('liked', (\n        <div className=\"Post-likedBy\">\n          {icon('far fa-thumbs-up')}\n          {app.translator.trans('flarum-likes.forum.post.liked_by' + (likes[0] === app.session.user ? '_self' : '') + '_text', {\n            count: names.length,\n            users: punctuateSeries(names)\n          })}\n        </div>\n      ));\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_inheritsLoose","subClass","superClass","create","constructor","__proto__","PostLikesModal","className","title","app","translator","trans","content","this","attrs","post","likes","map","user","href","route","avatar","username","Modal","PostLikedNotification","icon","notification","subject","fromUser","count","excerpt","truncate","contentPlain","Notification","Post","Model","extend","CommentPost","items","isHidden","canLike","isLiked","some","add","Button","onclick","save","data","relationships","like","i","id","splice","unshift","type","length","overLimit","names","sort","slice","limit","push","e","preventDefault","users","punctuateSeries","NotificationGrid","name","label"],"sourceRoot":""}