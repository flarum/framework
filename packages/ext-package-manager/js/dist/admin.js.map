{"version":3,"sources":["webpack://@flarum/package-manager/webpack/bootstrap","webpack://@flarum/package-manager/external \"flarum.core.compat['admin/app']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['admin/components/LoadingModal']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/Component']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/components/Tooltip']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/extend']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/components/Alert']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/components/Modal']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/utils/classList']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flarum/package-manager/external \"flarum.core.compat['admin/utils/isExtensionEnabled']\"","webpack://@flarum/package-manager/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/package-manager/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/package-manager/./src/admin/components/ComposerFailureModal.tsx","webpack://@flarum/package-manager/./src/admin/utils/errorHandler.ts","webpack://@flarum/package-manager/./src/admin/components/Installer.tsx","webpack://@flarum/package-manager/./src/admin/components/MajorUpdater.tsx","webpack://@flarum/package-manager/./src/admin/components/Updater.tsx","webpack://@flarum/package-manager/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","ComposerFailureModal","oninit","vnode","this","attrs","error","guessed_cause","alertAttrs","type","content","app","translator","trans","className","title","output","Modal","e","response","errors","includes","code","modal","show","alerts","close","Installer","packageName","isLoading","Stream","view","htmlFor","extiverse","href","id","placeholder","bidi","icon","onclick","onsubmit","loading","data","package","LoadingModal","request","method","url","forum","attribute","body","errorHandler","then","extensionId","extension","window","location","reload","redraw","Component","MajorUpdater","alt","src","version","coreUpdate","text","update","dryRun","Updater","lastUpdateCheck","extensions","getExtensionUpdates","getCoreUpdate","settings","backgroundImage","newPackageUpdate","keys","length","humanTime","checkedAt","checkForUpdates","disabled","updateGlobally","extensionItem","map","isCore","classList","style","extra","updateCoreMinor","updateExtension","aria-label","v","replace","updates","installed","filter","composerPackage","safeToUpdate","values","pop","initializers","add","extensionData","registerSetting","isRequiredDirectoriesWritable","dismissible","extend","ExtensionPage","items","isExtensionEnabled"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,c,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,+HCArB,SAASC,EAAgB1B,EAAGqB,GAMzC,OALAK,EAAkBzB,OAAO0B,gBAAkB,SAAyB3B,EAAGqB,GAErE,OADArB,EAAE4B,UAAYP,EACPrB,IAGcA,EAAGqB,GCLb,SAASQ,EAAeC,EAAUC,GAC/CD,EAASX,UAAYlB,OAAOY,OAAOkB,EAAWZ,WAC9CW,EAASX,UAAUa,YAAcF,EACjCH,EAAeG,EAAUC,G,2CCMNE,E,gGACnBC,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAETC,KAAKC,MAAMC,MAAMC,gBACnBH,KAAKI,WAAa,CAChBC,KAAM,QACNC,QAASC,IAAIC,WAAWC,MAAf,4DAAiFT,KAAKC,MAAMC,MAAMC,kB,EAKjHO,UAAA,WACE,MAAO,qC,EAGTC,MAAA,WACE,OAAOJ,IAAIC,WAAWC,MAAM,qD,EAG9BH,QAAA,WACE,OACE,SAAKI,UAAU,cACb,iBACE,iBAAUH,IAAIC,WAAWC,MAAM,oEAC/B,SAAKC,UAAU,+BAA+BV,KAAKC,MAAMC,MAAMU,W,UAzBEC,GCP5D,WAAUC,GACvB,IAAMZ,EAAQY,EAAEC,SAASC,OAAO,GAEhC,IAAK,CAAC,2BAA4B,8BAA+B,2BAA2BC,SAASf,EAAMgB,MACzG,MAAMJ,EAGR,OAAQZ,EAAMgB,MACZ,IAAK,2BACHX,IAAIY,MAAMC,KAAKvB,EAAsB,CAAEK,UACvC,MAEF,IAAK,8BACHK,IAAIc,OAAOD,KAAK,CAAEf,KAAM,SAAWE,IAAIC,WAAWC,MAAM,wEACxDF,IAAIY,MAAMG,QACV,MAEF,IAAK,0BACHf,IAAIc,OAAOD,KAAK,CAAEf,KAAM,SAAWE,IAAIC,WAAWC,MAAM,oEACxDF,IAAIY,MAAMG,UCbKC,E,oJACnBC,iB,IACAC,WAAqB,E,oCAErB3B,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEbC,KAAKwB,YAAcE,IAAO,K,EAG5BC,KAAA,WACE,OACE,SAAKjB,UAAU,cACb,WAAOkB,QAAQ,qBAAqBrB,IAAIC,WAAWC,MAAM,oDACzD,OAAGC,UAAU,YACVH,IAAIC,WAAWC,MAAM,uDAAwD,CAC5EoB,UAAW,OAAGC,KAAK,yBAAR,oBAGf,SAAKpB,UAAU,yBACb,WAAOA,UAAU,cAAcqB,GAAG,oBAAoBC,YAAY,sBAAsBC,KAAMjC,KAAKwB,cACnG,EAAC,IAAD,CAAQd,UAAU,SAASwB,KAAK,kBAAkBC,QAASnC,KAAKoC,SAASzD,KAAKqB,MAAOqC,QAASrC,KAAKyB,WAChGlB,IAAIC,WAAWC,MAAM,uD,EAOhC6B,KAAA,WACE,MAAO,CACLC,QAASvC,KAAKwB,gB,EAIlBY,SAAA,WAAiB,WACfpC,KAAKyB,WAAY,EACjBlB,IAAIY,MAAMC,KAAKoB,KAEfjC,IACGkC,QAAQ,CACPC,OAAQ,OACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,8BACHC,KAAM,CACJR,KAAMtC,KAAKsC,QAEbS,iBAEDC,MAAK,SAACjC,GACL,IAAMkC,EAAclC,EAASgB,GAC7BxB,IAAIc,OAAOD,KACT,CAAEf,KAAM,WACRE,IAAIC,WAAWC,MAAM,6DAA8D,CAAEyC,UAAWD,KAElGE,OAAOC,SAAStB,KAAUvB,IAAIqC,MAAMC,UAAU,YAA9C,eAAwEI,EACxEE,OAAOC,SAASC,YAhBpB,SAkBW,WACP,EAAK5B,WAAY,EACjBlE,EAAE+F,a,GA3D6BC,K,oFCIlBC,E,oJACnB/B,UAA2B,K,oCAE3BE,KAAA,SAAK5B,GACH,OACE,SAAKW,UAAU,yCACb,SAAK+C,IAAI,cAAcC,IAAKnD,IAAIqC,MAAMC,UAAU,WAAa,yDAC7D,eAAQtC,IAAIC,WAAWC,MAAM,mDAAoD,CAAEkD,QAAS3D,KAAKC,MAAM2D,WAAW,mBAClH,OAAGlD,UAAU,YAAYH,IAAIC,WAAWC,MAAM,2DAC9C,SAAKC,UAAU,kCACb,EAAC,IAAD,CAASmD,KAAMtD,IAAIC,WAAWC,MAAM,4DAClC,EAAC,IAAD,CAAQC,UAAU,SAASwB,KAAK,cAAcC,QAASnC,KAAK8D,OAAOnF,KAAKqB,MAAM,IAC3EO,IAAIC,WAAWC,MAAM,wDAG1B,EAAC,IAAD,CAAQC,UAAU,SAASwB,KAAK,cAAcC,QAASnC,KAAK8D,OAAOnF,KAAKqB,MAAM,IAC3EO,IAAIC,WAAWC,MAAM,yD,EAOhCqD,OAAA,SAAOC,GAAiB,WACtB/D,KAAKyB,UAAL,WAA2BsC,EAAS,UAAY,OAChDxD,IAAIY,MAAMC,KAAKoB,KAEfjC,IACGkC,QAAQ,CACPC,OAAQ,OACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,gCACHC,KAAM,CACJR,KAAM,CAAEyB,WAEVhB,iBAEDC,MAAK,WACJzC,IAAIc,OAAOD,KAAK,CAAEf,KAAM,WAAaE,IAAIC,WAAWC,MAAM,mDAC1D0C,OAAOC,SAASC,YAXpB,SAaW,WACP,EAAK5B,UAAY,KACjBlE,EAAE+F,a,GA1CiFC,KCkBtES,E,oJACnBvC,UAA2B,K,EAC3BwC,gBAAmC1D,IAAI+B,KAAK2B,iBAAmB,G,oCAE/DnE,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,I,EAGf4B,KAAA,WAAO,aACCuC,EAAkBlE,KAAKmE,sBACvBP,EAAyC5D,KAAKoE,gBAChDhF,EAAO,KAaX,OAXIwE,IACFxE,EAAO,CACLuB,MAAOJ,IAAIC,WAAWC,MAAM,+CAC5BkD,QAASpD,IAAI+B,KAAK+B,SAASV,QAC3BzB,KAAM,CACJoC,gBAAiB,OAAO/D,IAAIqC,MAAMC,UAAU,WAA7B,wDAEjB0B,iBAAkBX,IAIf,CACL,SAAKlD,UAAU,cACb,eAAQH,IAAIC,WAAWC,MAAM,uDAC7B,OAAGC,UAAU,YAAYH,IAAIC,WAAWC,MAAM,sDAC7C5C,OAAO2G,KAAKxE,KAAKiE,iBAAiBQ,OACjC,OAAG/D,UAAU,gCACX,UAAMA,UAAU,sCACbH,IAAIC,WAAWC,MAAM,gEAExB,UAAMC,UAAU,sCAAsCgE,IAAS,SAAC1E,KAAKiE,sBAAN,EAAC,EAAsBU,aAEtF,KACJ,SAAKjE,UAAU,kCACb,EAAC,IAAD,CACEA,UAAU,SACVwB,KAAK,kBACLC,QAASnC,KAAK4E,gBAAgBjG,KAAKqB,MACnCqC,QAA4B,UAAnBrC,KAAKyB,UACdoD,SAA6B,OAAnB7E,KAAKyB,WAAyC,UAAnBzB,KAAKyB,WAEzClB,IAAIC,WAAWC,MAAM,2DAExB,EAAC,IAAD,CACEC,UAAU,SACVwB,KAAK,cACLC,QAASnC,KAAK8E,eAAenG,KAAKqB,MAClCqC,QAA4B,kBAAnBrC,KAAKyB,UACdoD,SAA6B,OAAnB7E,KAAKyB,WAAyC,kBAAnBzB,KAAKyB,WAEzClB,IAAIC,WAAWC,MAAM,4DAGN,OAAnBT,KAAKyB,UACJ,SAAKf,UAAU,6BACb,EAAC,IAAD,OAEAwD,EAAWO,QAAUrF,EACvB,SAAKsB,UAAU,6BACb,SAAKA,UAAU,kCACZtB,EAAOY,KAAK+E,cAAc3F,GAAM,GAAQ,KACxC8E,EAAWc,KAAI,SAAC9B,GAAD,OAAoB,EAAK6B,cAAc7B,QAGzD,MAENU,GAAcA,EAAW,gBAAkB,EAAC,EAAD,CAAcA,WAAYA,IAAiB,O,EAI1FmB,cAAA,SAAc7B,EAAgB+B,GAC5B,YADqD,IAAzBA,OAAkB,GAE5C,SACEvE,UAAWwE,IAAU,CACnB,4BAA4B,EAC5B,iCAAkCD,KAGpC,SAAKvE,UAAU,8CAA8CyE,MAAOjC,EAAUhB,MAC3EgB,EAAUhB,KAAOA,IAAKgB,EAAUhB,KAAKxE,MAAQ,IAEhD,SAAKgD,UAAU,iCACb,SAAKA,UAAU,iCAAiCwC,EAAUvC,OAASuC,EAAUkC,MAAM,oBAAoBzE,OACvG,SAAKD,UAAU,oCACb,UAAMA,UAAU,4CAA4CV,KAAK2D,QAAQT,EAAUS,UAClFT,EAAUqB,iBAAiB,gBAC1B,UAAM7D,UAAU,0FACbV,KAAK2D,QAAQT,EAAUqB,iBAAiB,kBAEzC,KACHrB,EAAUqB,iBAAiB,kBAAoBU,EAC9C,UAAMvE,UAAU,0FACbV,KAAK2D,QAAQT,EAAUqB,iBAAiB,kBAEzC,OAGR,SAAK7D,UAAU,qCACb,EAAC,IAAD,CAASmD,KAAMtD,IAAIC,WAAWC,MAAM,mDAClC,EAAC,IAAD,CACEyB,KAAK,6BACLxB,UAAU,mCACVyB,QAAS8C,EAASjF,KAAKqF,gBAAgB1G,KAAKqB,MAAQA,KAAKsF,gBAAgB3G,KAAKqB,KAAMkD,GACpFqC,aAAYhF,IAAIC,WAAWC,MAAM,wD,EAQ7CkD,QAAA,SAAQ6B,GACN,MAAO,IAAMA,EAAEC,QAAQ,IAAK,K,EAG9BtB,oBAAA,WAAsB,UAYpB,OAXA,SAAAnE,KAAKiE,kBAAL,WAAsByB,UAAtB,WAA+BC,YAA/B,EAA0CC,QAAO,SAACC,GAChD,IAAM3C,EAAY3C,IAAI+B,KAAK4B,WAAW2B,EAAgBnI,KAAK+H,QAAQ,IAAK,KAAKA,QAAQ,0BAA2B,KAC1GK,EAAe,CAAC,qBAAsB,mBAAmB7E,SAAS4E,EAAgB,kBAMxF,OAJI3C,GAAa4C,IACf5C,EAAUqB,iBAAmBsB,GAGxB3C,GAAa4C,KAGfjI,OAAOkI,OAAOxF,IAAI+B,KAAK4B,YAAY0B,QAAO,SAAC1C,GAAD,OAAoBA,EAAUqB,qB,EAGjFH,cAAA,WAA4C,UAC1C,gBAAOpE,KAAKiE,kBAAZ,SAAO,EAAsByB,UAA7B,SAAO,EAA+BC,gBAAtC,EAAO,EAA0CC,QAAO,SAACC,GAAD,MAA8D,gBAAzBA,EAAgBnI,QAAwBsI,O,EAGvIpB,gBAAA,WAAkB,WAChB5E,KAAKyB,UAAY,QAEjBlB,IACGkC,QAAQ,CACPC,OAAQ,OACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,qCACHE,iBAEDC,MAAK,SAACjC,GACL,EAAKkD,gBAAkBlD,KAP3B,SASW,WACP,EAAKU,UAAY,KACjBlE,EAAE+F,a,EAIR+B,gBAAA,WAAkB,WAChB9E,IAAIY,MAAMC,KAAKoB,KACfxC,KAAKyB,UAAY,eAEjBlB,IACGkC,QAAQ,CACPC,OAAQ,OACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,gCACHE,iBAEDC,MAAK,WACJzC,IAAIc,OAAOD,KAAK,CAAEf,KAAM,WAAaE,IAAIC,WAAWC,MAAM,mDAC1D0C,OAAOC,SAASC,YARpB,SAUW,WACP,EAAK5B,UAAY,KACjBlE,EAAE+F,a,EAIRgC,gBAAA,SAAgBpC,GAAgB,WAC9B3C,IAAIY,MAAMC,KAAKoB,KACfxC,KAAKyB,UAAY,mBAEjBlB,IACGkC,QAAQ,CACPC,OAAQ,QACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,+BAAiEK,EAAUnB,GAC9EgB,iBAEDC,MAAK,WACJzC,IAAIc,OAAOD,KACT,CAAEf,KAAM,WACRE,IAAIC,WAAWC,MAAM,4DAA6D,CAAEyC,UAAWA,EAAUkC,MAAM,oBAAoBzE,SAErIwC,OAAOC,SAASC,YAXpB,SAaW,WACP,EAAK5B,UAAY,KACjBlE,EAAE+F,a,EAIRwB,eAAA,WAAiB,WACfvE,IAAIY,MAAMC,KAAKoB,KACfxC,KAAKyB,UAAY,gBAEjBlB,IACGkC,QAAQ,CACPC,OAAQ,OACRC,IAAQpC,IAAIqC,MAAMC,UAAU,UAAzB,iCACHE,iBAEDC,MAAK,WACJzC,IAAIc,OAAOD,KAAK,CAAEf,KAAM,WAAaE,IAAIC,WAAWC,MAAM,kEAC1D0C,OAAOC,SAASC,YARpB,SAUW,WACP,EAAK5B,UAAY,KACjBlE,EAAE+F,a,GAtN2BC,K,iBCpBrChD,IAAI0F,aAAaC,IAAI,0BAA0B,SAAC3F,GAC9CA,EAAI4F,cAAJ,IACO,0BACJC,iBAAgB,WACf,IAAK7F,EAAI+B,KAAK+D,8BACZ,OACE,SAAK3F,UAAU,cACb,EAAC,IAAD,CAAOL,KAAK,UAAUiG,aAAa,GAChC/F,EAAIC,WAAWC,MAAM,sDAM/B2F,iBAAgB,WACf,GAAI7F,EAAI+B,KAAK+D,8BACX,OAAO,EAAC,EAAD,SAGVD,iBAAgB,WACf,GAAI7F,EAAI+B,KAAK+D,8BACX,OAAO,EAAC,EAAD,SAIbE,iBAAOC,IAAczH,UAAW,YAAY,SAAU0H,GAAO,WACjC,2BAAtBzG,KAAKkD,UAAUnB,IAAmC2E,IAAmB1G,KAAKkD,UAAUnB,KAIxF0E,EAAMP,IACJ,SACA,EAAC,IAAD,CACExF,UAAU,wBACVwB,KAAK,eACLC,QAAS,WACP5B,EAAIY,MAAMC,KAAKoB,KAEfjC,EACGkC,QAAQ,CACPE,IAAQpC,EAAIqC,MAAMC,UAAU,UAAzB,+BAAiE,EAAKK,UAAUnB,GACnFW,OAAQ,WAETM,MAAK,WACJzC,EAAIc,OAAOD,KAAK,CAAEf,KAAM,WAAaE,EAAIC,WAAWC,MAAM,8DAC1D0C,OAAOC,SAAW7C,EAAIqC,MAAMC,UAAU,eAP1C,SASW,WACPtC,EAAIY,MAAMG,aAhBlB","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['admin/components/LoadingModal'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/Tooltip'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['admin/utils/isExtensionEnabled'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/admin/app';\nimport Modal from 'flarum/common/components/Modal';\nimport { ComponentAttrs } from 'flarum/common/Component';\nimport Alert from 'flarum/common/components/Alert';\nimport Mithril from 'mithril';\n\ninterface Attrs extends ComponentAttrs {\n  output: string;\n}\n\nexport default class ComposerFailureModal<T extends Attrs = Attrs> extends Modal<T> {\n  oninit(vnode: Mithril.Vnode<T, this>) {\n    super.oninit(vnode);\n\n    if (this.attrs.error.guessed_cause) {\n      this.alertAttrs = {\n        type: 'error',\n        content: app.translator.trans(`flarum-package-manager.admin.failure_modal.guessed_cause.${this.attrs.error.guessed_cause}`),\n      };\n    }\n  }\n\n  className() {\n    return 'Modal--large ComposerFailureModal';\n  }\n\n  title() {\n    return app.translator.trans('flarum-package-manager.admin.failure_modal.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <details>\n          <summary>{app.translator.trans('flarum-package-manager.admin.failure_modal.show_composer_output')}</summary>\n          <pre className=\"ComposerFailureModal-output\">{this.attrs.error.output}</pre>\n        </details>\n      </div>\n    );\n  }\n}\n","import app from 'flarum/admin/app';\nimport ComposerFailureModal from '../components/ComposerFailureModal';\n\nexport default function (e: any) {\n  const error = e.response.errors[0];\n\n  if (!['composer_command_failure', 'extension_already_installed', 'extension_not_installed'].includes(error.code)) {\n    throw e;\n  }\n\n  switch (error.code) {\n    case 'composer_command_failure':\n      app.modal.show(ComposerFailureModal, { error });\n      break;\n\n    case 'extension_already_installed':\n      app.alerts.show({ type: 'error' }, app.translator.trans('flarum-package-manager.admin.exceptions.extension_already_installed'));\n      app.modal.close();\n      break;\n\n    case 'extension_not_installed':\n      app.alerts.show({ type: 'error' }, app.translator.trans('flarum-package-manager.admin.exceptions.extension_not_installed'));\n      app.modal.close();\n  }\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport ComposerFailureModal from './ComposerFailureModal';\nimport errorHandler from '../utils/errorHandler';\n\nexport default class Installer extends Component {\n  packageName!: Stream<string>;\n  isLoading: boolean = false;\n\n  oninit(vnode: Mithril.Vnode): void {\n    super.oninit(vnode);\n\n    this.packageName = Stream('');\n  }\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"Form-group\">\n        <label htmlFor=\"install-extension\">{app.translator.trans('flarum-package-manager.admin.extensions.install')}</label>\n        <p className=\"helpText\">\n          {app.translator.trans('flarum-package-manager.admin.extensions.install_help', {\n            extiverse: <a href=\"https://extiverse.com\">extiverse.com</a>,\n          })}\n        </p>\n        <div className=\"FormControl-container\">\n          <input className=\"FormControl\" id=\"install-extension\" placeholder=\"vendor/package-name\" bidi={this.packageName} />\n          <Button className=\"Button\" icon=\"fas fa-download\" onclick={this.onsubmit.bind(this)} loading={this.isLoading}>\n            {app.translator.trans('flarum-package-manager.admin.extensions.proceed')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  data(): any {\n    return {\n      package: this.packageName(),\n    };\n  }\n\n  onsubmit(): void {\n    this.isLoading = true;\n    app.modal.show(LoadingModal);\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/extensions`,\n        body: {\n          data: this.data(),\n        },\n        errorHandler,\n      })\n      .then((response) => {\n        const extensionId = response.id;\n        app.alerts.show(\n          { type: 'success' },\n          app.translator.trans('flarum-package-manager.admin.extensions.successful_install', { extension: extensionId })\n        );\n        window.location.href = `${app.forum.attribute('adminUrl')}#/extension/${extensionId}`;\n        window.location.reload();\n      })\n      .finally(() => {\n        this.isLoading = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport { UpdatedPackage } from './Updater';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport errorHandler from '../utils/errorHandler';\n\ninterface MajorUpdaterAttrs extends ComponentAttrs {\n  coreUpdate: UpdatedPackage;\n}\n\nexport default class MajorUpdater<T extends MajorUpdaterAttrs = MajorUpdaterAttrs> extends Component<T> {\n  isLoading: string | null = null;\n\n  view(vnode: Mithril.Vnode<ComponentAttrs, this>): Mithril.Children {\n    return (\n      <div className=\"Form-group PackageManager-majorUpdate\">\n        <img alt=\"flarum logo\" src={app.forum.attribute('baseUrl') + '/assets/extensions/flarum-package-manager/flarum.svg'} />\n        <label>{app.translator.trans('flarum-package-manager.admin.major_updater.title', { version: this.attrs.coreUpdate['latest-major'] })}</label>\n        <p className=\"helpText\">{app.translator.trans('flarum-package-manager.admin.major_updater.description')}</p>\n        <div className=\"PackageManager-updaterControls\">\n          <Tooltip text={app.translator.trans('flarum-package-manager.admin.major_updater.dry_run_help')}>\n            <Button className=\"Button\" icon=\"fas fa-vial\" onclick={this.update.bind(this, true)}>\n              {app.translator.trans('flarum-package-manager.admin.major_updater.dry_run')}\n            </Button>\n          </Tooltip>\n          <Button className=\"Button\" icon=\"fas fa-play\" onclick={this.update.bind(this, false)}>\n            {app.translator.trans('flarum-package-manager.admin.major_updater.update')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  update(dryRun: boolean) {\n    this.isLoading = `update-${dryRun ? 'dry-run' : 'run'}`;\n    app.modal.show(LoadingModal);\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/major-update`,\n        body: {\n          data: { dryRun },\n        },\n        errorHandler,\n      })\n      .then(() => {\n        app.alerts.show({ type: 'success' }, app.translator.trans('flarum-package-manager.admin.update_successful'));\n        window.location.reload();\n      })\n      .finally(() => {\n        this.isLoading = null;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport errorHandler from '../utils/errorHandler';\nimport classList from 'flarum/common/utils/classList';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport MajorUpdater from './MajorUpdater';\n\nexport type UpdatedPackage = {\n  name: string;\n  version: string;\n  latest: string;\n  'latest-minor': string | null;\n  'latest-major': string | null;\n  'latest-status': string;\n  description: string;\n};\n\ntype ComposerUpdates = {\n  installed: UpdatedPackage[];\n};\n\ntype LastUpdateCheck = {\n  checkedAt: Date;\n  updates: ComposerUpdates;\n};\n\nexport default class Updater extends Component {\n  isLoading: string | null = null;\n  lastUpdateCheck: LastUpdateCheck = app.data.lastUpdateCheck || {};\n\n  oninit(vnode) {\n    super.oninit(vnode);\n  }\n\n  view() {\n    const extensions: any = this.getExtensionUpdates();\n    const coreUpdate: UpdatedPackage | undefined = this.getCoreUpdate();\n    let core = null;\n\n    if (coreUpdate) {\n      core = {\n        title: app.translator.trans('flarum-package-manager.admin.updater.flarum'),\n        version: app.data.settings.version,\n        icon: {\n          backgroundImage: `url(${app.forum.attribute('baseUrl')}/assets/extensions/flarum-package-manager/flarum.svg`,\n        },\n        newPackageUpdate: coreUpdate,\n      };\n    }\n\n    return [\n      <div className=\"Form-group\">\n        <label>{app.translator.trans('flarum-package-manager.admin.updater.updater_title')}</label>\n        <p className=\"helpText\">{app.translator.trans('flarum-package-manager.admin.updater.updater_help')}</p>\n        {Object.keys(this.lastUpdateCheck).length ? (\n          <p className=\"PackageManager-lastUpdatedAt\">\n            <span className=\"PackageManager-lastUpdatedAt-label\">\n              {app.translator.trans('flarum-package-manager.admin.updater.last_update_checked_at')}\n            </span>\n            <span className=\"PackageManager-lastUpdatedAt-value\">{humanTime(this.lastUpdateCheck?.checkedAt)}</span>\n          </p>\n        ) : null}\n        <div className=\"PackageManager-updaterControls\">\n          <Button\n            className=\"Button\"\n            icon=\"fas fa-sync-alt\"\n            onclick={this.checkForUpdates.bind(this)}\n            loading={this.isLoading === 'check'}\n            disabled={this.isLoading !== null && this.isLoading !== 'check'}\n          >\n            {app.translator.trans('flarum-package-manager.admin.updater.check_for_updates')}\n          </Button>\n          <Button\n            className=\"Button\"\n            icon=\"fas fa-play\"\n            onclick={this.updateGlobally.bind(this)}\n            loading={this.isLoading === 'global-update'}\n            disabled={this.isLoading !== null && this.isLoading !== 'global-update'}\n          >\n            {app.translator.trans('flarum-package-manager.admin.updater.run_global_update')}\n          </Button>\n        </div>\n        {this.isLoading !== null ? (\n          <div className=\"PackageManager-extensions\">\n            <LoadingIndicator />\n          </div>\n        ) : extensions.length || core ? (\n          <div className=\"PackageManager-extensions\">\n            <div className=\"PackageManager-extensions-grid\">\n              {core ? this.extensionItem(core, true) : null}\n              {extensions.map((extension: any) => this.extensionItem(extension))}\n            </div>\n          </div>\n        ) : null}\n      </div>,\n      coreUpdate && coreUpdate['latest-major'] ? <MajorUpdater coreUpdate={coreUpdate} /> : null,\n    ];\n  }\n\n  extensionItem(extension: any, isCore: boolean = false) {\n    return (\n      <div\n        className={classList({\n          'PackageManager-extension': true,\n          'PackageManager-extension--core': isCore,\n        })}\n      >\n        <div className=\"PackageManager-extension-icon ExtensionIcon\" style={extension.icon}>\n          {extension.icon ? icon(extension.icon.name) : ''}\n        </div>\n        <div className=\"PackageManager-extension-info\">\n          <div className=\"PackageManager-extension-name\">{extension.title || extension.extra['flarum-extension'].title}</div>\n          <div className=\"PackageManager-extension-version\">\n            <span className=\"PackageManager-extension-version-current\">{this.version(extension.version)}</span>\n            {extension.newPackageUpdate['latest-minor'] ? (\n              <span className=\"PackageManager-extension-version-latest PackageManager-extension-version-latest--minor\">\n                {this.version(extension.newPackageUpdate['latest-minor'])}\n              </span>\n            ) : null}\n            {extension.newPackageUpdate['latest-major'] && !isCore ? (\n              <span className=\"PackageManager-extension-version-latest PackageManager-extension-version-latest--major\">\n                {this.version(extension.newPackageUpdate['latest-major'])}\n              </span>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"PackageManager-extension-controls\">\n          <Tooltip text={app.translator.trans('flarum-package-manager.admin.extensions.update')}>\n            <Button\n              icon=\"fas fa-arrow-alt-circle-up\"\n              className=\"Button Button--icon Button--flat\"\n              onclick={isCore ? this.updateCoreMinor.bind(this) : this.updateExtension.bind(this, extension)}\n              aria-label={app.translator.trans('flarum-package-manager.admin.extensions.update')}\n            />\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n\n  version(v: string) {\n    return 'v' + v.replace('v', '');\n  }\n\n  getExtensionUpdates() {\n    this.lastUpdateCheck?.updates?.installed?.filter((composerPackage: UpdatedPackage) => {\n      const extension = app.data.extensions[composerPackage.name.replace('/', '-').replace(/(flarum-ext-)|(flarum-)/, '')];\n      const safeToUpdate = ['semver-safe-update', 'update-possible'].includes(composerPackage['latest-status']);\n\n      if (extension && safeToUpdate) {\n        extension.newPackageUpdate = composerPackage;\n      }\n\n      return extension && safeToUpdate;\n    });\n\n    return Object.values(app.data.extensions).filter((extension: any) => extension.newPackageUpdate);\n  }\n\n  getCoreUpdate(): UpdatedPackage | undefined {\n    return this.lastUpdateCheck?.updates?.installed?.filter((composerPackage: UpdatedPackage) => composerPackage.name === 'flarum/core').pop();\n  }\n\n  checkForUpdates() {\n    this.isLoading = 'check';\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/check-for-updates`,\n        errorHandler,\n      })\n      .then((response) => {\n        this.lastUpdateCheck = response as LastUpdateCheck;\n      })\n      .finally(() => {\n        this.isLoading = null;\n        m.redraw();\n      });\n  }\n\n  updateCoreMinor() {\n    app.modal.show(LoadingModal);\n    this.isLoading = 'minor-update';\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/minor-update`,\n        errorHandler,\n      })\n      .then(() => {\n        app.alerts.show({ type: 'success' }, app.translator.trans('flarum-package-manager.admin.update_successful'));\n        window.location.reload();\n      })\n      .finally(() => {\n        this.isLoading = null;\n        m.redraw();\n      });\n  }\n\n  updateExtension(extension: any) {\n    app.modal.show(LoadingModal);\n    this.isLoading = 'extension-update';\n\n    app\n      .request({\n        method: 'PATCH',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/extensions/${extension.id}`,\n        errorHandler,\n      })\n      .then(() => {\n        app.alerts.show(\n          { type: 'success' },\n          app.translator.trans('flarum-package-manager.admin.extensions.successful_update', { extension: extension.extra['flarum-extension'].title })\n        );\n        window.location.reload();\n      })\n      .finally(() => {\n        this.isLoading = null;\n        m.redraw();\n      });\n  }\n\n  updateGlobally() {\n    app.modal.show(LoadingModal);\n    this.isLoading = 'global-update';\n\n    app\n      .request({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/package-manager/global-update`,\n        errorHandler,\n      })\n      .then(() => {\n        app.alerts.show({ type: 'success' }, app.translator.trans('flarum-package-manager.admin.updater.global_update_successful'));\n        window.location.reload();\n      })\n      .finally(() => {\n        this.isLoading = null;\n        m.redraw();\n      });\n  }\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/admin/app';\nimport Alert from 'flarum/common/components/Alert';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport Installer from './components/Installer';\nimport Updater from './components/Updater';\nimport isExtensionEnabled from 'flarum/admin/utils/isExtensionEnabled';\nimport MajorUpdater from './components/MajorUpdater';\n\napp.initializers.add('flarum-package-manager', (app) => {\n  app.extensionData\n    .for('flarum-package-manager')\n    .registerSetting(() => {\n      if (!app.data.isRequiredDirectoriesWritable) {\n        return (\n          <div className=\"Form-group\">\n            <Alert type=\"warning\" dismissible={false}>\n              {app.translator.trans('flarum-package-manager.admin.file_permissions')}\n            </Alert>\n          </div>\n        );\n      }\n    })\n    .registerSetting(() => {\n      if (app.data.isRequiredDirectoriesWritable) {\n        return <Installer />;\n      }\n    })\n    .registerSetting(() => {\n      if (app.data.isRequiredDirectoriesWritable) {\n        return <Updater />;\n      }\n    });\n\n  extend(ExtensionPage.prototype, 'topItems', function (items) {\n    if (this.extension.id === 'flarum-package-manager' || isExtensionEnabled(this.extension.id)) {\n      return;\n    }\n\n    items.add(\n      'remove',\n      <Button\n        className=\"Button Button--danger\"\n        icon=\"fas fa-times\"\n        onclick={() => {\n          app.modal.show(LoadingModal);\n\n          app\n            .request({\n              url: `${app.forum.attribute('apiUrl')}/package-manager/extensions/${this.extension.id}`,\n              method: 'DELETE',\n            })\n            .then(() => {\n              app.alerts.show({ type: 'success' }, app.translator.trans('flarum-package-manager.admin.extensions.successful_remove'));\n              window.location = app.forum.attribute('adminUrl');\n            })\n            .finally(() => {\n              app.modal.close();\n            });\n        }}\n      >\n        Remove\n      </Button>\n    );\n  });\n});\n"],"sourceRoot":""}