{"version":3,"sources":["webpack://@flarum/approval/webpack/bootstrap","webpack://@flarum/approval/external \"flarum.core.compat['extend']\"","webpack://@flarum/approval/external \"flarum.core.compat['app']\"","webpack://@flarum/approval/external \"flarum.core.compat['models/Post']\"","webpack://@flarum/approval/external \"flarum.core.compat['models/Discussion']\"","webpack://@flarum/approval/external \"flarum.core.compat['utils/PostControls']\"","webpack://@flarum/approval/external \"flarum.core.compat['components/Post']\"","webpack://@flarum/approval/external \"flarum.core.compat['components/Badge']\"","webpack://@flarum/approval/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@flarum/approval/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flarum/approval/external \"flarum.core.compat['components/Button']\"","webpack://@flarum/approval/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","app","initializers","add","Discussion","isApproved","attribute","extend","items","this","has","Badge_default","a","type","icon","label","translator","trans","Post","canApprove","DiscussionListItem","attrs","props","discussion","className","PostComponent","post","CommentPost","isHidden","override","original","flag","PostControls","Button_default","onclick","approveAction","save","number","pushAttributes"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Button'];","import { extend, override } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Discussion from 'flarum/models/Discussion';\nimport Post from 'flarum/models/Post';\nimport Badge from 'flarum/components/Badge';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport PostComponent from 'flarum/components/Post';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Button from 'flarum/components/Button';\nimport PostControls from 'flarum/utils/PostControls';\n\napp.initializers.add('flarum-approval', () => {\n  Discussion.prototype.isApproved = Discussion.attribute('isApproved');\n\n  extend(Discussion.prototype, 'badges', function(items) {\n    if (!this.isApproved() && !items.has('hidden')) {\n      items.add('awaitingApproval', <Badge type=\"awaitingApproval\" icon=\"fas fa-gavel\" label={app.translator.trans('flarum-approval.forum.badge.awaiting_approval_tooltip')}/>);\n    }\n  });\n\n  Post.prototype.isApproved = Post.attribute('isApproved');\n  Post.prototype.canApprove = Post.attribute('canApprove');\n\n  extend(DiscussionListItem.prototype, 'attrs', function(attrs) {\n    if (!this.props.discussion.isApproved()) {\n      attrs.className += ' DiscussionListItem--unapproved';\n    }\n  });\n\n  extend(PostComponent.prototype, 'attrs', function(attrs) {\n    if (!this.props.post.isApproved()) {\n      attrs.className += ' Post--unapproved';\n    }\n  });\n\n  extend(CommentPost.prototype, 'headerItems', function(items) {\n    if (!this.props.post.isApproved() && !this.props.post.isHidden()) {\n      items.add('unapproved', app.translator.trans('flarum-approval.forum.post.awaiting_approval_text'));\n    }\n  });\n\n  override(PostComponent.prototype, 'flagReason', function(original, flag) {\n    if (flag.type() === 'approval') {\n      return app.translator.trans('flarum-approval.forum.post.awaiting_approval_text');\n    }\n\n    return original(flag);\n  });\n\n  extend(PostControls, 'destructiveControls', function(items, post) {\n    if (!post.isApproved() && post.canApprove()) {\n      items.add('approve',\n        <Button icon=\"fas fa-check\" onclick={PostControls.approveAction.bind(post)}>\n          {app.translator.trans('flarum-approval.forum.post_controls.approve_button')}\n        </Button>,\n        10\n      );\n    }\n  });\n\n  PostControls.approveAction = function() {\n    this.save({isApproved: true});\n\n    if (this.number() === 1) {\n      this.discussion().pushAttributes({isApproved: true});\n    }\n  };\n}, -10); // set initializer priority to run after reports\n"],"sourceRoot":""}