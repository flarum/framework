/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@askvortsov/rich-icu-message-formatter/lib/rich-icu-message-formatter.es.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@askvortsov/rich-icu-message-formatter/lib/rich-icu-message-formatter.es.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RichMessageFormatter": () => (/* binding */ RichMessageFormatter),
/* harmony export */   "defaultRichHandler": () => (/* binding */ defaultRichHandler),
/* harmony export */   "mithrilRichHandler": () => (/* binding */ mithrilRichHandler),
/* harmony export */   "unEscapeHtml": () => (/* binding */ unEscapeHtml)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var _ultraq_icu_message_formatter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ultraq/icu-message-formatter */ "./node_modules/@ultraq/icu-message-formatter/lib/icu-message-formatter.es.js");
/* harmony import */ var _ultraq_array_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ultraq/array-utils */ "./node_modules/@ultraq/array-utils/array-utils.es.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");









/**
 * Replaces rich tags with elements, as per a provided handler.
 * No spaces allowed in tag name, syntax MUST be <TAG_NAME>SOME_CONTENTS</TAG_NAME>.
 * Currently does not support tags with attributes.
 * Currently does not support self closing tags.
 *
 * @param {String[]|any[]} message
 * @param {Object} values
 * @param {Function} handler
 * @param {Number[]} [dontUnescapeIndices]
 * @return {String[]|any[]}
 */

function replaceRichTags(message, values, handler) {
  var dontUnescapeIndices = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var result = [];

  var onTagClose = function onTagClose(segment, currTagIsClosing, currTag, i, j, currTagStart) {
    if (currTagIsClosing) {
      return {
        "break": true
      };
    }

    var endingLocation = findClosingTag(message, currTag, i, j);

    if (!endingLocation) {
      return result;
    }

    var entireTagInSegment = endingLocation.segmentIndex === i;
    var segmentContainingClosingTag = message[endingLocation.segmentIndex];
    var tagContents = [];

    if (entireTagInSegment) {
      tagContents.push(segment.slice(j + 1, endingLocation.segmentStart));
    } else {
      tagContents.push(segment.slice(j + 1));

      for (var k = i + 1; k < endingLocation.segmentIndex; k++) {
        tagContents.push(message[k]);
      }

      tagContents.push(segmentContainingClosingTag.slice(0, endingLocation.segmentStart));
    }

    result.push(segment.slice(0, currTagStart));
    result.push(handler(currTag, values, replaceRichTags(tagContents.filter(function (s) {
      return s !== '';
    }), values, handler)));
    message.splice(endingLocation.segmentIndex + 1, 0, segmentContainingClosingTag.slice(endingLocation.segmentEnd + 1));
    return {
      processedSegment: true,
      newSegmentIndex: endingLocation.segmentIndex,
      "break": true
    };
  };

  traverseMessageTags(message, 0, 0, result, onTagClose);
  return result.filter(function (s) {
    return s !== '';
  }).map(function (s, i) {
    return dontUnescapeIndices.includes(i) ? s : unEscapeHtml(s);
  });
}
/**
 * Finds the index of the matching closing tag, including through strings that
 * could have nested tags.
 *
 * @param {String[]|any[]} message
 * @param {String} tag
 * @param {Number} startIndex
 * @param {Number} startSegmentIndex
 * @return {Boolean}
 */


function findClosingTag(message, tag, startIndex, startSegmentIndex) {
  var position; // set in callback

  var depth = 1;

  var onTagClose = function onTagClose(segment, currTagIsClosing, currTag, i, j, currTagStart) {
    if (currTag === tag) {
      if (currTagIsClosing) {
        depth--;
      } else {
        depth++;
      }

      if (depth === 0) {
        position = {
          segmentIndex: i,
          segmentStart: currTagStart,
          segmentEnd: j
        };
        return {
          exit: true
        };
      }
    }

    return {
      exit: false
    };
  };

  traverseMessageTags(message, startIndex, startSegmentIndex, [], onTagClose);
  return position;
}

function traverseMessageTags(message, startI, startJ, result, onTagClose) {
  var isHtmlTagChar = function isHtmlTagChar(ch) {
    return /[a-zA-Z-_]/.test(ch);
  };

  for (var i = startI; i < message.length; i++) {
    var segment = message[i];

    if (typeof segment !== 'string') {
      result.push(segment);
      continue;
    }

    var currTagIsClosing = false;
    var currTagStart = null;
    var inTag = false;
    var processedSegment = false;

    for (var j = i === startI ? startJ : 0; j < segment.length; j++) {
      // Start of tag
      if (!inTag && segment[j] === '<') {
        currTagStart = j;
        inTag = true;

        if (segment[j + 1] === '/') {
          currTagIsClosing = true;
          j++;
        }
      } // Tag ended
      else if (inTag && segment[j] === '>') {
        var currTag = segment.slice(currTagStart + 1 + currTagIsClosing, j);
        var instructions = onTagClose(segment, currTagIsClosing, currTag, i, j, currTagStart);

        if (instructions.exit) {
          return;
        }

        if (instructions.newSegmentIndex) {
          i = instructions.newSegmentIndex;
        }

        if (instructions.processedSegment) {
          processedSegment = true;
        }

        if (instructions["break"]) {
          break;
        }

        currTagIsClosing = false;
        currTagStart = null;
        inTag = false;
      } // Not a valid tag, reset state.
      else if (inTag && !isHtmlTagChar(segment[j])) {
        currTagIsClosing = false;
        currTagStart = null;
        inTag = false;
      }
    }

    if (!processedSegment) {
      result.push(segment);
    }
  }
}
/**
 * Escapes HTML markup in string and nested array arguments.
 *
 * @param {Object} values
 * @return {Object}
 */


function sanitizeValues(values) {
  return Object.keys(values).reduce(function (acc, key) {
    acc[key] = recSanitizeArr(values[key]);
    return acc;
  }, {});
}
/**
 * De-sanitizes HTML markup.
 *
 * @param {any} str
 * @return {string}
 */


function unEscapeHtml(str) {
  if (typeof str !== 'string') {
    return str;
  }

  return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&#039;/g, "'").replace(/&amp;/g, '&');
}
/**
 * Recursively escape HTML in string or string array.
 *
 * @param {string[]|string} input
 * @return {string[]|string}
 */


function recSanitizeArr(input) {
  if (typeof input === 'string' || input instanceof String) {
    return input.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;');
  } else if (Array.isArray(input)) {
    return input.map(recSanitizeArr);
  }

  return input;
}

function defaultRichHandler(tag, values, contents) {
  return "<".concat(tag, ">").concat(unEscapeHtml(contents), "</").concat(tag, ">");
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__["default"])(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__["default"])(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var RichMessageFormatter = /*#__PURE__*/function (_MessageFormatter) {
  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(RichMessageFormatter, _MessageFormatter);

  var _super = _createSuper(RichMessageFormatter);

  function RichMessageFormatter(locale) {
    var _this;

    var typeHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var richHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, RichMessageFormatter);

    _this = _super.call(this, locale, typeHandlers);
    _this.richHandler = richHandler ? richHandler : defaultRichHandler;
    return _this;
  }

  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(RichMessageFormatter, [{
    key: "rich",
    value: function rich(message) {
      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var cleanedValues = sanitizeValues(values);
      var formatted = (0,_ultraq_array_utils__WEBPACK_IMPORTED_MODULE_7__.flatten)(this.process(message, cleanedValues)); // TODO
      // Should be a symbol but isn't because of conversion issues.
      // We use a random string instead. 

      var sym = Math.random().toString(36) + Math.random().toString(36) + Math.random().toString(36);
      var fakeValues = Object.fromEntries(Object.entries(values).map(function (_ref) {
        var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref, 2),
            key = _ref2[0];

        _ref2[1];
        return [key, sym];
      }));
      var formattedFake = (0,_ultraq_array_utils__WEBPACK_IMPORTED_MODULE_7__.flatten)(this.process(message, fakeValues));
      var replaceFake = replaceRichTags(formattedFake, fakeValues, function () {
        return sym;
      });
      var originalTemplateSegmentIndices = replaceFake.map(function (v, i) {
        return v === sym ? null : i;
      }).filter(function (i) {
        return i !== null;
      });
      return replaceRichTags(formatted, cleanedValues, this.richHandler, originalTemplateSegmentIndices);
    }
  }]);

  return RichMessageFormatter;
}(_ultraq_icu_message_formatter__WEBPACK_IMPORTED_MODULE_8__.MessageFormatter);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__["default"])(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function mithrilRichHandler(tag, values, contents) {
  var vnode = values[tag] || m(tag);
  var children = unEscapeHtml(m.fragment(contents).children);
  return _objectSpread(_objectSpread({}, vnode), {}, {
    children: children
  });
}



/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");

/***/ }),

/***/ "./node_modules/@ultraq/array-utils/array-utils.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@ultraq/array-utils/array-utils.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "flatten": () => (/* binding */ flatten),
/* harmony export */   "range": () => (/* binding */ range),
/* harmony export */   "remove": () => (/* binding */ remove)
/* harmony export */ });
/* 
 * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Flattens an array of arrays of infinite depth into a single-dimension array.
 * 
 * > This is now natively in JavaScript as the `flat` method on an Array
 * > instance.  [Check MDN for which browsers have access to this feature](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat).
 * > If you can't use `flat`, then this method will do the job 🙂
 * 
 * @param {Array} array
 * @return {Array} Flattened array.
 */
function flatten(array) {
  return array.reduce(function (accumulator, value) {
    return accumulator.concat(Array.isArray(value) ? flatten(value) : value);
  }, []);
}
/**
 * Creates an array of numbers from the starting value (inclusive) to the end
 * (exclusive), with an optional step (the gap between values).
 * 
 * @param {Number} start
 *   The value to start at, the first item in the returned array.
 * @param {Number} end
 *   The value to end with, the last item in the returned array.
 * @param {Number} [step=1]
 *   The increment/gap between values, defaults to 1.
 * @return {Array} An array encompassing the given range.
 */

function range(start, end) {
  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  return Array.apply(0, Array(Math.ceil((end - start) / step))).map(function (empty, index) {
    return index * step + start;
  });
}
/**
 * Remove and return the first item from `array` that matches the predicate
 * function.
 * 
 * @param {Array} array
 * @param {Function} predicate
 *   Invoked with the array item.
 * @return {Object} The matching item, or `null` if no match was found.
 */

function remove(array, predicate) {
  return array.find(function (item, index) {
    if (predicate(item)) {
      array.splice(index, 1);
      return item;
    }
  });
}

/***/ }),

/***/ "./node_modules/@ultraq/function-utils/function-utils.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ultraq/function-utils/function-utils.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "memoize": () => (/* binding */ memoize)
/* harmony export */ });
/**
 * A higher-order function to apply [memoization](https://en.wikipedia.org/wiki/Memoization).
 * 
 * If memoizing a recursive function, then memoize and define the function at
 * the same time so you can make a call to the memoized function, eg:
 * 
 * ```javascript
 * const myFunction = memoize(() => myFunction());
 * ```
 * 
 * @param {Function} func
 * @return {Function} 
 */
function memoize(func) {
  var cache = {};
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var key = args.length ? args.map(function (arg) {
      return arg === null ? 'null' : arg === undefined ? 'undefined' : typeof arg === 'function' ? arg.toString() : arg instanceof Date ? arg.toISOString() : JSON.stringify(arg);
    }).join('|') : '_(no-args)_';

    if (Object.prototype.hasOwnProperty.call(cache, key)) {
      return cache[key];
    }

    var result = func.apply(void 0, args);
    cache[key] = result;
    return result;
  };
}

/***/ }),

/***/ "./node_modules/@ultraq/icu-message-formatter/lib/icu-message-formatter.es.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ultraq/icu-message-formatter/lib/icu-message-formatter.es.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MessageFormatter": () => (/* binding */ MessageFormatter),
/* harmony export */   "findClosingBracket": () => (/* binding */ findClosingBracket),
/* harmony export */   "parseCases": () => (/* binding */ parseCases),
/* harmony export */   "pluralTypeHandler": () => (/* binding */ pluralTypeHandler),
/* harmony export */   "selectTypeHandler": () => (/* binding */ selectTypeHandler),
/* harmony export */   "splitFormattedArgument": () => (/* binding */ splitFormattedArgument)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _ultraq_array_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ultraq/array-utils */ "./node_modules/@ultraq/array-utils/array-utils.es.js");
/* harmony import */ var _ultraq_function_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ultraq/function-utils */ "./node_modules/@ultraq/function-utils/function-utils.es.js");






/* 
 * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Most branch-based type handlers are based around "cases".
 * For example, `select` and `plural` compare compare a value
 * to "case keys" to choose a subtranslation.
 * 
 * This util splits "matches" portions provided to the aforementioned
 * handlers into case strings, and extracts any prepended arguments
 * (for example, `plural` supports an `offset:n` argument used for
 * populating the magic `#` variable).
 * 
 * @param {String} string
 * @return {Object} The `cases` key points to a map of all cases.
 *                  The `arguments` key points to a list of prepended arguments.
 */

function parseCases(string) {
  var isWhitespace = function isWhitespace(ch) {
    return /\s/.test(ch);
  };

  var args = [];
  var cases = {};
  var currTermStart = 0;
  var latestTerm = null;
  var inTerm = false;
  var i = 0;

  while (i < string.length) {
    // Term ended
    if (inTerm && (isWhitespace(string[i]) || string[i] === '{')) {
      inTerm = false;
      latestTerm = string.slice(currTermStart, i); // We want to process the opening char again so the case will be properly registered.

      if (string[i] === '{') {
        i--;
      }
    } // New term
    else if (!inTerm && !isWhitespace(string[i])) {
      var caseBody = string[i] === '{'; // If there's a previous term, we can either handle a whole
      // case, or add that as an argument.

      if (latestTerm && caseBody) {
        var branchEndIndex = findClosingBracket(string, i);

        if (branchEndIndex === -1) {
          throw new Error("Unbalanced curly braces in string: \"".concat(string, "\""));
        }

        cases[latestTerm] = string.slice(i + 1, branchEndIndex); // Don't include the braces

        i = branchEndIndex; // Will be moved up where needed at end of loop.

        latestTerm = null;
      } else {
        if (latestTerm) {
          args.push(latestTerm);
          latestTerm = null;
        }

        inTerm = true;
        currTermStart = i;
      }
    }

    i++;
  }

  if (inTerm) {
    latestTerm = string.slice(currTermStart);
  }

  if (latestTerm) {
    args.push(latestTerm);
  }

  return {
    args: args,
    cases: cases
  };
}
/**
 * Finds the index of the matching closing curly bracket, including through
 * strings that could have nested brackets.
 * 
 * @param {String} string
 * @param {Number} fromIndex
 * @return {Number} The index of the matching closing bracket, or -1 if no
 *   closing bracket could be found.
 */


function findClosingBracket(string, fromIndex) {
  var depth = 0;

  for (var i = fromIndex + 1; i < string.length; i++) {
    var _char = string.charAt(i);

    if (_char === '}') {
      if (depth === 0) {
        return i;
      }

      depth--;
    } else if (_char === '{') {
      depth++;
    }
  }

  return -1;
}
/**
 * Split a `{key, type, format}` block into those 3 parts, taking into account
 * nested message syntax that can exist in the `format` part.
 * 
 * @param {String} block
 * @return {Array}
 *   An array with `key`, `type`, and `format` items in that order, if present
 *   in the formatted argument block.
 */


function splitFormattedArgument(block) {
  return split(block.slice(1, -1), ',', 3);
}
/**
 * Like `String.prototype.split()` but where the limit parameter causes the
 * remainder of the string to be grouped together in a final entry.
 * 
 * @private
 * @param {String} string
 * @param {String} separator
 * @param {Number} limit
 * @param {Array} [accumulator=[]]
 * @return {Array}
 */


function split(string, separator, limit) {
  var accumulator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  if (!string) {
    return accumulator;
  }

  if (limit === 1) {
    accumulator.push(string);
    return accumulator;
  }

  var indexOfDelimiter = string.indexOf(separator);

  if (indexOfDelimiter === -1) {
    accumulator.push(string);
    return accumulator;
  }

  var head = string.substring(0, indexOfDelimiter).trim();
  var tail = string.substring(indexOfDelimiter + separator.length + 1).trim();
  accumulator.push(head);
  return split(tail, separator, limit - 1, accumulator);
}
/**
 * The main class for formatting messages.
 * 
 * @author Emanuel Rabina
 */


var MessageFormatter = /*#__PURE__*/function () {
  /**
   * Creates a new formatter that can work using any of the custom type handlers
   * you register.
   * 
   * @param {String} locale
   * @param {Object} [typeHandlers={}]
   *   Optional object where the keys are the names of the types to register,
   *   their values being the functions that will return a nicely formatted
   *   string for the data and locale they are given.
   */
  function MessageFormatter(locale) {
    var _this = this;

    var typeHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MessageFormatter);

    (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__["default"])(this, "format", (0,_ultraq_function_utils__WEBPACK_IMPORTED_MODULE_4__.memoize)(function (message) {
      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return (0,_ultraq_array_utils__WEBPACK_IMPORTED_MODULE_5__.flatten)(_this.process(message, values)).join('');
    }));

    this.locale = locale;
    this.typeHandlers = typeHandlers;
  }
  /**
   * Formats an ICU message syntax string using `values` for placeholder data
   * and any currently-registered type handlers.
   * 
   * @param {String} message
   * @param {Object} [values={}]
   * @return {String}
   */


  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MessageFormatter, [{
    key: "process",
    value:
    /**
     * Process an ICU message syntax string using `values` for placeholder data
     * and any currently-registered type handlers.  The result of this method is
     * an array of the component parts after they have been processed in turn by
     * their own type handlers.  This raw output is useful for other renderers,
     * eg: React where components can be used instead of being forced to return
     * raw strings.
     * 
     * This method is used by {@link MessageFormatter#format} where it acts as a
     * string renderer.
     * 
     * @param {String} message
     * @param {Object} [values={}]
     * @return {Array}
     */
    function process(message) {
      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!message) {
        return [];
      }

      var blockStartIndex = message.indexOf('{');

      if (blockStartIndex !== -1) {
        var blockEndIndex = findClosingBracket(message, blockStartIndex);

        if (blockEndIndex !== -1) {
          var block = message.substring(blockStartIndex, blockEndIndex + 1);

          if (block) {
            var result = [];
            var head = message.substring(0, blockStartIndex);

            if (head) {
              result.push(head);
            }

            var _splitFormattedArgume = splitFormattedArgument(block),
                _splitFormattedArgume2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_splitFormattedArgume, 3),
                key = _splitFormattedArgume2[0],
                type = _splitFormattedArgume2[1],
                format = _splitFormattedArgume2[2];

            var body = values[key];

            if (body === null || body === undefined) {
              body = '';
            }

            var typeHandler = type && this.typeHandlers[type];
            result.push(typeHandler ? typeHandler(body, format, this.locale, values, this.process.bind(this)) : body);
            var tail = message.substring(blockEndIndex + 1);

            if (tail) {
              result.push(this.process(tail, values));
            }

            return result;
          }
        } else {
          throw new Error("Unbalanced curly braces in string: \"".concat(message, "\""));
        }
      }

      return [message];
    }
  }]);

  return MessageFormatter;
}();

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__["default"])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var pluralFormatter;
var keyCounter = 0; // All the special keywords that can be used in `plural` blocks for the various branches

var ONE = 'one';
var OTHER$1 = 'other';
/**
 * @private
 * @param {String} caseBody
 * @param {Number} value
 * @return {Object} {caseBody: string, numberValues: object}
 */

function replaceNumberSign(caseBody, value) {
  var i = 0;
  var output = '';
  var numBraces = 0;
  var numberValues = {};

  while (i < caseBody.length) {
    if (caseBody[i] === '#' && !numBraces) {
      var keyParam = "__hashToken".concat(keyCounter++);
      output += "{".concat(keyParam, ", number}");
      numberValues[keyParam] = value;
    } else {
      output += caseBody[i];
    }

    if (caseBody[i] === '{') {
      numBraces++;
    } else if (caseBody[i] === '}') {
      numBraces--;
    }

    i++;
  }

  return {
    caseBody: output,
    numberValues: numberValues
  };
}
/**
 * Handler for `plural` statements within ICU message syntax strings.  Returns
 * a formatted string for the branch that closely matches the current value.
 * 
 * See https://formatjs.io/docs/core-concepts/icu-syntax#plural-format for more
 * details on how the `plural` statement works.
 * 
 * @param {String} value
 * @param {String} matches
 * @param {String} locale
 * @param {String} values
 * @param {Function} format
 * @return {String}
 */


function pluralTypeHandler(value) {
  var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var locale = arguments.length > 2 ? arguments[2] : undefined;
  var values = arguments.length > 3 ? arguments[3] : undefined;
  var format = arguments.length > 4 ? arguments[4] : undefined;

  var _parseCases = parseCases(matches),
      args = _parseCases.args,
      cases = _parseCases.cases;

  var intValue = parseInt(value);
  args.forEach(function (arg) {
    if (arg.startsWith('offset:')) {
      intValue -= parseInt(arg.slice('offset:'.length));
    }
  });
  var keywordPossibilities = [];

  if ('PluralRules' in Intl) {
    // Effectively memoize because instantiation of `Int.*` objects is expensive.
    if (pluralFormatter === undefined || pluralFormatter.resolvedOptions().locale !== locale) {
      pluralFormatter = new Intl.PluralRules(locale);
    }

    var pluralKeyword = pluralFormatter.select(intValue); // Other is always added last with least priority, so we don't want to add it here.

    if (pluralKeyword !== OTHER$1) {
      keywordPossibilities.push(pluralKeyword);
    }
  }

  if (intValue === 1) {
    keywordPossibilities.push(ONE);
  }

  keywordPossibilities.push("=".concat(intValue), OTHER$1);

  for (var i = 0; i < keywordPossibilities.length; i++) {
    var keyword = keywordPossibilities[i];

    if (keyword in cases) {
      var _replaceNumberSign = replaceNumberSign(cases[keyword], intValue),
          caseBody = _replaceNumberSign.caseBody,
          numberValues = _replaceNumberSign.numberValues;

      return format(caseBody, _objectSpread(_objectSpread({}, values), numberValues));
    }
  }

  return value;
}
/* 
 * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var OTHER = 'other';
/**
 * Handler for `select` statements within ICU message syntax strings.  Returns
 * a formatted string for the branch that closely matches the current value.
 * 
 * See https://formatjs.io/docs/core-concepts/icu-syntax#select-format for more
 * details on how the `select` statement works.
 * 
 * @param {String} value
 * @param {String} matches
 * @param {String} locale
 * @param {String} values
 * @param {Function} format
 * @return {String}
 */

function selectTypeHandler(value) {
  var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var values = arguments.length > 3 ? arguments[3] : undefined;
  var format = arguments.length > 4 ? arguments[4] : undefined;

  var _parseCases = parseCases(matches),
      cases = _parseCases.cases;

  if (value in cases) {
    return format(cases[value], values);
  } else if (OTHER in cases) {
    return format(cases[OTHER], values);
  }

  return value;
}



/***/ }),

/***/ "./node_modules/bootstrap/js/affix.js":
/*!********************************************!*\
  !*** ./node_modules/bootstrap/js/affix.js ***!
  \********************************************/
/***/ (() => {

/* ========================================================================
 * Bootstrap: affix.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#affix
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict'; // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function Affix(element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options);
    var target = this.options.target === Affix.DEFAULTS.target ? $(this.options.target) : $(document).find(this.options.target);
    this.$target = target.on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this));
    this.$element = $(element);
    this.affixed = null;
    this.unpin = null;
    this.pinnedOffset = null;
    this.checkPosition();
  };

  Affix.VERSION = '3.4.1';
  Affix.RESET = 'affix affix-top affix-bottom';
  Affix.DEFAULTS = {
    offset: 0,
    target: window
  };

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop = this.$target.scrollTop();
    var position = this.$element.offset();
    var targetHeight = this.$target.height();
    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false;

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return scrollTop + this.unpin <= position.top ? false : 'bottom';
      return scrollTop + targetHeight <= scrollHeight - offsetBottom ? false : 'bottom';
    }

    var initializing = this.affixed == null;
    var colliderTop = initializing ? scrollTop : position.top;
    var colliderHeight = initializing ? targetHeight : height;
    if (offsetTop != null && scrollTop <= offsetTop) return 'top';
    if (offsetBottom != null && colliderTop + colliderHeight >= scrollHeight - offsetBottom) return 'bottom';
    return false;
  };

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset;
    this.$element.removeClass(Affix.RESET).addClass('affix');
    var scrollTop = this.$target.scrollTop();
    var position = this.$element.offset();
    return this.pinnedOffset = position.top - scrollTop;
  };

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1);
  };

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return;
    var height = this.$element.height();
    var offset = this.options.offset;
    var offsetTop = offset.top;
    var offsetBottom = offset.bottom;
    var scrollHeight = Math.max($(document).height(), $(document.body).height());
    if (typeof offset != 'object') offsetBottom = offsetTop = offset;
    if (typeof offsetTop == 'function') offsetTop = offset.top(this.$element);
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element);
    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '');
      var affixType = 'affix' + (affix ? '-' + affix : '');
      var e = $.Event(affixType + '.bs.affix');
      this.$element.trigger(e);
      if (e.isDefaultPrevented()) return;
      this.affixed = affix;
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null;
      this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace('affix', 'affixed') + '.bs.affix');
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      });
    }
  }; // AFFIX PLUGIN DEFINITION
  // =======================


  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.affix');
      var options = typeof option == 'object' && option;
      if (!data) $this.data('bs.affix', data = new Affix(this, options));
      if (typeof option == 'string') data[option]();
    });
  }

  var old = $.fn.affix;
  $.fn.affix = Plugin;
  $.fn.affix.Constructor = Affix; // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old;
    return this;
  }; // AFFIX DATA-API
  // ==============


  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this);
      var data = $spy.data();
      data.offset = data.offset || {};
      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;
      if (data.offsetTop != null) data.offset.top = data.offsetTop;
      Plugin.call($spy, data);
    });
  });
}(jQuery);

/***/ }),

/***/ "./node_modules/bootstrap/js/dropdown.js":
/*!***********************************************!*\
  !*** ./node_modules/bootstrap/js/dropdown.js ***!
  \***********************************************/
/***/ (() => {

/* ========================================================================
 * Bootstrap: dropdown.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict'; // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop';
  var toggle = '[data-toggle="dropdown"]';

  var Dropdown = function Dropdown(element) {
    $(element).on('click.bs.dropdown', this.toggle);
  };

  Dropdown.VERSION = '3.4.1';

  function getParent($this) {
    var selector = $this.attr('data-target');

    if (!selector) {
      selector = $this.attr('href');
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, ''); // strip for ie7
    }

    var $parent = selector !== '#' ? $(document).find(selector) : null;
    return $parent && $parent.length ? $parent : $this.parent();
  }

  function clearMenus(e) {
    if (e && e.which === 3) return;
    $(backdrop).remove();
    $(toggle).each(function () {
      var $this = $(this);
      var $parent = getParent($this);
      var relatedTarget = {
        relatedTarget: this
      };
      if (!$parent.hasClass('open')) return;
      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return;
      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));
      if (e.isDefaultPrevented()) return;
      $this.attr('aria-expanded', 'false');
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget));
    });
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this);
    if ($this.is('.disabled, :disabled')) return;
    var $parent = getParent($this);
    var isActive = $parent.hasClass('open');
    clearMenus();

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div')).addClass('dropdown-backdrop').insertAfter($(this)).on('click', clearMenus);
      }

      var relatedTarget = {
        relatedTarget: this
      };
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));
      if (e.isDefaultPrevented()) return;
      $this.trigger('focus').attr('aria-expanded', 'true');
      $parent.toggleClass('open').trigger($.Event('shown.bs.dropdown', relatedTarget));
    }

    return false;
  };

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;
    var $this = $(this);
    e.preventDefault();
    e.stopPropagation();
    if ($this.is('.disabled, :disabled')) return;
    var $parent = getParent($this);
    var isActive = $parent.hasClass('open');

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus');
      return $this.trigger('click');
    }

    var desc = ' li:not(.disabled):visible a';
    var $items = $parent.find('.dropdown-menu' + desc);
    if (!$items.length) return;
    var index = $items.index(e.target);
    if (e.which == 38 && index > 0) index--; // up

    if (e.which == 40 && index < $items.length - 1) index++; // down

    if (!~index) index = 0;
    $items.eq(index).trigger('focus');
  }; // DROPDOWN PLUGIN DEFINITION
  // ==========================


  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.dropdown');
      if (!data) $this.data('bs.dropdown', data = new Dropdown(this));
      if (typeof option == 'string') data[option].call($this);
    });
  }

  var old = $.fn.dropdown;
  $.fn.dropdown = Plugin;
  $.fn.dropdown.Constructor = Dropdown; // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old;
    return this;
  }; // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================


  $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {
    e.stopPropagation();
  }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown);
}(jQuery);

/***/ }),

/***/ "./node_modules/bootstrap/js/modal.js":
/*!********************************************!*\
  !*** ./node_modules/bootstrap/js/modal.js ***!
  \********************************************/
/***/ (() => {

/* ========================================================================
 * Bootstrap: modal.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#modals
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict'; // MODAL CLASS DEFINITION
  // ======================

  var Modal = function Modal(element, options) {
    this.options = options;
    this.$body = $(document.body);
    this.$element = $(element);
    this.$dialog = this.$element.find('.modal-dialog');
    this.$backdrop = null;
    this.isShown = null;
    this.originalBodyPad = null;
    this.scrollbarWidth = 0;
    this.ignoreBackdropClick = false;
    this.fixedContent = '.navbar-fixed-top, .navbar-fixed-bottom';

    if (this.options.remote) {
      this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () {
        this.$element.trigger('loaded.bs.modal');
      }, this));
    }
  };

  Modal.VERSION = '3.4.1';
  Modal.TRANSITION_DURATION = 300;
  Modal.BACKDROP_TRANSITION_DURATION = 150;
  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  };

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget);
  };

  Modal.prototype.show = function (_relatedTarget) {
    var that = this;
    var e = $.Event('show.bs.modal', {
      relatedTarget: _relatedTarget
    });
    this.$element.trigger(e);
    if (this.isShown || e.isDefaultPrevented()) return;
    this.isShown = true;
    this.checkScrollbar();
    this.setScrollbar();
    this.$body.addClass('modal-open');
    this.escape();
    this.resize();
    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this));
    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;
      });
    });
    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade');

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body); // don't move modals dom position
      }

      that.$element.show().scrollTop(0);
      that.adjustDialog();

      if (transition) {
        that.$element[0].offsetWidth; // force reflow
      }

      that.$element.addClass('in');
      that.enforceFocus();
      var e = $.Event('shown.bs.modal', {
        relatedTarget: _relatedTarget
      });
      transition ? that.$dialog // wait for modal to slide in
      .one('bsTransitionEnd', function () {
        that.$element.trigger('focus').trigger(e);
      }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger('focus').trigger(e);
    });
  };

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault();
    e = $.Event('hide.bs.modal');
    this.$element.trigger(e);
    if (!this.isShown || e.isDefaultPrevented()) return;
    this.isShown = false;
    this.escape();
    this.resize();
    $(document).off('focusin.bs.modal');
    this.$element.removeClass('in').off('click.dismiss.bs.modal').off('mouseup.dismiss.bs.modal');
    this.$dialog.off('mousedown.dismiss.bs.modal');
    $.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal();
  };

  Modal.prototype.enforceFocus = function () {
    $(document).off('focusin.bs.modal') // guard against infinite focus loop
    .on('focusin.bs.modal', $.proxy(function (e) {
      if (document !== e.target && this.$element[0] !== e.target && !this.$element.has(e.target).length) {
        this.$element.trigger('focus');
      }
    }, this));
  };

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide();
      }, this));
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal');
    }
  };

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this));
    } else {
      $(window).off('resize.bs.modal');
    }
  };

  Modal.prototype.hideModal = function () {
    var that = this;
    this.$element.hide();
    this.backdrop(function () {
      that.$body.removeClass('modal-open');
      that.resetAdjustments();
      that.resetScrollbar();
      that.$element.trigger('hidden.bs.modal');
    });
  };

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove();
    this.$backdrop = null;
  };

  Modal.prototype.backdrop = function (callback) {
    var that = this;
    var animate = this.$element.hasClass('fade') ? 'fade' : '';

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate;
      this.$backdrop = $(document.createElement('div')).addClass('modal-backdrop ' + animate).appendTo(this.$body);
      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false;
          return;
        }

        if (e.target !== e.currentTarget) return;
        this.options.backdrop == 'static' ? this.$element[0].focus() : this.hide();
      }, this));
      if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow

      this.$backdrop.addClass('in');
      if (!callback) return;
      doAnimate ? this.$backdrop.one('bsTransitionEnd', callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback();
    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in');

      var callbackRemove = function callbackRemove() {
        that.removeBackdrop();
        callback && callback();
      };

      $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove();
    } else if (callback) {
      callback();
    }
  }; // these following methods are used to handle overflowing modals


  Modal.prototype.handleUpdate = function () {
    this.adjustDialog();
  };

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;
    this.$element.css({
      paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    });
  };

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    });
  };

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth;

    if (!fullWindowWidth) {
      // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect();
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
    }

    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
    this.scrollbarWidth = this.measureScrollbar();
  };

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt(this.$body.css('padding-right') || 0, 10);
    this.originalBodyPad = document.body.style.paddingRight || '';
    var scrollbarWidth = this.scrollbarWidth;

    if (this.bodyIsOverflowing) {
      this.$body.css('padding-right', bodyPad + scrollbarWidth);
      $(this.fixedContent).each(function (index, element) {
        var actualPadding = element.style.paddingRight;
        var calculatedPadding = $(element).css('padding-right');
        $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + scrollbarWidth + 'px');
      });
    }
  };

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad);
    $(this.fixedContent).each(function (index, element) {
      var padding = $(element).data('padding-right');
      $(element).removeData('padding-right');
      element.style.paddingRight = padding ? padding : '';
    });
  };

  Modal.prototype.measureScrollbar = function () {
    // thx walsh
    var scrollDiv = document.createElement('div');
    scrollDiv.className = 'modal-scrollbar-measure';
    this.$body.append(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    this.$body[0].removeChild(scrollDiv);
    return scrollbarWidth;
  }; // MODAL PLUGIN DEFINITION
  // =======================


  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.modal');
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);
      if (!data) $this.data('bs.modal', data = new Modal(this, options));
      if (typeof option == 'string') data[option](_relatedTarget);else if (options.show) data.show(_relatedTarget);
    });
  }

  var old = $.fn.modal;
  $.fn.modal = Plugin;
  $.fn.modal.Constructor = Modal; // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old;
    return this;
  }; // MODAL DATA-API
  // ==============


  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this = $(this);
    var href = $this.attr('href');
    var target = $this.attr('data-target') || href && href.replace(/.*(?=#[^\s]+$)/, ''); // strip for ie7

    var $target = $(document).find(target);
    var option = $target.data('bs.modal') ? 'toggle' : $.extend({
      remote: !/#/.test(href) && href
    }, $target.data(), $this.data());
    if ($this.is('a')) e.preventDefault();
    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown

      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus');
      });
    });
    Plugin.call($target, option, this);
  });
}(jQuery);

/***/ }),

/***/ "./node_modules/bootstrap/js/tooltip.js":
/*!**********************************************!*\
  !*** ./node_modules/bootstrap/js/tooltip.js ***!
  \**********************************************/
/***/ (() => {

/* ========================================================================
 * Bootstrap: tooltip.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';

  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  };
  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;
  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase();

    if ($.inArray(attrName, allowedAttributeList) !== -1) {
      if ($.inArray(attrName, uriAttrs) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
      }

      return true;
    }

    var regExp = $(allowedAttributeList).filter(function (index, value) {
      return value instanceof RegExp;
    }); // Check if a regular expression validates the attribute.

    for (var i = 0, l = regExp.length; i < l; i++) {
      if (attrName.match(regExp[i])) {
        return true;
      }
    }

    return false;
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml;
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml);
    } // IE 8 and below don't support createHTMLDocument


    if (!document.implementation || !document.implementation.createHTMLDocument) {
      return unsafeHtml;
    }

    var createdDocument = document.implementation.createHTMLDocument('sanitization');
    createdDocument.body.innerHTML = unsafeHtml;
    var whitelistKeys = $.map(whiteList, function (el, i) {
      return i;
    });
    var elements = $(createdDocument.body).find('*');

    for (var i = 0, len = elements.length; i < len; i++) {
      var el = elements[i];
      var elName = el.nodeName.toLowerCase();

      if ($.inArray(elName, whitelistKeys) === -1) {
        el.parentNode.removeChild(el);
        continue;
      }

      var attributeList = $.map(el.attributes, function (el) {
        return el;
      });
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);

      for (var j = 0, len2 = attributeList.length; j < len2; j++) {
        if (!allowedAttribute(attributeList[j], whitelistedAttributes)) {
          el.removeAttribute(attributeList[j].nodeName);
        }
      }
    }

    return createdDocument.body.innerHTML;
  } // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================


  var Tooltip = function Tooltip(element, options) {
    this.type = null;
    this.options = null;
    this.enabled = null;
    this.timeout = null;
    this.hoverState = null;
    this.$element = null;
    this.inState = null;
    this.init('tooltip', element, options);
  };

  Tooltip.VERSION = '3.4.1';
  Tooltip.TRANSITION_DURATION = 150;
  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    },
    sanitize: true,
    sanitizeFn: null,
    whiteList: DefaultWhitelist
  };

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled = true;
    this.type = type;
    this.$element = $(element);
    this.options = this.getOptions(options);
    this.$viewport = this.options.viewport && $(document).find($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);
    this.inState = {
      click: false,
      hover: false,
      focus: false
    };

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');
    }

    var triggers = this.options.trigger.split(' ');

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i];

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));
      } else if (trigger != 'manual') {
        var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';
        this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));
      }
    }

    this.options.selector ? this._options = $.extend({}, this.options, {
      trigger: 'manual',
      selector: ''
    }) : this.fixTitle();
  };

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS;
  };

  Tooltip.prototype.getOptions = function (options) {
    var dataAttributes = this.$element.data();

    for (var dataAttr in dataAttributes) {
      if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
        delete dataAttributes[dataAttr];
      }
    }

    options = $.extend({}, this.getDefaults(), dataAttributes, options);

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      };
    }

    if (options.sanitize) {
      options.template = sanitizeHtml(options.template, options.whiteList, options.sanitizeFn);
    }

    return options;
  };

  Tooltip.prototype.getDelegateOptions = function () {
    var options = {};
    var defaults = this.getDefaults();
    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value;
    });
    return options;
  };

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
      $(obj.currentTarget).data('bs.' + this.type, self);
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true;
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in';
      return;
    }

    clearTimeout(self.timeout);
    self.hoverState = 'in';
    if (!self.options.delay || !self.options.delay.show) return self.show();
    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show();
    }, self.options.delay.show);
  };

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true;
    }

    return false;
  };

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
      $(obj.currentTarget).data('bs.' + this.type, self);
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false;
    }

    if (self.isInStateTrue()) return;
    clearTimeout(self.timeout);
    self.hoverState = 'out';
    if (!self.options.delay || !self.options.delay.hide) return self.hide();
    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide();
    }, self.options.delay.hide);
  };

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type);

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e);
      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
      if (e.isDefaultPrevented() || !inDom) return;
      var that = this;
      var $tip = this.tip();
      var tipId = this.getUID(this.type);
      this.setContent();
      $tip.attr('id', tipId);
      this.$element.attr('aria-describedby', tipId);
      if (this.options.animation) $tip.addClass('fade');
      var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;
      var autoToken = /\s?auto?\s?/i;
      var autoPlace = autoToken.test(placement);
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top';
      $tip.detach().css({
        top: 0,
        left: 0,
        display: 'block'
      }).addClass(placement).data('bs.' + this.type, this);
      this.options.container ? $tip.appendTo($(document).find(this.options.container)) : $tip.insertAfter(this.$element);
      this.$element.trigger('inserted.bs.' + this.type);
      var pos = this.getPosition();
      var actualWidth = $tip[0].offsetWidth;
      var actualHeight = $tip[0].offsetHeight;

      if (autoPlace) {
        var orgPlacement = placement;
        var viewportDim = this.getPosition(this.$viewport);
        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top' : placement == 'top' && pos.top - actualHeight < viewportDim.top ? 'bottom' : placement == 'right' && pos.right + actualWidth > viewportDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < viewportDim.left ? 'right' : placement;
        $tip.removeClass(orgPlacement).addClass(placement);
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);
      this.applyPlacement(calculatedOffset, placement);

      var complete = function complete() {
        var prevHoverState = that.hoverState;
        that.$element.trigger('shown.bs.' + that.type);
        that.hoverState = null;
        if (prevHoverState == 'out') that.leave(that);
      };

      $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
    }
  };

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip = this.tip();
    var width = $tip[0].offsetWidth;
    var height = $tip[0].offsetHeight; // manually read margins because getBoundingClientRect includes difference

    var marginTop = parseInt($tip.css('margin-top'), 10);
    var marginLeft = parseInt($tip.css('margin-left'), 10); // we must check for NaN for ie 8/9

    if (isNaN(marginTop)) marginTop = 0;
    if (isNaN(marginLeft)) marginLeft = 0;
    offset.top += marginTop;
    offset.left += marginLeft; // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0

    $.offset.setOffset($tip[0], $.extend({
      using: function using(props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        });
      }
    }, offset), 0);
    $tip.addClass('in'); // check to see if placing tip in new offset caused the tip to resize itself

    var actualWidth = $tip[0].offsetWidth;
    var actualHeight = $tip[0].offsetHeight;

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight;
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);
    if (delta.left) offset.left += delta.left;else offset.top += delta.top;
    var isVertical = /top|bottom/.test(placement);
    var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';
    $tip.offset(offset);
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);
  };

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow().css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%').css(isVertical ? 'top' : 'left', '');
  };

  Tooltip.prototype.setContent = function () {
    var $tip = this.tip();
    var title = this.getTitle();

    if (this.options.html) {
      if (this.options.sanitize) {
        title = sanitizeHtml(title, this.options.whiteList, this.options.sanitizeFn);
      }

      $tip.find('.tooltip-inner').html(title);
    } else {
      $tip.find('.tooltip-inner').text(title);
    }

    $tip.removeClass('fade in top bottom left right');
  };

  Tooltip.prototype.hide = function (callback) {
    var that = this;
    var $tip = $(this.$tip);
    var e = $.Event('hide.bs.' + this.type);

    function complete() {
      if (that.hoverState != 'in') $tip.detach();

      if (that.$element) {
        // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + that.type);
      }

      callback && callback();
    }

    this.$element.trigger(e);
    if (e.isDefaultPrevented()) return;
    $tip.removeClass('in');
    $.support.transition && $tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
    this.hoverState = null;
    return this;
  };

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element;

    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');
    }
  };

  Tooltip.prototype.hasContent = function () {
    return this.getTitle();
  };

  Tooltip.prototype.getPosition = function ($element) {
    $element = $element || this.$element;
    var el = $element[0];
    var isBody = el.tagName == 'BODY';
    var elRect = el.getBoundingClientRect();

    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, {
        width: elRect.right - elRect.left,
        height: elRect.bottom - elRect.top
      });
    }

    var isSvg = window.SVGElement && el instanceof window.SVGElement; // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280

    var elOffset = isBody ? {
      top: 0,
      left: 0
    } : isSvg ? null : $element.offset();
    var scroll = {
      scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop()
    };
    var outerDims = isBody ? {
      width: $(window).width(),
      height: $(window).height()
    } : null;
    return $.extend({}, elRect, scroll, outerDims, elOffset);
  };

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? {
      top: pos.top + pos.height,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : placement == 'top' ? {
      top: pos.top - actualHeight,
      left: pos.left + pos.width / 2 - actualWidth / 2
    } : placement == 'left' ? {
      top: pos.top + pos.height / 2 - actualHeight / 2,
      left: pos.left - actualWidth
    } :
    /* placement == 'right' */
    {
      top: pos.top + pos.height / 2 - actualHeight / 2,
      left: pos.left + pos.width
    };
  };

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = {
      top: 0,
      left: 0
    };
    if (!this.$viewport) return delta;
    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;
    var viewportDimensions = this.getPosition(this.$viewport);

    if (/right|left/.test(placement)) {
      var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;

      if (topEdgeOffset < viewportDimensions.top) {
        // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset;
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {
        // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;
      }
    } else {
      var leftEdgeOffset = pos.left - viewportPadding;
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth;

      if (leftEdgeOffset < viewportDimensions.left) {
        // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset;
      } else if (rightEdgeOffset > viewportDimensions.right) {
        // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;
      }
    }

    return delta;
  };

  Tooltip.prototype.getTitle = function () {
    var title;
    var $e = this.$element;
    var o = this.options;
    title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);
    return title;
  };

  Tooltip.prototype.getUID = function (prefix) {
    do {
      prefix += ~~(Math.random() * 1000000);
    } while (document.getElementById(prefix));

    return prefix;
  };

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template);

      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');
      }
    }

    return this.$tip;
  };

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
  };

  Tooltip.prototype.enable = function () {
    this.enabled = true;
  };

  Tooltip.prototype.disable = function () {
    this.enabled = false;
  };

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled;
  };

  Tooltip.prototype.toggle = function (e) {
    var self = this;

    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type);

      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions());
        $(e.currentTarget).data('bs.' + this.type, self);
      }
    }

    if (e) {
      self.inState.click = !self.inState.click;
      if (self.isInStateTrue()) self.enter(self);else self.leave(self);
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self);
    }
  };

  Tooltip.prototype.destroy = function () {
    var that = this;
    clearTimeout(this.timeout);
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type);

      if (that.$tip) {
        that.$tip.detach();
      }

      that.$tip = null;
      that.$arrow = null;
      that.$viewport = null;
      that.$element = null;
    });
  };

  Tooltip.prototype.sanitizeHtml = function (unsafeHtml) {
    return sanitizeHtml(unsafeHtml, this.options.whiteList, this.options.sanitizeFn);
  }; // TOOLTIP PLUGIN DEFINITION
  // =========================


  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.tooltip');
      var options = typeof option == 'object' && option;
      if (!data && /destroy|hide/.test(option)) return;
      if (!data) $this.data('bs.tooltip', data = new Tooltip(this, options));
      if (typeof option == 'string') data[option]();
    });
  }

  var old = $.fn.tooltip;
  $.fn.tooltip = Plugin;
  $.fn.tooltip.Constructor = Tooltip; // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old;
    return this;
  };
}(jQuery);

/***/ }),

/***/ "./node_modules/bootstrap/js/transition.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/transition.js ***!
  \*************************************************/
/***/ (() => {

/* ========================================================================
 * Bootstrap: transition.js v3.4.1
 * https://getbootstrap.com/docs/3.4/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict'; // CSS TRANSITION SUPPORT (Shoutout: https://modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap');
    var transEndEventNames = {
      WebkitTransition: 'webkitTransitionEnd',
      MozTransition: 'transitionend',
      OTransition: 'oTransitionEnd otransitionend',
      transition: 'transitionend'
    };

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return {
          end: transEndEventNames[name]
        };
      }
    }

    return false; // explicit for ie8 (  ._.)
  } // https://blog.alexmaccaw.com/css-transitions


  $.fn.emulateTransitionEnd = function (duration) {
    var called = false;
    var $el = this;
    $(this).one('bsTransitionEnd', function () {
      called = true;
    });

    var callback = function callback() {
      if (!called) $($el).trigger($.support.transition.end);
    };

    setTimeout(callback, duration);
    return this;
  };

  $(function () {
    $.support.transition = transitionEnd();
    if (!$.support.transition) return;
    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function handle(e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
      }
    };
  });
}(jQuery);

/***/ }),

/***/ "./node_modules/clsx/dist/clsx.m.js":
/*!******************************************!*\
  !*** ./node_modules/clsx/dist/clsx.m.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function toVal(mix) {
  var k,
      y,
      str = '';

  if (typeof mix === 'string' || typeof mix === 'number') {
    str += mix;
  } else if (typeof mix === 'object') {
    if (Array.isArray(mix)) {
      for (k = 0; k < mix.length; k++) {
        if (mix[k]) {
          if (y = toVal(mix[k])) {
            str && (str += ' ');
            str += y;
          }
        }
      }
    } else {
      for (k in mix) {
        if (mix[k]) {
          str && (str += ' ');
          str += k;
        }
      }
    }
  }

  return str;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var i = 0,
      tmp,
      x,
      str = '';

  while (i < arguments.length) {
    if (tmp = arguments[i++]) {
      if (x = toVal(tmp)) {
        str && (str += ' ');
        str += x;
      }
    }
  }

  return str;
}

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/color-thief-browser/dist/color-thief.min.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/color-thief-browser/dist/color-thief.min.js ***!
  \********************************************************************************************************************************/
/***/ ((module) => {

/*!
 * Color Thief v2.0
 * by Lokesh Dhakar - http://www.lokeshdhakar.com
 *
 * Thanks
 * ------
 * Nick Rabinowitz - For creating quantize.js.
 * John Schulz - For clean up and optimization. @JFSIII
 * Nathan Spady - For adding drag and drop support to the demo page.
 *
 * License
 * -------
 * Copyright 2011, 2015 Lokesh Dhakar
 * Released under the MIT license
 * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE
 *
 */
var CanvasImage = function CanvasImage(a) {
  this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), document.body.appendChild(this.canvas), this.width = this.canvas.width = a.width, this.height = this.canvas.height = a.height, this.context.drawImage(a, 0, 0, this.width, this.height);
};

CanvasImage.prototype.clear = function () {
  this.context.clearRect(0, 0, this.width, this.height);
}, CanvasImage.prototype.update = function (a) {
  this.context.putImageData(a, 0, 0);
}, CanvasImage.prototype.getPixelCount = function () {
  return this.width * this.height;
}, CanvasImage.prototype.getImageData = function () {
  return this.context.getImageData(0, 0, this.width, this.height);
}, CanvasImage.prototype.removeCanvas = function () {
  this.canvas.parentNode.removeChild(this.canvas);
};

var ColorThief = function ColorThief() {};
/*!
* quantize.js Copyright 2008 Nick Rabinowitz.
* Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

/*!
 * Block below copied from Protovis: http://mbostock.github.com/protovis/
 * Copyright 2010 Stanford Visualization Group
 * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php
 */


if (ColorThief.prototype.getColor = function (a, b) {
  var c = this.getPalette(a, 5, b),
      d = c[0];
  return d;
}, ColorThief.prototype.getPalette = function (a, b, c) {
  "undefined" == typeof b && (b = 10), ("undefined" == typeof c || 1 > c) && (c = 10);

  for (var d, e, f, g, h, i = new CanvasImage(a), j = i.getImageData(), k = j.data, l = i.getPixelCount(), m = [], n = 0; l > n; n += c) {
    d = 4 * n, e = k[d + 0], f = k[d + 1], g = k[d + 2], h = k[d + 3], h >= 125 && (e > 250 && f > 250 && g > 250 || m.push([e, f, g]));
  }

  var o = MMCQ.quantize(m, b),
      p = o ? o.palette() : null;
  return i.removeCanvas(), p;
}, !pv) var pv = {
  map: function map(a, b) {
    var c = {};
    return b ? a.map(function (a, d) {
      return c.index = d, b.call(c, a);
    }) : a.slice();
  },
  naturalOrder: function naturalOrder(a, b) {
    return b > a ? -1 : a > b ? 1 : 0;
  },
  sum: function sum(a, b) {
    var c = {};
    return a.reduce(b ? function (a, d, e) {
      return c.index = e, a + b.call(c, d);
    } : function (a, b) {
      return a + b;
    }, 0);
  },
  max: function max(a, b) {
    return Math.max.apply(null, b ? pv.map(a, b) : a);
  }
};

var MMCQ = function () {
  function a(a, b, c) {
    return (a << 2 * i) + (b << i) + c;
  }

  function b(a) {
    function b() {
      c.sort(a), d = !0;
    }

    var c = [],
        d = !1;
    return {
      push: function push(a) {
        c.push(a), d = !1;
      },
      peek: function peek(a) {
        return d || b(), void 0 === a && (a = c.length - 1), c[a];
      },
      pop: function pop() {
        return d || b(), c.pop();
      },
      size: function size() {
        return c.length;
      },
      map: function map(a) {
        return c.map(a);
      },
      debug: function debug() {
        return d || b(), c;
      }
    };
  }

  function c(a, b, c, d, e, f, g) {
    var h = this;
    h.r1 = a, h.r2 = b, h.g1 = c, h.g2 = d, h.b1 = e, h.b2 = f, h.histo = g;
  }

  function d() {
    this.vboxes = new b(function (a, b) {
      return pv.naturalOrder(a.vbox.count() * a.vbox.volume(), b.vbox.count() * b.vbox.volume());
    });
  }

  function e(b) {
    var c,
        d,
        e,
        f,
        g = 1 << 3 * i,
        h = new Array(g);
    return b.forEach(function (b) {
      d = b[0] >> j, e = b[1] >> j, f = b[2] >> j, c = a(d, e, f), h[c] = (h[c] || 0) + 1;
    }), h;
  }

  function f(a, b) {
    var d,
        e,
        f,
        g = 1e6,
        h = 0,
        i = 1e6,
        k = 0,
        l = 1e6,
        m = 0;
    return a.forEach(function (a) {
      d = a[0] >> j, e = a[1] >> j, f = a[2] >> j, g > d ? g = d : d > h && (h = d), i > e ? i = e : e > k && (k = e), l > f ? l = f : f > m && (m = f);
    }), new c(g, h, i, k, l, m, b);
  }

  function g(b, c) {
    function d(a) {
      var b,
          d,
          e,
          f,
          g,
          h = a + "1",
          j = a + "2",
          k = 0;

      for (i = c[h]; i <= c[j]; i++) {
        if (o[i] > n / 2) {
          for (e = c.copy(), f = c.copy(), b = i - c[h], d = c[j] - i, g = d >= b ? Math.min(c[j] - 1, ~~(i + d / 2)) : Math.max(c[h], ~~(i - 1 - b / 2)); !o[g];) {
            g++;
          }

          for (k = p[g]; !k && o[g - 1];) {
            k = p[--g];
          }

          return e[j] = g, f[h] = e[j] + 1, [e, f];
        }
      }
    }

    if (c.count()) {
      var e = c.r2 - c.r1 + 1,
          f = c.g2 - c.g1 + 1,
          g = c.b2 - c.b1 + 1,
          h = pv.max([e, f, g]);
      if (1 == c.count()) return [c.copy()];
      var i,
          j,
          k,
          l,
          m,
          n = 0,
          o = [],
          p = [];
      if (h == e) for (i = c.r1; i <= c.r2; i++) {
        for (l = 0, j = c.g1; j <= c.g2; j++) {
          for (k = c.b1; k <= c.b2; k++) {
            m = a(i, j, k), l += b[m] || 0;
          }
        }

        n += l, o[i] = n;
      } else if (h == f) for (i = c.g1; i <= c.g2; i++) {
        for (l = 0, j = c.r1; j <= c.r2; j++) {
          for (k = c.b1; k <= c.b2; k++) {
            m = a(j, i, k), l += b[m] || 0;
          }
        }

        n += l, o[i] = n;
      } else for (i = c.b1; i <= c.b2; i++) {
        for (l = 0, j = c.r1; j <= c.r2; j++) {
          for (k = c.g1; k <= c.g2; k++) {
            m = a(j, k, i), l += b[m] || 0;
          }
        }

        n += l, o[i] = n;
      }
      return o.forEach(function (a, b) {
        p[b] = n - a;
      }), d(h == e ? "r" : h == f ? "g" : "b");
    }
  }

  function h(a, c) {
    function h(a, b) {
      for (var c, d = 1, e = 0; k > e;) {
        if (c = a.pop(), c.count()) {
          var f = g(i, c),
              h = f[0],
              j = f[1];
          if (!h) return;
          if (a.push(h), j && (a.push(j), d++), d >= b) return;
          if (e++ > k) return;
        } else a.push(c), e++;
      }
    }

    if (!a.length || 2 > c || c > 256) return !1;
    var i = e(a),
        j = 0;
    i.forEach(function () {
      j++;
    });
    var m = f(a, i),
        n = new b(function (a, b) {
      return pv.naturalOrder(a.count(), b.count());
    });
    n.push(m), h(n, l * c);

    for (var o = new b(function (a, b) {
      return pv.naturalOrder(a.count() * a.volume(), b.count() * b.volume());
    }); n.size();) {
      o.push(n.pop());
    }

    h(o, c - o.size());

    for (var p = new d(); o.size();) {
      p.push(o.pop());
    }

    return p;
  }

  var i = 5,
      j = 8 - i,
      k = 1e3,
      l = .75;
  return c.prototype = {
    volume: function volume(a) {
      var b = this;
      return (!b._volume || a) && (b._volume = (b.r2 - b.r1 + 1) * (b.g2 - b.g1 + 1) * (b.b2 - b.b1 + 1)), b._volume;
    },
    count: function count(b) {
      var c = this,
          d = c.histo;

      if (!c._count_set || b) {
        var e,
            f,
            g,
            h = 0;

        for (e = c.r1; e <= c.r2; e++) {
          for (f = c.g1; f <= c.g2; f++) {
            for (g = c.b1; g <= c.b2; g++) {
              index = a(e, f, g), h += d[index] || 0;
            }
          }
        }

        c._count = h, c._count_set = !0;
      }

      return c._count;
    },
    copy: function copy() {
      var a = this;
      return new c(a.r1, a.r2, a.g1, a.g2, a.b1, a.b2, a.histo);
    },
    avg: function avg(b) {
      var c = this,
          d = c.histo;

      if (!c._avg || b) {
        var e,
            f,
            g,
            h,
            j,
            k = 0,
            l = 1 << 8 - i,
            m = 0,
            n = 0,
            o = 0;

        for (f = c.r1; f <= c.r2; f++) {
          for (g = c.g1; g <= c.g2; g++) {
            for (h = c.b1; h <= c.b2; h++) {
              j = a(f, g, h), e = d[j] || 0, k += e, m += e * (f + .5) * l, n += e * (g + .5) * l, o += e * (h + .5) * l;
            }
          }
        }

        k ? c._avg = [~~(m / k), ~~(n / k), ~~(o / k)] : c._avg = [~~(l * (c.r1 + c.r2 + 1) / 2), ~~(l * (c.g1 + c.g2 + 1) / 2), ~~(l * (c.b1 + c.b2 + 1) / 2)];
      }

      return c._avg;
    },
    contains: function contains(a) {
      var b = this,
          c = a[0] >> j;
      return gval = a[1] >> j, bval = a[2] >> j, c >= b.r1 && c <= b.r2 && gval >= b.g1 && gval <= b.g2 && bval >= b.b1 && bval <= b.b2;
    }
  }, d.prototype = {
    push: function push(a) {
      this.vboxes.push({
        vbox: a,
        color: a.avg()
      });
    },
    palette: function palette() {
      return this.vboxes.map(function (a) {
        return a.color;
      });
    },
    size: function size() {
      return this.vboxes.size();
    },
    map: function map(a) {
      for (var b = this.vboxes, c = 0; c < b.size(); c++) {
        if (b.peek(c).vbox.contains(a)) return b.peek(c).color;
      }

      return this.nearest(a);
    },
    nearest: function nearest(a) {
      for (var b, c, d, e = this.vboxes, f = 0; f < e.size(); f++) {
        c = Math.sqrt(Math.pow(a[0] - e.peek(f).color[0], 2) + Math.pow(a[1] - e.peek(f).color[1], 2) + Math.pow(a[2] - e.peek(f).color[2], 2)), (b > c || void 0 === b) && (b = c, d = e.peek(f).color);
      }

      return d;
    },
    forcebw: function forcebw() {
      var a = this.vboxes;
      a.sort(function (a, b) {
        return pv.naturalOrder(pv.sum(a.color), pv.sum(b.color));
      });
      var b = a[0].color;
      b[0] < 5 && b[1] < 5 && b[2] < 5 && (a[0].color = [0, 0, 0]);
      var c = a.length - 1,
          d = a[c].color;
      d[0] > 251 && d[1] > 251 && d[2] > 251 && (a[c].color = [255, 255, 255]);
    }
  }, {
    quantize: h
  };
}();

module.exports = ColorThief;

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js ***!
  \*******************************************************************************************************/
/***/ (function(module) {

!function (t, e) {
   true ? module.exports = e() : 0;
}(this, function () {
  "use strict";

  var t = 1e3,
      e = 6e4,
      n = 36e5,
      r = "millisecond",
      i = "second",
      s = "minute",
      u = "hour",
      a = "day",
      o = "week",
      f = "month",
      h = "quarter",
      c = "year",
      d = "date",
      $ = "Invalid Date",
      l = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,
      y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
      M = {
    name: "en",
    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_")
  },
      m = function m(t, e, n) {
    var r = String(t);
    return !r || r.length >= e ? t : "" + Array(e + 1 - r.length).join(n) + t;
  },
      g = {
    s: m,
    z: function z(t) {
      var e = -t.utcOffset(),
          n = Math.abs(e),
          r = Math.floor(n / 60),
          i = n % 60;
      return (e <= 0 ? "+" : "-") + m(r, 2, "0") + ":" + m(i, 2, "0");
    },
    m: function t(e, n) {
      if (e.date() < n.date()) return -t(n, e);
      var r = 12 * (n.year() - e.year()) + (n.month() - e.month()),
          i = e.clone().add(r, f),
          s = n - i < 0,
          u = e.clone().add(r + (s ? -1 : 1), f);
      return +(-(r + (n - i) / (s ? i - u : u - i)) || 0);
    },
    a: function a(t) {
      return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
    },
    p: function p(t) {
      return {
        M: f,
        y: c,
        w: o,
        d: a,
        D: d,
        h: u,
        m: s,
        s: i,
        ms: r,
        Q: h
      }[t] || String(t || "").toLowerCase().replace(/s$/, "");
    },
    u: function u(t) {
      return void 0 === t;
    }
  },
      D = "en",
      v = {};

  v[D] = M;

  var p = function p(t) {
    return t instanceof _;
  },
      S = function S(t, e, n) {
    var r;
    if (!t) return D;
    if ("string" == typeof t) v[t] && (r = t), e && (v[t] = e, r = t);else {
      var i = t.name;
      v[i] = t, r = i;
    }
    return !n && r && (D = r), r || !n && D;
  },
      w = function w(t, e) {
    if (p(t)) return t.clone();
    var n = "object" == typeof e ? e : {};
    return n.date = t, n.args = arguments, new _(n);
  },
      O = g;

  O.l = S, O.i = p, O.w = function (t, e) {
    return w(t, {
      locale: e.$L,
      utc: e.$u,
      x: e.$x,
      $offset: e.$offset
    });
  };

  var _ = function () {
    function M(t) {
      this.$L = S(t.locale, null, !0), this.parse(t);
    }

    var m = M.prototype;
    return m.parse = function (t) {
      this.$d = function (t) {
        var e = t.date,
            n = t.utc;
        if (null === e) return new Date(NaN);
        if (O.u(e)) return new Date();
        if (e instanceof Date) return new Date(e);

        if ("string" == typeof e && !/Z$/i.test(e)) {
          var r = e.match(l);

          if (r) {
            var i = r[2] - 1 || 0,
                s = (r[7] || "0").substring(0, 3);
            return n ? new Date(Date.UTC(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s)) : new Date(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, s);
          }
        }

        return new Date(e);
      }(t), this.$x = t.x || {}, this.init();
    }, m.init = function () {
      var t = this.$d;
      this.$y = t.getFullYear(), this.$M = t.getMonth(), this.$D = t.getDate(), this.$W = t.getDay(), this.$H = t.getHours(), this.$m = t.getMinutes(), this.$s = t.getSeconds(), this.$ms = t.getMilliseconds();
    }, m.$utils = function () {
      return O;
    }, m.isValid = function () {
      return !(this.$d.toString() === $);
    }, m.isSame = function (t, e) {
      var n = w(t);
      return this.startOf(e) <= n && n <= this.endOf(e);
    }, m.isAfter = function (t, e) {
      return w(t) < this.startOf(e);
    }, m.isBefore = function (t, e) {
      return this.endOf(e) < w(t);
    }, m.$g = function (t, e, n) {
      return O.u(t) ? this[e] : this.set(n, t);
    }, m.unix = function () {
      return Math.floor(this.valueOf() / 1e3);
    }, m.valueOf = function () {
      return this.$d.getTime();
    }, m.startOf = function (t, e) {
      var n = this,
          r = !!O.u(e) || e,
          h = O.p(t),
          $ = function $(t, e) {
        var i = O.w(n.$u ? Date.UTC(n.$y, e, t) : new Date(n.$y, e, t), n);
        return r ? i : i.endOf(a);
      },
          l = function l(t, e) {
        return O.w(n.toDate()[t].apply(n.toDate("s"), (r ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e)), n);
      },
          y = this.$W,
          M = this.$M,
          m = this.$D,
          g = "set" + (this.$u ? "UTC" : "");

      switch (h) {
        case c:
          return r ? $(1, 0) : $(31, 11);

        case f:
          return r ? $(1, M) : $(0, M + 1);

        case o:
          var D = this.$locale().weekStart || 0,
              v = (y < D ? y + 7 : y) - D;
          return $(r ? m - v : m + (6 - v), M);

        case a:
        case d:
          return l(g + "Hours", 0);

        case u:
          return l(g + "Minutes", 1);

        case s:
          return l(g + "Seconds", 2);

        case i:
          return l(g + "Milliseconds", 3);

        default:
          return this.clone();
      }
    }, m.endOf = function (t) {
      return this.startOf(t, !1);
    }, m.$set = function (t, e) {
      var n,
          o = O.p(t),
          h = "set" + (this.$u ? "UTC" : ""),
          $ = (n = {}, n[a] = h + "Date", n[d] = h + "Date", n[f] = h + "Month", n[c] = h + "FullYear", n[u] = h + "Hours", n[s] = h + "Minutes", n[i] = h + "Seconds", n[r] = h + "Milliseconds", n)[o],
          l = o === a ? this.$D + (e - this.$W) : e;

      if (o === f || o === c) {
        var y = this.clone().set(d, 1);
        y.$d[$](l), y.init(), this.$d = y.set(d, Math.min(this.$D, y.daysInMonth())).$d;
      } else $ && this.$d[$](l);

      return this.init(), this;
    }, m.set = function (t, e) {
      return this.clone().$set(t, e);
    }, m.get = function (t) {
      return this[O.p(t)]();
    }, m.add = function (r, h) {
      var d,
          $ = this;
      r = Number(r);

      var l = O.p(h),
          y = function y(t) {
        var e = w($);
        return O.w(e.date(e.date() + Math.round(t * r)), $);
      };

      if (l === f) return this.set(f, this.$M + r);
      if (l === c) return this.set(c, this.$y + r);
      if (l === a) return y(1);
      if (l === o) return y(7);
      var M = (d = {}, d[s] = e, d[u] = n, d[i] = t, d)[l] || 1,
          m = this.$d.getTime() + r * M;
      return O.w(m, this);
    }, m.subtract = function (t, e) {
      return this.add(-1 * t, e);
    }, m.format = function (t) {
      var e = this,
          n = this.$locale();
      if (!this.isValid()) return n.invalidDate || $;

      var r = t || "YYYY-MM-DDTHH:mm:ssZ",
          i = O.z(this),
          s = this.$H,
          u = this.$m,
          a = this.$M,
          o = n.weekdays,
          f = n.months,
          h = function h(t, n, i, s) {
        return t && (t[n] || t(e, r)) || i[n].substr(0, s);
      },
          c = function c(t) {
        return O.s(s % 12 || 12, t, "0");
      },
          d = n.meridiem || function (t, e, n) {
        var r = t < 12 ? "AM" : "PM";
        return n ? r.toLowerCase() : r;
      },
          l = {
        YY: String(this.$y).slice(-2),
        YYYY: this.$y,
        M: a + 1,
        MM: O.s(a + 1, 2, "0"),
        MMM: h(n.monthsShort, a, f, 3),
        MMMM: h(f, a),
        D: this.$D,
        DD: O.s(this.$D, 2, "0"),
        d: String(this.$W),
        dd: h(n.weekdaysMin, this.$W, o, 2),
        ddd: h(n.weekdaysShort, this.$W, o, 3),
        dddd: o[this.$W],
        H: String(s),
        HH: O.s(s, 2, "0"),
        h: c(1),
        hh: c(2),
        a: d(s, u, !0),
        A: d(s, u, !1),
        m: String(u),
        mm: O.s(u, 2, "0"),
        s: String(this.$s),
        ss: O.s(this.$s, 2, "0"),
        SSS: O.s(this.$ms, 3, "0"),
        Z: i
      };

      return r.replace(y, function (t, e) {
        return e || l[t] || i.replace(":", "");
      });
    }, m.utcOffset = function () {
      return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
    }, m.diff = function (r, d, $) {
      var l,
          y = O.p(d),
          M = w(r),
          m = (M.utcOffset() - this.utcOffset()) * e,
          g = this - M,
          D = O.m(this, M);
      return D = (l = {}, l[c] = D / 12, l[f] = D, l[h] = D / 3, l[o] = (g - m) / 6048e5, l[a] = (g - m) / 864e5, l[u] = g / n, l[s] = g / e, l[i] = g / t, l)[y] || g, $ ? D : O.a(D);
    }, m.daysInMonth = function () {
      return this.endOf(f).$D;
    }, m.$locale = function () {
      return v[this.$L];
    }, m.locale = function (t, e) {
      if (!t) return this.$L;
      var n = this.clone(),
          r = S(t, e, !0);
      return r && (n.$L = r), n;
    }, m.clone = function () {
      return O.w(this.$d, this);
    }, m.toDate = function () {
      return new Date(this.valueOf());
    }, m.toJSON = function () {
      return this.isValid() ? this.toISOString() : null;
    }, m.toISOString = function () {
      return this.$d.toISOString();
    }, m.toString = function () {
      return this.$d.toUTCString();
    }, M;
  }(),
      b = _.prototype;

  return w.prototype = b, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", f], ["$y", c], ["$D", d]].forEach(function (t) {
    b[t[1]] = function (e) {
      return this.$g(e, t[0], t[1]);
    };
  }), w.extend = function (t, e) {
    return t.$i || (t(e, _, w), t.$i = !0), w;
  }, w.locale = S, w.isDayjs = p, w.unix = function (t) {
    return w(1e3 * t);
  }, w.en = v[D], w.Ls = v, w.p = {}, w;
});

/***/ }),

/***/ "./node_modules/dayjs/plugin/localizedFormat.js":
/*!******************************************************!*\
  !*** ./node_modules/dayjs/plugin/localizedFormat.js ***!
  \******************************************************/
/***/ (function(module) {

!function (e, t) {
   true ? module.exports = t() : 0;
}(this, function () {
  "use strict";

  var e = {
    LTS: "h:mm:ss A",
    LT: "h:mm A",
    L: "MM/DD/YYYY",
    LL: "MMMM D, YYYY",
    LLL: "MMMM D, YYYY h:mm A",
    LLLL: "dddd, MMMM D, YYYY h:mm A"
  };
  return function (t, o, n) {
    var r = o.prototype,
        i = r.format;
    n.en.formats = e, r.format = function (t) {
      void 0 === t && (t = "YYYY-MM-DDTHH:mm:ssZ");

      var o = this.$locale().formats,
          n = function (t, o) {
        return t.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function (t, n, r) {
          var i = r && r.toUpperCase();
          return n || o[r] || e[r] || o[i].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function (e, t, o) {
            return t || o.slice(1);
          });
        });
      }(t, void 0 === o ? {} : o);

      return i.call(this, n);
    };
  };
});

/***/ }),

/***/ "./node_modules/dayjs/plugin/relativeTime.js":
/*!***************************************************!*\
  !*** ./node_modules/dayjs/plugin/relativeTime.js ***!
  \***************************************************/
/***/ (function(module) {

!function (r, e) {
   true ? module.exports = e() : 0;
}(this, function () {
  "use strict";

  return function (r, e, t) {
    r = r || {};
    var n = e.prototype,
        o = {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    };

    function i(r, e, t, o) {
      return n.fromToBase(r, e, t, o);
    }

    t.en.relativeTime = o, n.fromToBase = function (e, n, i, d, u) {
      for (var f, a, s, l = i.$locale().relativeTime || o, h = r.thresholds || [{
        l: "s",
        r: 44,
        d: "second"
      }, {
        l: "m",
        r: 89
      }, {
        l: "mm",
        r: 44,
        d: "minute"
      }, {
        l: "h",
        r: 89
      }, {
        l: "hh",
        r: 21,
        d: "hour"
      }, {
        l: "d",
        r: 35
      }, {
        l: "dd",
        r: 25,
        d: "day"
      }, {
        l: "M",
        r: 45
      }, {
        l: "MM",
        r: 10,
        d: "month"
      }, {
        l: "y",
        r: 17
      }, {
        l: "yy",
        d: "year"
      }], m = h.length, c = 0; c < m; c += 1) {
        var y = h[c];
        y.d && (f = d ? t(e).diff(i, y.d, !0) : i.diff(e, y.d, !0));
        var p = (r.rounding || Math.round)(Math.abs(f));

        if (s = f > 0, p <= y.r || !y.r) {
          p <= 1 && c > 0 && (y = h[c - 1]);
          var v = l[y.l];
          u && (p = u("" + p)), a = "string" == typeof v ? v.replace("%d", p) : v(p, n, y.l, s);
          break;
        }
      }

      if (n) return a;
      var M = s ? l.future : l.past;
      return "function" == typeof M ? M(a) : M.replace("%s", a);
    }, n.to = function (r, e) {
      return i(r, e, this, !0);
    }, n.from = function (r, e) {
      return i(r, e, this);
    };

    var d = function d(r) {
      return r.$u ? t.utc() : t();
    };

    n.toNow = function (r) {
      return this.to(d(this), r);
    }, n.fromNow = function (r) {
      return this.from(d(this), r);
    };
  };
});

/***/ }),

/***/ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js":
/*!******************************************************************!*\
  !*** ./node_modules/expose-loader/dist/runtime/getGlobalThis.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
 // eslint-disable-next-line func-names

module.exports = function () {
  if (typeof globalThis === "object") {
    return globalThis;
  }

  var g;

  try {
    // This works if eval is allowed (see CSP)
    // eslint-disable-next-line no-new-func
    g = this || new Function("return this")();
  } catch (e) {
    // This works if the window reference is available
    if (typeof window === "object") {
      return window;
    } // This works if the self reference is available


    if (typeof self === "object") {
      return self;
    } // This works if the global reference is available


    if (typeof __webpack_require__.g !== "undefined") {
      return __webpack_require__.g;
    }
  }

  return g;
}();

/***/ }),

/***/ "./node_modules/focus-trap/dist/focus-trap.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/focus-trap/dist/focus-trap.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFocusTrap": () => (/* binding */ createFocusTrap)
/* harmony export */ });
/* harmony import */ var tabbable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tabbable */ "./node_modules/tabbable/dist/index.esm.js");
/*!
* focus-trap 6.7.2
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var activeFocusTraps = function () {
  var trapQueue = [];
  return {
    activateTrap: function activateTrap(trap) {
      if (trapQueue.length > 0) {
        var activeTrap = trapQueue[trapQueue.length - 1];

        if (activeTrap !== trap) {
          activeTrap.pause();
        }
      }

      var trapIndex = trapQueue.indexOf(trap);

      if (trapIndex === -1) {
        trapQueue.push(trap);
      } else {
        // move this existing trap to the front of the queue
        trapQueue.splice(trapIndex, 1);
        trapQueue.push(trap);
      }
    },
    deactivateTrap: function deactivateTrap(trap) {
      var trapIndex = trapQueue.indexOf(trap);

      if (trapIndex !== -1) {
        trapQueue.splice(trapIndex, 1);
      }

      if (trapQueue.length > 0) {
        trapQueue[trapQueue.length - 1].unpause();
      }
    }
  };
}();

var isSelectableInput = function isSelectableInput(node) {
  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
};

var isEscapeEvent = function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
};

var isTabEvent = function isTabEvent(e) {
  return e.key === 'Tab' || e.keyCode === 9;
};

var delay = function delay(fn) {
  return setTimeout(fn, 0);
}; // Array.find/findIndex() are not supported on IE; this replicates enough
//  of Array.findIndex() for our needs


var findIndex = function findIndex(arr, fn) {
  var idx = -1;
  arr.every(function (value, i) {
    if (fn(value)) {
      idx = i;
      return false; // break
    }

    return true; // next
  });
  return idx;
};
/**
 * Get an option's value when it could be a plain value, or a handler that provides
 *  the value.
 * @param {*} value Option's value to check.
 * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.
 * @returns {*} The `value`, or the handler's returned value.
 */


var valueOrHandler = function valueOrHandler(value) {
  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }

  return typeof value === 'function' ? value.apply(void 0, params) : value;
};

var getActualTarget = function getActualTarget(event) {
  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the
  //  shadow host. However, event.target.composedPath() will be an array of
  //  nodes "clicked" from inner-most (the actual element inside the shadow) to
  //  outer-most (the host HTML document). If we have access to composedPath(),
  //  then use its first element; otherwise, fall back to event.target (and
  //  this only works for an _open_ shadow DOM; otherwise,
  //  composedPath()[0] === event.target always).
  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;
};

var createFocusTrap = function createFocusTrap(elements, userOptions) {
  // SSR: a live trap shouldn't be created in this type of environment so this
  //  should be safe code to execute if the `document` option isn't specified
  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;

  var config = _objectSpread2({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true,
    delayInitialFocus: true
  }, userOptions);

  var state = {
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying the first and last tabbable nodes in all containers/groups in
    //  the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{ container: HTMLElement, firstTabbableNode: HTMLElement|null, lastTabbableNode: HTMLElement|null }>}
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: undefined
  };
  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later

  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {
    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];
  };

  var containersContain = function containersContain(element) {
    return !!(element && state.containers.some(function (container) {
      return container.contains(element);
    }));
  };
  /**
   * Gets the node for the given option, which is expected to be an option that
   *  can be either a DOM node, a string that is a selector to get a node, `false`
   *  (if a node is explicitly NOT given), or a function that returns any of these
   *  values.
   * @param {string} optionName
   * @returns {undefined | false | HTMLElement | SVGElement} Returns
   *  `undefined` if the option is not specified; `false` if the option
   *  resolved to `false` (node explicitly not given); otherwise, the resolved
   *  DOM node.
   * @throws {Error} If the option is set, not `false`, and is not, or does not
   *  resolve to a node.
   */


  var getNodeForOption = function getNodeForOption(optionName) {
    var optionValue = config[optionName];

    if (typeof optionValue === 'function') {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }

      optionValue = optionValue.apply(void 0, params);
    }

    if (!optionValue) {
      if (optionValue === undefined || optionValue === false) {
        return optionValue;
      } // else, empty string (invalid), null (invalid), 0 (invalid)


      throw new Error("`".concat(optionName, "` was specified but was not a node, or did not return a node"));
    }

    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point

    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue); // resolve to node, or null if fails

      if (!node) {
        throw new Error("`".concat(optionName, "` as selector refers to no known node"));
      }
    }

    return node;
  };

  var getInitialFocusNode = function getInitialFocusNode() {
    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all

    if (node === false) {
      return false;
    }

    if (node === undefined) {
      // option not specified: use fallback options
      if (containersContain(doc.activeElement)) {
        node = doc.activeElement;
      } else {
        var firstTabbableGroup = state.tabbableGroups[0];
        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)

        node = firstTabbableNode || getNodeForOption('fallbackFocus');
      }
    }

    if (!node) {
      throw new Error('Your focus-trap needs to have at least one focusable element');
    }

    return node;
  };

  var updateTabbableNodes = function updateTabbableNodes() {
    state.tabbableGroups = state.containers.map(function (container) {
      var tabbableNodes = (0,tabbable__WEBPACK_IMPORTED_MODULE_0__.tabbable)(container);

      if (tabbableNodes.length > 0) {
        return {
          container: container,
          firstTabbableNode: tabbableNodes[0],
          lastTabbableNode: tabbableNodes[tabbableNodes.length - 1]
        };
      }

      return undefined;
    }).filter(function (group) {
      return !!group;
    }); // remove groups with no tabbable nodes
    // throw if no groups have tabbable nodes and we don't have a fallback focus node either

    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option
    ) {
      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');
    }
  };

  var tryFocus = function tryFocus(node) {
    if (node === false) {
      return;
    }

    if (node === doc.activeElement) {
      return;
    }

    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }

    node.focus({
      preventScroll: !!config.preventScroll
    });
    state.mostRecentlyFocusedNode = node;

    if (isSelectableInput(node)) {
      node.select();
    }
  };

  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {
    var node = getNodeForOption('setReturnFocus', previousActiveElement);
    return node ? node : node === false ? false : previousActiveElement;
  }; // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.


  var checkPointerDown = function checkPointerDown(e) {
    var target = getActualTarget(e);

    if (containersContain(target)) {
      // allow the click since it ocurred inside the trap
      return;
    }

    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      // immediately deactivate the trap
      trap.deactivate({
        // if, on deactivation, we should return focus to the node originally-focused
        //  when the trap was activated (or the configured `setReturnFocus` node),
        //  then assume it's also OK to return focus to the outside node that was
        //  just clicked, causing deactivation, as long as that node is focusable;
        //  if it isn't focusable, then return focus to the original node focused
        //  on activation (or the configured `setReturnFocus` node)
        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
        //  which will result in the outside click setting focus to the node
        //  that was clicked, whether it's focusable or not; by setting
        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
        //  on activation (or the configured `setReturnFocus` node)
        returnFocus: config.returnFocusOnDeactivate && !(0,tabbable__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target)
      });
      return;
    } // This is needed for mobile devices.
    // (If we'll only let `click` events through,
    // then on mobile they will be blocked anyways if `touchstart` is blocked.)


    if (valueOrHandler(config.allowOutsideClick, e)) {
      // allow the click outside the trap to take place
      return;
    } // otherwise, prevent the click


    e.preventDefault();
  }; // In case focus escapes the trap for some strange reason, pull it back in.


  var checkFocusIn = function checkFocusIn(e) {
    var target = getActualTarget(e);
    var targetContained = containersContain(target); // In Firefox when you Tab out of an iframe the Document is briefly focused.

    if (targetContained || target instanceof Document) {
      if (targetContained) {
        state.mostRecentlyFocusedNode = target;
      }
    } else {
      // escaped! pull it back in to where it just left
      e.stopImmediatePropagation();
      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
    }
  }; // Hijack Tab events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.


  var checkTab = function checkTab(e) {
    var target = getActualTarget(e);
    updateTabbableNodes();
    var destinationNode = null;

    if (state.tabbableGroups.length > 0) {
      // make sure the target is actually contained in a group
      // NOTE: the target may also be the container itself if it's focusable
      //  with tabIndex='-1' and was given initial focus
      var containerIndex = findIndex(state.tabbableGroups, function (_ref) {
        var container = _ref.container;
        return container.contains(target);
      });

      if (containerIndex < 0) {
        // target not found in any group: quite possible focus has escaped the trap,
        //  so bring it back in to...
        if (e.shiftKey) {
          // ...the last node in the last group
          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;
        } else {
          // ...the first node in the first group
          destinationNode = state.tabbableGroups[0].firstTabbableNode;
        }
      } else if (e.shiftKey) {
        // REVERSE
        // is the target the first tabbable node in a group?
        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {
          var firstTabbableNode = _ref2.firstTabbableNode;
          return target === firstTabbableNode;
        });

        if (startOfGroupIndex < 0 && (state.tabbableGroups[containerIndex].container === target || (0,tabbable__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,tabbable__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target))) {
          // an exception case where the target is either the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus), in which
          //  case, we should handle shift+tab as if focus were on the container's
          //  first tabbable node, and go to the last tabbable node of the LAST group
          startOfGroupIndex = containerIndex;
        }

        if (startOfGroupIndex >= 0) {
          // YES: then shift+tab should go to the last tabbable node in the
          //  previous group (and wrap around to the last tabbable node of
          //  the LAST group if it's the first tabbable node of the FIRST group)
          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;
          var destinationGroup = state.tabbableGroups[destinationGroupIndex];
          destinationNode = destinationGroup.lastTabbableNode;
        }
      } else {
        // FORWARD
        // is the target the last tabbable node in a group?
        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {
          var lastTabbableNode = _ref3.lastTabbableNode;
          return target === lastTabbableNode;
        });

        if (lastOfGroupIndex < 0 && (state.tabbableGroups[containerIndex].container === target || (0,tabbable__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,tabbable__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target))) {
          // an exception case where the target is the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus), in which
          //  case, we should handle tab as if focus were on the container's
          //  last tabbable node, and go to the first tabbable node of the FIRST group
          lastOfGroupIndex = containerIndex;
        }

        if (lastOfGroupIndex >= 0) {
          // YES: then tab should go to the first tabbable node in the next
          //  group (and wrap around to the first tabbable node of the FIRST
          //  group if it's the last tabbable node of the LAST group)
          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;

          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];
          destinationNode = _destinationGroup.firstTabbableNode;
        }
      }
    } else {
      // NOTE: the fallbackFocus option does not support returning false to opt-out
      destinationNode = getNodeForOption('fallbackFocus');
    }

    if (destinationNode) {
      e.preventDefault();
      tryFocus(destinationNode);
    } // else, let the browser take care of [shift+]tab and move the focus

  };

  var checkKey = function checkKey(e) {
    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates, e) !== false) {
      e.preventDefault();
      trap.deactivate();
      return;
    }

    if (isTabEvent(e)) {
      checkTab(e);
      return;
    }
  };

  var checkClick = function checkClick(e) {
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      return;
    }

    var target = getActualTarget(e);

    if (containersContain(target)) {
      return;
    }

    if (valueOrHandler(config.allowOutsideClick, e)) {
      return;
    }

    e.preventDefault();
    e.stopImmediatePropagation();
  }; //
  // EVENT LISTENERS
  //


  var addListeners = function addListeners() {
    if (!state.active) {
      return;
    } // There can be only one listening focus trap at a time


    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.

    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {
      tryFocus(getInitialFocusNode());
    }) : tryFocus(getInitialFocusNode());
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('touchstart', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('click', checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener('keydown', checkKey, {
      capture: true,
      passive: false
    });
    return trap;
  };

  var removeListeners = function removeListeners() {
    if (!state.active) {
      return;
    }

    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);
    return trap;
  }; //
  // TRAP DEFINITION
  //


  trap = {
    activate: function activate(activateOptions) {
      if (state.active) {
        return this;
      }

      var onActivate = getOption(activateOptions, 'onActivate');
      var onPostActivate = getOption(activateOptions, 'onPostActivate');
      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');

      if (!checkCanFocusTrap) {
        updateTabbableNodes();
      }

      state.active = true;
      state.paused = false;
      state.nodeFocusedBeforeActivation = doc.activeElement;

      if (onActivate) {
        onActivate();
      }

      var finishActivation = function finishActivation() {
        if (checkCanFocusTrap) {
          updateTabbableNodes();
        }

        addListeners();

        if (onPostActivate) {
          onPostActivate();
        }
      };

      if (checkCanFocusTrap) {
        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);
        return this;
      }

      finishActivation();
      return this;
    },
    deactivate: function deactivate(deactivateOptions) {
      if (!state.active) {
        return this;
      }

      clearTimeout(state.delayInitialFocusTimer); // noop if undefined

      state.delayInitialFocusTimer = undefined;
      removeListeners();
      state.active = false;
      state.paused = false;
      activeFocusTraps.deactivateTrap(trap);
      var onDeactivate = getOption(deactivateOptions, 'onDeactivate');
      var onPostDeactivate = getOption(deactivateOptions, 'onPostDeactivate');
      var checkCanReturnFocus = getOption(deactivateOptions, 'checkCanReturnFocus');

      if (onDeactivate) {
        onDeactivate();
      }

      var returnFocus = getOption(deactivateOptions, 'returnFocus', 'returnFocusOnDeactivate');

      var finishDeactivation = function finishDeactivation() {
        delay(function () {
          if (returnFocus) {
            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
          }

          if (onPostDeactivate) {
            onPostDeactivate();
          }
        });
      };

      if (returnFocus && checkCanReturnFocus) {
        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);
        return this;
      }

      finishDeactivation();
      return this;
    },
    pause: function pause() {
      if (state.paused || !state.active) {
        return this;
      }

      state.paused = true;
      removeListeners();
      return this;
    },
    unpause: function unpause() {
      if (!state.paused || !state.active) {
        return this;
      }

      state.paused = false;
      updateTabbableNodes();
      addListeners();
      return this;
    },
    updateContainerElements: function updateContainerElements(containerElements) {
      var elementsAsArray = [].concat(containerElements).filter(Boolean);
      state.containers = elementsAsArray.map(function (element) {
        return typeof element === 'string' ? doc.querySelector(element) : element;
      });

      if (state.active) {
        updateTabbableNodes();
      }

      return this;
    }
  }; // initialize container elements

  trap.updateContainerElements(elements);
  return trap;
};



/***/ }),

/***/ "./node_modules/jquery.hotkeys/jquery.hotkeys.js":
/*!*******************************************************!*\
  !*** ./node_modules/jquery.hotkeys/jquery.hotkeys.js ***!
  \*******************************************************/
/***/ (function() {

/*jslint browser: true*/

/*jslint jquery: true*/

/*
 * jQuery Hotkeys Plugin
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Based upon the plugin by Tzury Bar Yochay:
 * https://github.com/tzuryby/jquery.hotkeys
 *
 * Original idea by:
 * Binny V A, http://www.openjs.com/scripts/events/keyboard_shortcuts/
 */

/*
 * One small change is: now keys are passed by object { keys: '...' }
 * Might be useful, when you want to pass some other data to your handler
 */
(function (jQuery) {
  jQuery.hotkeys = {
    version: "0.2.0",
    specialKeys: {
      8: "backspace",
      9: "tab",
      10: "return",
      13: "return",
      16: "shift",
      17: "ctrl",
      18: "alt",
      19: "pause",
      20: "capslock",
      27: "esc",
      32: "space",
      33: "pageup",
      34: "pagedown",
      35: "end",
      36: "home",
      37: "left",
      38: "up",
      39: "right",
      40: "down",
      45: "insert",
      46: "del",
      59: ";",
      61: "=",
      96: "0",
      97: "1",
      98: "2",
      99: "3",
      100: "4",
      101: "5",
      102: "6",
      103: "7",
      104: "8",
      105: "9",
      106: "*",
      107: "+",
      109: "-",
      110: ".",
      111: "/",
      112: "f1",
      113: "f2",
      114: "f3",
      115: "f4",
      116: "f5",
      117: "f6",
      118: "f7",
      119: "f8",
      120: "f9",
      121: "f10",
      122: "f11",
      123: "f12",
      144: "numlock",
      145: "scroll",
      173: "-",
      186: ";",
      187: "=",
      188: ",",
      189: "-",
      190: ".",
      191: "/",
      192: "`",
      219: "[",
      220: "\\",
      221: "]",
      222: "'"
    },
    shiftNums: {
      "`": "~",
      "1": "!",
      "2": "@",
      "3": "#",
      "4": "$",
      "5": "%",
      "6": "^",
      "7": "&",
      "8": "*",
      "9": "(",
      "0": ")",
      "-": "_",
      "=": "+",
      ";": ": ",
      "'": "\"",
      ",": "<",
      ".": ">",
      "/": "?",
      "\\": "|"
    },
    // excludes: button, checkbox, file, hidden, image, password, radio, reset, search, submit, url
    textAcceptingInputTypes: ["text", "password", "number", "email", "url", "range", "date", "month", "week", "time", "datetime", "datetime-local", "search", "color", "tel"],
    // default input types not to bind to unless bound directly
    textInputTypes: /textarea|input|select/i,
    options: {
      filterInputAcceptingElements: true,
      filterTextInputs: true,
      filterContentEditable: true
    }
  };

  function keyHandler(handleObj) {
    if (typeof handleObj.data === "string") {
      handleObj.data = {
        keys: handleObj.data
      };
    } // Only care when a possible input has been specified


    if (!handleObj.data || !handleObj.data.keys || typeof handleObj.data.keys !== "string") {
      return;
    }

    var origHandler = handleObj.handler,
        keys = handleObj.data.keys.toLowerCase().split(" ");

    handleObj.handler = function (event) {
      //      Don't fire in text-accepting inputs that we didn't directly bind to
      if (this !== event.target && (jQuery.hotkeys.options.filterInputAcceptingElements && jQuery.hotkeys.textInputTypes.test(event.target.nodeName) || jQuery.hotkeys.options.filterContentEditable && jQuery(event.target).attr('contenteditable') || jQuery.hotkeys.options.filterTextInputs && jQuery.inArray(event.target.type, jQuery.hotkeys.textAcceptingInputTypes) > -1)) {
        return;
      }

      var special = event.type !== "keypress" && jQuery.hotkeys.specialKeys[event.which],
          character = String.fromCharCode(event.which).toLowerCase(),
          modif = "",
          possible = {};
      jQuery.each(["alt", "ctrl", "shift"], function (index, specialKey) {
        if (event[specialKey + 'Key'] && special !== specialKey) {
          modif += specialKey + '+';
        }
      }); // metaKey is triggered off ctrlKey erronously

      if (event.metaKey && !event.ctrlKey && special !== "meta") {
        modif += "meta+";
      }

      if (event.metaKey && special !== "meta" && modif.indexOf("alt+ctrl+shift+") > -1) {
        modif = modif.replace("alt+ctrl+shift+", "hyper+");
      }

      if (special) {
        possible[modif + special] = true;
      } else {
        possible[modif + character] = true;
        possible[modif + jQuery.hotkeys.shiftNums[character]] = true; // "$" can be triggered as "Shift+4" or "Shift+$" or just "$"

        if (modif === "shift+") {
          possible[jQuery.hotkeys.shiftNums[character]] = true;
        }
      }

      for (var i = 0, l = keys.length; i < l; i++) {
        if (possible[keys[i]]) {
          return origHandler.apply(this, arguments);
        }
      }
    };
  }

  jQuery.each(["keydown", "keyup", "keypress"], function () {
    jQuery.event.special[this] = {
      add: keyHandler
    };
  });
})(jQuery || this.jQuery || window.jQuery);

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/jquery/dist/jquery.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/jquery/dist/jquery.js ***!
  \**********************************************************************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
(function (global, factory) {
  "use strict";

  if ( true && typeof module.exports === "object") {
    // For CommonJS and CommonJS-like environments where a proper `window`
    // is present, execute the factory and get jQuery.
    // For environments that do not have a `window` with a `document`
    // (such as Node.js), expose a factory as module.exports.
    // This accentuates the need for the creation of a real `window`.
    // e.g. var jQuery = require("jquery")(window);
    // See ticket #14549 for more info.
    module.exports = global.document ? factory(global, true) : function (w) {
      if (!w.document) {
        throw new Error("jQuery requires a window with a document");
      }

      return factory(w);
    };
  } else {
    factory(global);
  } // Pass this if window is not defined yet

})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {
  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
  // enough that all such attempts are guarded in a try block.
  "use strict";

  var arr = [];
  var getProto = Object.getPrototypeOf;
  var _slice = arr.slice;
  var flat = arr.flat ? function (array) {
    return arr.flat.call(array);
  } : function (array) {
    return arr.concat.apply([], array);
  };
  var push = arr.push;
  var indexOf = arr.indexOf;
  var class2type = {};
  var toString = class2type.toString;
  var hasOwn = class2type.hasOwnProperty;
  var fnToString = hasOwn.toString;
  var ObjectFunctionString = fnToString.call(Object);
  var support = {};

  var isFunction = function isFunction(obj) {
    // Support: Chrome <=57, Firefox <=52
    // In some browsers, typeof returns "function" for HTML <object> elements
    // (i.e., `typeof document.createElement( "object" ) === "function"`).
    // We don't want to classify *any* DOM node as a function.
    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
    // Plus for old WebKit, typeof returns "function" for HTML collections
    // (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
    return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
  };

  var isWindow = function isWindow(obj) {
    return obj != null && obj === obj.window;
  };

  var document = window.document;
  var preservedScriptAttributes = {
    type: true,
    src: true,
    nonce: true,
    noModule: true
  };

  function DOMEval(code, node, doc) {
    doc = doc || document;
    var i,
        val,
        script = doc.createElement("script");
    script.text = code;

    if (node) {
      for (i in preservedScriptAttributes) {
        // Support: Firefox 64+, Edge 18+
        // Some browsers don't support the "nonce" property on scripts.
        // On the other hand, just using `getAttribute` is not enough as
        // the `nonce` attribute is reset to an empty string whenever it
        // becomes browsing-context connected.
        // See https://github.com/whatwg/html/issues/2369
        // See https://html.spec.whatwg.org/#nonce-attributes
        // The `node.getAttribute` check was added for the sake of
        // `jQuery.globalEval` so that it can fake a nonce-containing node
        // via an object.
        val = node[i] || node.getAttribute && node.getAttribute(i);

        if (val) {
          script.setAttribute(i, val);
        }
      }
    }

    doc.head.appendChild(script).parentNode.removeChild(script);
  }

  function toType(obj) {
    if (obj == null) {
      return obj + "";
    } // Support: Android <=2.3 only (functionish RegExp)


    return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
  }
  /* global Symbol */
  // Defining this global in .eslintrc.json would create a danger of using the global
  // unguarded in another place, it seems safer to define global only for this module


  var version = "3.6.0",
      // Define a local copy of jQuery
  jQuery = function jQuery(selector, context) {
    // The jQuery object is actually just the init constructor 'enhanced'
    // Need init if jQuery is called (just allow error to be thrown if not included)
    return new jQuery.fn.init(selector, context);
  };

  jQuery.fn = jQuery.prototype = {
    // The current version of jQuery being used
    jquery: version,
    constructor: jQuery,
    // The default length of a jQuery object is 0
    length: 0,
    toArray: function toArray() {
      return _slice.call(this);
    },
    // Get the Nth element in the matched element set OR
    // Get the whole matched element set as a clean array
    get: function get(num) {
      // Return all the elements in a clean array
      if (num == null) {
        return _slice.call(this);
      } // Return just the one element from the set


      return num < 0 ? this[num + this.length] : this[num];
    },
    // Take an array of elements and push it onto the stack
    // (returning the new matched element set)
    pushStack: function pushStack(elems) {
      // Build a new jQuery matched element set
      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)

      ret.prevObject = this; // Return the newly-formed element set

      return ret;
    },
    // Execute a callback for every element in the matched set.
    each: function each(callback) {
      return jQuery.each(this, callback);
    },
    map: function map(callback) {
      return this.pushStack(jQuery.map(this, function (elem, i) {
        return callback.call(elem, i, elem);
      }));
    },
    slice: function slice() {
      return this.pushStack(_slice.apply(this, arguments));
    },
    first: function first() {
      return this.eq(0);
    },
    last: function last() {
      return this.eq(-1);
    },
    even: function even() {
      return this.pushStack(jQuery.grep(this, function (_elem, i) {
        return (i + 1) % 2;
      }));
    },
    odd: function odd() {
      return this.pushStack(jQuery.grep(this, function (_elem, i) {
        return i % 2;
      }));
    },
    eq: function eq(i) {
      var len = this.length,
          j = +i + (i < 0 ? len : 0);
      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
    },
    end: function end() {
      return this.prevObject || this.constructor();
    },
    // For internal use only.
    // Behaves like an Array's method, not like a jQuery method.
    push: push,
    sort: arr.sort,
    splice: arr.splice
  };

  jQuery.extend = jQuery.fn.extend = function () {
    var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false; // Handle a deep copy situation

    if (typeof target === "boolean") {
      deep = target; // Skip the boolean and the target

      target = arguments[i] || {};
      i++;
    } // Handle case when target is a string or something (possible in deep copy)


    if (typeof target !== "object" && !isFunction(target)) {
      target = {};
    } // Extend jQuery itself if only one argument is passed


    if (i === length) {
      target = this;
      i--;
    }

    for (; i < length; i++) {
      // Only deal with non-null/undefined values
      if ((options = arguments[i]) != null) {
        // Extend the base object
        for (name in options) {
          copy = options[name]; // Prevent Object.prototype pollution
          // Prevent never-ending loop

          if (name === "__proto__" || target === copy) {
            continue;
          } // Recurse if we're merging plain objects or arrays


          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
            src = target[name]; // Ensure proper type for the source value

            if (copyIsArray && !Array.isArray(src)) {
              clone = [];
            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {
              clone = {};
            } else {
              clone = src;
            }

            copyIsArray = false; // Never move original objects, clone them

            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    } // Return the modified object


    return target;
  };

  jQuery.extend({
    // Unique for each copy of jQuery on the page
    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
    // Assume jQuery is ready without the ready module
    isReady: true,
    error: function error(msg) {
      throw new Error(msg);
    },
    noop: function noop() {},
    isPlainObject: function isPlainObject(obj) {
      var proto, Ctor; // Detect obvious negatives
      // Use toString instead of jQuery.type to catch host objects

      if (!obj || toString.call(obj) !== "[object Object]") {
        return false;
      }

      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain

      if (!proto) {
        return true;
      } // Objects with prototype are plain iff they were constructed by a global Object function


      Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
      return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
    },
    isEmptyObject: function isEmptyObject(obj) {
      var name;

      for (name in obj) {
        return false;
      }

      return true;
    },
    // Evaluates a script in a provided context; falls back to the global one
    // if not specified.
    globalEval: function globalEval(code, options, doc) {
      DOMEval(code, {
        nonce: options && options.nonce
      }, doc);
    },
    each: function each(obj, callback) {
      var length,
          i = 0;

      if (isArrayLike(obj)) {
        length = obj.length;

        for (; i < length; i++) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      } else {
        for (i in obj) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      }

      return obj;
    },
    // results is for internal usage only
    makeArray: function makeArray(arr, results) {
      var ret = results || [];

      if (arr != null) {
        if (isArrayLike(Object(arr))) {
          jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
        } else {
          push.call(ret, arr);
        }
      }

      return ret;
    },
    inArray: function inArray(elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },
    // Support: Android <=4.0 only, PhantomJS 1 only
    // push.apply(_, arraylike) throws on ancient WebKit
    merge: function merge(first, second) {
      var len = +second.length,
          j = 0,
          i = first.length;

      for (; j < len; j++) {
        first[i++] = second[j];
      }

      first.length = i;
      return first;
    },
    grep: function grep(elems, callback, invert) {
      var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert; // Go through the array, only saving the items
      // that pass the validator function

      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);

        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }

      return matches;
    },
    // arg is for internal usage only
    map: function map(elems, callback, arg) {
      var length,
          value,
          i = 0,
          ret = []; // Go through the array, translating each of the items to their new values

      if (isArrayLike(elems)) {
        length = elems.length;

        for (; i < length; i++) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        } // Go through every key on the object,

      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        }
      } // Flatten any nested arrays


      return flat(ret);
    },
    // A global GUID counter for objects
    guid: 1,
    // jQuery.support is not used in Core but other projects attach their
    // properties to it so it needs to exist.
    support: support
  });

  if (typeof Symbol === "function") {
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
  } // Populate the class2type map


  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (_i, name) {
    class2type["[object " + name + "]"] = name.toLowerCase();
  });

  function isArrayLike(obj) {
    // Support: real iOS 8.2 only (not reproducible in simulator)
    // `in` check used to prevent JIT error (gh-2145)
    // hasOwn isn't used here due to false negatives
    // regarding Nodelist length in IE
    var length = !!obj && "length" in obj && obj.length,
        type = toType(obj);

    if (isFunction(obj) || isWindow(obj)) {
      return false;
    }

    return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
  }

  var Sizzle =
  /*!
   * Sizzle CSS Selector Engine v2.3.6
   * https://sizzlejs.com/
   *
   * Copyright JS Foundation and other contributors
   * Released under the MIT license
   * https://js.foundation/
   *
   * Date: 2021-02-16
   */
  function (window) {
    var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        // Local document vars
    setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        // Instance-specific data
    expando = "sizzle" + 1 * new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        nonnativeSelectorCache = createCache(),
        sortOrder = function sortOrder(a, b) {
      if (a === b) {
        hasDuplicate = true;
      }

      return 0;
    },
        // Instance methods
    hasOwn = {}.hasOwnProperty,
        arr = [],
        pop = arr.pop,
        pushNative = arr.push,
        push = arr.push,
        slice = arr.slice,
        // Use a stripped-down indexOf as it's faster than native
    // https://jsperf.com/thor-indexof-vs-for/5
    indexOf = function indexOf(list, elem) {
      var i = 0,
          len = list.length;

      for (; i < len; i++) {
        if (list[i] === elem) {
          return i;
        }
      }

      return -1;
    },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" + "ismap|loop|multiple|open|readonly|required|scoped",
        // Regular expressions
    // http://www.w3.org/TR/css3-selectors/#whitespace
    whitespace = "[\\x20\\t\\r\\n\\f]",
        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
    identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
    attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
    "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]
    // or strings [capture 3 or capture 4]"
    "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + identifier + ")(?:\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
    // 1. quoted (capture 3; capture 4 or capture 5)
    "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + // 2. simple (capture 6)
    "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)
    ".*" + ")\\)|)",
        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
    rwhitespace = new RegExp(whitespace + "+", "g"),
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rdescend = new RegExp(whitespace + "|>"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
      "ID": new RegExp("^#(" + identifier + ")"),
      "CLASS": new RegExp("^\\.(" + identifier + ")"),
      "TAG": new RegExp("^(" + identifier + "|[*])"),
      "ATTR": new RegExp("^" + attributes),
      "PSEUDO": new RegExp("^" + pseudos),
      "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
      "bool": new RegExp("^(?:" + booleans + ")$", "i"),
      // For use in libraries implementing .is()
      // We use this for POS matching in `select`
      "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
    },
        rhtml = /HTML$/i,
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        // Easily-parseable/retrievable ID or TAG or CLASS selectors
    rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        // CSS escapes
    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
    runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"),
        funescape = function funescape(escape, nonHex) {
      var high = "0x" + escape.slice(1) - 0x10000;
      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence
      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point
      // Support: IE <=11+
      // For values outside the Basic Multilingual Plane (BMP), manually construct a
      // surrogate pair
      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
    },
        // CSS string/identifier serialization
    // https://drafts.csswg.org/cssom/#common-serializing-idioms
    rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
        fcssescape = function fcssescape(ch, asCodePoint) {
      if (asCodePoint) {
        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
        if (ch === "\0") {
          return "\uFFFD";
        } // Control characters and (dependent upon position) numbers get escaped as code points


        return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
      } // Other potentially-special ASCII characters get backslash-escaped


      return "\\" + ch;
    },
        // Used for iframes
    // See setDocument()
    // Removing the function wrapper causes a "Permission Denied"
    // error in IE
    unloadHandler = function unloadHandler() {
      setDocument();
    },
        inDisabledFieldset = addCombinator(function (elem) {
      return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
    }, {
      dir: "parentNode",
      next: "legend"
    }); // Optimize for push.apply( _, NodeList )


    try {
      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0
      // Detect silently failing push.apply
      // eslint-disable-next-line no-unused-expressions

      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {
        apply: arr.length ? // Leverage slice if possible
        function (target, els) {
          pushNative.apply(target, slice.call(els));
        } : // Support: IE<9
        // Otherwise append directly
        function (target, els) {
          var j = target.length,
              i = 0; // Can't trust NodeList.length

          while (target[j++] = els[i++]) {}

          target.length = j - 1;
        }
      };
    }

    function Sizzle(selector, context, results, seed) {
      var m,
          i,
          elem,
          nid,
          match,
          groups,
          newSelector,
          newContext = context && context.ownerDocument,
          // nodeType defaults to 9, since context defaults to document
      nodeType = context ? context.nodeType : 9;
      results = results || []; // Return early from calls with invalid selector or context

      if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
        return results;
      } // Try to shortcut find operations (as opposed to filters) in HTML documents


      if (!seed) {
        setDocument(context);
        context = context || document;

        if (documentIsHTML) {
          // If the selector is sufficiently simple, try using a "get*By*" DOM method
          // (excepting DocumentFragment context, where the methods don't exist)
          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            // ID selector
            if (m = match[1]) {
              // Document context
              if (nodeType === 9) {
                if (elem = context.getElementById(m)) {
                  // Support: IE, Opera, Webkit
                  // TODO: identify versions
                  // getElementById can match elements by name instead of ID
                  if (elem.id === m) {
                    results.push(elem);
                    return results;
                  }
                } else {
                  return results;
                } // Element context

              } else {
                // Support: IE, Opera, Webkit
                // TODO: identify versions
                // getElementById can match elements by name instead of ID
                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                  results.push(elem);
                  return results;
                }
              } // Type selector

            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results; // Class selector
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          } // Take advantage of querySelectorAll


          if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only
          // Exclude object elements
          nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
            newSelector = selector;
            newContext = context; // qSA considers elements outside a scoping root when evaluating child or
            // descendant combinators, which is not what we want.
            // In such cases, we work around the behavior by prefixing every selector in the
            // list with an ID selector referencing the scope context.
            // The technique has to be used as well when a leading combinator is used
            // as such selectors are not recognized by querySelectorAll.
            // Thanks to Andrew Dupont for this technique.

            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
              // Expand context for sibling selectors
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser
              // supports it & if we're not changing the context.

              if (newContext !== context || !support.scope) {
                // Capture the context ID, setting it first if necessary
                if (nid = context.getAttribute("id")) {
                  nid = nid.replace(rcssescape, fcssescape);
                } else {
                  context.setAttribute("id", nid = expando);
                }
              } // Prefix every selector in the list


              groups = tokenize(selector);
              i = groups.length;

              while (i--) {
                groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);
              }

              newSelector = groups.join(",");
            }

            try {
              push.apply(results, newContext.querySelectorAll(newSelector));
              return results;
            } catch (qsaError) {
              nonnativeSelectorCache(selector, true);
            } finally {
              if (nid === expando) {
                context.removeAttribute("id");
              }
            }
          }
        }
      } // All others


      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }
    /**
     * Create key-value caches of limited size
     * @returns {function(string, object)} Returns the Object data after storing it on itself with
     *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
     *	deleting the oldest entry
     */


    function createCache() {
      var keys = [];

      function cache(key, value) {
        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
        if (keys.push(key + " ") > Expr.cacheLength) {
          // Only keep the most recent entries
          delete cache[keys.shift()];
        }

        return cache[key + " "] = value;
      }

      return cache;
    }
    /**
     * Mark a function for special use by Sizzle
     * @param {Function} fn The function to mark
     */


    function markFunction(fn) {
      fn[expando] = true;
      return fn;
    }
    /**
     * Support testing using an element
     * @param {Function} fn Passed the created element and returns a boolean result
     */


    function assert(fn) {
      var el = document.createElement("fieldset");

      try {
        return !!fn(el);
      } catch (e) {
        return false;
      } finally {
        // Remove from its parent by default
        if (el.parentNode) {
          el.parentNode.removeChild(el);
        } // release memory in IE


        el = null;
      }
    }
    /**
     * Adds the same handler for all of the specified attrs
     * @param {String} attrs Pipe-separated list of attributes
     * @param {Function} handler The method that will be applied
     */


    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
          i = arr.length;

      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }
    /**
     * Checks document order of two siblings
     * @param {Element} a
     * @param {Element} b
     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
     */


    function siblingCheck(a, b) {
      var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes

      if (diff) {
        return diff;
      } // Check if b follows a


      if (cur) {
        while (cur = cur.nextSibling) {
          if (cur === b) {
            return -1;
          }
        }
      }

      return a ? 1 : -1;
    }
    /**
     * Returns a function to use in pseudos for input types
     * @param {String} type
     */


    function createInputPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return name === "input" && elem.type === type;
      };
    }
    /**
     * Returns a function to use in pseudos for buttons
     * @param {String} type
     */


    function createButtonPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();
        return (name === "input" || name === "button") && elem.type === type;
      };
    }
    /**
     * Returns a function to use in pseudos for :enabled/:disabled
     * @param {Boolean} disabled true for :disabled; false for :enabled
     */


    function createDisabledPseudo(disabled) {
      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
      return function (elem) {
        // Only certain elements can match :enabled or :disabled
        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
        if ("form" in elem) {
          // Check for inherited disabledness on relevant non-disabled elements:
          // * listed form-associated elements in a disabled fieldset
          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
          // * option elements in a disabled optgroup
          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
          // All such elements have a "form" property.
          if (elem.parentNode && elem.disabled === false) {
            // Option elements defer to a parent optgroup if present
            if ("label" in elem) {
              if ("label" in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
              } else {
                return elem.disabled === disabled;
              }
            } // Support: IE 6 - 11
            // Use the isDisabled shortcut property to check for disabled fieldset ancestors


            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually

            /* jshint -W018 */
            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
          }

          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.
          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
          // even exist on them, let alone have a boolean value.
        } else if ("label" in elem) {
          return elem.disabled === disabled;
        } // Remaining elements are neither :enabled nor :disabled


        return false;
      };
    }
    /**
     * Returns a function to use in pseudos for positionals
     * @param {Function} fn
     */


    function createPositionalPseudo(fn) {
      return markFunction(function (argument) {
        argument = +argument;
        return markFunction(function (seed, matches) {
          var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length; // Match elements found at the specified indexes

          while (i--) {
            if (seed[j = matchIndexes[i]]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }
    /**
     * Checks a node for validity as a Sizzle context
     * @param {Element|Object=} context
     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
     */


    function testContext(context) {
      return context && typeof context.getElementsByTagName !== "undefined" && context;
    } // Expose support vars for convenience


    support = Sizzle.support = {};
    /**
     * Detects XML nodes
     * @param {Element|Object} elem An element or a document
     * @returns {Boolean} True iff elem is a non-HTML XML node
     */

    isXML = Sizzle.isXML = function (elem) {
      var namespace = elem && elem.namespaceURI,
          docElem = elem && (elem.ownerDocument || elem).documentElement; // Support: IE <=8
      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
      // https://bugs.jquery.com/ticket/4833

      return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");
    };
    /**
     * Sets document-related variables once based on the current document
     * @param {Element|Object} [doc] An element or document object to use to set the document
     * @returns {Object} Returns the current document
     */


    setDocument = Sizzle.setDocument = function (node) {
      var hasCompare,
          subWindow,
          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq

      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      } // Update global variables


      document = doc;
      docElem = document.documentElement;
      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+
      // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq

      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
        // Support: IE 11, Edge
        if (subWindow.addEventListener) {
          subWindow.addEventListener("unload", unloadHandler, false); // Support: IE 9 - 10 only
        } else if (subWindow.attachEvent) {
          subWindow.attachEvent("onunload", unloadHandler);
        }
      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
      // Safari 4 - 5 only, Opera <=11.6 - 12.x only
      // IE/Edge & older browsers don't support the :scope pseudo-class.
      // Support: Safari 6.0 only
      // Safari 6.0 supports :scope but it's an alias of :root there.


      support.scope = assert(function (el) {
        docElem.appendChild(el).appendChild(document.createElement("div"));
        return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
      });
      /* Attributes
      ---------------------------------------------------------------------- */
      // Support: IE<8
      // Verify that getAttribute really returns attributes and not properties
      // (excepting IE8 booleans)

      support.attributes = assert(function (el) {
        el.className = "i";
        return !el.getAttribute("className");
      });
      /* getElement(s)By*
      ---------------------------------------------------------------------- */
      // Check if getElementsByTagName("*") returns only elements

      support.getElementsByTagName = assert(function (el) {
        el.appendChild(document.createComment(""));
        return !el.getElementsByTagName("*").length;
      }); // Support: IE<9

      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10
      // Check if getElementById returns elements by name
      // The broken getElementById methods don't pick up programmatically-set names,
      // so use a roundabout getElementsByName test

      support.getById = assert(function (el) {
        docElem.appendChild(el).id = expando;
        return !document.getElementsByName || !document.getElementsByName(expando).length;
      }); // ID filter and find

      if (support.getById) {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            return elem.getAttribute("id") === attrId;
          };
        };

        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var elem = context.getElementById(id);
            return elem ? [elem] : [];
          }
        };
      } else {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);
          return function (elem) {
            var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
            return node && node.value === attrId;
          };
        }; // Support: IE 6 - 7 only
        // getElementById is not reliable as a find shortcut


        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var node,
                i,
                elems,
                elem = context.getElementById(id);

            if (elem) {
              // Verify the id attribute
              node = elem.getAttributeNode("id");

              if (node && node.value === id) {
                return [elem];
              } // Fall back on getElementsByName


              elems = context.getElementsByName(id);
              i = 0;

              while (elem = elems[i++]) {
                node = elem.getAttributeNode("id");

                if (node && node.value === id) {
                  return [elem];
                }
              }
            }

            return [];
          }
        };
      } // Tag


      Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {
        if (typeof context.getElementsByTagName !== "undefined") {
          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN
        } else if (support.qsa) {
          return context.querySelectorAll(tag);
        }
      } : function (tag, context) {
        var elem,
            tmp = [],
            i = 0,
            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
        results = context.getElementsByTagName(tag); // Filter out possible comments

        if (tag === "*") {
          while (elem = results[i++]) {
            if (elem.nodeType === 1) {
              tmp.push(elem);
            }
          }

          return tmp;
        }

        return results;
      }; // Class

      Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {
        if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) {
          return context.getElementsByClassName(className);
        }
      };
      /* QSA/matchesSelector
      ---------------------------------------------------------------------- */
      // QSA and matchesSelector support
      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)


      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)
      // We allow this because of a bug in IE8/9 that throws an error
      // whenever `document.activeElement` is accessed on an iframe
      // So, we allow :focus to pass through QSA all the time to avoid the IE error
      // See https://bugs.jquery.com/ticket/13378

      rbuggyQSA = [];

      if (support.qsa = rnative.test(document.querySelectorAll)) {
        // Build QSA regex
        // Regex strategy adopted from Diego Perini
        assert(function (el) {
          var input; // Select is set to empty string on purpose
          // This is to test IE's treatment of not explicitly
          // setting a boolean content attribute,
          // since its presence should be enough
          // https://bugs.jquery.com/ticket/12359

          docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>"; // Support: IE8, Opera 11-12.16
          // Nothing should be selected when empty strings follow ^= or $= or *=
          // The test attribute must be unknown in Opera but "safe" for WinRT
          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

          if (el.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          } // Support: IE8
          // Boolean attributes and "value" are not treated correctly


          if (!el.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+


          if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          } // Support: IE 11+, Edge 15 - 18+
          // IE 11/Edge don't find elements on a `[name='']` query in some cases.
          // Adding a temporary attribute to the document before the selection works
          // around the issue.
          // Interestingly, IE 10 & older don't seem to have the issue.


          input = document.createElement("input");
          input.setAttribute("name", "");
          el.appendChild(input);

          if (!el.querySelectorAll("[name='']").length) {
            rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")");
          } // Webkit/Opera - :checked should return selected option elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          // IE8 throws error here and will not see later tests


          if (!el.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          } // Support: Safari 8+, iOS 8+
          // https://bugs.webkit.org/show_bug.cgi?id=136851
          // In-page `selector#id sibling-combinator selector` fails


          if (!el.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          } // Support: Firefox <=3.6 - 5 only
          // Old Firefox doesn't throw on a badly-escaped identifier.


          el.querySelectorAll("\\\f");
          rbuggyQSA.push("[\\r\\n\\f]");
        });
        assert(function (el) {
          el.innerHTML = "<a href='' disabled='disabled'></a>" + "<select disabled='disabled'><option/></select>"; // Support: Windows 8 Native Apps
          // The type and name attributes are restricted during .innerHTML assignment

          var input = document.createElement("input");
          input.setAttribute("type", "hidden");
          el.appendChild(input).setAttribute("name", "D"); // Support: IE8
          // Enforce case-sensitivity of name attribute

          if (el.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
          // IE8 throws error here and will not see later tests


          if (el.querySelectorAll(":enabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          } // Support: IE9-11+
          // IE's :disabled selector does not pick up the children of disabled fieldsets


          docElem.appendChild(el).disabled = true;

          if (el.querySelectorAll(":disabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          } // Support: Opera 10 - 11 only
          // Opera 10-11 does not throw on post-comma invalid pseudos


          el.querySelectorAll("*,:x");
          rbuggyQSA.push(",.*:");
        });
      }

      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
        assert(function (el) {
          // Check to see if it's possible to do matchesSelector
          // on a disconnected node (IE 9)
          support.disconnectedMatch = matches.call(el, "*"); // This should fail with an exception
          // Gecko does not error, returns false instead

          matches.call(el, "[s!='']:x");
          rbuggyMatches.push("!=", pseudos);
        });
      }

      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
      /* Contains
      ---------------------------------------------------------------------- */

      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another
      // Purposefully self-exclusive
      // As in, an element does not contain itself

      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
        var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
      } : function (a, b) {
        if (b) {
          while (b = b.parentNode) {
            if (b === a) {
              return true;
            }
          }
        }

        return false;
      };
      /* Sorting
      ---------------------------------------------------------------------- */
      // Document order sorting

      sortOrder = hasCompare ? function (a, b) {
        // Flag for duplicate removal
        if (a === b) {
          hasDuplicate = true;
          return 0;
        } // Sort on method existence if only one input has compareDocumentPosition


        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;

        if (compare) {
          return compare;
        } // Calculate position if both inputs belong to the same document
        // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.
        // eslint-disable-next-line eqeqeq


        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected
        1; // Disconnected nodes

        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
          // Choose the first element that is related to our preferred document
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq
          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {
            return -1;
          } // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq


          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {
            return 1;
          } // Maintain original order


          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
        }

        return compare & 4 ? -1 : 1;
      } : function (a, b) {
        // Exit early if the nodes are identical
        if (a === b) {
          hasDuplicate = true;
          return 0;
        }

        var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b]; // Parentless nodes are either documents or disconnected

        if (!aup || !bup) {
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.

          /* eslint-disable eqeqeq */
          return a == document ? -1 : b == document ? 1 :
          /* eslint-enable eqeqeq */
          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check
        } else if (aup === bup) {
          return siblingCheck(a, b);
        } // Otherwise we need full lists of their ancestors for comparison


        cur = a;

        while (cur = cur.parentNode) {
          ap.unshift(cur);
        }

        cur = b;

        while (cur = cur.parentNode) {
          bp.unshift(cur);
        } // Walk down the tree looking for a discrepancy


        while (ap[i] === bp[i]) {
          i++;
        }

        return i ? // Do a sibling check if the nodes have a common ancestor
        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first
        // Support: IE 11+, Edge 17 - 18+
        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
        // two documents; shallow comparisons work.

        /* eslint-disable eqeqeq */
        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :
        /* eslint-enable eqeqeq */
        0;
      };
      return document;
    };

    Sizzle.matches = function (expr, elements) {
      return Sizzle(expr, null, null, elements);
    };

    Sizzle.matchesSelector = function (elem, expr) {
      setDocument(elem);

      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
        try {
          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes

          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document
          // fragment in IE 9
          elem.document && elem.document.nodeType !== 11) {
            return ret;
          }
        } catch (e) {
          nonnativeSelectorCache(expr, true);
        }
      }

      return Sizzle(expr, document, null, [elem]).length > 0;
    };

    Sizzle.contains = function (context, elem) {
      // Set document vars if needed
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq
      if ((context.ownerDocument || context) != document) {
        setDocument(context);
      }

      return contains(context, elem);
    };

    Sizzle.attr = function (elem, name) {
      // Set document vars if needed
      // Support: IE 11+, Edge 17 - 18+
      // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
      // two documents; shallow comparisons work.
      // eslint-disable-next-line eqeqeq
      if ((elem.ownerDocument || elem) != document) {
        setDocument(elem);
      }

      var fn = Expr.attrHandle[name.toLowerCase()],
          // Don't get fooled by Object.prototype properties (jQuery #13807)
      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
    };

    Sizzle.escape = function (sel) {
      return (sel + "").replace(rcssescape, fcssescape);
    };

    Sizzle.error = function (msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };
    /**
     * Document sorting and removing duplicates
     * @param {ArrayLike} results
     */


    Sizzle.uniqueSort = function (results) {
      var elem,
          duplicates = [],
          j = 0,
          i = 0; // Unless we *know* we can detect duplicates, assume their presence

      hasDuplicate = !support.detectDuplicates;
      sortInput = !support.sortStable && results.slice(0);
      results.sort(sortOrder);

      if (hasDuplicate) {
        while (elem = results[i++]) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }

        while (j--) {
          results.splice(duplicates[j], 1);
        }
      } // Clear input after sorting to release objects
      // See https://github.com/jquery/sizzle/pull/225


      sortInput = null;
      return results;
    };
    /**
     * Utility function for retrieving the text value of an array of DOM nodes
     * @param {Array|Element} elem
     */


    getText = Sizzle.getText = function (elem) {
      var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;

      if (!nodeType) {
        // If no nodeType, this is expected to be an array
        while (node = elem[i++]) {
          // Do not traverse comment nodes
          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        // Use textContent for elements
        // innerText usage removed for consistency of new lines (jQuery #11153)
        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          // Traverse its children
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      } // Do not include comment or processing instruction nodes


      return ret;
    };

    Expr = Sizzle.selectors = {
      // Can be adjusted by the user
      cacheLength: 50,
      createPseudo: markFunction,
      match: matchExpr,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: true
        },
        " ": {
          dir: "parentNode"
        },
        "+": {
          dir: "previousSibling",
          first: true
        },
        "~": {
          dir: "previousSibling"
        }
      },
      preFilter: {
        "ATTR": function ATTR(match) {
          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted

          match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);

          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }

          return match.slice(0, 4);
        },
        "CHILD": function CHILD(match) {
          /* matches from matchExpr["CHILD"]
          	1 type (only|nth|...)
          	2 what (child|of-type)
          	3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
          	4 xn-component of xn+y argument ([+-]?\d*n|)
          	5 sign of xn-component
          	6 x of xn-component
          	7 sign of y-component
          	8 y of y-component
          */
          match[1] = match[1].toLowerCase();

          if (match[1].slice(0, 3) === "nth") {
            // nth-* requires argument
            if (!match[3]) {
              Sizzle.error(match[0]);
            } // numeric x and y parameters for Expr.filter.CHILD
            // remember that false/true cast respectively to 0/1


            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
            match[5] = +(match[7] + match[8] || match[3] === "odd"); // other types prohibit arguments
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }

          return match;
        },
        "PSEUDO": function PSEUDO(match) {
          var excess,
              unquoted = !match[6] && match[2];

          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          } // Accept quoted arguments as-is


          if (match[3]) {
            match[2] = match[4] || match[5] || ""; // Strip excess characters from unquoted arguments
          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)
          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis
          excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
            // excess is a negative index
            match[0] = match[0].slice(0, excess);
            match[2] = unquoted.slice(0, excess);
          } // Return only captures needed by the pseudo filter method (type and argument)


          return match.slice(0, 3);
        }
      },
      filter: {
        "TAG": function TAG(nodeNameSelector) {
          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
          return nodeNameSelector === "*" ? function () {
            return true;
          } : function (elem) {
            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
          };
        },
        "CLASS": function CLASS(className) {
          var pattern = classCache[className + " "];
          return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
            return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
          });
        },
        "ATTR": function ATTR(name, operator, check) {
          return function (elem) {
            var result = Sizzle.attr(elem, name);

            if (result == null) {
              return operator === "!=";
            }

            if (!operator) {
              return true;
            }

            result += "";
            /* eslint-disable max-len */

            return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
            /* eslint-enable max-len */
          };
        },
        "CHILD": function CHILD(type, what, _argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)
          function (elem) {
            return !!elem.parentNode;
          } : function (elem, _context, xml) {
            var cache,
                uniqueCache,
                outerCache,
                node,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType,
                diff = false;

            if (parent) {
              // :(first|last|only)-(child|of-type)
              if (simple) {
                while (dir) {
                  node = elem;

                  while (node = node[dir]) {
                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                      return false;
                    }
                  } // Reverse direction for :only-* (if we haven't yet done so)


                  start = dir = type === "only" && !start && "nextSibling";
                }

                return true;
              }

              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`

              if (forward && useCache) {
                // Seek `elem` from a previously-cached index
                // ...in a gzip-friendly way
                node = parent;
                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                // Defend against cloned attroperties (jQuery gh-1709)

                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                cache = uniqueCache[type] || [];
                nodeIndex = cache[0] === dirruns && cache[1];
                diff = nodeIndex && cache[2];
                node = nodeIndex && parent.childNodes[nodeIndex];

                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start
                diff = nodeIndex = 0) || start.pop()) {
                  // When found, cache indexes on `parent` and break
                  if (node.nodeType === 1 && ++diff && node === elem) {
                    uniqueCache[type] = [dirruns, nodeIndex, diff];
                    break;
                  }
                }
              } else {
                // Use previously-cached element index if available
                if (useCache) {
                  // ...in a gzip-friendly way
                  node = elem;
                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                  // Defend against cloned attroperties (jQuery gh-1709)

                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                  cache = uniqueCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = nodeIndex;
                } // xml :nth-child(...)
                // or :nth-last-child(...) or :nth(-last)?-of-type(...)


                if (diff === false) {
                  // Use the same loop as above to seek `elem` from the start
                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                      // Cache the index of each encountered element
                      if (useCache) {
                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only
                        // Defend against cloned attroperties (jQuery gh-1709)

                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                        uniqueCache[type] = [dirruns, diff];
                      }

                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
              } // Incorporate the offset, then check against cycle size


              diff -= last;
              return diff === first || diff % first === 0 && diff / first >= 0;
            }
          };
        },
        "PSEUDO": function PSEUDO(pseudo, argument) {
          // pseudo-class names are case-insensitive
          // http://www.w3.org/TR/selectors/#pseudo-classes
          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
          // Remember that setFilters inherits from pseudos
          var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo); // The user may use createPseudo to indicate that
          // arguments are needed to create the filter function
          // just as Sizzle does

          if (fn[expando]) {
            return fn(argument);
          } // But maintain support for old signatures


          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];
            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
              var idx,
                  matched = fn(seed, argument),
                  i = matched.length;

              while (i--) {
                idx = indexOf(seed, matched[i]);
                seed[idx] = !(matches[idx] = matched[i]);
              }
            }) : function (elem) {
              return fn(elem, 0, args);
            };
          }

          return fn;
        }
      },
      pseudos: {
        // Potentially complex pseudos
        "not": markFunction(function (selector) {
          // Trim the selector passed to compile
          // to avoid treating leading and trailing
          // spaces as combinators
          var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {
            var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length; // Match elements unmatched by `matcher`

            while (i--) {
              if (elem = unmatched[i]) {
                seed[i] = !(matches[i] = elem);
              }
            }
          }) : function (elem, _context, xml) {
            input[0] = elem;
            matcher(input, null, xml, results); // Don't keep the element (issue #299)

            input[0] = null;
            return !results.pop();
          };
        }),
        "has": markFunction(function (selector) {
          return function (elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),
        "contains": markFunction(function (text) {
          text = text.replace(runescape, funescape);
          return function (elem) {
            return (elem.textContent || getText(elem)).indexOf(text) > -1;
          };
        }),
        // "Whether an element is represented by a :lang() selector
        // is based solely on the element's language value
        // being equal to the identifier C,
        // or beginning with the identifier C immediately followed by "-".
        // The matching of C against the element's language value is performed case-insensitively.
        // The identifier C does not have to be a valid language name."
        // http://www.w3.org/TR/selectors/#lang-pseudo
        "lang": markFunction(function (lang) {
          // lang value must be a valid identifier
          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }

          lang = lang.replace(runescape, funescape).toLowerCase();
          return function (elem) {
            var elemLang;

            do {
              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                elemLang = elemLang.toLowerCase();
                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);

            return false;
          };
        }),
        // Miscellaneous
        "target": function target(elem) {
          var hash = window.location && window.location.hash;
          return hash && hash.slice(1) === elem.id;
        },
        "root": function root(elem) {
          return elem === docElem;
        },
        "focus": function focus(elem) {
          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
        },
        // Boolean properties
        "enabled": createDisabledPseudo(false),
        "disabled": createDisabledPseudo(true),
        "checked": function checked(elem) {
          // In CSS3, :checked should return both checked and selected elements
          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
          var nodeName = elem.nodeName.toLowerCase();
          return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
        },
        "selected": function selected(elem) {
          // Accessing this property makes selected-by-default
          // options in Safari work properly
          if (elem.parentNode) {
            // eslint-disable-next-line no-unused-expressions
            elem.parentNode.selectedIndex;
          }

          return elem.selected === true;
        },
        // Contents
        "empty": function empty(elem) {
          // http://www.w3.org/TR/selectors/#empty-pseudo
          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
          //   but not by others (comment: 8; processing instruction: 7; etc.)
          // nodeType < 6 works because attributes (2) do not appear as children
          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }

          return true;
        },
        "parent": function parent(elem) {
          return !Expr.pseudos["empty"](elem);
        },
        // Element/input types
        "header": function header(elem) {
          return rheader.test(elem.nodeName);
        },
        "input": function input(elem) {
          return rinputs.test(elem.nodeName);
        },
        "button": function button(elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === "button" || name === "button";
        },
        "text": function text(elem) {
          var attr;
          return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ( // Support: IE<8
          // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
          (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
        },
        // Position-in-collection
        "first": createPositionalPseudo(function () {
          return [0];
        }),
        "last": createPositionalPseudo(function (_matchIndexes, length) {
          return [length - 1];
        }),
        "eq": createPositionalPseudo(function (_matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),
        "even": createPositionalPseudo(function (matchIndexes, length) {
          var i = 0;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "odd": createPositionalPseudo(function (matchIndexes, length) {
          var i = 1;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "lt": createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument > length ? length : argument;

          for (; --i >= 0;) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
        "gt": createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;

          for (; ++i < length;) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        })
      }
    };
    Expr.pseudos["nth"] = Expr.pseudos["eq"]; // Add button/input type pseudos

    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }

    for (i in {
      submit: true,
      reset: true
    }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    } // Easy API for creating new setFilters


    function setFilters() {}

    setFilters.prototype = Expr.filters = Expr.pseudos;
    Expr.setFilters = new setFilters();

    tokenize = Sizzle.tokenize = function (selector, parseOnly) {
      var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];

      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }

      soFar = selector;
      groups = [];
      preFilters = Expr.preFilter;

      while (soFar) {
        // Comma and first run
        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            // Don't consume trailing commas as valid
            soFar = soFar.slice(match[0].length) || soFar;
          }

          groups.push(tokens = []);
        }

        matched = false; // Combinators

        if (match = rcombinators.exec(soFar)) {
          matched = match.shift();
          tokens.push({
            value: matched,
            // Cast descendant combinators to space
            type: match[0].replace(rtrim, " ")
          });
          soFar = soFar.slice(matched.length);
        } // Filters


        for (type in Expr.filter) {
          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: type,
              matches: match
            });
            soFar = soFar.slice(matched.length);
          }
        }

        if (!matched) {
          break;
        }
      } // Return the length of the invalid excess
      // if we're just parsing
      // Otherwise, throw an error or return tokens


      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens
      tokenCache(selector, groups).slice(0);
    };

    function toSelector(tokens) {
      var i = 0,
          len = tokens.length,
          selector = "";

      for (; i < len; i++) {
        selector += tokens[i].value;
      }

      return selector;
    }

    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
          skip = combinator.next,
          key = skip || dir,
          checkNonElements = base && key === "parentNode",
          doneName = done++;
      return combinator.first ? // Check against closest ancestor/preceding element
      function (elem, context, xml) {
        while (elem = elem[dir]) {
          if (elem.nodeType === 1 || checkNonElements) {
            return matcher(elem, context, xml);
          }
        }

        return false;
      } : // Check against all ancestor/preceding elements
      function (elem, context, xml) {
        var oldCache,
            uniqueCache,
            outerCache,
            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

        if (xml) {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              if (matcher(elem, context, xml)) {
                return true;
              }
            }
          }
        } else {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only
              // Defend against cloned attroperties (jQuery gh-1709)

              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});

              if (skip && skip === elem.nodeName.toLowerCase()) {
                elem = elem[dir] || elem;
              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                // Assign to newCache so results back-propagate to previous elements
                return newCache[2] = oldCache[2];
              } else {
                // Reuse newcache so results back-propagate to previous elements
                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking

                if (newCache[2] = matcher(elem, context, xml)) {
                  return true;
                }
              }
            }
          }
        }

        return false;
      };
    }

    function elementMatcher(matchers) {
      return matchers.length > 1 ? function (elem, context, xml) {
        var i = matchers.length;

        while (i--) {
          if (!matchers[i](elem, context, xml)) {
            return false;
          }
        }

        return true;
      } : matchers[0];
    }

    function multipleContexts(selector, contexts, results) {
      var i = 0,
          len = contexts.length;

      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }

      return results;
    }

    function condense(unmatched, map, filter, context, xml) {
      var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;

      for (; i < len; i++) {
        if (elem = unmatched[i]) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);

            if (mapped) {
              map.push(i);
            }
          }
        }
      }

      return newUnmatched;
    }

    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }

      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }

      return markFunction(function (seed, results, context, xml) {
        var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            // Get initial elements from seed or context
        elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            // Prefilter to get matcher input, preserving a map for seed-results synchronization
        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary
        [] : // ...otherwise use results directly
        results : matcherIn; // Find primary matches

        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        } // Apply postFilter


        if (postFilter) {
          temp = condense(matcherOut, postMap);
          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn

          i = temp.length;

          while (i--) {
            if (elem = temp[i]) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }

        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              // Get the final matcherOut by condensing this intermediate into postFinder contexts
              temp = [];
              i = matcherOut.length;

              while (i--) {
                if (elem = matcherOut[i]) {
                  // Restore matcherIn since elem is not yet a final match
                  temp.push(matcherIn[i] = elem);
                }
              }

              postFinder(null, matcherOut = [], temp, xml);
            } // Move matched elements from seed to results to keep them synchronized


            i = matcherOut.length;

            while (i--) {
              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          } // Add elements to results, through postFinder if defined

        } else {
          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);

          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }

    function matcherFromTokens(tokens) {
      var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          // The foundational matcher ensures that elements are reachable from top-level context(s)
      matchContext = addCombinator(function (elem) {
        return elem === checkContext;
      }, implicitRelative, true),
          matchAnyContext = addCombinator(function (elem) {
        return indexOf(checkContext, elem) > -1;
      }, implicitRelative, true),
          matchers = [function (elem, context, xml) {
        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)

        checkContext = null;
        return ret;
      }];

      for (; i < len; i++) {
        if (matcher = Expr.relative[tokens[i].type]) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher

          if (matcher[expando]) {
            // Find the next relative operator (if any) for proper handling
            j = ++i;

            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }

            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`
            tokens.slice(0, i - 1).concat({
              value: tokens[i - 2].type === " " ? "*" : ""
            })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
          }

          matchers.push(matcher);
        }
      }

      return elementMatcher(matchers);
    }

    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function superMatcher(seed, context, xml, results, outermost) {
        var elem,
            j,
            matcher,
            matchedCount = 0,
            i = "0",
            unmatched = seed && [],
            setMatched = [],
            contextBackup = outermostContext,
            // We must always have either seed elements or outermost context
        elems = seed || byElement && Expr.find["TAG"]("*", outermost),
            // Use integer dirruns iff this is the outermost matcher
        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
            len = elems.length;

        if (outermost) {
          // Support: IE 11+, Edge 17 - 18+
          // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
          // two documents; shallow comparisons work.
          // eslint-disable-next-line eqeqeq
          outermostContext = context == document || context || outermost;
        } // Add elements passing elementMatchers directly to results
        // Support: IE<9, Safari
        // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id


        for (; i !== len && (elem = elems[i]) != null; i++) {
          if (byElement && elem) {
            j = 0; // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq

            if (!context && elem.ownerDocument != document) {
              setDocument(elem);
              xml = !documentIsHTML;
            }

            while (matcher = elementMatchers[j++]) {
              if (matcher(elem, context || document, xml)) {
                results.push(elem);
                break;
              }
            }

            if (outermost) {
              dirruns = dirrunsUnique;
            }
          } // Track unmatched elements for set filters


          if (bySet) {
            // They will have gone through all possible matchers
            if (elem = !matcher && elem) {
              matchedCount--;
            } // Lengthen the array for every element, matched or not


            if (seed) {
              unmatched.push(elem);
            }
          }
        } // `i` is now the count of elements visited above, and adding it to `matchedCount`
        // makes the latter nonnegative.


        matchedCount += i; // Apply set filters to unmatched elements
        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
        // no element matchers and no seed.
        // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
        // case, which will result in a "00" `matchedCount` that differs from `i` but is also
        // numerically zero.

        if (bySet && i !== matchedCount) {
          j = 0;

          while (matcher = setMatchers[j++]) {
            matcher(unmatched, setMatched, context, xml);
          }

          if (seed) {
            // Reintegrate element matches to eliminate the need for sorting
            if (matchedCount > 0) {
              while (i--) {
                if (!(unmatched[i] || setMatched[i])) {
                  setMatched[i] = pop.call(results);
                }
              }
            } // Discard index placeholder values to get only actual matches


            setMatched = condense(setMatched);
          } // Add matches to results


          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting

          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
            Sizzle.uniqueSort(results);
          }
        } // Override manipulation of globals by nested matchers


        if (outermost) {
          dirruns = dirrunsUnique;
          outermostContext = contextBackup;
        }

        return unmatched;
      };

      return bySet ? markFunction(superMatcher) : superMatcher;
    }

    compile = Sizzle.compile = function (selector, match
    /* Internal Use Only */
    ) {
      var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];

      if (!cached) {
        // Generate a function of recursive functions that can be used to check each element
        if (!match) {
          match = tokenize(selector);
        }

        i = match.length;

        while (i--) {
          cached = matcherFromTokens(match[i]);

          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        } // Cache the compiled function


        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization

        cached.selector = selector;
      }

      return cached;
    };
    /**
     * A low-level selection function that works with Sizzle's compiled
     *  selector functions
     * @param {String|Function} selector A selector or a pre-compiled
     *  selector function built with Sizzle.compile
     * @param {Element} context
     * @param {Array} [results]
     * @param {Array} [seed] A set of elements to match against
     */


    select = Sizzle.select = function (selector, context, results, seed) {
      var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize(selector = compiled.selector || selector);
      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed
      // (the latter of which guarantees us context)

      if (match.length === 1) {
        // Reduce context if the leading compound selector is an ID
        tokens = match[0] = match[0].slice(0);

        if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
          context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];

          if (!context) {
            return results; // Precompiled matchers will still verify ancestry, so step up a level
          } else if (compiled) {
            context = context.parentNode;
          }

          selector = selector.slice(tokens.shift().value.length);
        } // Fetch a seed set for right-to-left matching


        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;

        while (i--) {
          token = tokens[i]; // Abort if we hit a combinator

          if (Expr.relative[type = token.type]) {
            break;
          }

          if (find = Expr.find[type]) {
            // Search, expanding context for leading sibling combinators
            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
              // If seed is empty or no tokens remain, we can return early
              tokens.splice(i, 1);
              selector = seed.length && toSelector(tokens);

              if (!selector) {
                push.apply(results, seed);
                return results;
              }

              break;
            }
          }
        }
      } // Compile and execute a filtering function if one is not provided
      // Provide `match` to avoid retokenization if we modified the selector above


      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
      return results;
    }; // One-time assignments
    // Sort stability


    support.sortStable = expando.split("").sort(sortOrder).join("") === expando; // Support: Chrome 14-35+
    // Always assume duplicates if they aren't passed to the comparison function

    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document

    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
    // Detached nodes confoundingly follow *each other*

    support.sortDetached = assert(function (el) {
      // Should return 1, but returns 4 (following)
      return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
    }); // Support: IE<8
    // Prevent attribute/property "interpolation"
    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

    if (!assert(function (el) {
      el.innerHTML = "<a href='#'></a>";
      return el.firstChild.getAttribute("href") === "#";
    })) {
      addHandle("type|href|height|width", function (elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    } // Support: IE<9
    // Use defaultValue in place of getAttribute("value")


    if (!support.attributes || !assert(function (el) {
      el.innerHTML = "<input/>";
      el.firstChild.setAttribute("value", "");
      return el.firstChild.getAttribute("value") === "";
    })) {
      addHandle("value", function (elem, _name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    } // Support: IE<9
    // Use getAttributeNode to fetch booleans when getAttribute lies


    if (!assert(function (el) {
      return el.getAttribute("disabled") == null;
    })) {
      addHandle(booleans, function (elem, name, isXML) {
        var val;

        if (!isXML) {
          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        }
      });
    }

    return Sizzle;
  }(window);

  jQuery.find = Sizzle;
  jQuery.expr = Sizzle.selectors; // Deprecated

  jQuery.expr[":"] = jQuery.expr.pseudos;
  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
  jQuery.text = Sizzle.getText;
  jQuery.isXMLDoc = Sizzle.isXML;
  jQuery.contains = Sizzle.contains;
  jQuery.escapeSelector = Sizzle.escape;

  var dir = function dir(elem, _dir, until) {
    var matched = [],
        truncate = until !== undefined;

    while ((elem = elem[_dir]) && elem.nodeType !== 9) {
      if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
          break;
        }

        matched.push(elem);
      }
    }

    return matched;
  };

  var _siblings = function siblings(n, elem) {
    var matched = [];

    for (; n; n = n.nextSibling) {
      if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
      }
    }

    return matched;
  };

  var rneedsContext = jQuery.expr.match.needsContext;

  function nodeName(elem, name) {
    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
  }

  var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i; // Implement the identical functionality for filter and not

  function winnow(elements, qualifier, not) {
    if (isFunction(qualifier)) {
      return jQuery.grep(elements, function (elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    } // Single element


    if (qualifier.nodeType) {
      return jQuery.grep(elements, function (elem) {
        return elem === qualifier !== not;
      });
    } // Arraylike of elements (jQuery, arguments, Array)


    if (typeof qualifier !== "string") {
      return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) > -1 !== not;
      });
    } // Filtered directly for both simple and complex selectors


    return jQuery.filter(qualifier, elements, not);
  }

  jQuery.filter = function (expr, elems, not) {
    var elem = elems[0];

    if (not) {
      expr = ":not(" + expr + ")";
    }

    if (elems.length === 1 && elem.nodeType === 1) {
      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
    }

    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
      return elem.nodeType === 1;
    }));
  };

  jQuery.fn.extend({
    find: function find(selector) {
      var i,
          ret,
          len = this.length,
          self = this;

      if (typeof selector !== "string") {
        return this.pushStack(jQuery(selector).filter(function () {
          for (i = 0; i < len; i++) {
            if (jQuery.contains(self[i], this)) {
              return true;
            }
          }
        }));
      }

      ret = this.pushStack([]);

      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }

      return len > 1 ? jQuery.uniqueSort(ret) : ret;
    },
    filter: function filter(selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },
    not: function not(selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },
    is: function is(selector) {
      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set
      // so $("p:first").is("p:last") won't return true for a doc with two "p".
      typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
    }
  }); // Initialize a jQuery object
  // A central reference to the root jQuery(document)

  var rootjQuery,
      // A simple way to check for HTML strings
  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
  // Strict HTML recognition (#11290: must start with <)
  // Shortcut simple #id case for speed
  rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
      init = jQuery.fn.init = function (selector, context, root) {
    var match, elem; // HANDLE: $(""), $(null), $(undefined), $(false)

    if (!selector) {
      return this;
    } // Method init() accepts an alternate rootjQuery
    // so migrate can support jQuery.sub (gh-2101)


    root = root || rootjQuery; // Handle HTML strings

    if (typeof selector === "string") {
      if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
        // Assume that strings that start and end with <> are HTML and skip the regex check
        match = [null, selector, null];
      } else {
        match = rquickExpr.exec(selector);
      } // Match html or make sure no context is specified for #id


      if (match && (match[1] || !context)) {
        // HANDLE: $(html) -> $(array)
        if (match[1]) {
          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat
          // Intentionally let the error be thrown if parseHTML is not present

          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)

          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
            for (match in context) {
              // Properties of context are called as methods if possible
              if (isFunction(this[match])) {
                this[match](context[match]); // ...and otherwise set as attributes
              } else {
                this.attr(match, context[match]);
              }
            }
          }

          return this; // HANDLE: $(#id)
        } else {
          elem = document.getElementById(match[2]);

          if (elem) {
            // Inject the element directly into the jQuery object
            this[0] = elem;
            this.length = 1;
          }

          return this;
        } // HANDLE: $(expr, $(...))

      } else if (!context || context.jquery) {
        return (context || root).find(selector); // HANDLE: $(expr, context)
        // (which is just equivalent to: $(context).find(expr)
      } else {
        return this.constructor(context).find(selector);
      } // HANDLE: $(DOMElement)

    } else if (selector.nodeType) {
      this[0] = selector;
      this.length = 1;
      return this; // HANDLE: $(function)
      // Shortcut for document ready
    } else if (isFunction(selector)) {
      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present
      selector(jQuery);
    }

    return jQuery.makeArray(selector, this);
  }; // Give the init function the jQuery prototype for later instantiation


  init.prototype = jQuery.fn; // Initialize central reference

  rootjQuery = jQuery(document);
  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      // Methods guaranteed to produce a unique set when starting from a unique set
  guaranteedUnique = {
    children: true,
    contents: true,
    next: true,
    prev: true
  };
  jQuery.fn.extend({
    has: function has(target) {
      var targets = jQuery(target, this),
          l = targets.length;
      return this.filter(function () {
        var i = 0;

        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },
    closest: function closest(selectors, context) {
      var cur,
          i = 0,
          l = this.length,
          matched = [],
          targets = typeof selectors !== "string" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context

      if (!rneedsContext.test(selectors)) {
        for (; i < l; i++) {
          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
            // Always skip document fragments
            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle
            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
              matched.push(cur);
              break;
            }
          }
        }
      }

      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
    },
    // Determine the position of an element within the set
    index: function index(elem) {
      // No argument, return index in parent
      if (!elem) {
        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      } // Index in selector


      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      } // Locate the position of the desired element


      return indexOf.call(this, // If it receives a jQuery object, the first element is used
      elem.jquery ? elem[0] : elem);
    },
    add: function add(selector, context) {
      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
    },
    addBack: function addBack(selector) {
      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
    }
  });

  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}

    return cur;
  }

  jQuery.each({
    parent: function parent(elem) {
      var parent = elem.parentNode;
      return parent && parent.nodeType !== 11 ? parent : null;
    },
    parents: function parents(elem) {
      return dir(elem, "parentNode");
    },
    parentsUntil: function parentsUntil(elem, _i, until) {
      return dir(elem, "parentNode", until);
    },
    next: function next(elem) {
      return sibling(elem, "nextSibling");
    },
    prev: function prev(elem) {
      return sibling(elem, "previousSibling");
    },
    nextAll: function nextAll(elem) {
      return dir(elem, "nextSibling");
    },
    prevAll: function prevAll(elem) {
      return dir(elem, "previousSibling");
    },
    nextUntil: function nextUntil(elem, _i, until) {
      return dir(elem, "nextSibling", until);
    },
    prevUntil: function prevUntil(elem, _i, until) {
      return dir(elem, "previousSibling", until);
    },
    siblings: function siblings(elem) {
      return _siblings((elem.parentNode || {}).firstChild, elem);
    },
    children: function children(elem) {
      return _siblings(elem.firstChild);
    },
    contents: function contents(elem) {
      if (elem.contentDocument != null && // Support: IE 11+
      // <object> elements with no `data` attribute has an object
      // `contentDocument` with a `null` prototype.
      getProto(elem.contentDocument)) {
        return elem.contentDocument;
      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
      // Treat the template element as a regular one in browsers that
      // don't support it.


      if (nodeName(elem, "template")) {
        elem = elem.content || elem;
      }

      return jQuery.merge([], elem.childNodes);
    }
  }, function (name, fn) {
    jQuery.fn[name] = function (until, selector) {
      var matched = jQuery.map(this, fn, until);

      if (name.slice(-5) !== "Until") {
        selector = until;
      }

      if (selector && typeof selector === "string") {
        matched = jQuery.filter(selector, matched);
      }

      if (this.length > 1) {
        // Remove duplicates
        if (!guaranteedUnique[name]) {
          jQuery.uniqueSort(matched);
        } // Reverse order for parents* and prev-derivatives


        if (rparentsprev.test(name)) {
          matched.reverse();
        }
      }

      return this.pushStack(matched);
    };
  });
  var rnothtmlwhite = /[^\x20\t\r\n\f]+/g; // Convert String-formatted options into Object-formatted ones

  function createOptions(options) {
    var object = {};
    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
      object[flag] = true;
    });
    return object;
  }
  /*
   * Create a callback list using the following parameters:
   *
   *	options: an optional list of space-separated options that will change how
   *			the callback list behaves or a more traditional option object
   *
   * By default a callback list will act like an event callback list and can be
   * "fired" multiple times.
   *
   * Possible options:
   *
   *	once:			will ensure the callback list can only be fired once (like a Deferred)
   *
   *	memory:			will keep track of previous values and will call any callback added
   *					after the list has been fired right away with the latest "memorized"
   *					values (like a Deferred)
   *
   *	unique:			will ensure a callback can only be added once (no duplicate in the list)
   *
   *	stopOnFalse:	interrupt callings when a callback returns false
   *
   */


  jQuery.Callbacks = function (options) {
    // Convert options from String-formatted to Object-formatted if needed
    // (we check in cache first)
    options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);

    var // Flag to know if list is currently firing
    firing,
        // Last fire value for non-forgettable lists
    memory,
        // Flag to know if list was already fired
    _fired,
        // Flag to prevent firing
    _locked,
        // Actual callback list
    list = [],
        // Queue of execution data for repeatable lists
    queue = [],
        // Index of currently firing callback (modified by add/remove as needed)
    firingIndex = -1,
        // Fire callbacks
    fire = function fire() {
      // Enforce single-firing
      _locked = _locked || options.once; // Execute callbacks for all pending executions,
      // respecting firingIndex overrides and runtime changes

      _fired = firing = true;

      for (; queue.length; firingIndex = -1) {
        memory = queue.shift();

        while (++firingIndex < list.length) {
          // Run callback and check for early termination
          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
            // Jump to end and forget the data so .add doesn't re-fire
            firingIndex = list.length;
            memory = false;
          }
        }
      } // Forget the data if we're done with it


      if (!options.memory) {
        memory = false;
      }

      firing = false; // Clean up if we're done firing for good

      if (_locked) {
        // Keep an empty list if we have data for future add calls
        if (memory) {
          list = []; // Otherwise, this object is spent
        } else {
          list = "";
        }
      }
    },
        // Actual Callbacks object
    self = {
      // Add a callback or a collection of callbacks to the list
      add: function add() {
        if (list) {
          // If we have memory from a past run, we should fire after adding
          if (memory && !firing) {
            firingIndex = list.length - 1;
            queue.push(memory);
          }

          (function add(args) {
            jQuery.each(args, function (_, arg) {
              if (isFunction(arg)) {
                if (!options.unique || !self.has(arg)) {
                  list.push(arg);
                }
              } else if (arg && arg.length && toType(arg) !== "string") {
                // Inspect recursively
                add(arg);
              }
            });
          })(arguments);

          if (memory && !firing) {
            fire();
          }
        }

        return this;
      },
      // Remove a callback from the list
      remove: function remove() {
        jQuery.each(arguments, function (_, arg) {
          var index;

          while ((index = jQuery.inArray(arg, list, index)) > -1) {
            list.splice(index, 1); // Handle firing indexes

            if (index <= firingIndex) {
              firingIndex--;
            }
          }
        });
        return this;
      },
      // Check if a given callback is in the list.
      // If no argument is given, return whether or not list has callbacks attached.
      has: function has(fn) {
        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
      },
      // Remove all callbacks from the list
      empty: function empty() {
        if (list) {
          list = [];
        }

        return this;
      },
      // Disable .fire and .add
      // Abort any current/pending executions
      // Clear all callbacks and values
      disable: function disable() {
        _locked = queue = [];
        list = memory = "";
        return this;
      },
      disabled: function disabled() {
        return !list;
      },
      // Disable .fire
      // Also disable .add unless we have memory (since it would have no effect)
      // Abort any pending executions
      lock: function lock() {
        _locked = queue = [];

        if (!memory && !firing) {
          list = memory = "";
        }

        return this;
      },
      locked: function locked() {
        return !!_locked;
      },
      // Call all callbacks with the given context and arguments
      fireWith: function fireWith(context, args) {
        if (!_locked) {
          args = args || [];
          args = [context, args.slice ? args.slice() : args];
          queue.push(args);

          if (!firing) {
            fire();
          }
        }

        return this;
      },
      // Call all the callbacks with the given arguments
      fire: function fire() {
        self.fireWith(this, arguments);
        return this;
      },
      // To know if the callbacks have already been called at least once
      fired: function fired() {
        return !!_fired;
      }
    };

    return self;
  };

  function Identity(v) {
    return v;
  }

  function Thrower(ex) {
    throw ex;
  }

  function adoptValue(value, resolve, reject, noValue) {
    var method;

    try {
      // Check for promise aspect first to privilege synchronous behavior
      if (value && isFunction(method = value.promise)) {
        method.call(value).done(resolve).fail(reject); // Other thenables
      } else if (value && isFunction(method = value.then)) {
        method.call(value, resolve, reject); // Other non-thenables
      } else {
        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
        // * false: [ value ].slice( 0 ) => resolve( value )
        // * true: [ value ].slice( 1 ) => resolve()
        resolve.apply(undefined, [value].slice(noValue));
      } // For Promises/A+, convert exceptions into rejections
      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
      // Deferred#then to conditionally suppress rejection.

    } catch (value) {
      // Support: Android 4.0 only
      // Strict mode functions invoked without .call/.apply get global-object context
      reject.apply(undefined, [value]);
    }
  }

  jQuery.extend({
    Deferred: function Deferred(func) {
      var tuples = [// action, add listener, callbacks,
      // ... .then handlers, argument index, [final state]
      ["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],
          _state = "pending",
          _promise = {
        state: function state() {
          return _state;
        },
        always: function always() {
          deferred.done(arguments).fail(arguments);
          return this;
        },
        "catch": function _catch(fn) {
          return _promise.then(null, fn);
        },
        // Keep pipe for back-compat
        pipe: function
          /* fnDone, fnFail, fnProgress */
        pipe() {
          var fns = arguments;
          return jQuery.Deferred(function (newDefer) {
            jQuery.each(tuples, function (_i, tuple) {
              // Map tuples (progress, done, fail) to arguments (done, fail, progress)
              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })
              // deferred.done(function() { bind to newDefer or newDefer.resolve })
              // deferred.fail(function() { bind to newDefer or newDefer.reject })

              deferred[tuple[1]](function () {
                var returned = fn && fn.apply(this, arguments);

                if (returned && isFunction(returned.promise)) {
                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                } else {
                  newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments);
                }
              });
            });
            fns = null;
          }).promise();
        },
        then: function then(onFulfilled, onRejected, onProgress) {
          var maxDepth = 0;

          function resolve(depth, deferred, handler, special) {
            return function () {
              var that = this,
                  args = arguments,
                  mightThrow = function mightThrow() {
                var returned, then; // Support: Promises/A+ section 2.3.3.3.3
                // https://promisesaplus.com/#point-59
                // Ignore double-resolution attempts

                if (depth < maxDepth) {
                  return;
                }

                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1
                // https://promisesaplus.com/#point-48

                if (returned === deferred.promise()) {
                  throw new TypeError("Thenable self-resolution");
                } // Support: Promises/A+ sections 2.3.3.1, 3.5
                // https://promisesaplus.com/#point-54
                // https://promisesaplus.com/#point-75
                // Retrieve `then` only once


                then = returned && ( // Support: Promises/A+ section 2.3.4
                // https://promisesaplus.com/#point-64
                // Only check objects and functions for thenability
                typeof returned === "object" || typeof returned === "function") && returned.then; // Handle a returned thenable

                if (isFunction(then)) {
                  // Special processors (notify) just wait for resolution
                  if (special) {
                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress
                  } else {
                    // ...and disregard older resolution values
                    maxDepth++;
                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                  } // Handle all other returned values

                } else {
                  // Only substitute handlers pass on context
                  // and multiple values (non-spec behavior)
                  if (handler !== Identity) {
                    that = undefined;
                    args = [returned];
                  } // Process the value(s)
                  // Default process is resolve


                  (special || deferred.resolveWith)(that, args);
                }
              },
                  // Only normal processors (resolve) catch and reject exceptions
              process = special ? mightThrow : function () {
                try {
                  mightThrow();
                } catch (e) {
                  if (jQuery.Deferred.exceptionHook) {
                    jQuery.Deferred.exceptionHook(e, process.stackTrace);
                  } // Support: Promises/A+ section 2.3.3.3.4.1
                  // https://promisesaplus.com/#point-61
                  // Ignore post-resolution exceptions


                  if (depth + 1 >= maxDepth) {
                    // Only substitute handlers pass on context
                    // and multiple values (non-spec behavior)
                    if (handler !== Thrower) {
                      that = undefined;
                      args = [e];
                    }

                    deferred.rejectWith(that, args);
                  }
                }
              }; // Support: Promises/A+ section 2.3.3.3.1
              // https://promisesaplus.com/#point-57
              // Re-resolve promises immediately to dodge false rejection from
              // subsequent errors


              if (depth) {
                process();
              } else {
                // Call an optional hook to record the stack, in case of exception
                // since it's otherwise lost when execution goes async
                if (jQuery.Deferred.getStackHook) {
                  process.stackTrace = jQuery.Deferred.getStackHook();
                }

                window.setTimeout(process);
              }
            };
          }

          return jQuery.Deferred(function (newDefer) {
            // progress_handlers.add( ... )
            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )

            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )

            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
          }).promise();
        },
        // Get a promise for this deferred
        // If obj is provided, the promise aspect is added to the object
        promise: function promise(obj) {
          return obj != null ? jQuery.extend(obj, _promise) : _promise;
        }
      },
          deferred = {}; // Add list-specific methods

      jQuery.each(tuples, function (i, tuple) {
        var list = tuple[2],
            stateString = tuple[5]; // promise.progress = list.add
        // promise.done = list.add
        // promise.fail = list.add

        _promise[tuple[1]] = list.add; // Handle state

        if (stateString) {
          list.add(function () {
            // state = "resolved" (i.e., fulfilled)
            // state = "rejected"
            _state = stateString;
          }, // rejected_callbacks.disable
          // fulfilled_callbacks.disable
          tuples[3 - i][2].disable, // rejected_handlers.disable
          // fulfilled_handlers.disable
          tuples[3 - i][3].disable, // progress_callbacks.lock
          tuples[0][2].lock, // progress_handlers.lock
          tuples[0][3].lock);
        } // progress_handlers.fire
        // fulfilled_handlers.fire
        // rejected_handlers.fire


        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }
        // deferred.resolve = function() { deferred.resolveWith(...) }
        // deferred.reject = function() { deferred.rejectWith(...) }

        deferred[tuple[0]] = function () {
          deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
          return this;
        }; // deferred.notifyWith = list.fireWith
        // deferred.resolveWith = list.fireWith
        // deferred.rejectWith = list.fireWith


        deferred[tuple[0] + "With"] = list.fireWith;
      }); // Make the deferred a promise

      _promise.promise(deferred); // Call given func if any


      if (func) {
        func.call(deferred, deferred);
      } // All done!


      return deferred;
    },
    // Deferred helper
    when: function when(singleValue) {
      var // count of uncompleted subordinates
      remaining = arguments.length,
          // count of unprocessed arguments
      i = remaining,
          // subordinate fulfillment data
      resolveContexts = Array(i),
          resolveValues = _slice.call(arguments),
          // the primary Deferred
      primary = jQuery.Deferred(),
          // subordinate callback factory
      updateFunc = function updateFunc(i) {
        return function (value) {
          resolveContexts[i] = this;
          resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;

          if (! --remaining) {
            primary.resolveWith(resolveContexts, resolveValues);
          }
        };
      }; // Single- and empty arguments are adopted like Promise.resolve


      if (remaining <= 1) {
        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)

        if (primary.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) {
          return primary.then();
        }
      } // Multiple arguments are aggregated like Promise.all array elements


      while (i--) {
        adoptValue(resolveValues[i], updateFunc(i), primary.reject);
      }

      return primary.promise();
    }
  }); // These usually indicate a programmer mistake during development,
  // warn about them ASAP rather than swallowing them by default.

  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

  jQuery.Deferred.exceptionHook = function (error, stack) {
    // Support: IE 8 - 9 only
    // Console exists when dev tools are open, which can happen at any time
    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {
      window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    }
  };

  jQuery.readyException = function (error) {
    window.setTimeout(function () {
      throw error;
    });
  }; // The deferred used on DOM ready


  var readyList = jQuery.Deferred();

  jQuery.fn.ready = function (fn) {
    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup
    // happens at the time of error handling instead of callback
    // registration.
    ["catch"](function (error) {
      jQuery.readyException(error);
    });
    return this;
  };

  jQuery.extend({
    // Is the DOM ready to be used? Set to true once it occurs.
    isReady: false,
    // A counter to track how many items to wait for before
    // the ready event fires. See #6781
    readyWait: 1,
    // Handle when the DOM is ready
    ready: function ready(wait) {
      // Abort if there are pending holds or we're already ready
      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      } // Remember that the DOM is ready


      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be

      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      } // If there are functions bound, to execute


      readyList.resolveWith(document, [jQuery]);
    }
  });
  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method

  function completed() {
    document.removeEventListener("DOMContentLoaded", completed);
    window.removeEventListener("load", completed);
    jQuery.ready();
  } // Catch cases where $(document).ready() is called
  // after the browser event has already occurred.
  // Support: IE <=9 - 10 only
  // Older IE sometimes signals "interactive" too soon


  if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
    // Handle it asynchronously to allow scripts the opportunity to delay ready
    window.setTimeout(jQuery.ready);
  } else {
    // Use the handy event callback
    document.addEventListener("DOMContentLoaded", completed); // A fallback to window.onload, that will always work

    window.addEventListener("load", completed);
  } // Multifunctional method to get and set values of a collection
  // The value/s can optionally be executed if it's a function


  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
        len = elems.length,
        bulk = key == null; // Sets many values

    if (toType(key) === "object") {
      chainable = true;

      for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
      } // Sets one value

    } else if (value !== undefined) {
      chainable = true;

      if (!isFunction(value)) {
        raw = true;
      }

      if (bulk) {
        // Bulk operations run against the entire set
        if (raw) {
          fn.call(elems, value);
          fn = null; // ...except when executing function values
        } else {
          bulk = fn;

          fn = function fn(elem, _key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }

      if (fn) {
        for (; i < len; i++) {
          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
      }
    }

    if (chainable) {
      return elems;
    } // Gets


    if (bulk) {
      return fn.call(elems);
    }

    return len ? fn(elems[0], key) : emptyGet;
  }; // Matches dashed string for camelizing


  var rmsPrefix = /^-ms-/,
      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()

  function fcamelCase(_all, letter) {
    return letter.toUpperCase();
  } // Convert dashed to camelCase; used by the css and data modules
  // Support: IE <=9 - 11, Edge 12 - 15
  // Microsoft forgot to hump their vendor prefix (#9572)


  function camelCase(string) {
    return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
  }

  var acceptData = function acceptData(owner) {
    // Accepts only:
    //  - Node
    //    - Node.ELEMENT_NODE
    //    - Node.DOCUMENT_NODE
    //  - Object
    //    - Any
    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
  };

  function Data() {
    this.expando = jQuery.expando + Data.uid++;
  }

  Data.uid = 1;
  Data.prototype = {
    cache: function cache(owner) {
      // Check if the owner object already has a cache
      var value = owner[this.expando]; // If not, create one

      if (!value) {
        value = {}; // We can accept data for non-element nodes in modern browsers,
        // but we should not, see #8335.
        // Always return an empty object.

        if (acceptData(owner)) {
          // If it is a node unlikely to be stringify-ed or looped over
          // use plain assignment
          if (owner.nodeType) {
            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property
            // configurable must be true to allow the property to be
            // deleted when data is removed
          } else {
            Object.defineProperty(owner, this.expando, {
              value: value,
              configurable: true
            });
          }
        }
      }

      return value;
    },
    set: function set(owner, data, value) {
      var prop,
          cache = this.cache(owner); // Handle: [ owner, key, value ] args
      // Always use camelCase key (gh-2257)

      if (typeof data === "string") {
        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args
      } else {
        // Copy the properties one-by-one to the cache object
        for (prop in data) {
          cache[camelCase(prop)] = data[prop];
        }
      }

      return cache;
    },
    get: function get(owner, key) {
      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)
      owner[this.expando] && owner[this.expando][camelCase(key)];
    },
    access: function access(owner, key, value) {
      // In cases where either:
      //
      //   1. No key was specified
      //   2. A string key was specified, but no value provided
      //
      // Take the "read" path and allow the get method to determine
      // which value to return, respectively either:
      //
      //   1. The entire cache object
      //   2. The data stored at the key
      //
      if (key === undefined || key && typeof key === "string" && value === undefined) {
        return this.get(owner, key);
      } // When the key is not a string, or both a key and value
      // are specified, set or extend (existing objects) with either:
      //
      //   1. An object of properties
      //   2. A key and value
      //


      this.set(owner, key, value); // Since the "set" path can have two possible entry points
      // return the expected data based on which path was taken[*]

      return value !== undefined ? value : key;
    },
    remove: function remove(owner, key) {
      var i,
          cache = owner[this.expando];

      if (cache === undefined) {
        return;
      }

      if (key !== undefined) {
        // Support array or space separated string of keys
        if (Array.isArray(key)) {
          // If key is an array of keys...
          // We always set camelCase keys, so remove that.
          key = key.map(camelCase);
        } else {
          key = camelCase(key); // If a key with the spaces exists, use it.
          // Otherwise, create an array by matching non-whitespace

          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
        }

        i = key.length;

        while (i--) {
          delete cache[key[i]];
        }
      } // Remove the expando if there's no more data


      if (key === undefined || jQuery.isEmptyObject(cache)) {
        // Support: Chrome <=35 - 45
        // Webkit & Blink performance suffers when deleting properties
        // from DOM nodes, so set to undefined instead
        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
        if (owner.nodeType) {
          owner[this.expando] = undefined;
        } else {
          delete owner[this.expando];
        }
      }
    },
    hasData: function hasData(owner) {
      var cache = owner[this.expando];
      return cache !== undefined && !jQuery.isEmptyObject(cache);
    }
  };
  var dataPriv = new Data();
  var dataUser = new Data(); //	Implementation Summary
  //
  //	1. Enforce API surface and semantic compatibility with 1.9.x branch
  //	2. Improve the module's maintainability by reducing the storage
  //		paths to a single mechanism.
  //	3. Use the same single mechanism to support "private" and "user" data.
  //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
  //	5. Avoid exposing implementation details on user objects (eg. expando properties)
  //	6. Provide a clear path for implementation upgrade to WeakMap in 2014

  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /[A-Z]/g;

  function getData(data) {
    if (data === "true") {
      return true;
    }

    if (data === "false") {
      return false;
    }

    if (data === "null") {
      return null;
    } // Only convert to a number if it doesn't change the string


    if (data === +data + "") {
      return +data;
    }

    if (rbrace.test(data)) {
      return JSON.parse(data);
    }

    return data;
  }

  function dataAttr(elem, key, data) {
    var name; // If nothing was found internally, try to fetch any
    // data from the HTML5 data-* attribute

    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
      data = elem.getAttribute(name);

      if (typeof data === "string") {
        try {
          data = getData(data);
        } catch (e) {} // Make sure we set the data so it isn't changed later


        dataUser.set(elem, key, data);
      } else {
        data = undefined;
      }
    }

    return data;
  }

  jQuery.extend({
    hasData: function hasData(elem) {
      return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },
    data: function data(elem, name, _data) {
      return dataUser.access(elem, name, _data);
    },
    removeData: function removeData(elem, name) {
      dataUser.remove(elem, name);
    },
    // TODO: Now that all calls to _data and _removeData have been replaced
    // with direct calls to dataPriv methods, these can be deprecated.
    _data: function _data(elem, name, data) {
      return dataPriv.access(elem, name, data);
    },
    _removeData: function _removeData(elem, name) {
      dataPriv.remove(elem, name);
    }
  });
  jQuery.fn.extend({
    data: function data(key, value) {
      var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes; // Gets all values

      if (key === undefined) {
        if (this.length) {
          data = dataUser.get(elem);

          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
            i = attrs.length;

            while (i--) {
              // Support: IE 11 only
              // The attrs elements can be null (#14894)
              if (attrs[i]) {
                name = attrs[i].name;

                if (name.indexOf("data-") === 0) {
                  name = camelCase(name.slice(5));
                  dataAttr(elem, name, data[name]);
                }
              }
            }

            dataPriv.set(elem, "hasDataAttrs", true);
          }
        }

        return data;
      } // Sets multiple values


      if (typeof key === "object") {
        return this.each(function () {
          dataUser.set(this, key);
        });
      }

      return access(this, function (value) {
        var data; // The calling jQuery object (element matches) is not empty
        // (and therefore has an element appears at this[ 0 ]) and the
        // `value` parameter was not undefined. An empty jQuery object
        // will result in `undefined` for elem = this[ 0 ] which will
        // throw an exception if an attempt to read a data cache is made.

        if (elem && value === undefined) {
          // Attempt to get data from the cache
          // The key will always be camelCased in Data
          data = dataUser.get(elem, key);

          if (data !== undefined) {
            return data;
          } // Attempt to "discover" the data in
          // HTML5 custom data-* attrs


          data = dataAttr(elem, key);

          if (data !== undefined) {
            return data;
          } // We tried really hard, but the data doesn't exist.


          return;
        } // Set the data...


        this.each(function () {
          // We always store the camelCased key
          dataUser.set(this, key, value);
        });
      }, null, value, arguments.length > 1, null, true);
    },
    removeData: function removeData(key) {
      return this.each(function () {
        dataUser.remove(this, key);
      });
    }
  });
  jQuery.extend({
    queue: function queue(elem, type, data) {
      var queue;

      if (elem) {
        type = (type || "fx") + "queue";
        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup

        if (data) {
          if (!queue || Array.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }

        return queue || [];
      }
    },
    dequeue: function dequeue(elem, type) {
      type = type || "fx";

      var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function next() {
        jQuery.dequeue(elem, type);
      }; // If the fx queue is dequeued, always remove the progress sentinel


      if (fn === "inprogress") {
        fn = queue.shift();
        startLength--;
      }

      if (fn) {
        // Add a progress sentinel to prevent the fx queue from being
        // automatically dequeued
        if (type === "fx") {
          queue.unshift("inprogress");
        } // Clear up the last queue stop function


        delete hooks.stop;
        fn.call(elem, next, hooks);
      }

      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },
    // Not public - generate a queueHooks object, or return the current one
    _queueHooks: function _queueHooks(elem, type) {
      var key = type + "queueHooks";
      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
        empty: jQuery.Callbacks("once memory").add(function () {
          dataPriv.remove(elem, [type + "queue", key]);
        })
      });
    }
  });
  jQuery.fn.extend({
    queue: function queue(type, data) {
      var setter = 2;

      if (typeof type !== "string") {
        data = type;
        type = "fx";
        setter--;
      }

      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }

      return data === undefined ? this : this.each(function () {
        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue

        jQuery._queueHooks(this, type);

        if (type === "fx" && queue[0] !== "inprogress") {
          jQuery.dequeue(this, type);
        }
      });
    },
    dequeue: function dequeue(type) {
      return this.each(function () {
        jQuery.dequeue(this, type);
      });
    },
    clearQueue: function clearQueue(type) {
      return this.queue(type || "fx", []);
    },
    // Get a promise resolved when queues of a certain type
    // are emptied (fx is the type by default)
    promise: function promise(type, obj) {
      var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function resolve() {
        if (! --count) {
          defer.resolveWith(elements, [elements]);
        }
      };

      if (typeof type !== "string") {
        obj = type;
        type = undefined;
      }

      type = type || "fx";

      while (i--) {
        tmp = dataPriv.get(elements[i], type + "queueHooks");

        if (tmp && tmp.empty) {
          count++;
          tmp.empty.add(resolve);
        }
      }

      resolve();
      return defer.promise(obj);
    }
  });
  var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  var documentElement = document.documentElement;

  var isAttached = function isAttached(elem) {
    return jQuery.contains(elem.ownerDocument, elem);
  },
      composed = {
    composed: true
  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
  // Check attachment across shadow DOM boundaries when possible (gh-3504)
  // Support: iOS 10.0-10.2 only
  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
  // leading to errors. We need to check for `getRootNode`.


  if (documentElement.getRootNode) {
    isAttached = function isAttached(elem) {
      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
    };
  }

  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {
    // isHiddenWithinTree might be called from jQuery#filter function;
    // in that case, element will be second argument
    elem = el || elem; // Inline style trumps all

    return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
    // Support: Firefox <=43 - 45
    // Disconnected elements can have computed display: none, so first confirm that elem is
    // in the document.
    isAttached(elem) && jQuery.css(elem, "display") === "none";
  };

  function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted,
        scale,
        maxIterations = 20,
        currentValue = tween ? function () {
      return tween.cur();
    } : function () {
      return jQuery.css(elem, prop, "");
    },
        initial = currentValue(),
        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
        // Starting value computation is required for potential unit mismatches
    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));

    if (initialInUnit && initialInUnit[3] !== unit) {
      // Support: Firefox <=54
      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
      initial = initial / 2; // Trust units reported by jQuery.css

      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point

      initialInUnit = +initial || 1;

      while (maxIterations--) {
        // Evaluate and update our best guess (doubling guesses that zero out).
        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
        jQuery.style(elem, prop, initialInUnit + unit);

        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
          maxIterations = 0;
        }

        initialInUnit = initialInUnit / scale;
      }

      initialInUnit = initialInUnit * 2;
      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on

      valueParts = valueParts || [];
    }

    if (valueParts) {
      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified

      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];

      if (tween) {
        tween.unit = unit;
        tween.start = initialInUnit;
        tween.end = adjusted;
      }
    }

    return adjusted;
  }

  var defaultDisplayMap = {};

  function getDefaultDisplay(elem) {
    var temp,
        doc = elem.ownerDocument,
        nodeName = elem.nodeName,
        display = defaultDisplayMap[nodeName];

    if (display) {
      return display;
    }

    temp = doc.body.appendChild(doc.createElement(nodeName));
    display = jQuery.css(temp, "display");
    temp.parentNode.removeChild(temp);

    if (display === "none") {
      display = "block";
    }

    defaultDisplayMap[nodeName] = display;
    return display;
  }

  function showHide(elements, show) {
    var display,
        elem,
        values = [],
        index = 0,
        length = elements.length; // Determine new display value for elements that need to change

    for (; index < length; index++) {
      elem = elements[index];

      if (!elem.style) {
        continue;
      }

      display = elem.style.display;

      if (show) {
        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
        // check is required in this first loop unless we have a nonempty display value (either
        // inline or about-to-be-restored)
        if (display === "none") {
          values[index] = dataPriv.get(elem, "display") || null;

          if (!values[index]) {
            elem.style.display = "";
          }
        }

        if (elem.style.display === "" && isHiddenWithinTree(elem)) {
          values[index] = getDefaultDisplay(elem);
        }
      } else {
        if (display !== "none") {
          values[index] = "none"; // Remember what we're overwriting

          dataPriv.set(elem, "display", display);
        }
      }
    } // Set the display of the elements in a second loop to avoid constant reflow


    for (index = 0; index < length; index++) {
      if (values[index] != null) {
        elements[index].style.display = values[index];
      }
    }

    return elements;
  }

  jQuery.fn.extend({
    show: function show() {
      return showHide(this, true);
    },
    hide: function hide() {
      return showHide(this);
    },
    toggle: function toggle(state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }

      return this.each(function () {
        if (isHiddenWithinTree(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    }
  });
  var rcheckableType = /^(?:checkbox|radio)$/i;
  var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
  var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

  (function () {
    var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input"); // Support: Android 4.0 - 4.3 only
    // Check state lost if the name is set (#11217)
    // Support: Windows Web Apps (WWA)
    // `name` and `type` must use .setAttribute for WWA (#14901)

    input.setAttribute("type", "radio");
    input.setAttribute("checked", "checked");
    input.setAttribute("name", "t");
    div.appendChild(input); // Support: Android <=4.1 only
    // Older WebKit doesn't clone checked state correctly in fragments

    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only
    // Make sure textarea (and checkbox) defaultValue is properly cloned

    div.innerHTML = "<textarea>x</textarea>";
    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only
    // IE <=9 replaces <option> tags with their contents when inserted outside of
    // the select element.

    div.innerHTML = "<option></option>";
    support.option = !!div.lastChild;
  })(); // We have to close these tags to support XHTML (#13200)


  var wrapMap = {
    // XHTML parsers do not magically insert elements in the
    // same way that tag soup parsers do. So we cannot shorten
    // this by omitting <tbody> or other required elements.
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };
  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
  wrapMap.th = wrapMap.td; // Support: IE <=9 only

  if (!support.option) {
    wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
  }

  function getAll(context, tag) {
    // Support: IE <=9 - 11 only
    // Use typeof to avoid zero-argument method invocation on host objects (#15151)
    var ret;

    if (typeof context.getElementsByTagName !== "undefined") {
      ret = context.getElementsByTagName(tag || "*");
    } else if (typeof context.querySelectorAll !== "undefined") {
      ret = context.querySelectorAll(tag || "*");
    } else {
      ret = [];
    }

    if (tag === undefined || tag && nodeName(context, tag)) {
      return jQuery.merge([context], ret);
    }

    return ret;
  } // Mark scripts as having already been evaluated


  function setGlobalEval(elems, refElements) {
    var i = 0,
        l = elems.length;

    for (; i < l; i++) {
      dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
  }

  var rhtml = /<|&#?\w+;/;

  function buildFragment(elems, context, scripts, selection, ignored) {
    var elem,
        tmp,
        tag,
        wrap,
        attached,
        j,
        fragment = context.createDocumentFragment(),
        nodes = [],
        i = 0,
        l = elems.length;

    for (; i < l; i++) {
      elem = elems[i];

      if (elem || elem === 0) {
        // Add nodes directly
        if (toType(elem) === "object") {
          // Support: Android <=4.0 only, PhantomJS 1 only
          // push.apply(_, arraylike) throws on ancient WebKit
          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node
        } else if (!rhtml.test(elem)) {
          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes
        } else {
          tmp = tmp || fragment.appendChild(context.createElement("div")); // Deserialize a standard representation

          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
          wrap = wrapMap[tag] || wrapMap._default;
          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content

          j = wrap[0];

          while (j--) {
            tmp = tmp.lastChild;
          } // Support: Android <=4.0 only, PhantomJS 1 only
          // push.apply(_, arraylike) throws on ancient WebKit


          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container

          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)

          tmp.textContent = "";
        }
      }
    } // Remove wrapper from fragment


    fragment.textContent = "";
    i = 0;

    while (elem = nodes[i++]) {
      // Skip elements already in the context collection (trac-4087)
      if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
          ignored.push(elem);
        }

        continue;
      }

      attached = isAttached(elem); // Append to fragment

      tmp = getAll(fragment.appendChild(elem), "script"); // Preserve script evaluation history

      if (attached) {
        setGlobalEval(tmp);
      } // Capture executables


      if (scripts) {
        j = 0;

        while (elem = tmp[j++]) {
          if (rscriptType.test(elem.type || "")) {
            scripts.push(elem);
          }
        }
      }
    }

    return fragment;
  }

  var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

  function returnTrue() {
    return true;
  }

  function returnFalse() {
    return false;
  } // Support: IE <=9 - 11+
  // focus() and blur() are asynchronous, except when they are no-op.
  // So expect focus to be synchronous when the element is already active,
  // and blur to be synchronous when the element is not already active.
  // (focus and blur are always synchronous in other supported browsers,
  // this just defines when we can count on it).


  function expectSync(elem, type) {
    return elem === safeActiveElement() === (type === "focus");
  } // Support: IE <=9 only
  // Accessing document.activeElement can throw unexpectedly
  // https://bugs.jquery.com/ticket/13393


  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }

  function _on(elem, types, selector, data, fn, one) {
    var origFn, type; // Types can be a map of types/handlers

    if (typeof types === "object") {
      // ( types-Object, selector, data )
      if (typeof selector !== "string") {
        // ( types-Object, data )
        data = data || selector;
        selector = undefined;
      }

      for (type in types) {
        _on(elem, type, selector, data, types[type], one);
      }

      return elem;
    }

    if (data == null && fn == null) {
      // ( types, fn )
      fn = selector;
      data = selector = undefined;
    } else if (fn == null) {
      if (typeof selector === "string") {
        // ( types, selector, fn )
        fn = data;
        data = undefined;
      } else {
        // ( types, data, fn )
        fn = data;
        data = selector;
        selector = undefined;
      }
    }

    if (fn === false) {
      fn = returnFalse;
    } else if (!fn) {
      return elem;
    }

    if (one === 1) {
      origFn = fn;

      fn = function fn(event) {
        // Can use an empty set, since event contains the info
        jQuery().off(event);
        return origFn.apply(this, arguments);
      }; // Use same guid so caller can remove using origFn


      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }

    return elem.each(function () {
      jQuery.event.add(this, types, fn, data, selector);
    });
  }
  /*
   * Helper functions for managing events -- not part of the public interface.
   * Props to Dean Edwards' addEvent library for many of the ideas.
   */


  jQuery.event = {
    global: {},
    add: function add(elem, types, handler, data, selector) {
      var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.get(elem); // Only attach events to objects that accept data

      if (!acceptData(elem)) {
        return;
      } // Caller can pass in an object of custom data in lieu of the handler


      if (handler.handler) {
        handleObjIn = handler;
        handler = handleObjIn.handler;
        selector = handleObjIn.selector;
      } // Ensure that invalid selectors throw exceptions at attach time
      // Evaluate against documentElement in case elem is a non-element node (e.g., document)


      if (selector) {
        jQuery.find.matchesSelector(documentElement, selector);
      } // Make sure that the handler has a unique ID, used to find/remove it later


      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      } // Init the element's event structure and main handler, if this is the first


      if (!(events = elemData.events)) {
        events = elemData.events = Object.create(null);
      }

      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function (e) {
          // Discard the second event of a jQuery.event.trigger() and
          // when an event is called after a page has unloaded
          return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
        };
      } // Handle multiple events separated by a space


      types = (types || "").match(rnothtmlwhite) || [""];
      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort(); // There *must* be a type, no attaching namespace-only handlers

        if (!type) {
          continue;
        } // If event changes its type, use the special event handlers for the changed type


        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type

        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type

        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers

        handleObj = jQuery.extend({
          type: type,
          origType: origType,
          data: data,
          handler: handler,
          guid: handler.guid,
          selector: selector,
          needsContext: selector && jQuery.expr.match.needsContext.test(selector),
          namespace: namespaces.join(".")
        }, handleObjIn); // Init the event handler queue if we're the first

        if (!(handlers = events[type])) {
          handlers = events[type] = [];
          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false

          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle);
            }
          }
        }

        if (special.add) {
          special.add.call(elem, handleObj);

          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        } // Add to the element's handler list, delegates in front


        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        } // Keep track of which events have ever been used, for event optimization


        jQuery.event.global[type] = true;
      }
    },
    // Detach an event or set of events from an element
    remove: function remove(elem, types, handler, selector, mappedTypes) {
      var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

      if (!elemData || !(events = elemData.events)) {
        return;
      } // Once for each type.namespace in types; type may be omitted


      types = (types || "").match(rnothtmlwhite) || [""];
      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];
        type = origType = tmp[1];
        namespaces = (tmp[2] || "").split(".").sort(); // Unbind all events (on this namespace, if provided) for the element

        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }

          continue;
        }

        special = jQuery.event.special[type] || {};
        type = (selector ? special.delegateType : special.bindType) || type;
        handlers = events[type] || [];
        tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"); // Remove matching events

        origCount = j = handlers.length;

        while (j--) {
          handleObj = handlers[j];

          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
            handlers.splice(j, 1);

            if (handleObj.selector) {
              handlers.delegateCount--;
            }

            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        } // Remove generic event handler if we removed something and no more handlers exist
        // (avoids potential for endless recursion during removal of special event handlers)


        if (origCount && !handlers.length) {
          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }

          delete events[type];
        }
      } // Remove data and the expando if it's no longer used


      if (jQuery.isEmptyObject(events)) {
        dataPriv.remove(elem, "handle events");
      }
    },
    dispatch: function dispatch(nativeEvent) {
      var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue,
          args = new Array(arguments.length),
          // Make a writable jQuery.Event from the native event object
      event = jQuery.event.fix(nativeEvent),
          handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [],
          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event

      args[0] = event;

      for (i = 1; i < arguments.length; i++) {
        args[i] = arguments[i];
      }

      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired

      if (special.preDispatch && special.preDispatch.call(this, event) === false) {
        return;
      } // Determine handlers


      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us

      i = 0;

      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;
        j = 0;

        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
          // If the event is namespaced, then each handler is only invoked if it is
          // specially universal or its namespaces are a superset of the event's.
          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;
            event.data = handleObj.data;
            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);

            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();
                event.stopPropagation();
              }
            }
          }
        }
      } // Call the postDispatch hook for the mapped type


      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }

      return event.result;
    },
    handlers: function handlers(event, _handlers) {
      var i,
          handleObj,
          sel,
          matchedHandlers,
          matchedSelectors,
          handlerQueue = [],
          delegateCount = _handlers.delegateCount,
          cur = event.target; // Find delegate handlers

      if (delegateCount && // Support: IE <=9
      // Black-hole SVG <use> instance trees (trac-13180)
      cur.nodeType && // Support: Firefox <=42
      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
      // Support: IE 11 only
      // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
      !(event.type === "click" && event.button >= 1)) {
        for (; cur !== this; cur = cur.parentNode || this) {
          // Don't check non-elements (#13208)
          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
          if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
            matchedHandlers = [];
            matchedSelectors = {};

            for (i = 0; i < delegateCount; i++) {
              handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)

              sel = handleObj.selector + " ";

              if (matchedSelectors[sel] === undefined) {
                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
              }

              if (matchedSelectors[sel]) {
                matchedHandlers.push(handleObj);
              }
            }

            if (matchedHandlers.length) {
              handlerQueue.push({
                elem: cur,
                handlers: matchedHandlers
              });
            }
          }
        }
      } // Add the remaining (directly-bound) handlers


      cur = this;

      if (delegateCount < _handlers.length) {
        handlerQueue.push({
          elem: cur,
          handlers: _handlers.slice(delegateCount)
        });
      }

      return handlerQueue;
    },
    addProp: function addProp(name, hook) {
      Object.defineProperty(jQuery.Event.prototype, name, {
        enumerable: true,
        configurable: true,
        get: isFunction(hook) ? function () {
          if (this.originalEvent) {
            return hook(this.originalEvent);
          }
        } : function () {
          if (this.originalEvent) {
            return this.originalEvent[name];
          }
        },
        set: function set(value) {
          Object.defineProperty(this, name, {
            enumerable: true,
            configurable: true,
            writable: true,
            value: value
          });
        }
      });
    },
    fix: function fix(originalEvent) {
      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
    },
    special: {
      load: {
        // Prevent triggered image.load events from bubbling to window.load
        noBubble: true
      },
      click: {
        // Utilize native event to ensure correct state for checkable inputs
        setup: function setup(data) {
          // For mutual compressibility with _default, replace `this` access with a local var.
          // `|| data` is dead code meant only to preserve the variable through minification.
          var el = this || data; // Claim the first handler

          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
            // dataPriv.set( el, "click", ... )
            leverageNative(el, "click", returnTrue);
          } // Return false to allow normal processing in the caller


          return false;
        },
        trigger: function trigger(data) {
          // For mutual compressibility with _default, replace `this` access with a local var.
          // `|| data` is dead code meant only to preserve the variable through minification.
          var el = this || data; // Force setup before triggering a click

          if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
            leverageNative(el, "click");
          } // Return non-false to allow normal event-path propagation


          return true;
        },
        // For cross-browser consistency, suppress native .click() on links
        // Also prevent it if we're currently inside a leveraged native-event stack
        _default: function _default(event) {
          var target = event.target;
          return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
        }
      },
      beforeunload: {
        postDispatch: function postDispatch(event) {
          // Support: Firefox 20+
          // Firefox doesn't alert if the returnValue field is not set.
          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        }
      }
    }
  }; // Ensure the presence of an event listener that handles manually-triggered
  // synthetic events by interrupting progress until reinvoked in response to
  // *native* events that it fires directly, ensuring that state changes have
  // already occurred before other listeners are invoked.

  function leverageNative(el, type, expectSync) {
    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
    if (!expectSync) {
      if (dataPriv.get(el, type) === undefined) {
        jQuery.event.add(el, type, returnTrue);
      }

      return;
    } // Register the controller as a special universal handler for all event namespaces


    dataPriv.set(el, type, false);
    jQuery.event.add(el, type, {
      namespace: false,
      handler: function handler(event) {
        var notAsync,
            result,
            saved = dataPriv.get(this, type);

        if (event.isTrigger & 1 && this[type]) {
          // Interrupt processing of the outer synthetic .trigger()ed event
          // Saved data should be false in such cases, but might be a leftover capture object
          // from an async native handler (gh-4350)
          if (!saved.length) {
            // Store arguments for use when handling the inner native event
            // There will always be at least one argument (an event object), so this array
            // will not be confused with a leftover capture object.
            saved = _slice.call(arguments);
            dataPriv.set(this, type, saved); // Trigger the native event and capture its result
            // Support: IE <=9 - 11+
            // focus() and blur() are asynchronous

            notAsync = expectSync(this, type);
            this[type]();
            result = dataPriv.get(this, type);

            if (saved !== result || notAsync) {
              dataPriv.set(this, type, false);
            } else {
              result = {};
            }

            if (saved !== result) {
              // Cancel the outer synthetic event
              event.stopImmediatePropagation();
              event.preventDefault(); // Support: Chrome 86+
              // In Chrome, if an element having a focusout handler is blurred by
              // clicking outside of it, it invokes the handler synchronously. If
              // that handler calls `.remove()` on the element, the data is cleared,
              // leaving `result` undefined. We need to guard against this.

              return result && result.value;
            } // If this is an inner synthetic event for an event with a bubbling surrogate
            // (focus or blur), assume that the surrogate already propagated from triggering the
            // native event and prevent that from happening again here.
            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
            // bubbling surrogate propagates *after* the non-bubbling base), but that seems
            // less bad than duplication.

          } else if ((jQuery.event.special[type] || {}).delegateType) {
            event.stopPropagation();
          } // If this is a native event triggered above, everything is now in order
          // Fire an inner synthetic event with the original arguments

        } else if (saved.length) {
          // ...and capture the result
          dataPriv.set(this, type, {
            value: jQuery.event.trigger( // Support: IE <=9 - 11+
            // Extend with the prototype to reset the above stopImmediatePropagation()
            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
          }); // Abort handling of the native event

          event.stopImmediatePropagation();
        }
      }
    });
  }

  jQuery.removeEvent = function (elem, type, handle) {
    // This "if" is needed for plain objects
    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle);
    }
  };

  jQuery.Event = function (src, props) {
    // Allow instantiation without the 'new' keyword
    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    } // Event object


    if (src && src.type) {
      this.originalEvent = src;
      this.type = src.type; // Events bubbling up the document may have been marked as prevented
      // by a handler lower down the tree; reflect the correct value.

      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only
      src.returnValue === false ? returnTrue : returnFalse; // Create target properties
      // Support: Safari <=6 - 7 only
      // Target should not be a text node (#504, #13143)

      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
      this.currentTarget = src.currentTarget;
      this.relatedTarget = src.relatedTarget; // Event type
    } else {
      this.type = src;
    } // Put explicitly provided properties onto the event object


    if (props) {
      jQuery.extend(this, props);
    } // Create a timestamp if incoming event doesn't have one


    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed

    this[jQuery.expando] = true;
  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html


  jQuery.Event.prototype = {
    constructor: jQuery.Event,
    isDefaultPrevented: returnFalse,
    isPropagationStopped: returnFalse,
    isImmediatePropagationStopped: returnFalse,
    isSimulated: false,
    preventDefault: function preventDefault() {
      var e = this.originalEvent;
      this.isDefaultPrevented = returnTrue;

      if (e && !this.isSimulated) {
        e.preventDefault();
      }
    },
    stopPropagation: function stopPropagation() {
      var e = this.originalEvent;
      this.isPropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopImmediatePropagation();
      }

      this.stopPropagation();
    }
  }; // Includes all common event props including KeyEvent and MouseEvent specific props

  jQuery.each({
    altKey: true,
    bubbles: true,
    cancelable: true,
    changedTouches: true,
    ctrlKey: true,
    detail: true,
    eventPhase: true,
    metaKey: true,
    pageX: true,
    pageY: true,
    shiftKey: true,
    view: true,
    "char": true,
    code: true,
    charCode: true,
    key: true,
    keyCode: true,
    button: true,
    buttons: true,
    clientX: true,
    clientY: true,
    offsetX: true,
    offsetY: true,
    pointerId: true,
    pointerType: true,
    screenX: true,
    screenY: true,
    targetTouches: true,
    toElement: true,
    touches: true,
    which: true
  }, jQuery.event.addProp);
  jQuery.each({
    focus: "focusin",
    blur: "focusout"
  }, function (type, delegateType) {
    jQuery.event.special[type] = {
      // Utilize native event if possible so blur/focus sequence is correct
      setup: function setup() {
        // Claim the first handler
        // dataPriv.set( this, "focus", ... )
        // dataPriv.set( this, "blur", ... )
        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller

        return false;
      },
      trigger: function trigger() {
        // Force setup before trigger
        leverageNative(this, type); // Return non-false to allow normal event-path propagation

        return true;
      },
      // Suppress native focus or blur as it's already being fired
      // in leverageNative.
      _default: function _default() {
        return true;
      },
      delegateType: delegateType
    };
  }); // Create mouseenter/leave events using mouseover/out and event-time checks
  // so that event delegation works in jQuery.
  // Do the same for pointerenter/pointerleave and pointerover/pointerout
  //
  // Support: Safari 7 only
  // Safari sends mouseenter too often; see:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
  // for the description of the bug (it existed in older Chrome versions as well).

  jQuery.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function (orig, fix) {
    jQuery.event.special[orig] = {
      delegateType: fix,
      bindType: fix,
      handle: function handle(event) {
        var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.
        // NB: No relatedTarget if the mouse left/entered the browser window

        if (!related || related !== target && !jQuery.contains(target, related)) {
          event.type = handleObj.origType;
          ret = handleObj.handler.apply(this, arguments);
          event.type = fix;
        }

        return ret;
      }
    };
  });
  jQuery.fn.extend({
    on: function on(types, selector, data, fn) {
      return _on(this, types, selector, data, fn);
    },
    one: function one(types, selector, data, fn) {
      return _on(this, types, selector, data, fn, 1);
    },
    off: function off(types, selector, fn) {
      var handleObj, type;

      if (types && types.preventDefault && types.handleObj) {
        // ( event )  dispatched jQuery.Event
        handleObj = types.handleObj;
        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
        return this;
      }

      if (typeof types === "object") {
        // ( types-object [, selector] )
        for (type in types) {
          this.off(type, selector, types[type]);
        }

        return this;
      }

      if (selector === false || typeof selector === "function") {
        // ( types [, fn] )
        fn = selector;
        selector = undefined;
      }

      if (fn === false) {
        fn = returnFalse;
      }

      return this.each(function () {
        jQuery.event.remove(this, types, fn, selector);
      });
    }
  });
  var // Support: IE <=10 - 11, Edge 12 - 13 only
  // In IE/Edge using regex groups here causes severe slowdowns.
  // See https://connect.microsoft.com/IE/feedback/details/1736512/
  rnoInnerhtml = /<script|<style|<link/i,
      // checked="checked" or checked
  rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; // Prefer a tbody over its parent table for containing new rows

  function manipulationTarget(elem, content) {
    if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
      return jQuery(elem).children("tbody")[0] || elem;
    }

    return elem;
  } // Replace/restore the type attribute of script elements for safe DOM manipulation


  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
    return elem;
  }

  function restoreScript(elem) {
    if ((elem.type || "").slice(0, 5) === "true/") {
      elem.type = elem.type.slice(5);
    } else {
      elem.removeAttribute("type");
    }

    return elem;
  }

  function cloneCopyEvent(src, dest) {
    var i, l, type, pdataOld, udataOld, udataCur, events;

    if (dest.nodeType !== 1) {
      return;
    } // 1. Copy private data: events, handlers, etc.


    if (dataPriv.hasData(src)) {
      pdataOld = dataPriv.get(src);
      events = pdataOld.events;

      if (events) {
        dataPriv.remove(dest, "handle events");

        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    } // 2. Copy user data


    if (dataUser.hasData(src)) {
      udataOld = dataUser.access(src);
      udataCur = jQuery.extend({}, udataOld);
      dataUser.set(dest, udataCur);
    }
  } // Fix IE bugs, see support tests


  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.

    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }

  function domManip(collection, args, callback, ignored) {
    // Flatten any nested arrays
    args = flat(args);
    var fragment,
        first,
        scripts,
        hasScripts,
        node,
        doc,
        i = 0,
        l = collection.length,
        iNoClone = l - 1,
        value = args[0],
        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit

    if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
      return collection.each(function (index) {
        var self = collection.eq(index);

        if (valueIsFunction) {
          args[0] = value.call(this, index, self.html());
        }

        domManip(self, args, callback, ignored);
      });
    }

    if (l) {
      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
      first = fragment.firstChild;

      if (fragment.childNodes.length === 1) {
        fragment = first;
      } // Require either new content or an interest in ignored elements to invoke the callback


      if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
        hasScripts = scripts.length; // Use the original fragment for the last item
        // instead of the first because it can end up
        // being emptied incorrectly in certain situations (#8070).

        for (; i < l; i++) {
          node = fragment;

          if (i !== iNoClone) {
            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration

            if (hasScripts) {
              // Support: Android <=4.0 only, PhantomJS 1 only
              // push.apply(_, arraylike) throws on ancient WebKit
              jQuery.merge(scripts, getAll(node, "script"));
            }
          }

          callback.call(collection[i], node, i);
        }

        if (hasScripts) {
          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts

          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion

          for (i = 0; i < hasScripts; i++) {
            node = scripts[i];

            if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
              if (node.src && (node.type || "").toLowerCase() !== "module") {
                // Optional AJAX dependency, but won't run scripts if not present
                if (jQuery._evalUrl && !node.noModule) {
                  jQuery._evalUrl(node.src, {
                    nonce: node.nonce || node.getAttribute("nonce")
                  }, doc);
                }
              } else {
                DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
              }
            }
          }
        }
      }
    }

    return collection;
  }

  function _remove(elem, selector, keepData) {
    var node,
        nodes = selector ? jQuery.filter(selector, elem) : elem,
        i = 0;

    for (; (node = nodes[i]) != null; i++) {
      if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
      }

      if (node.parentNode) {
        if (keepData && isAttached(node)) {
          setGlobalEval(getAll(node, "script"));
        }

        node.parentNode.removeChild(node);
      }
    }

    return elem;
  }

  jQuery.extend({
    htmlPrefilter: function htmlPrefilter(html) {
      return html;
    },
    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {
      var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = isAttached(elem); // Fix IE cloning issues

      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
        destElements = getAll(clone);
        srcElements = getAll(elem);

        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      } // Copy the events from the original to the clone


      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);
          destElements = destElements || getAll(clone);

          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      } // Preserve script evaluation history


      destElements = getAll(clone, "script");

      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      } // Return the cloned set


      return clone;
    },
    cleanData: function cleanData(elems) {
      var data,
          elem,
          type,
          special = jQuery.event.special,
          i = 0;

      for (; (elem = elems[i]) !== undefined; i++) {
        if (acceptData(elem)) {
          if (data = elem[dataPriv.expando]) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            } // Support: Chrome <=35 - 45+
            // Assign undefined instead of using delete, see Data#remove


            elem[dataPriv.expando] = undefined;
          }

          if (elem[dataUser.expando]) {
            // Support: Chrome <=35 - 45+
            // Assign undefined instead of using delete, see Data#remove
            elem[dataUser.expando] = undefined;
          }
        }
      }
    }
  });
  jQuery.fn.extend({
    detach: function detach(selector) {
      return _remove(this, selector, true);
    },
    remove: function remove(selector) {
      return _remove(this, selector);
    },
    text: function text(value) {
      return access(this, function (value) {
        return value === undefined ? jQuery.text(this) : this.empty().each(function () {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            this.textContent = value;
          }
        });
      }, null, value, arguments.length);
    },
    append: function append() {
      return domManip(this, arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.appendChild(elem);
        }
      });
    },
    prepend: function prepend() {
      return domManip(this, arguments, function (elem) {
        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
          var target = manipulationTarget(this, elem);
          target.insertBefore(elem, target.firstChild);
        }
      });
    },
    before: function before() {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },
    after: function after() {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },
    empty: function empty() {
      var elem,
          i = 0;

      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          // Prevent memory leaks
          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes

          elem.textContent = "";
        }
      }

      return this;
    },
    clone: function clone(dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
      return this.map(function () {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },
    html: function html(value) {
      return access(this, function (value) {
        var elem = this[0] || {},
            i = 0,
            l = this.length;

        if (value === undefined && elem.nodeType === 1) {
          return elem.innerHTML;
        } // See if we can take a shortcut and just use innerHTML


        if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
          value = jQuery.htmlPrefilter(value);

          try {
            for (; i < l; i++) {
              elem = this[i] || {}; // Remove element nodes and prevent memory leaks

              if (elem.nodeType === 1) {
                jQuery.cleanData(getAll(elem, false));
                elem.innerHTML = value;
              }
            }

            elem = 0; // If using innerHTML throws an exception, use the fallback method
          } catch (e) {}
        }

        if (elem) {
          this.empty().append(value);
        }
      }, null, value, arguments.length);
    },
    replaceWith: function replaceWith() {
      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content

      return domManip(this, arguments, function (elem) {
        var parent = this.parentNode;

        if (jQuery.inArray(this, ignored) < 0) {
          jQuery.cleanData(getAll(this));

          if (parent) {
            parent.replaceChild(elem, this);
          }
        } // Force callback invocation

      }, ignored);
    }
  });
  jQuery.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function (name, original) {
    jQuery.fn[name] = function (selector) {
      var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;

      for (; i <= last; i++) {
        elems = i === last ? this : this.clone(true);
        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only
        // .get() because push.apply(_, arraylike) throws on ancient WebKit

        push.apply(ret, elems.get());
      }

      return this.pushStack(ret);
    };
  });
  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

  var getStyles = function getStyles(elem) {
    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
    // IE throws on elements created in popups
    // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
    var view = elem.ownerDocument.defaultView;

    if (!view || !view.opener) {
      view = window;
    }

    return view.getComputedStyle(elem);
  };

  var swap = function swap(elem, options, callback) {
    var ret,
        name,
        old = {}; // Remember the old values, and insert the new ones

    for (name in options) {
      old[name] = elem.style[name];
      elem.style[name] = options[name];
    }

    ret = callback.call(elem); // Revert the old values

    for (name in options) {
      elem.style[name] = old[name];
    }

    return ret;
  };

  var rboxStyle = new RegExp(cssExpand.join("|"), "i");

  (function () {
    // Executing both pixelPosition & boxSizingReliable tests require only one layout
    // so they're executed at the same time to save the second computation.
    function computeStyleTests() {
      // This is a singleton, we need to execute it only once
      if (!div) {
        return;
      }

      container.style.cssText = "position:absolute;left:-11111px;width:60px;" + "margin-top:1px;padding:0;border:0";
      div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;" + "margin:auto;border:1px;padding:1px;" + "width:60%;top:1%";
      documentElement.appendChild(container).appendChild(div);
      var divStyle = window.getComputedStyle(div);
      pixelPositionVal = divStyle.top !== "1%"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44

      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
      // Some styles come back with percentage values, even though they shouldn't

      div.style.right = "60%";
      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only
      // Detect misreporting of content dimensions for box-sizing:border-box elements

      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only
      // Detect overflow:scroll screwiness (gh-3699)
      // Support: Chrome <=64
      // Don't get tricked when zoom affects offsetWidth (gh-4029)

      div.style.position = "absolute";
      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and
      // it will also be a sign that checks already performed

      div = null;
    }

    function roundPixelMeasures(measure) {
      return Math.round(parseFloat(measure));
    }

    var pixelPositionVal,
        boxSizingReliableVal,
        scrollboxSizeVal,
        pixelBoxStylesVal,
        reliableTrDimensionsVal,
        reliableMarginLeftVal,
        container = document.createElement("div"),
        div = document.createElement("div"); // Finish early in limited (non-browser) environments

    if (!div.style) {
      return;
    } // Support: IE <=9 - 11 only
    // Style of cloned element affects source element cloned (#8908)


    div.style.backgroundClip = "content-box";
    div.cloneNode(true).style.backgroundClip = "";
    support.clearCloneStyle = div.style.backgroundClip === "content-box";
    jQuery.extend(support, {
      boxSizingReliable: function boxSizingReliable() {
        computeStyleTests();
        return boxSizingReliableVal;
      },
      pixelBoxStyles: function pixelBoxStyles() {
        computeStyleTests();
        return pixelBoxStylesVal;
      },
      pixelPosition: function pixelPosition() {
        computeStyleTests();
        return pixelPositionVal;
      },
      reliableMarginLeft: function reliableMarginLeft() {
        computeStyleTests();
        return reliableMarginLeftVal;
      },
      scrollboxSize: function scrollboxSize() {
        computeStyleTests();
        return scrollboxSizeVal;
      },
      // Support: IE 9 - 11+, Edge 15 - 18+
      // IE/Edge misreport `getComputedStyle` of table rows with width/height
      // set in CSS while `offset*` properties report correct values.
      // Behavior in IE 9 is more subtle than in newer versions & it passes
      // some versions of this test; make sure not to make it pass there!
      //
      // Support: Firefox 70+
      // Only Firefox includes border widths
      // in computed dimensions. (gh-4529)
      reliableTrDimensions: function reliableTrDimensions() {
        var table, tr, trChild, trStyle;

        if (reliableTrDimensionsVal == null) {
          table = document.createElement("table");
          tr = document.createElement("tr");
          trChild = document.createElement("div");
          table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
          tr.style.cssText = "border:1px solid"; // Support: Chrome 86+
          // Height set through cssText does not get applied.
          // Computed height then comes back as 0.

          tr.style.height = "1px";
          trChild.style.height = "9px"; // Support: Android 8 Chrome 86+
          // In our bodyBackground.html iframe,
          // display for all div elements is set to "inline",
          // which causes a problem only in Android 8 Chrome 86.
          // Ensuring the div is display: block
          // gets around this issue.

          trChild.style.display = "block";
          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
          trStyle = window.getComputedStyle(tr);
          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
          documentElement.removeChild(table);
        }

        return reliableTrDimensionsVal;
      }
    });
  })();

  function curCSS(elem, name, computed) {
    var width,
        minWidth,
        maxWidth,
        ret,
        // Support: Firefox 51+
    // Retrieving style before computed somehow
    // fixes an issue with getting wrong values
    // on detached elements
    style = elem.style;
    computed = computed || getStyles(elem); // getPropertyValue is needed for:
    //   .css('filter') (IE 9 only, #12537)
    //   .css('--customProperty) (#3144)

    if (computed) {
      ret = computed.getPropertyValue(name) || computed[name];

      if (ret === "" && !isAttached(elem)) {
        ret = jQuery.style(elem, name);
      } // A tribute to the "awesome hack by Dean Edwards"
      // Android Browser returns percentage for some values,
      // but width seems to be reliably pixels.
      // This is against the CSSOM draft spec:
      // https://drafts.csswg.org/cssom/#resolved-values


      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
        // Remember the original values
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth; // Put in the new values to get a computed value out

        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width; // Revert the changed values

        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }

    return ret !== undefined ? // Support: IE <=9 - 11 only
    // IE returns zIndex value as an integer.
    ret + "" : ret;
  }

  function addGetHookIf(conditionFn, hookFn) {
    // Define the hook, we'll check on the first run if it's really needed.
    return {
      get: function get() {
        if (conditionFn()) {
          // Hook not needed (or it's not possible to use it due
          // to missing dependency), remove it.
          delete this.get;
          return;
        } // Hook needed; redefine it so that the support test is not executed again.


        return (this.get = hookFn).apply(this, arguments);
      }
    };
  }

  var cssPrefixes = ["Webkit", "Moz", "ms"],
      emptyStyle = document.createElement("div").style,
      vendorProps = {}; // Return a vendor-prefixed property or undefined

  function vendorPropName(name) {
    // Check for vendor prefixed names
    var capName = name[0].toUpperCase() + name.slice(1),
        i = cssPrefixes.length;

    while (i--) {
      name = cssPrefixes[i] + capName;

      if (name in emptyStyle) {
        return name;
      }
    }
  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property


  function finalPropName(name) {
    var _final = jQuery.cssProps[name] || vendorProps[name];

    if (_final) {
      return _final;
    }

    if (name in emptyStyle) {
      return name;
    }

    return vendorProps[name] = vendorPropName(name) || name;
  }

  var // Swappable if display is none or starts with table
  // except "table", "table-cell", or "table-caption"
  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
  rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      rcustomProp = /^--/,
      cssShow = {
    position: "absolute",
    visibility: "hidden",
    display: "block"
  },
      cssNormalTransform = {
    letterSpacing: "0",
    fontWeight: "400"
  };

  function setPositiveNumber(_elem, value, subtract) {
    // Any relative (+/-) values have already been
    // normalized at this point
    var matches = rcssNum.exec(value);
    return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks
    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
  }

  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
    var i = dimension === "width" ? 1 : 0,
        extra = 0,
        delta = 0; // Adjustment may not be necessary

    if (box === (isBorderBox ? "border" : "content")) {
      return 0;
    }

    for (; i < 4; i += 2) {
      // Both box models exclude margin
      if (box === "margin") {
        delta += jQuery.css(elem, box + cssExpand[i], true, styles);
      } // If we get here with a content-box, we're seeking "padding" or "border" or "margin"


      if (!isBorderBox) {
        // Add padding
        delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles); // For "border" or "margin", add border

        if (box !== "padding") {
          delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles); // But still keep track of it otherwise
        } else {
          extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        } // If we get here with a border-box (content + padding + border), we're seeking "content" or
        // "padding" or "margin"

      } else {
        // For "content", subtract padding
        if (box === "content") {
          delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
        } // For "content" or "padding", subtract border


        if (box !== "margin") {
          delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
        }
      }
    } // Account for positive content-box scroll gutter when requested by providing computedVal


    if (!isBorderBox && computedVal >= 0) {
      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
      // Assuming integer scroll gutter, subtract the rest and round down
      delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
      // Use an explicit zero to avoid NaN (gh-3964)
      )) || 0;
    }

    return delta;
  }

  function getWidthOrHeight(elem, dimension, extra) {
    // Start with computed style
    var styles = getStyles(elem),
        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
    // Fake content-box until we know it's needed to know the true value.
    boxSizingNeeded = !support.boxSizingReliable() || extra,
        isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
        valueIsBorderBox = isBorderBox,
        val = curCSS(elem, dimension, styles),
        offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54
    // Return a confounding non-pixel value or feign ignorance, as appropriate.

    if (rnumnonpx.test(val)) {
      if (!extra) {
        return val;
      }

      val = "auto";
    } // Support: IE 9 - 11 only
    // Use offsetWidth/offsetHeight for when box sizing is unreliable.
    // In those cases, the computed value can be trusted to be border-box.


    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
    // IE/Edge misreport `getComputedStyle` of table rows with width/height
    // set in CSS while `offset*` properties report correct values.
    // Interestingly, in some cases IE 9 doesn't suffer from this issue.
    !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
    // This happens for inline elements with no explicit setting (gh-3571)
    val === "auto" || // Support: Android <=4.1 - 4.3 only
    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
    !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
    elem.getClientRects().length) {
      isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.
      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
      // retrieved value as a content box dimension.

      valueIsBorderBox = offsetProp in elem;

      if (valueIsBorderBox) {
        val = elem[offsetProp];
      }
    } // Normalize "" and auto


    val = parseFloat(val) || 0; // Adjust for the element's box model

    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)
    val) + "px";
  }

  jQuery.extend({
    // Add in style property hooks for overriding the default
    // behavior of getting and setting a style property
    cssHooks: {
      opacity: {
        get: function get(elem, computed) {
          if (computed) {
            // We should always get a number back from opacity
            var ret = curCSS(elem, "opacity");
            return ret === "" ? "1" : ret;
          }
        }
      }
    },
    // Don't automatically add "px" to these possibly-unitless properties
    cssNumber: {
      "animationIterationCount": true,
      "columnCount": true,
      "fillOpacity": true,
      "flexGrow": true,
      "flexShrink": true,
      "fontWeight": true,
      "gridArea": true,
      "gridColumn": true,
      "gridColumnEnd": true,
      "gridColumnStart": true,
      "gridRow": true,
      "gridRowEnd": true,
      "gridRowStart": true,
      "lineHeight": true,
      "opacity": true,
      "order": true,
      "orphans": true,
      "widows": true,
      "zIndex": true,
      "zoom": true
    },
    // Add in properties whose names you wish to fix before
    // setting or getting the value
    cssProps: {},
    // Get and set the style property on a DOM Node
    style: function style(elem, name, value, extra) {
      // Don't set styles on text and comment nodes
      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      } // Make sure that we're working with the right name


      var ret,
          type,
          hooks,
          origName = camelCase(name),
          isCustomProp = rcustomProp.test(name),
          style = elem.style; // Make sure that we're working with the right name. We don't
      // want to query the value if it is a CSS custom property
      // since they are user-defined.

      if (!isCustomProp) {
        name = finalPropName(origName);
      } // Gets hook for the prefixed version, then unprefixed version


      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value

      if (value !== undefined) {
        type = typeof value; // Convert "+=" or "-=" to relative numbers (#7345)

        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
          value = adjustCSS(elem, name, ret); // Fixes bug #9237

          type = "number";
        } // Make sure that null and NaN values aren't set (#7116)


        if (value == null || value !== value) {
          return;
        } // If a number was passed in, add the unit (except for certain CSS properties)
        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
        // "px" to a few hardcoded values.


        if (type === "number" && !isCustomProp) {
          value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
        } // background-* props affect original clone's values


        if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
          style[name] = "inherit";
        } // If a hook was provided, use that value, otherwise just set the specified value


        if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
          if (isCustomProp) {
            style.setProperty(name, value);
          } else {
            style[name] = value;
          }
        }
      } else {
        // If a hook was provided get the non-computed value from there
        if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
          return ret;
        } // Otherwise just get the value from the style object


        return style[name];
      }
    },
    css: function css(elem, name, extra, styles) {
      var val,
          num,
          hooks,
          origName = camelCase(name),
          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't
      // want to modify the value if it is a CSS custom property
      // since they are user-defined.

      if (!isCustomProp) {
        name = finalPropName(origName);
      } // Try prefixed name followed by the unprefixed name


      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there

      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      } // Otherwise, if a way to get the computed value exists, use that


      if (val === undefined) {
        val = curCSS(elem, name, styles);
      } // Convert "normal" to computed value


      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      } // Make numeric if forced or a qualifier was provided and val looks numeric


      if (extra === "" || extra) {
        num = parseFloat(val);
        return extra === true || isFinite(num) ? num || 0 : val;
      }

      return val;
    }
  });
  jQuery.each(["height", "width"], function (_i, dimension) {
    jQuery.cssHooks[dimension] = {
      get: function get(elem, computed, extra) {
        if (computed) {
          // Certain elements can have dimension info if we invisibly show them
          // but it must have a current display style that would benefit
          return rdisplayswap.test(jQuery.css(elem, "display")) && ( // Support: Safari 8+
          // Table columns in Safari have non-zero offsetWidth & zero
          // getBoundingClientRect().width unless display is changed.
          // Support: IE <=11 only
          // Running getBoundingClientRect on a disconnected node
          // in IE throws an error.
          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {
            return getWidthOrHeight(elem, dimension, extra);
          }) : getWidthOrHeight(elem, dimension, extra);
        }
      },
      set: function set(elem, value, extra) {
        var matches,
            styles = getStyles(elem),
            // Only read styles.position if the test has a chance to fail
        // to avoid forcing a reflow.
        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute",
            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
        boxSizingNeeded = scrollboxSizeBuggy || extra,
            isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box",
            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and
        // faking a content-box to get border and padding (gh-3699)

        if (isBorderBox && scrollboxSizeBuggy) {
          subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
        } // Convert to pixels if value adjustment is needed


        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
          elem.style[dimension] = value;
          value = jQuery.css(elem, dimension);
        }

        return setPositiveNumber(elem, value, subtract);
      }
    };
  });
  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
    if (computed) {
      return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
        marginLeft: 0
      }, function () {
        return elem.getBoundingClientRect().left;
      })) + "px";
    }
  }); // These hooks are used by animate to expand properties

  jQuery.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function (prefix, suffix) {
    jQuery.cssHooks[prefix + suffix] = {
      expand: function expand(value) {
        var i = 0,
            expanded = {},
            // Assumes a single number if not a string
        parts = typeof value === "string" ? value.split(" ") : [value];

        for (; i < 4; i++) {
          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
        }

        return expanded;
      }
    };

    if (prefix !== "margin") {
      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    }
  });
  jQuery.fn.extend({
    css: function css(name, value) {
      return access(this, function (elem, name, value) {
        var styles,
            len,
            map = {},
            i = 0;

        if (Array.isArray(name)) {
          styles = getStyles(elem);
          len = name.length;

          for (; i < len; i++) {
            map[name[i]] = jQuery.css(elem, name[i], false, styles);
          }

          return map;
        }

        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
      }, name, value, arguments.length > 1);
    }
  });

  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }

  jQuery.Tween = Tween;
  Tween.prototype = {
    constructor: Tween,
    init: function init(elem, options, prop, end, easing, unit) {
      this.elem = elem;
      this.prop = prop;
      this.easing = easing || jQuery.easing._default;
      this.options = options;
      this.start = this.now = this.cur();
      this.end = end;
      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },
    cur: function cur() {
      var hooks = Tween.propHooks[this.prop];
      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
    },
    run: function run(percent) {
      var eased,
          hooks = Tween.propHooks[this.prop];

      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
      } else {
        this.pos = eased = percent;
      }

      this.now = (this.end - this.start) * eased + this.start;

      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }

      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }

      return this;
    }
  };
  Tween.prototype.init.prototype = Tween.prototype;
  Tween.propHooks = {
    _default: {
      get: function get(tween) {
        var result; // Use a property on the element directly when it is not a DOM element,
        // or when there is no matching style property that exists.

        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
          return tween.elem[tween.prop];
        } // Passing an empty string as a 3rd parameter to .css will automatically
        // attempt a parseFloat and fallback to a string if the parse fails.
        // Simple values such as "10px" are parsed to Float;
        // complex values such as "rotate(1rad)" are returned as-is.


        result = jQuery.css(tween.elem, tween.prop, ""); // Empty strings, null, undefined and "auto" are converted to 0.

        return !result || result === "auto" ? 0 : result;
      },
      set: function set(tween) {
        // Use step hook for back compat.
        // Use cssHook if its there.
        // Use .style if available and use plain properties where available.
        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      }
    }
  }; // Support: IE <=9 only
  // Panic based approach to setting things on disconnected nodes

  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
    set: function set(tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    }
  };
  jQuery.easing = {
    linear: function linear(p) {
      return p;
    },
    swing: function swing(p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    },
    _default: "swing"
  };
  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point

  jQuery.fx.step = {};
  var fxNow,
      inProgress,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rrun = /queueHooks$/;

  function schedule() {
    if (inProgress) {
      if (document.hidden === false && window.requestAnimationFrame) {
        window.requestAnimationFrame(schedule);
      } else {
        window.setTimeout(schedule, jQuery.fx.interval);
      }

      jQuery.fx.tick();
    }
  } // Animations created synchronously will run synchronously


  function createFxNow() {
    window.setTimeout(function () {
      fxNow = undefined;
    });
    return fxNow = Date.now();
  } // Generate parameters to create a standard animation


  function genFx(type, includeWidth) {
    var which,
        i = 0,
        attrs = {
      height: type
    }; // If we include width, step value is 1 to do all cssExpand values,
    // otherwise step value is 2 to skip over Left and Right

    includeWidth = includeWidth ? 1 : 0;

    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];
      attrs["margin" + which] = attrs["padding" + which] = type;
    }

    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }

    return attrs;
  }

  function createTween(value, prop, animation) {
    var tween,
        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]),
        index = 0,
        length = collection.length;

    for (; index < length; index++) {
      if (tween = collection[index].call(animation, prop, value)) {
        // We're done with this property
        return tween;
      }
    }
  }

  function defaultPrefilter(elem, props, opts) {
    var prop,
        value,
        toggle,
        hooks,
        oldfire,
        propTween,
        restoreDisplay,
        display,
        isBox = "width" in props || "height" in props,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHiddenWithinTree(elem),
        dataShow = dataPriv.get(elem, "fxshow"); // Queue-skipping animations hijack the fx hooks

    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");

      if (hooks.unqueued == null) {
        hooks.unqueued = 0;
        oldfire = hooks.empty.fire;

        hooks.empty.fire = function () {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }

      hooks.unqueued++;
      anim.always(function () {
        // Ensure the complete handler is called before this completes
        anim.always(function () {
          hooks.unqueued--;

          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    } // Detect show/hide animations


    for (prop in props) {
      value = props[prop];

      if (rfxtypes.test(value)) {
        delete props[prop];
        toggle = toggle || value === "toggle";

        if (value === (hidden ? "hide" : "show")) {
          // Pretend to be hidden if this is a "show" and
          // there is still data from a stopped show/hide
          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true; // Ignore all other no-op show/hide data
          } else {
            continue;
          }
        }

        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
      }
    } // Bail out if this is a no-op like .hide().hide()


    propTween = !jQuery.isEmptyObject(props);

    if (!propTween && jQuery.isEmptyObject(orig)) {
      return;
    } // Restrict "overflow" and "display" styles during box animations


    if (isBox && elem.nodeType === 1) {
      // Support: IE <=9 - 11, Edge 12 - 15
      // Record all 3 overflow attributes because IE does not infer the shorthand
      // from identically-valued overflowX and overflowY and Edge just mirrors
      // the overflowX value there.
      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade

      restoreDisplay = dataShow && dataShow.display;

      if (restoreDisplay == null) {
        restoreDisplay = dataPriv.get(elem, "display");
      }

      display = jQuery.css(elem, "display");

      if (display === "none") {
        if (restoreDisplay) {
          display = restoreDisplay;
        } else {
          // Get nonempty value(s) by temporarily forcing visibility
          showHide([elem], true);
          restoreDisplay = elem.style.display || restoreDisplay;
          display = jQuery.css(elem, "display");
          showHide([elem]);
        }
      } // Animate inline elements as inline-block


      if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
        if (jQuery.css(elem, "float") === "none") {
          // Restore the original display value at the end of pure show/hide animations
          if (!propTween) {
            anim.done(function () {
              style.display = restoreDisplay;
            });

            if (restoreDisplay == null) {
              display = style.display;
              restoreDisplay = display === "none" ? "" : display;
            }
          }

          style.display = "inline-block";
        }
      }
    }

    if (opts.overflow) {
      style.overflow = "hidden";
      anim.always(function () {
        style.overflow = opts.overflow[0];
        style.overflowX = opts.overflow[1];
        style.overflowY = opts.overflow[2];
      });
    } // Implement show/hide animations


    propTween = false;

    for (prop in orig) {
      // General show/hide setup for this element animation
      if (!propTween) {
        if (dataShow) {
          if ("hidden" in dataShow) {
            hidden = dataShow.hidden;
          }
        } else {
          dataShow = dataPriv.access(elem, "fxshow", {
            display: restoreDisplay
          });
        } // Store hidden/visible for toggle so `.stop().toggle()` "reverses"


        if (toggle) {
          dataShow.hidden = !hidden;
        } // Show elements before animating them


        if (hidden) {
          showHide([elem], true);
        }
        /* eslint-disable no-loop-func */


        anim.done(function () {
          /* eslint-enable no-loop-func */
          // The final step of a "hide" animation is actually hiding the element
          if (!hidden) {
            showHide([elem]);
          }

          dataPriv.remove(elem, "fxshow");

          for (prop in orig) {
            jQuery.style(elem, prop, orig[prop]);
          }
        });
      } // Per-property setup


      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);

      if (!(prop in dataShow)) {
        dataShow[prop] = propTween.start;

        if (hidden) {
          propTween.end = propTween.start;
          propTween.start = 0;
        }
      }
    }
  }

  function propFilter(props, specialEasing) {
    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass

    for (index in props) {
      name = camelCase(index);
      easing = specialEasing[name];
      value = props[index];

      if (Array.isArray(value)) {
        easing = value[1];
        value = props[index] = value[0];
      }

      if (index !== name) {
        props[name] = value;
        delete props[index];
      }

      hooks = jQuery.cssHooks[name];

      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);
        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.
        // Reusing 'index' because we have the correct "name"

        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];
            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }

  function Animation(elem, properties, options) {
    var result,
        stopped,
        index = 0,
        length = Animation.prefilters.length,
        deferred = jQuery.Deferred().always(function () {
      // Don't match elem in the :animated selector
      delete tick.elem;
    }),
        tick = function tick() {
      if (stopped) {
        return false;
      }

      var currentTime = fxNow || createFxNow(),
          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
          // Support: Android 2.3 only
      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
      temp = remaining / animation.duration || 0,
          percent = 1 - temp,
          index = 0,
          length = animation.tweens.length;

      for (; index < length; index++) {
        animation.tweens[index].run(percent);
      }

      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield

      if (percent < 1 && length) {
        return remaining;
      } // If this was an empty animation, synthesize a final progress notification


      if (!length) {
        deferred.notifyWith(elem, [animation, 1, 0]);
      } // Resolve the animation and report its conclusion


      deferred.resolveWith(elem, [animation]);
      return false;
    },
        animation = deferred.promise({
      elem: elem,
      props: jQuery.extend({}, properties),
      opts: jQuery.extend(true, {
        specialEasing: {},
        easing: jQuery.easing._default
      }, options),
      originalProperties: properties,
      originalOptions: options,
      startTime: fxNow || createFxNow(),
      duration: options.duration,
      tweens: [],
      createTween: function createTween(prop, end) {
        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
        animation.tweens.push(tween);
        return tween;
      },
      stop: function stop(gotoEnd) {
        var index = 0,
            // If we are going to the end, we want to run all the tweens
        // otherwise we skip this part
        length = gotoEnd ? animation.tweens.length : 0;

        if (stopped) {
          return this;
        }

        stopped = true;

        for (; index < length; index++) {
          animation.tweens[index].run(1);
        } // Resolve when we played the last frame; otherwise, reject


        if (gotoEnd) {
          deferred.notifyWith(elem, [animation, 1, 0]);
          deferred.resolveWith(elem, [animation, gotoEnd]);
        } else {
          deferred.rejectWith(elem, [animation, gotoEnd]);
        }

        return this;
      }
    }),
        props = animation.props;

    propFilter(props, animation.opts.specialEasing);

    for (; index < length; index++) {
      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);

      if (result) {
        if (isFunction(result.stop)) {
          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
        }

        return result;
      }
    }

    jQuery.map(props, createTween, animation);

    if (isFunction(animation.opts.start)) {
      animation.opts.start.call(elem, animation);
    } // Attach callbacks from options


    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    jQuery.fx.timer(jQuery.extend(tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    }));
    return animation;
  }

  jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {
      "*": [function (prop, value) {
        var tween = this.createTween(prop, value);
        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
        return tween;
      }]
    },
    tweener: function tweener(props, callback) {
      if (isFunction(props)) {
        callback = props;
        props = ["*"];
      } else {
        props = props.match(rnothtmlwhite);
      }

      var prop,
          index = 0,
          length = props.length;

      for (; index < length; index++) {
        prop = props[index];
        Animation.tweeners[prop] = Animation.tweeners[prop] || [];
        Animation.tweeners[prop].unshift(callback);
      }
    },
    prefilters: [defaultPrefilter],
    prefilter: function prefilter(callback, prepend) {
      if (prepend) {
        Animation.prefilters.unshift(callback);
      } else {
        Animation.prefilters.push(callback);
      }
    }
  });

  jQuery.speed = function (speed, easing, fn) {
    var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
      complete: fn || !fn && easing || isFunction(speed) && speed,
      duration: speed,
      easing: fn && easing || easing && !isFunction(easing) && easing
    }; // Go to the end state if fx are off

    if (jQuery.fx.off) {
      opt.duration = 0;
    } else {
      if (typeof opt.duration !== "number") {
        if (opt.duration in jQuery.fx.speeds) {
          opt.duration = jQuery.fx.speeds[opt.duration];
        } else {
          opt.duration = jQuery.fx.speeds._default;
        }
      }
    } // Normalize opt.queue - true/undefined/null -> "fx"


    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    } // Queueing


    opt.old = opt.complete;

    opt.complete = function () {
      if (isFunction(opt.old)) {
        opt.old.call(this);
      }

      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };

    return opt;
  };

  jQuery.fn.extend({
    fadeTo: function fadeTo(speed, to, easing, callback) {
      // Show any hidden elements after setting opacity to 0
      return this.filter(isHiddenWithinTree).css("opacity", 0).show() // Animate to the value specified
      .end().animate({
        opacity: to
      }, speed, easing, callback);
    },
    animate: function animate(prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function doAnimation() {
        // Operate on a copy of prop so per-property easing won't be lost
        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately

        if (empty || dataPriv.get(this, "finish")) {
          anim.stop(true);
        }
      };

      doAnimation.finish = doAnimation;
      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
    },
    stop: function stop(type, clearQueue, gotoEnd) {
      var stopQueue = function stopQueue(hooks) {
        var stop = hooks.stop;
        delete hooks.stop;
        stop(gotoEnd);
      };

      if (typeof type !== "string") {
        gotoEnd = clearQueue;
        clearQueue = type;
        type = undefined;
      }

      if (clearQueue) {
        this.queue(type || "fx", []);
      }

      return this.each(function () {
        var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = dataPriv.get(this);

        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }

        for (index = timers.length; index--;) {
          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
            timers[index].anim.stop(gotoEnd);
            dequeue = false;
            timers.splice(index, 1);
          }
        } // Start the next in the queue if the last step wasn't forced.
        // Timers currently will call their complete callbacks, which
        // will dequeue but only if they were gotoEnd.


        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },
    finish: function finish(type) {
      if (type !== false) {
        type = type || "fx";
      }

      return this.each(function () {
        var index,
            data = dataPriv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0; // Enable finishing flag on private data

        data.finish = true; // Empty the queue first

        jQuery.queue(this, type, []);

        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        } // Look for any active animations, and finish them


        for (index = timers.length; index--;) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);
            timers.splice(index, 1);
          }
        } // Look for any animations in the old queue and finish them


        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        } // Turn off finishing flag


        delete data.finish;
      });
    }
  });
  jQuery.each(["toggle", "show", "hide"], function (_i, name) {
    var cssFn = jQuery.fn[name];

    jQuery.fn[name] = function (speed, easing, callback) {
      return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
    };
  }); // Generate shortcuts for custom animations

  jQuery.each({
    slideDown: genFx("show"),
    slideUp: genFx("hide"),
    slideToggle: genFx("toggle"),
    fadeIn: {
      opacity: "show"
    },
    fadeOut: {
      opacity: "hide"
    },
    fadeToggle: {
      opacity: "toggle"
    }
  }, function (name, props) {
    jQuery.fn[name] = function (speed, easing, callback) {
      return this.animate(props, speed, easing, callback);
    };
  });
  jQuery.timers = [];

  jQuery.fx.tick = function () {
    var timer,
        i = 0,
        timers = jQuery.timers;
    fxNow = Date.now();

    for (; i < timers.length; i++) {
      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)

      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }

    if (!timers.length) {
      jQuery.fx.stop();
    }

    fxNow = undefined;
  };

  jQuery.fx.timer = function (timer) {
    jQuery.timers.push(timer);
    jQuery.fx.start();
  };

  jQuery.fx.interval = 13;

  jQuery.fx.start = function () {
    if (inProgress) {
      return;
    }

    inProgress = true;
    schedule();
  };

  jQuery.fx.stop = function () {
    inProgress = null;
  };

  jQuery.fx.speeds = {
    slow: 600,
    fast: 200,
    // Default speed
    _default: 400
  }; // Based off of the plugin by Clint Helfers, with permission.
  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

  jQuery.fn.delay = function (time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
    type = type || "fx";
    return this.queue(type, function (next, hooks) {
      var timeout = window.setTimeout(next, time);

      hooks.stop = function () {
        window.clearTimeout(timeout);
      };
    });
  };

  (function () {
    var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
    input.type = "checkbox"; // Support: Android <=4.3 only
    // Default value for a checkbox should be "on"

    support.checkOn = input.value !== ""; // Support: IE <=11 only
    // Must access selectedIndex to make default options select

    support.optSelected = opt.selected; // Support: IE <=11 only
    // An input loses its value after becoming a radio

    input = document.createElement("input");
    input.value = "t";
    input.type = "radio";
    support.radioValue = input.value === "t";
  })();

  var boolHook,
      attrHandle = jQuery.expr.attrHandle;
  jQuery.fn.extend({
    attr: function attr(name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },
    removeAttr: function removeAttr(name) {
      return this.each(function () {
        jQuery.removeAttr(this, name);
      });
    }
  });
  jQuery.extend({
    attr: function attr(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      } // Fallback to prop when attributes are not supported


      if (typeof elem.getAttribute === "undefined") {
        return jQuery.prop(elem, name, value);
      } // Attribute hooks are determined by the lowercase version
      // Grab necessary hook if one is defined


      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
      }

      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);
          return;
        }

        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }

        elem.setAttribute(name, value + "");
        return value;
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined

      return ret == null ? undefined : ret;
    },
    attrHooks: {
      type: {
        set: function set(elem, value) {
          if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
            var val = elem.value;
            elem.setAttribute("type", value);

            if (val) {
              elem.value = val;
            }

            return value;
          }
        }
      }
    },
    removeAttr: function removeAttr(elem, value) {
      var name,
          i = 0,
          // Attribute names can contain non-HTML whitespace characters
      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
      attrNames = value && value.match(rnothtmlwhite);

      if (attrNames && elem.nodeType === 1) {
        while (name = attrNames[i++]) {
          elem.removeAttribute(name);
        }
      }
    }
  }); // Hooks for boolean attributes

  boolHook = {
    set: function set(elem, value, name) {
      if (value === false) {
        // Remove boolean attributes when set to false
        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }

      return name;
    }
  };
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (_i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;

    attrHandle[name] = function (elem, name, isXML) {
      var ret,
          handle,
          lowercaseName = name.toLowerCase();

      if (!isXML) {
        // Avoid an infinite loop by temporarily removing this function from the getter
        handle = attrHandle[lowercaseName];
        attrHandle[lowercaseName] = ret;
        ret = getter(elem, name, isXML) != null ? lowercaseName : null;
        attrHandle[lowercaseName] = handle;
      }

      return ret;
    };
  });
  var rfocusable = /^(?:input|select|textarea|button)$/i,
      rclickable = /^(?:a|area)$/i;
  jQuery.fn.extend({
    prop: function prop(name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },
    removeProp: function removeProp(name) {
      return this.each(function () {
        delete this[jQuery.propFix[name] || name];
      });
    }
  });
  jQuery.extend({
    prop: function prop(elem, name, value) {
      var ret,
          hooks,
          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }

      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        // Fix name and attach hooks
        name = jQuery.propFix[name] || name;
        hooks = jQuery.propHooks[name];
      }

      if (value !== undefined) {
        if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
          return ret;
        }

        return elem[name] = value;
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      return elem[name];
    },
    propHooks: {
      tabIndex: {
        get: function get(elem) {
          // Support: IE <=9 - 11 only
          // elem.tabIndex doesn't always return the
          // correct value when it hasn't been explicitly set
          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
          // Use proper attribute retrieval(#12072)
          var tabindex = jQuery.find.attr(elem, "tabindex");

          if (tabindex) {
            return parseInt(tabindex, 10);
          }

          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
            return 0;
          }

          return -1;
        }
      }
    },
    propFix: {
      "for": "htmlFor",
      "class": "className"
    }
  }); // Support: IE <=11 only
  // Accessing the selectedIndex property
  // forces the browser to respect setting selected
  // on the option
  // The getter ensures a default option is selected
  // when in an optgroup
  // eslint rule "no-unused-expressions" is disabled for this code
  // since it considers such accessions noop

  if (!support.optSelected) {
    jQuery.propHooks.selected = {
      get: function get(elem) {
        /* eslint no-unused-expressions: "off" */
        var parent = elem.parentNode;

        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }

        return null;
      },
      set: function set(elem) {
        /* eslint no-unused-expressions: "off" */
        var parent = elem.parentNode;

        if (parent) {
          parent.selectedIndex;

          if (parent.parentNode) {
            parent.parentNode.selectedIndex;
          }
        }
      }
    };
  }

  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
    jQuery.propFix[this.toLowerCase()] = this;
  }); // Strip and collapse whitespace according to HTML spec
  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace

  function stripAndCollapse(value) {
    var tokens = value.match(rnothtmlwhite) || [];
    return tokens.join(" ");
  }

  function getClass(elem) {
    return elem.getAttribute && elem.getAttribute("class") || "";
  }

  function classesToArray(value) {
    if (Array.isArray(value)) {
      return value;
    }

    if (typeof value === "string") {
      return value.match(rnothtmlwhite) || [];
    }

    return [];
  }

  jQuery.fn.extend({
    addClass: function addClass(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;

      if (isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).addClass(value.call(this, j, getClass(this)));
        });
      }

      classes = classesToArray(value);

      if (classes.length) {
        while (elem = this[i++]) {
          curValue = getClass(elem);
          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while (clazz = classes[j++]) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            } // Only assign if different to avoid unneeded rendering.


            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },
    removeClass: function removeClass(value) {
      var classes,
          elem,
          cur,
          curValue,
          clazz,
          j,
          finalValue,
          i = 0;

      if (isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).removeClass(value.call(this, j, getClass(this)));
        });
      }

      if (!arguments.length) {
        return this.attr("class", "");
      }

      classes = classesToArray(value);

      if (classes.length) {
        while (elem = this[i++]) {
          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)

          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while (clazz = classes[j++]) {
              // Remove *all* instances
              while (cur.indexOf(" " + clazz + " ") > -1) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            } // Only assign if different to avoid unneeded rendering.


            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },
    toggleClass: function toggleClass(value, stateVal) {
      var type = typeof value,
          isValidValue = type === "string" || Array.isArray(value);

      if (typeof stateVal === "boolean" && isValidValue) {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }

      if (isFunction(value)) {
        return this.each(function (i) {
          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
        });
      }

      return this.each(function () {
        var className, i, self, classNames;

        if (isValidValue) {
          // Toggle individual class names
          i = 0;
          self = jQuery(this);
          classNames = classesToArray(value);

          while (className = classNames[i++]) {
            // Check each className given, space separated list
            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          } // Toggle whole class name

        } else if (value === undefined || type === "boolean") {
          className = getClass(this);

          if (className) {
            // Store className if set
            dataPriv.set(this, "__className__", className);
          } // If the element has a class name or if we're passed `false`,
          // then remove the whole classname (if there was one, the above saved it).
          // Otherwise bring back whatever was previously saved (if anything),
          // falling back to the empty string if nothing was stored.


          if (this.setAttribute) {
            this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
          }
        }
      });
    },
    hasClass: function hasClass(selector) {
      var className,
          elem,
          i = 0;
      className = " " + selector + " ";

      while (elem = this[i++]) {
        if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
          return true;
        }
      }

      return false;
    }
  });
  var rreturn = /\r/g;
  jQuery.fn.extend({
    val: function val(value) {
      var hooks,
          ret,
          valueIsFunction,
          elem = this[0];

      if (!arguments.length) {
        if (elem) {
          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];

          if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
            return ret;
          }

          ret = elem.value; // Handle most common string cases

          if (typeof ret === "string") {
            return ret.replace(rreturn, "");
          } // Handle cases where value is null/undef or number


          return ret == null ? "" : ret;
        }

        return;
      }

      valueIsFunction = isFunction(value);
      return this.each(function (i) {
        var val;

        if (this.nodeType !== 1) {
          return;
        }

        if (valueIsFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        } // Treat null/undefined as ""; convert numbers to string


        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (Array.isArray(val)) {
          val = jQuery.map(val, function (value) {
            return value == null ? "" : value + "";
          });
        }

        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting

        if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
          this.value = val;
        }
      });
    }
  });
  jQuery.extend({
    valHooks: {
      option: {
        get: function get(elem) {
          var val = jQuery.find.attr(elem, "value");
          return val != null ? val : // Support: IE <=10 - 11 only
          // option.text throws exceptions (#14686, #14858)
          // Strip and collapse whitespace
          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
          stripAndCollapse(jQuery.text(elem));
        }
      },
      select: {
        get: function get(elem) {
          var value,
              option,
              i,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one",
              values = one ? null : [],
              max = one ? index + 1 : options.length;

          if (index < 0) {
            i = max;
          } else {
            i = one ? index : 0;
          } // Loop through all the selected options


          for (; i < max; i++) {
            option = options[i]; // Support: IE <=9 only
            // IE8-9 doesn't update selected after form reset (#2551)

            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup
            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
              // Get the specific value for the option
              value = jQuery(option).val(); // We don't need an array for one selects

              if (one) {
                return value;
              } // Multi-Selects return an array


              values.push(value);
            }
          }

          return values;
        },
        set: function set(elem, value) {
          var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;

          while (i--) {
            option = options[i];
            /* eslint-disable no-cond-assign */

            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
              optionSet = true;
            }
            /* eslint-enable no-cond-assign */

          } // Force browsers to behave consistently when non-matching value is set


          if (!optionSet) {
            elem.selectedIndex = -1;
          }

          return values;
        }
      }
    }
  }); // Radios and checkboxes getter/setter

  jQuery.each(["radio", "checkbox"], function () {
    jQuery.valHooks[this] = {
      set: function set(elem, value) {
        if (Array.isArray(value)) {
          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
        }
      }
    };

    if (!support.checkOn) {
      jQuery.valHooks[this].get = function (elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  }); // Return jQuery for attributes-only inclusion

  support.focusin = "onfocusin" in window;

  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
      stopPropagationCallback = function stopPropagationCallback(e) {
    e.stopPropagation();
  };

  jQuery.extend(jQuery.event, {
    trigger: function trigger(event, data, elem, onlyHandlers) {
      var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          lastElement,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes

      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      } // focus/blur morphs to focusin/out; ensure we're not firing them right now


      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }

      if (type.indexOf(".") > -1) {
        // Namespaced trigger; create a regexp to match event type in handle()
        namespaces = type.split(".");
        type = namespaces.shift();
        namespaces.sort();
      }

      ontype = type.indexOf(":") < 0 && "on" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string

      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

      event.isTrigger = onlyHandlers ? 2 : 3;
      event.namespace = namespaces.join(".");
      event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null; // Clean up the event in case it is being reused

      event.result = undefined;

      if (!event.target) {
        event.target = elem;
      } // Clone any incoming data and prepend the event, creating the handler arg list


      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines

      special = jQuery.event.special[type] || {};

      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
        return;
      } // Determine event propagation path in advance, per W3C events spec (#9951)
      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)


      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
        bubbleType = special.delegateType || type;

        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }

        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);
          tmp = cur;
        } // Only add window if we got to document (e.g., not plain obj or detached DOM)


        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      } // Fire handlers on the event path


      i = 0;

      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        lastElement = cur;
        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler

        handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");

        if (handle) {
          handle.apply(cur, data);
        } // Native handler


        handle = ontype && cur[ontype];

        if (handle && handle.apply && acceptData(cur)) {
          event.result = handle.apply(cur, data);

          if (event.result === false) {
            event.preventDefault();
          }
        }
      }

      event.type = type; // If nobody prevented the default action, do it now

      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
          // Call a native DOM method on the target with the same name as the event.
          // Don't do default actions on window, that's where global variables be (#6170)
          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
            // Don't re-trigger an onFOO event when we call its FOO() method
            tmp = elem[ontype];

            if (tmp) {
              elem[ontype] = null;
            } // Prevent re-triggering of the same event, since we already bubbled it above


            jQuery.event.triggered = type;

            if (event.isPropagationStopped()) {
              lastElement.addEventListener(type, stopPropagationCallback);
            }

            elem[type]();

            if (event.isPropagationStopped()) {
              lastElement.removeEventListener(type, stopPropagationCallback);
            }

            jQuery.event.triggered = undefined;

            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }

      return event.result;
    },
    // Piggyback on a donor event to simulate a different one
    // Used only for `focus(in | out)` events
    simulate: function simulate(type, elem, event) {
      var e = jQuery.extend(new jQuery.Event(), event, {
        type: type,
        isSimulated: true
      });
      jQuery.event.trigger(e, null, elem);
    }
  });
  jQuery.fn.extend({
    trigger: function trigger(type, data) {
      return this.each(function () {
        jQuery.event.trigger(type, data, this);
      });
    },
    triggerHandler: function triggerHandler(type, data) {
      var elem = this[0];

      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    }
  }); // Support: Firefox <=44
  // Firefox doesn't have focus(in | out) events
  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
  //
  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
  // focus(in | out) events fire after focus & blur events,
  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857

  if (!support.focusin) {
    jQuery.each({
      focus: "focusin",
      blur: "focusout"
    }, function (orig, fix) {
      // Attach a single capturing handler on the document while someone wants focusin/focusout
      var handler = function handler(event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
      };

      jQuery.event.special[fix] = {
        setup: function setup() {
          // Handle: regular nodes (via `this.ownerDocument`), window
          // (via `this.document`) & document (via `this`).
          var doc = this.ownerDocument || this.document || this,
              attaches = dataPriv.access(doc, fix);

          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }

          dataPriv.access(doc, fix, (attaches || 0) + 1);
        },
        teardown: function teardown() {
          var doc = this.ownerDocument || this.document || this,
              attaches = dataPriv.access(doc, fix) - 1;

          if (!attaches) {
            doc.removeEventListener(orig, handler, true);
            dataPriv.remove(doc, fix);
          } else {
            dataPriv.access(doc, fix, attaches);
          }
        }
      };
    });
  }

  var location = window.location;
  var nonce = {
    guid: Date.now()
  };
  var rquery = /\?/; // Cross-browser xml parsing

  jQuery.parseXML = function (data) {
    var xml, parserErrorElem;

    if (!data || typeof data !== "string") {
      return null;
    } // Support: IE 9 - 11 only
    // IE throws on parseFromString with invalid input.


    try {
      xml = new window.DOMParser().parseFromString(data, "text/xml");
    } catch (e) {}

    parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];

    if (!xml || parserErrorElem) {
      jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {
        return el.textContent;
      }).join("\n") : data));
    }

    return xml;
  };

  var rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;

  function buildParams(prefix, obj, traditional, add) {
    var name;

    if (Array.isArray(obj)) {
      // Serialize array item.
      jQuery.each(obj, function (i, v) {
        if (traditional || rbracket.test(prefix)) {
          // Treat each array item as a scalar.
          add(prefix, v);
        } else {
          // Item is non-scalar (array or object), encode its numeric index.
          buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add);
        }
      });
    } else if (!traditional && toType(obj) === "object") {
      // Serialize object item.
      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      // Serialize scalar item.
      add(prefix, obj);
    }
  } // Serialize an array of form elements or a set of
  // key/values into a query string


  jQuery.param = function (a, traditional) {
    var prefix,
        s = [],
        add = function add(key, valueOrFunction) {
      // If value is a function, invoke it and use its return value
      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
      s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
    };

    if (a == null) {
      return "";
    } // If an array was passed in, assume that it is an array of form elements.


    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
      // Serialize the form elements
      jQuery.each(a, function () {
        add(this.name, this.value);
      });
    } else {
      // If traditional, encode the "old" way (the way 1.3.2 or older
      // did it), otherwise encode params recursively.
      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    } // Return the resulting serialization


    return s.join("&");
  };

  jQuery.fn.extend({
    serialize: function serialize() {
      return jQuery.param(this.serializeArray());
    },
    serializeArray: function serializeArray() {
      return this.map(function () {
        // Can add propHook for "elements" to filter or add form elements
        var elements = jQuery.prop(this, "elements");
        return elements ? jQuery.makeArray(elements) : this;
      }).filter(function () {
        var type = this.type; // Use .is( ":disabled" ) so that fieldset[disabled] works

        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
      }).map(function (_i, elem) {
        var val = jQuery(this).val();

        if (val == null) {
          return null;
        }

        if (Array.isArray(val)) {
          return jQuery.map(val, function (val) {
            return {
              name: elem.name,
              value: val.replace(rCRLF, "\r\n")
            };
          });
        }

        return {
          name: elem.name,
          value: val.replace(rCRLF, "\r\n")
        };
      }).get();
    }
  });
  var r20 = /%20/g,
      rhash = /#.*$/,
      rantiCache = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      // #7653, #8125, #8152: local protocol detection
  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,

  /* Prefilters
   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
   * 2) These are called:
   *    - BEFORE asking for a transport
   *    - AFTER param serialization (s.data is a string if s.processData is true)
   * 3) key is the dataType
   * 4) the catchall symbol "*" can be used
   * 5) execution will start with transport dataType and THEN continue down to "*" if needed
   */
  prefilters = {},

  /* Transports bindings
   * 1) key is the dataType
   * 2) the catchall symbol "*" can be used
   * 3) selection will start with transport dataType and THEN go to "*" if needed
   */
  transports = {},
      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
  allTypes = "*/".concat("*"),
      // Anchor tag for parsing the document origin
  originAnchor = document.createElement("a");
  originAnchor.href = location.href; // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

  function addToPrefiltersOrTransports(structure) {
    // dataTypeExpression is optional and defaults to "*"
    return function (dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;
        dataTypeExpression = "*";
      }

      var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

      if (isFunction(func)) {
        // For each dataType in the dataTypeExpression
        while (dataType = dataTypes[i++]) {
          // Prepend if requested
          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";
            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  } // Base inspection function for prefilters and transports


  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    var inspected = {},
        seekingTransport = structure === transports;

    function inspect(dataType) {
      var selected;
      inspected[dataType] = true;
      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);

        if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
          options.dataTypes.unshift(dataTypeOrTransport);
          inspect(dataTypeOrTransport);
          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });
      return selected;
    }

    return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
  } // A special extend for ajax options
  // that takes "flat" options (not to be deep extended)
  // Fixes #9887


  function ajaxExtend(target, src) {
    var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};

    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
      }
    }

    if (deep) {
      jQuery.extend(true, target, deep);
    }

    return target;
  }
  /* Handles responses to an ajax request:
   * - finds the right dataType (mediates between content-type and expected dataType)
   * - returns the corresponding response
   */


  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process

    while (dataTypes[0] === "*") {
      dataTypes.shift();

      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    } // Check if we're dealing with a known content-type


    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);
          break;
        }
      }
    } // Check to see if we have a response for the expected dataType


    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      // Try convertible dataTypes
      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;
          break;
        }

        if (!firstDataType) {
          firstDataType = type;
        }
      } // Or just use first one


      finalDataType = finalDataType || firstDataType;
    } // If we found a dataType
    // We add the dataType to the list if needed
    // and return the corresponding response


    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }

      return responses[finalDataType];
    }
  }
  /* Chain conversions given the request and the original response
   * Also sets the responseXXX fields on the jqXHR instance
   */


  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        // Work with a copy of dataTypes in case we need to modify it for conversion
    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys

    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }

    current = dataTypes.shift(); // Convert to each sequential dataType

    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      } // Apply the dataFilter if provided


      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }

      prev = current;
      current = dataTypes.shift();

      if (current) {
        // There's only work to do if current dataType is non-auto
        if (current === "*") {
          current = prev; // Convert response if prev dataType is non-auto and differs from current
        } else if (prev !== "*" && prev !== current) {
          // Seek a direct converter
          conv = converters[prev + " " + current] || converters["* " + current]; // If none found, seek a pair

          if (!conv) {
            for (conv2 in converters) {
              // If conv2 outputs current
              tmp = conv2.split(" ");

              if (tmp[1] === current) {
                // If prev can be converted to accepted input
                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];

                if (conv) {
                  // Condense equivalence converters
                  if (conv === true) {
                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];
                    dataTypes.unshift(tmp[1]);
                  }

                  break;
                }
              }
            }
          } // Apply converter (if not an equivalence)


          if (conv !== true) {
            // Unless errors are allowed to bubble, catch and return them
            if (conv && s["throws"]) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: conv ? e : "No conversion from " + prev + " to " + current
                };
              }
            }
          }
        }
      }
    }

    return {
      state: "success",
      data: response
    };
  }

  jQuery.extend({
    // Counter for holding the number of active queries
    active: 0,
    // Last-Modified header cache for next request
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: location.href,
      type: "GET",
      isLocal: rlocalProtocol.test(location.protocol),
      global: true,
      processData: true,
      async: true,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",

      /*
      timeout: 0,
      data: null,
      dataType: null,
      username: null,
      password: null,
      cache: null,
      throws: false,
      traditional: false,
      headers: {},
      */
      accepts: {
        "*": allTypes,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      // Data converters
      // Keys separate source (or catchall "*") and destination types with a single space
      converters: {
        // Convert anything to text
        "* text": String,
        // Text to html (true = no transformation)
        "text html": true,
        // Evaluate text as a json expression
        "text json": JSON.parse,
        // Parse text as xml
        "text xml": jQuery.parseXML
      },
      // For options that shouldn't be deep extended:
      // you can add your own custom options here if
      // and when you create one that shouldn't be
      // deep extended (see ajaxExtend)
      flatOptions: {
        url: true,
        context: true
      }
    },
    // Creates a full fledged settings object into target
    // with both ajaxSettings and settings fields.
    // If target is omitted, writes into ajaxSettings.
    ajaxSetup: function ajaxSetup(target, settings) {
      return settings ? // Building a settings object
      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings
      ajaxExtend(jQuery.ajaxSettings, target);
    },
    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
    ajaxTransport: addToPrefiltersOrTransports(transports),
    // Main method
    ajax: function ajax(url, options) {
      // If url is an object, simulate pre-1.5 signature
      if (typeof url === "object") {
        options = url;
        url = undefined;
      } // Force options to be an object


      options = options || {};

      var transport,
          // URL without anti-cache param
      cacheURL,
          // Response headers
      responseHeadersString,
          responseHeaders,
          // timeout handle
      timeoutTimer,
          // Url cleanup var
      urlAnchor,
          // Request state (becomes false upon send and true upon completion)
      completed,
          // To know if global events are to be dispatched
      fireGlobals,
          // Loop variable
      i,
          // uncached part of the url
      uncached,
          // Create the final options object
      s = jQuery.ajaxSetup({}, options),
          // Callbacks context
      callbackContext = s.context || s,
          // Context for global events is callbackContext if it is a DOM node or jQuery collection
      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          // Deferreds
      deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          // Status-dependent callbacks
      _statusCode = s.statusCode || {},
          // Headers (they are sent all at once)
      requestHeaders = {},
          requestHeadersNames = {},
          // Default abort message
      strAbort = "canceled",
          // Fake xhr
      jqXHR = {
        readyState: 0,
        // Builds headers hashtable if needed
        getResponseHeader: function getResponseHeader(key) {
          var match;

          if (completed) {
            if (!responseHeaders) {
              responseHeaders = {};

              while (match = rheaders.exec(responseHeadersString)) {
                responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
              }
            }

            match = responseHeaders[key.toLowerCase() + " "];
          }

          return match == null ? null : match.join(", ");
        },
        // Raw string
        getAllResponseHeaders: function getAllResponseHeaders() {
          return completed ? responseHeadersString : null;
        },
        // Caches the header
        setRequestHeader: function setRequestHeader(name, value) {
          if (completed == null) {
            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
            requestHeaders[name] = value;
          }

          return this;
        },
        // Overrides response content-type header
        overrideMimeType: function overrideMimeType(type) {
          if (completed == null) {
            s.mimeType = type;
          }

          return this;
        },
        // Status-dependent callbacks
        statusCode: function statusCode(map) {
          var code;

          if (map) {
            if (completed) {
              // Execute the appropriate callbacks
              jqXHR.always(map[jqXHR.status]);
            } else {
              // Lazy-add the new callbacks in a way that preserves old ones
              for (code in map) {
                _statusCode[code] = [_statusCode[code], map[code]];
              }
            }
          }

          return this;
        },
        // Cancel the request
        abort: function abort(statusText) {
          var finalText = statusText || strAbort;

          if (transport) {
            transport.abort(finalText);
          }

          done(0, finalText);
          return this;
        }
      }; // Attach deferreds


      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)
      // Handle falsy url in the settings object (#10093: consistency with old signature)
      // We also use the url parameter if available

      s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"); // Alias method option to type as per ticket #12004

      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list

      s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]; // A cross-domain request is in order when the origin doesn't match the current origin.

      if (s.crossDomain == null) {
        urlAnchor = document.createElement("a"); // Support: IE <=8 - 11, Edge 12 - 15
        // IE throws exception on accessing the href property if url is malformed,
        // e.g. http://example.com:80x/

        try {
          urlAnchor.href = s.url; // Support: IE <=8 - 11 only
          // Anchor's host property isn't correctly set when s.url is relative

          urlAnchor.href = urlAnchor.href;
          s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
        } catch (e) {
          // If there is an error parsing the URL, assume it is crossDomain,
          // it can be rejected by the transport if it is invalid
          s.crossDomain = true;
        }
      } // Convert data if not already a string


      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      } // Apply prefilters


      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there

      if (completed) {
        return jqXHR;
      } // We can fire global events as of now if asked to
      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)


      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests

      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      } // Uppercase the type


      s.type = s.type.toUpperCase(); // Determine if request has content

      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since
      // and/or If-None-Match header later on
      // Remove hash to simplify url manipulation

      cacheURL = s.url.replace(rhash, ""); // More options handling for requests with no content

      if (!s.hasContent) {
        // Remember the hash so we can put it back
        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url

        if (s.data && (s.processData || typeof s.data === "string")) {
          cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data; // #9682: remove data so that it's not used in an eventual retry

          delete s.data;
        } // Add or update anti-cache param if needed


        if (s.cache === false) {
          cacheURL = cacheURL.replace(rantiCache, "$1");
          uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
        } // Put hash and anti-cache on the URL that will be requested (gh-1732)


        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)
      } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
        s.data = s.data.replace(r20, "+");
      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.


      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
        }

        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      } // Set the correct header, if data is being sent


      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      } // Set the Accepts header for the server, depending on the dataType


      jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]); // Check for headers option

      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      } // Allow custom headers/mimetypes and early abort


      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {
        // Abort if not done already and return
        return jqXHR.abort();
      } // Aborting is no longer a cancellation


      strAbort = "abort"; // Install callbacks on deferreds

      completeDeferred.add(s.complete);
      jqXHR.done(s.success);
      jqXHR.fail(s.error); // Get transport

      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort

      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1; // Send global event

        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        } // If request was aborted inside ajaxSend, stop there


        if (completed) {
          return jqXHR;
        } // Timeout


        if (s.async && s.timeout > 0) {
          timeoutTimer = window.setTimeout(function () {
            jqXHR.abort("timeout");
          }, s.timeout);
        }

        try {
          completed = false;
          transport.send(requestHeaders, done);
        } catch (e) {
          // Rethrow post-completion exceptions
          if (completed) {
            throw e;
          } // Propagate others as results


          done(-1, e);
        }
      } // Callback for when everything is done


      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText; // Ignore repeat invocations

        if (completed) {
          return;
        }

        completed = true; // Clear timeout if it exists

        if (timeoutTimer) {
          window.clearTimeout(timeoutTimer);
        } // Dereference transport for early garbage collection
        // (no matter how long the jqXHR object will be used)


        transport = undefined; // Cache response headers

        responseHeadersString = headers || ""; // Set readyState

        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful

        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data

        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        } // Use a noop converter for missing script but not if jsonp


        if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1 && jQuery.inArray("json", s.dataTypes) < 0) {
          s.converters["text script"] = function () {};
        } // Convert no matter what (that way responseXXX fields are always set)


        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining

        if (isSuccess) {
          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");

            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }

            modified = jqXHR.getResponseHeader("etag");

            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          } // if no content


          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent"; // if not modified
          } else if (status === 304) {
            statusText = "notmodified"; // If we have data, let's convert it
          } else {
            statusText = response.state;
            success = response.data;
            error = response.error;
            isSuccess = !error;
          }
        } else {
          // Extract error from statusText and normalize for non-aborts
          error = statusText;

          if (status || !statusText) {
            statusText = "error";

            if (status < 0) {
              status = 0;
            }
          }
        } // Set data for the fake xhr object


        jqXHR.status = status;
        jqXHR.statusText = (nativeStatusText || statusText) + ""; // Success/Error

        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        } // Status-dependent callbacks


        jqXHR.statusCode(_statusCode);
        _statusCode = undefined;

        if (fireGlobals) {
          globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
        } // Complete


        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]); // Handle the global AJAX counter

          if (! --jQuery.active) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }

      return jqXHR;
    },
    getJSON: function getJSON(url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },
    getScript: function getScript(url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    }
  });
  jQuery.each(["get", "post"], function (_i, method) {
    jQuery[method] = function (url, data, callback, type) {
      // Shift arguments if data argument was omitted
      if (isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      } // The url can be an options object (which then must have .url)


      return jQuery.ajax(jQuery.extend({
        url: url,
        type: method,
        dataType: type,
        data: data,
        success: callback
      }, jQuery.isPlainObject(url) && url));
    };
  });
  jQuery.ajaxPrefilter(function (s) {
    var i;

    for (i in s.headers) {
      if (i.toLowerCase() === "content-type") {
        s.contentType = s.headers[i] || "";
      }
    }
  });

  jQuery._evalUrl = function (url, options, doc) {
    return jQuery.ajax({
      url: url,
      // Make this explicit, since user can override this through ajaxSetup (#11264)
      type: "GET",
      dataType: "script",
      cache: true,
      async: false,
      global: false,
      // Only evaluate the response if it is successful (gh-4126)
      // dataFilter is not invoked for failure responses, so using it instead
      // of the default converter is kludgy but it works.
      converters: {
        "text script": function textScript() {}
      },
      dataFilter: function dataFilter(response) {
        jQuery.globalEval(response, options, doc);
      }
    });
  };

  jQuery.fn.extend({
    wrapAll: function wrapAll(html) {
      var wrap;

      if (this[0]) {
        if (isFunction(html)) {
          html = html.call(this[0]);
        } // The elements to wrap the target around


        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }

        wrap.map(function () {
          var elem = this;

          while (elem.firstElementChild) {
            elem = elem.firstElementChild;
          }

          return elem;
        }).append(this);
      }

      return this;
    },
    wrapInner: function wrapInner(html) {
      if (isFunction(html)) {
        return this.each(function (i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }

      return this.each(function () {
        var self = jQuery(this),
            contents = self.contents();

        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },
    wrap: function wrap(html) {
      var htmlIsFunction = isFunction(html);
      return this.each(function (i) {
        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
      });
    },
    unwrap: function unwrap(selector) {
      this.parent(selector).not("body").each(function () {
        jQuery(this).replaceWith(this.childNodes);
      });
      return this;
    }
  });

  jQuery.expr.pseudos.hidden = function (elem) {
    return !jQuery.expr.pseudos.visible(elem);
  };

  jQuery.expr.pseudos.visible = function (elem) {
    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
  };

  jQuery.ajaxSettings.xhr = function () {
    try {
      return new window.XMLHttpRequest();
    } catch (e) {}
  };

  var xhrSuccessStatus = {
    // File protocol always yields status code 0, assume 200
    0: 200,
    // Support: IE <=9 only
    // #1450: sometimes IE returns 1223 when it should be 204
    1223: 204
  },
      xhrSupported = jQuery.ajaxSettings.xhr();
  support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
  support.ajax = xhrSupported = !!xhrSupported;
  jQuery.ajaxTransport(function (options) {
    var _callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest


    if (support.cors || xhrSupported && !options.crossDomain) {
      return {
        send: function send(headers, complete) {
          var i,
              xhr = options.xhr();
          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided

          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          } // Override mime type if needed


          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          } // X-Requested-With header
          // For cross-domain requests, seeing as conditions for a preflight are
          // akin to a jigsaw puzzle, we simply never set it to be sure.
          // (it can always be set on a per-request basis or even using ajaxSetup)
          // For same-domain requests, won't change header if already provided.


          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          } // Set headers


          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          } // Callback


          _callback = function callback(type) {
            return function () {
              if (_callback) {
                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;

                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  // Support: IE <=9 only
                  // On a manual native abort, IE9 throws
                  // errors on any property access that is not readyState
                  if (typeof xhr.status !== "number") {
                    complete(0, "error");
                  } else {
                    complete( // File: protocol always yields status 0; see #8605, #14207
                    xhr.status, xhr.statusText);
                  }
                } else {
                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only
                  // IE9 has no XHR2 but throws on binary (trac-11426)
                  // For XHR2 non-text, let the caller handle it (gh-2498)
                  (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
                    binary: xhr.response
                  } : {
                    text: xhr.responseText
                  }, xhr.getAllResponseHeaders());
                }
              }
            };
          }; // Listen to events


          xhr.onload = _callback();
          errorCallback = xhr.onerror = xhr.ontimeout = _callback("error"); // Support: IE 9 only
          // Use onreadystatechange to replace onabort
          // to handle uncaught aborts

          if (xhr.onabort !== undefined) {
            xhr.onabort = errorCallback;
          } else {
            xhr.onreadystatechange = function () {
              // Check readyState before timeout as it changes
              if (xhr.readyState === 4) {
                // Allow onerror to be called first,
                // but that will not handle a native abort
                // Also, save errorCallback to a variable
                // as xhr.onerror cannot be accessed
                window.setTimeout(function () {
                  if (_callback) {
                    errorCallback();
                  }
                });
              }
            };
          } // Create the abort callback


          _callback = _callback("abort");

          try {
            // Do send the request (this may raise an exception)
            xhr.send(options.hasContent && options.data || null);
          } catch (e) {
            // #14683: Only rethrow if this hasn't been notified as an error yet
            if (_callback) {
              throw e;
            }
          }
        },
        abort: function abort() {
          if (_callback) {
            _callback();
          }
        }
      };
    }
  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)

  jQuery.ajaxPrefilter(function (s) {
    if (s.crossDomain) {
      s.contents.script = false;
    }
  }); // Install script dataType

  jQuery.ajaxSetup({
    accepts: {
      script: "text/javascript, application/javascript, " + "application/ecmascript, application/x-ecmascript"
    },
    contents: {
      script: /\b(?:java|ecma)script\b/
    },
    converters: {
      "text script": function textScript(text) {
        jQuery.globalEval(text);
        return text;
      }
    }
  }); // Handle cache's special case and crossDomain

  jQuery.ajaxPrefilter("script", function (s) {
    if (s.cache === undefined) {
      s.cache = false;
    }

    if (s.crossDomain) {
      s.type = "GET";
    }
  }); // Bind script tag hack transport

  jQuery.ajaxTransport("script", function (s) {
    // This transport only deals with cross domain or forced-by-attrs requests
    if (s.crossDomain || s.scriptAttrs) {
      var script, _callback2;

      return {
        send: function send(_, complete) {
          script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({
            charset: s.scriptCharset,
            src: s.url
          }).on("load error", _callback2 = function callback(evt) {
            script.remove();
            _callback2 = null;

            if (evt) {
              complete(evt.type === "error" ? 404 : 200, evt.type);
            }
          }); // Use native DOM manipulation to avoid our domManip AJAX trickery

          document.head.appendChild(script[0]);
        },
        abort: function abort() {
          if (_callback2) {
            _callback2();
          }
        }
      };
    }
  });
  var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/; // Default jsonp settings

  jQuery.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function jsonpCallback() {
      var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
      this[callback] = true;
      return callback;
    }
  }); // Detect, normalize options and install callbacks for jsonp requests

  jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
    var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data"); // Handle iff the expected data type is "jsonp" or we have a parameter to set

    if (jsonProp || s.dataTypes[0] === "jsonp") {
      // Get callback name, remembering preexisting value associated with it
      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data

      if (jsonProp) {
        s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
      } else if (s.jsonp !== false) {
        s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
      } // Use data converter to retrieve json after script execution


      s.converters["script json"] = function () {
        if (!responseContainer) {
          jQuery.error(callbackName + " was not called");
        }

        return responseContainer[0];
      }; // Force json dataType


      s.dataTypes[0] = "json"; // Install callback

      overwritten = window[callbackName];

      window[callbackName] = function () {
        responseContainer = arguments;
      }; // Clean-up function (fires after converters)


      jqXHR.always(function () {
        // If previous value didn't exist - remove it
        if (overwritten === undefined) {
          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value
        } else {
          window[callbackName] = overwritten;
        } // Save back as free


        if (s[callbackName]) {
          // Make sure that re-using the options doesn't screw things around
          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use

          oldCallbacks.push(callbackName);
        } // Call if it was a function and we have a response


        if (responseContainer && isFunction(overwritten)) {
          overwritten(responseContainer[0]);
        }

        responseContainer = overwritten = undefined;
      }); // Delegate to script

      return "script";
    }
  }); // Support: Safari 8 only
  // In Safari 8 documents created via document.implementation.createHTMLDocument
  // collapse sibling forms: the second one becomes a child of the first one.
  // Because of that, this security measure has to be disabled in Safari 8.
  // https://bugs.webkit.org/show_bug.cgi?id=137337

  support.createHTMLDocument = function () {
    var body = document.implementation.createHTMLDocument("").body;
    body.innerHTML = "<form></form><form></form>";
    return body.childNodes.length === 2;
  }(); // Argument "data" should be string of html
  // context (optional): If specified, the fragment will be created in this context,
  // defaults to document
  // keepScripts (optional): If true, will include scripts passed in the html string


  jQuery.parseHTML = function (data, context, keepScripts) {
    if (typeof data !== "string") {
      return [];
    }

    if (typeof context === "boolean") {
      keepScripts = context;
      context = false;
    }

    var base, parsed, scripts;

    if (!context) {
      // Stop scripts or inline event handlers from being executed immediately
      // by using document.implementation
      if (support.createHTMLDocument) {
        context = document.implementation.createHTMLDocument(""); // Set the base href for the created document
        // so any parsed elements with URLs
        // are based on the document's URL (gh-2965)

        base = context.createElement("base");
        base.href = document.location.href;
        context.head.appendChild(base);
      } else {
        context = document;
      }
    }

    parsed = rsingleTag.exec(data);
    scripts = !keepScripts && []; // Single tag

    if (parsed) {
      return [context.createElement(parsed[1])];
    }

    parsed = buildFragment([data], context, scripts);

    if (scripts && scripts.length) {
      jQuery(scripts).remove();
    }

    return jQuery.merge([], parsed.childNodes);
  };
  /**
   * Load a url into a page
   */


  jQuery.fn.load = function (url, params, callback) {
    var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");

    if (off > -1) {
      selector = stripAndCollapse(url.slice(off));
      url = url.slice(0, off);
    } // If it's a function


    if (isFunction(params)) {
      // We assume that it's the callback
      callback = params;
      params = undefined; // Otherwise, build a param string
    } else if (params && typeof params === "object") {
      type = "POST";
    } // If we have elements to modify, make the request


    if (self.length > 0) {
      jQuery.ajax({
        url: url,
        // If "type" variable is undefined, then "GET" method will be used.
        // Make value of this field explicit since
        // user can override it through ajaxSetup method
        type: type || "GET",
        dataType: "html",
        data: params
      }).done(function (responseText) {
        // Save response for use in complete callback
        response = arguments;
        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div
        // Exclude scripts to avoid IE 'Permission Denied' errors
        jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result
        responseText); // If the request succeeds, this function gets "data", "status", "jqXHR"
        // but they are ignored because response was set above.
        // If it fails, this function gets "jqXHR", "status", "error"
      }).always(callback && function (jqXHR, status) {
        self.each(function () {
          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
        });
      });
    }

    return this;
  };

  jQuery.expr.pseudos.animated = function (elem) {
    return jQuery.grep(jQuery.timers, function (fn) {
      return elem === fn.elem;
    }).length;
  };

  jQuery.offset = {
    setOffset: function setOffset(elem, options, i) {
      var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {}; // Set position first, in-case top/left are set even on static elem

      if (position === "static") {
        elem.style.position = "relative";
      }

      curOffset = curElem.offset();
      curCSSTop = jQuery.css(elem, "top");
      curCSSLeft = jQuery.css(elem, "left");
      calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1; // Need to be able to calculate position if either
      // top or left is auto and position is either absolute or fixed

      if (calculatePosition) {
        curPosition = curElem.position();
        curTop = curPosition.top;
        curLeft = curPosition.left;
      } else {
        curTop = parseFloat(curCSSTop) || 0;
        curLeft = parseFloat(curCSSLeft) || 0;
      }

      if (isFunction(options)) {
        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
        options = options.call(elem, i, jQuery.extend({}, curOffset));
      }

      if (options.top != null) {
        props.top = options.top - curOffset.top + curTop;
      }

      if (options.left != null) {
        props.left = options.left - curOffset.left + curLeft;
      }

      if ("using" in options) {
        options.using.call(elem, props);
      } else {
        curElem.css(props);
      }
    }
  };
  jQuery.fn.extend({
    // offset() relates an element's border box to the document origin
    offset: function offset(options) {
      // Preserve chaining for setter
      if (arguments.length) {
        return options === undefined ? this : this.each(function (i) {
          jQuery.offset.setOffset(this, options, i);
        });
      }

      var rect,
          win,
          elem = this[0];

      if (!elem) {
        return;
      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
      // Support: IE <=11 only
      // Running getBoundingClientRect on a
      // disconnected node in IE throws an error


      if (!elem.getClientRects().length) {
        return {
          top: 0,
          left: 0
        };
      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR


      rect = elem.getBoundingClientRect();
      win = elem.ownerDocument.defaultView;
      return {
        top: rect.top + win.pageYOffset,
        left: rect.left + win.pageXOffset
      };
    },
    // position() relates an element's margin box to its offset parent's padding box
    // This corresponds to the behavior of CSS absolute positioning
    position: function position() {
      if (!this[0]) {
        return;
      }

      var offsetParent,
          offset,
          doc,
          elem = this[0],
          parentOffset = {
        top: 0,
        left: 0
      }; // position:fixed elements are offset from the viewport, which itself always has zero offset

      if (jQuery.css(elem, "position") === "fixed") {
        // Assume position:fixed implies availability of getBoundingClientRect
        offset = elem.getBoundingClientRect();
      } else {
        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element
        // when a statically positioned element is identified

        doc = elem.ownerDocument;
        offsetParent = elem.offsetParent || doc.documentElement;

        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.parentNode;
        }

        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
          // Incorporate borders into its offset, since they are outside its content origin
          parentOffset = jQuery(offsetParent).offset();
          parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
          parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
        }
      } // Subtract parent offsets and element margins


      return {
        top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
        left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
      };
    },
    // This method will return documentElement in the following cases:
    // 1) For the element inside the iframe without offsetParent, this method will return
    //    documentElement of the parent window
    // 2) For the hidden or detached element
    // 3) For body or html element, i.e. in case of the html node - it will return itself
    //
    // but those exceptions were never presented as a real life use-cases
    // and might be considered as more preferable results.
    //
    // This logic, however, is not guaranteed and can change at any point in the future
    offsetParent: function offsetParent() {
      return this.map(function () {
        var offsetParent = this.offsetParent;

        while (offsetParent && jQuery.css(offsetParent, "position") === "static") {
          offsetParent = offsetParent.offsetParent;
        }

        return offsetParent || documentElement;
      });
    }
  }); // Create scrollLeft and scrollTop methods

  jQuery.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function (method, prop) {
    var top = "pageYOffset" === prop;

    jQuery.fn[method] = function (val) {
      return access(this, function (elem, method, val) {
        // Coalesce documents and windows
        var win;

        if (isWindow(elem)) {
          win = elem;
        } else if (elem.nodeType === 9) {
          win = elem.defaultView;
        }

        if (val === undefined) {
          return win ? win[prop] : elem[method];
        }

        if (win) {
          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
        } else {
          elem[method] = val;
        }
      }, method, val, arguments.length);
    };
  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49
  // Add the top/left cssHooks using jQuery.fn.position
  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
  // getComputedStyle returns percent when specified for top/left/bottom/right;
  // rather than make the css module depend on the offset module, just check for it here

  jQuery.each(["top", "left"], function (_i, prop) {
    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
      if (computed) {
        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset

        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
      }
    });
  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods

  jQuery.each({
    Height: "height",
    Width: "width"
  }, function (name, type) {
    jQuery.each({
      padding: "inner" + name,
      content: type,
      "": "outer" + name
    }, function (defaultExtra, funcName) {
      // Margin is only for outerHeight, outerWidth
      jQuery.fn[funcName] = function (margin, value) {
        var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
        return access(this, function (elem, type, value) {
          var doc;

          if (isWindow(elem)) {
            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
            return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
          } // Get document width or height


          if (elem.nodeType === 9) {
            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
            // whichever is greatest

            return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
          }

          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat
          jQuery.css(elem, type, extra) : // Set width or height on the element
          jQuery.style(elem, type, value, extra);
        }, type, chainable ? margin : undefined, chainable);
      };
    });
  });
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (_i, type) {
    jQuery.fn[type] = function (fn) {
      return this.on(type, fn);
    };
  });
  jQuery.fn.extend({
    bind: function bind(types, data, fn) {
      return this.on(types, null, data, fn);
    },
    unbind: function unbind(types, fn) {
      return this.off(types, null, fn);
    },
    delegate: function delegate(selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },
    undelegate: function undelegate(selector, types, fn) {
      // ( namespace ) or ( selector, types [, fn] )
      return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
    },
    hover: function hover(fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    }
  });
  jQuery.each(("blur focus focusin focusout resize scroll click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup contextmenu").split(" "), function (_i, name) {
    // Handle event binding
    jQuery.fn[name] = function (data, fn) {
      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
    };
  }); // Support: Android <=4.0 only
  // Make sure we trim BOM and NBSP

  var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g; // Bind a function to a context, optionally partially applying any
  // arguments.
  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)
  // However, it is not slated for removal any time soon

  jQuery.proxy = function (fn, context) {
    var tmp, args, proxy;

    if (typeof context === "string") {
      tmp = fn[context];
      context = fn;
      fn = tmp;
    } // Quick check to determine if target is callable, in the spec
    // this throws a TypeError, but we will just return undefined.


    if (!isFunction(fn)) {
      return undefined;
    } // Simulated bind


    args = _slice.call(arguments, 2);

    proxy = function proxy() {
      return fn.apply(context || this, args.concat(_slice.call(arguments)));
    }; // Set the guid of unique handler to the same of original handler, so it can be removed


    proxy.guid = fn.guid = fn.guid || jQuery.guid++;
    return proxy;
  };

  jQuery.holdReady = function (hold) {
    if (hold) {
      jQuery.readyWait++;
    } else {
      jQuery.ready(true);
    }
  };

  jQuery.isArray = Array.isArray;
  jQuery.parseJSON = JSON.parse;
  jQuery.nodeName = nodeName;
  jQuery.isFunction = isFunction;
  jQuery.isWindow = isWindow;
  jQuery.camelCase = camelCase;
  jQuery.type = toType;
  jQuery.now = Date.now;

  jQuery.isNumeric = function (obj) {
    // As of jQuery 3.0, isNumeric is limited to
    // strings and numbers (primitives or objects)
    // that can be coerced to finite numbers (gh-2662)
    var type = jQuery.type(obj);
    return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    !isNaN(obj - parseFloat(obj));
  };

  jQuery.trim = function (text) {
    return text == null ? "" : (text + "").replace(rtrim, "");
  }; // Register as a named AMD module, since jQuery can be concatenated with other
  // files that may use define, but not via a proper concatenation script that
  // understands anonymous AMD modules. A named AMD is safest and most robust
  // way to register. Lowercase jquery is used because AMD module names are
  // derived from file names, and jQuery is normally delivered in a lowercase
  // file name. Do this after creating the global so that if an AMD module wants
  // to call noConflict to hide this version of jQuery, it will work.
  // Note that for maximum portability, libraries that are not jQuery should
  // declare themselves as anonymous modules, and avoid setting a global if an
  // AMD loader is present. jQuery is a special case. For more information, see
  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon


  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return jQuery;
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }

  var // Map over jQuery in case of overwrite
  _jQuery = window.jQuery,
      // Map over the $ in case of overwrite
  _$ = window.$;

  jQuery.noConflict = function (deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }

    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }

    return jQuery;
  }; // Expose jQuery and $ identifiers, even in AMD
  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
  // and CommonJS for browser emulators (#13566)


  if (typeof noGlobal === "undefined") {
    window.jQuery = window.$ = jQuery;
  }

  return jQuery;
});

/***/ }),

/***/ "./node_modules/mithril/api/mount-redraw.js":
/*!**************************************************!*\
  !*** ./node_modules/mithril/api/mount-redraw.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

module.exports = function (render, schedule, console) {
  var subscriptions = [];
  var rendering = false;
  var pending = false;

  function sync() {
    if (rendering) throw new Error("Nested m.redraw.sync() call");
    rendering = true;

    for (var i = 0; i < subscriptions.length; i += 2) {
      try {
        render(subscriptions[i], Vnode(subscriptions[i + 1]), redraw);
      } catch (e) {
        console.error(e);
      }
    }

    rendering = false;
  }

  function redraw() {
    if (!pending) {
      pending = true;
      schedule(function () {
        pending = false;
        sync();
      });
    }
  }

  redraw.sync = sync;

  function mount(root, component) {
    if (component != null && component.view == null && typeof component !== "function") {
      throw new TypeError("m.mount(element, component) expects a component, not a vnode");
    }

    var index = subscriptions.indexOf(root);

    if (index >= 0) {
      subscriptions.splice(index, 2);
      render(root, [], redraw);
    }

    if (component != null) {
      subscriptions.push(root, component);
      render(root, Vnode(component), redraw);
    }
  }

  return {
    mount: mount,
    redraw: redraw
  };
};

/***/ }),

/***/ "./node_modules/mithril/api/router.js":
/*!********************************************!*\
  !*** ./node_modules/mithril/api/router.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

var m = __webpack_require__(/*! ../render/hyperscript */ "./node_modules/mithril/render/hyperscript.js");

var Promise = __webpack_require__(/*! ../promise/promise */ "./node_modules/mithril/promise/promise.js");

var buildPathname = __webpack_require__(/*! ../pathname/build */ "./node_modules/mithril/pathname/build.js");

var parsePathname = __webpack_require__(/*! ../pathname/parse */ "./node_modules/mithril/pathname/parse.js");

var compileTemplate = __webpack_require__(/*! ../pathname/compileTemplate */ "./node_modules/mithril/pathname/compileTemplate.js");

var assign = __webpack_require__(/*! ../pathname/assign */ "./node_modules/mithril/pathname/assign.js");

var sentinel = {};

module.exports = function ($window, mountRedraw) {
  var fireAsync;

  function setPath(path, data, options) {
    path = buildPathname(path, data);

    if (fireAsync != null) {
      fireAsync();
      var state = options ? options.state : null;
      var title = options ? options.title : null;
      if (options && options.replace) $window.history.replaceState(state, title, route.prefix + path);else $window.history.pushState(state, title, route.prefix + path);
    } else {
      $window.location.href = route.prefix + path;
    }
  }

  var currentResolver = sentinel,
      component,
      attrs,
      currentPath,
      _lastUpdate;

  var SKIP = route.SKIP = {};

  function route(root, defaultRoute, routes) {
    if (root == null) throw new Error("Ensure the DOM element that was passed to `m.route` is not undefined"); // 0 = start
    // 1 = init
    // 2 = ready

    var state = 0;
    var compiled = Object.keys(routes).map(function (route) {
      if (route[0] !== "/") throw new SyntaxError("Routes must start with a `/`");

      if (/:([^\/\.-]+)(\.{3})?:/.test(route)) {
        throw new SyntaxError("Route parameter names must be separated with either `/`, `.`, or `-`");
      }

      return {
        route: route,
        component: routes[route],
        check: compileTemplate(route)
      };
    });
    var callAsync = typeof setImmediate === "function" ? setImmediate : setTimeout;
    var p = Promise.resolve();
    var scheduled = false;
    var onremove;
    fireAsync = null;

    if (defaultRoute != null) {
      var defaultData = parsePathname(defaultRoute);

      if (!compiled.some(function (i) {
        return i.check(defaultData);
      })) {
        throw new ReferenceError("Default route doesn't match any known routes");
      }
    }

    function resolveRoute() {
      scheduled = false; // Consider the pathname holistically. The prefix might even be invalid,
      // but that's not our problem.

      var prefix = $window.location.hash;

      if (route.prefix[0] !== "#") {
        prefix = $window.location.search + prefix;

        if (route.prefix[0] !== "?") {
          prefix = $window.location.pathname + prefix;
          if (prefix[0] !== "/") prefix = "/" + prefix;
        }
      } // This seemingly useless `.concat()` speeds up the tests quite a bit,
      // since the representation is consistently a relatively poorly
      // optimized cons string.


      var path = prefix.concat().replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent).slice(route.prefix.length);
      var data = parsePathname(path);
      assign(data.params, $window.history.state);

      function fail() {
        if (path === defaultRoute) throw new Error("Could not resolve default route " + defaultRoute);
        setPath(defaultRoute, null, {
          replace: true
        });
      }

      loop(0);

      function loop(i) {
        // 0 = init
        // 1 = scheduled
        // 2 = done
        for (; i < compiled.length; i++) {
          if (compiled[i].check(data)) {
            var payload = compiled[i].component;
            var matchedRoute = compiled[i].route;
            var localComp = payload;

            var update = _lastUpdate = function lastUpdate(comp) {
              if (update !== _lastUpdate) return;
              if (comp === SKIP) return loop(i + 1);
              component = comp != null && (typeof comp.view === "function" || typeof comp === "function") ? comp : "div";
              attrs = data.params, currentPath = path, _lastUpdate = null;
              currentResolver = payload.render ? payload : null;
              if (state === 2) mountRedraw.redraw();else {
                state = 2;
                mountRedraw.redraw.sync();
              }
            }; // There's no understating how much I *wish* I could
            // use `async`/`await` here...


            if (payload.view || typeof payload === "function") {
              payload = {};
              update(localComp);
            } else if (payload.onmatch) {
              p.then(function () {
                return payload.onmatch(data.params, path, matchedRoute);
              }).then(update, fail);
            } else update("div");

            return;
          }
        }

        fail();
      }
    } // Set it unconditionally so `m.route.set` and `m.route.Link` both work,
    // even if neither `pushState` nor `hashchange` are supported. It's
    // cleared if `hashchange` is used, since that makes it automatically
    // async.


    fireAsync = function fireAsync() {
      if (!scheduled) {
        scheduled = true;
        callAsync(resolveRoute);
      }
    };

    if (typeof $window.history.pushState === "function") {
      onremove = function onremove() {
        $window.removeEventListener("popstate", fireAsync, false);
      };

      $window.addEventListener("popstate", fireAsync, false);
    } else if (route.prefix[0] === "#") {
      fireAsync = null;

      onremove = function onremove() {
        $window.removeEventListener("hashchange", resolveRoute, false);
      };

      $window.addEventListener("hashchange", resolveRoute, false);
    }

    return mountRedraw.mount(root, {
      onbeforeupdate: function onbeforeupdate() {
        state = state ? 2 : 1;
        return !(!state || sentinel === currentResolver);
      },
      oncreate: resolveRoute,
      onremove: onremove,
      view: function view() {
        if (!state || sentinel === currentResolver) return; // Wrap in a fragment to preserve existing key semantics

        var vnode = [Vnode(component, attrs.key, attrs)];
        if (currentResolver) vnode = currentResolver.render(vnode[0]);
        return vnode;
      }
    });
  }

  route.set = function (path, data, options) {
    if (_lastUpdate != null) {
      options = options || {};
      options.replace = true;
    }

    _lastUpdate = null;
    setPath(path, data, options);
  };

  route.get = function () {
    return currentPath;
  };

  route.prefix = "#!";
  route.Link = {
    view: function view(vnode) {
      var options = vnode.attrs.options; // Remove these so they don't get overwritten

      var attrs = {},
          onclick,
          href;
      assign(attrs, vnode.attrs); // The first two are internal, but the rest are magic attributes
      // that need censored to not screw up rendering.

      attrs.selector = attrs.options = attrs.key = attrs.oninit = attrs.oncreate = attrs.onbeforeupdate = attrs.onupdate = attrs.onbeforeremove = attrs.onremove = null; // Do this now so we can get the most current `href` and `disabled`.
      // Those attributes may also be specified in the selector, and we
      // should honor that.

      var child = m(vnode.attrs.selector || "a", attrs, vnode.children); // Let's provide a *right* way to disable a route link, rather than
      // letting people screw up accessibility on accident.
      //
      // The attribute is coerced so users don't get surprised over
      // `disabled: 0` resulting in a button that's somehow routable
      // despite being visibly disabled.

      if (child.attrs.disabled = Boolean(child.attrs.disabled)) {
        child.attrs.href = null;
        child.attrs["aria-disabled"] = "true"; // If you *really* do want to do this on a disabled link, use
        // an `oncreate` hook to add it.

        child.attrs.onclick = null;
      } else {
        onclick = child.attrs.onclick;
        href = child.attrs.href;
        child.attrs.href = route.prefix + href;

        child.attrs.onclick = function (e) {
          var result;

          if (typeof onclick === "function") {
            result = onclick.call(e.currentTarget, e);
          } else if (onclick == null || typeof onclick !== "object") {// do nothing
          } else if (typeof onclick.handleEvent === "function") {
            onclick.handleEvent(e);
          } // Adapted from React Router's implementation:
          // https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js
          //
          // Try to be flexible and intuitive in how we handle links.
          // Fun fact: links aren't as obvious to get right as you
          // would expect. There's a lot more valid ways to click a
          // link than this, and one might want to not simply click a
          // link, but right click or command-click it to copy the
          // link target, etc. Nope, this isn't just for blind people.


          if ( // Skip if `onclick` prevented default
          result !== false && !e.defaultPrevented && ( // Ignore everything but left clicks
          e.button === 0 || e.which === 0 || e.which === 1) && ( // Let the browser handle `target=_blank`, etc.
          !e.currentTarget.target || e.currentTarget.target === "_self") && // No modifier keys
          !e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey) {
            e.preventDefault();
            e.redraw = false;
            route.set(href, null, options);
          }
        };
      }

      return child;
    }
  };

  route.param = function (key) {
    return attrs && key != null ? attrs[key] : attrs;
  };

  return route;
};

/***/ }),

/***/ "./node_modules/mithril/hyperscript.js":
/*!*********************************************!*\
  !*** ./node_modules/mithril/hyperscript.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hyperscript = __webpack_require__(/*! ./render/hyperscript */ "./node_modules/mithril/render/hyperscript.js");

hyperscript.trust = __webpack_require__(/*! ./render/trust */ "./node_modules/mithril/render/trust.js");
hyperscript.fragment = __webpack_require__(/*! ./render/fragment */ "./node_modules/mithril/render/fragment.js");
module.exports = hyperscript;

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/mithril/index.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/mithril/index.js ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hyperscript = __webpack_require__(/*! ./hyperscript */ "./node_modules/mithril/hyperscript.js");

var request = __webpack_require__(/*! ./request */ "./node_modules/mithril/request.js");

var mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js");

var m = function m() {
  return hyperscript.apply(this, arguments);
};

m.m = hyperscript;
m.trust = hyperscript.trust;
m.fragment = hyperscript.fragment;
m.mount = mountRedraw.mount;
m.route = __webpack_require__(/*! ./route */ "./node_modules/mithril/route.js");
m.render = __webpack_require__(/*! ./render */ "./node_modules/mithril/render.js");
m.redraw = mountRedraw.redraw;
m.request = request.request;
m.jsonp = request.jsonp;
m.parseQueryString = __webpack_require__(/*! ./querystring/parse */ "./node_modules/mithril/querystring/parse.js");
m.buildQueryString = __webpack_require__(/*! ./querystring/build */ "./node_modules/mithril/querystring/build.js");
m.parsePathname = __webpack_require__(/*! ./pathname/parse */ "./node_modules/mithril/pathname/parse.js");
m.buildPathname = __webpack_require__(/*! ./pathname/build */ "./node_modules/mithril/pathname/build.js");
m.vnode = __webpack_require__(/*! ./render/vnode */ "./node_modules/mithril/render/vnode.js");
m.PromisePolyfill = __webpack_require__(/*! ./promise/polyfill */ "./node_modules/mithril/promise/polyfill.js");
module.exports = m;

/***/ }),

/***/ "./node_modules/mithril/mount-redraw.js":
/*!**********************************************!*\
  !*** ./node_modules/mithril/mount-redraw.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var render = __webpack_require__(/*! ./render */ "./node_modules/mithril/render.js");

module.exports = __webpack_require__(/*! ./api/mount-redraw */ "./node_modules/mithril/api/mount-redraw.js")(render, requestAnimationFrame, console);

/***/ }),

/***/ "./node_modules/mithril/pathname/assign.js":
/*!*************************************************!*\
  !*** ./node_modules/mithril/pathname/assign.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


module.exports = Object.assign || function (target, source) {
  if (source) Object.keys(source).forEach(function (key) {
    target[key] = source[key];
  });
};

/***/ }),

/***/ "./node_modules/mithril/pathname/build.js":
/*!************************************************!*\
  !*** ./node_modules/mithril/pathname/build.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var buildQueryString = __webpack_require__(/*! ../querystring/build */ "./node_modules/mithril/querystring/build.js");

var assign = __webpack_require__(/*! ./assign */ "./node_modules/mithril/pathname/assign.js"); // Returns `path` from `template` + `params`


module.exports = function (template, params) {
  if (/:([^\/\.-]+)(\.{3})?:/.test(template)) {
    throw new SyntaxError("Template parameter names *must* be separated");
  }

  if (params == null) return template;
  var queryIndex = template.indexOf("?");
  var hashIndex = template.indexOf("#");
  var queryEnd = hashIndex < 0 ? template.length : hashIndex;
  var pathEnd = queryIndex < 0 ? queryEnd : queryIndex;
  var path = template.slice(0, pathEnd);
  var query = {};
  assign(query, params);
  var resolved = path.replace(/:([^\/\.-]+)(\.{3})?/g, function (m, key, variadic) {
    delete query[key]; // If no such parameter exists, don't interpolate it.

    if (params[key] == null) return m; // Escape normal parameters, but not variadic ones.

    return variadic ? params[key] : encodeURIComponent(String(params[key]));
  }); // In case the template substitution adds new query/hash parameters.

  var newQueryIndex = resolved.indexOf("?");
  var newHashIndex = resolved.indexOf("#");
  var newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex;
  var newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex;
  var result = resolved.slice(0, newPathEnd);
  if (queryIndex >= 0) result += template.slice(queryIndex, queryEnd);
  if (newQueryIndex >= 0) result += (queryIndex < 0 ? "?" : "&") + resolved.slice(newQueryIndex, newQueryEnd);
  var querystring = buildQueryString(query);
  if (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? "?" : "&") + querystring;
  if (hashIndex >= 0) result += template.slice(hashIndex);
  if (newHashIndex >= 0) result += (hashIndex < 0 ? "" : "&") + resolved.slice(newHashIndex);
  return result;
};

/***/ }),

/***/ "./node_modules/mithril/pathname/compileTemplate.js":
/*!**********************************************************!*\
  !*** ./node_modules/mithril/pathname/compileTemplate.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var parsePathname = __webpack_require__(/*! ./parse */ "./node_modules/mithril/pathname/parse.js"); // Compiles a template into a function that takes a resolved path (without query
// strings) and returns an object containing the template parameters with their
// parsed values. This expects the input of the compiled template to be the
// output of `parsePathname`. Note that it does *not* remove query parameters
// specified in the template.


module.exports = function (template) {
  var templateData = parsePathname(template);
  var templateKeys = Object.keys(templateData.params);
  var keys = [];
  var regexp = new RegExp("^" + templateData.path.replace( // I escape literal text so people can use things like `:file.:ext` or
  // `:lang-:locale` in routes. This is all merged into one pass so I
  // don't also accidentally escape `-` and make it harder to detect it to
  // ban it from template parameters.
  /:([^\/.-]+)(\.{3}|\.(?!\.)|-)?|[\\^$*+.()|\[\]{}]/g, function (m, key, extra) {
    if (key == null) return "\\" + m;
    keys.push({
      k: key,
      r: extra === "..."
    });
    if (extra === "...") return "(.*)";
    if (extra === ".") return "([^/]+)\\.";
    return "([^/]+)" + (extra || "");
  }) + "$");
  return function (data) {
    // First, check the params. Usually, there isn't any, and it's just
    // checking a static set.
    for (var i = 0; i < templateKeys.length; i++) {
      if (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false;
    } // If no interpolations exist, let's skip all the ceremony


    if (!keys.length) return regexp.test(data.path);
    var values = regexp.exec(data.path);
    if (values == null) return false;

    for (var i = 0; i < keys.length; i++) {
      data.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1]);
    }

    return true;
  };
};

/***/ }),

/***/ "./node_modules/mithril/pathname/parse.js":
/*!************************************************!*\
  !*** ./node_modules/mithril/pathname/parse.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var parseQueryString = __webpack_require__(/*! ../querystring/parse */ "./node_modules/mithril/querystring/parse.js"); // Returns `{path, params}` from `url`


module.exports = function (url) {
  var queryIndex = url.indexOf("?");
  var hashIndex = url.indexOf("#");
  var queryEnd = hashIndex < 0 ? url.length : hashIndex;
  var pathEnd = queryIndex < 0 ? queryEnd : queryIndex;
  var path = url.slice(0, pathEnd).replace(/\/{2,}/g, "/");
  if (!path) path = "/";else {
    if (path[0] !== "/") path = "/" + path;
    if (path.length > 1 && path[path.length - 1] === "/") path = path.slice(0, -1);
  }
  return {
    path: path,
    params: queryIndex < 0 ? {} : parseQueryString(url.slice(queryIndex + 1, queryEnd))
  };
};

/***/ }),

/***/ "./node_modules/mithril/promise/polyfill.js":
/*!**************************************************!*\
  !*** ./node_modules/mithril/promise/polyfill.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";

/** @constructor */

var PromisePolyfill = function PromisePolyfill(executor) {
  if (!(this instanceof PromisePolyfill)) throw new Error("Promise must be called with `new`");
  if (typeof executor !== "function") throw new TypeError("executor must be a function");
  var self = this,
      resolvers = [],
      rejectors = [],
      resolveCurrent = handler(resolvers, true),
      rejectCurrent = handler(rejectors, false);
  var instance = self._instance = {
    resolvers: resolvers,
    rejectors: rejectors
  };
  var callAsync = typeof setImmediate === "function" ? setImmediate : setTimeout;

  function handler(list, shouldAbsorb) {
    return function execute(value) {
      var then;

      try {
        if (shouldAbsorb && value != null && (typeof value === "object" || typeof value === "function") && typeof (then = value.then) === "function") {
          if (value === self) throw new TypeError("Promise can't be resolved w/ itself");
          executeOnce(then.bind(value));
        } else {
          callAsync(function () {
            if (!shouldAbsorb && list.length === 0) console.error("Possible unhandled promise rejection:", value);

            for (var i = 0; i < list.length; i++) {
              list[i](value);
            }

            resolvers.length = 0, rejectors.length = 0;
            instance.state = shouldAbsorb;

            instance.retry = function () {
              execute(value);
            };
          });
        }
      } catch (e) {
        rejectCurrent(e);
      }
    };
  }

  function executeOnce(then) {
    var runs = 0;

    function run(fn) {
      return function (value) {
        if (runs++ > 0) return;
        fn(value);
      };
    }

    var onerror = run(rejectCurrent);

    try {
      then(run(resolveCurrent), onerror);
    } catch (e) {
      onerror(e);
    }
  }

  executeOnce(executor);
};

PromisePolyfill.prototype.then = function (onFulfilled, onRejection) {
  var self = this,
      instance = self._instance;

  function handle(callback, list, next, state) {
    list.push(function (value) {
      if (typeof callback !== "function") next(value);else try {
        resolveNext(callback(value));
      } catch (e) {
        if (rejectNext) rejectNext(e);
      }
    });
    if (typeof instance.retry === "function" && state === instance.state) instance.retry();
  }

  var resolveNext, rejectNext;
  var promise = new PromisePolyfill(function (resolve, reject) {
    resolveNext = resolve, rejectNext = reject;
  });
  handle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false);
  return promise;
};

PromisePolyfill.prototype["catch"] = function (onRejection) {
  return this.then(null, onRejection);
};

PromisePolyfill.prototype["finally"] = function (callback) {
  return this.then(function (value) {
    return PromisePolyfill.resolve(callback()).then(function () {
      return value;
    });
  }, function (reason) {
    return PromisePolyfill.resolve(callback()).then(function () {
      return PromisePolyfill.reject(reason);
    });
  });
};

PromisePolyfill.resolve = function (value) {
  if (value instanceof PromisePolyfill) return value;
  return new PromisePolyfill(function (resolve) {
    resolve(value);
  });
};

PromisePolyfill.reject = function (value) {
  return new PromisePolyfill(function (resolve, reject) {
    reject(value);
  });
};

PromisePolyfill.all = function (list) {
  return new PromisePolyfill(function (resolve, reject) {
    var total = list.length,
        count = 0,
        values = [];
    if (list.length === 0) resolve([]);else for (var i = 0; i < list.length; i++) {
      (function (i) {
        function consume(value) {
          count++;
          values[i] = value;
          if (count === total) resolve(values);
        }

        if (list[i] != null && (typeof list[i] === "object" || typeof list[i] === "function") && typeof list[i].then === "function") {
          list[i].then(consume, reject);
        } else consume(list[i]);
      })(i);
    }
  });
};

PromisePolyfill.race = function (list) {
  return new PromisePolyfill(function (resolve, reject) {
    for (var i = 0; i < list.length; i++) {
      list[i].then(resolve, reject);
    }
  });
};

module.exports = PromisePolyfill;

/***/ }),

/***/ "./node_modules/mithril/promise/promise.js":
/*!*************************************************!*\
  !*** ./node_modules/mithril/promise/promise.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var PromisePolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/mithril/promise/polyfill.js");

if (typeof window !== "undefined") {
  if (typeof window.Promise === "undefined") {
    window.Promise = PromisePolyfill;
  } else if (!window.Promise.prototype["finally"]) {
    window.Promise.prototype["finally"] = PromisePolyfill.prototype["finally"];
  }

  module.exports = window.Promise;
} else if (typeof __webpack_require__.g !== "undefined") {
  if (typeof __webpack_require__.g.Promise === "undefined") {
    __webpack_require__.g.Promise = PromisePolyfill;
  } else if (!__webpack_require__.g.Promise.prototype["finally"]) {
    __webpack_require__.g.Promise.prototype["finally"] = PromisePolyfill.prototype["finally"];
  }

  module.exports = __webpack_require__.g.Promise;
} else {
  module.exports = PromisePolyfill;
}

/***/ }),

/***/ "./node_modules/mithril/querystring/build.js":
/*!***************************************************!*\
  !*** ./node_modules/mithril/querystring/build.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (object) {
  if (Object.prototype.toString.call(object) !== "[object Object]") return "";
  var args = [];

  for (var key in object) {
    destructure(key, object[key]);
  }

  return args.join("&");

  function destructure(key, value) {
    if (Array.isArray(value)) {
      for (var i = 0; i < value.length; i++) {
        destructure(key + "[" + i + "]", value[i]);
      }
    } else if (Object.prototype.toString.call(value) === "[object Object]") {
      for (var i in value) {
        destructure(key + "[" + i + "]", value[i]);
      }
    } else args.push(encodeURIComponent(key) + (value != null && value !== "" ? "=" + encodeURIComponent(value) : ""));
  }
};

/***/ }),

/***/ "./node_modules/mithril/querystring/parse.js":
/*!***************************************************!*\
  !*** ./node_modules/mithril/querystring/parse.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (string) {
  if (string === "" || string == null) return {};
  if (string.charAt(0) === "?") string = string.slice(1);
  var entries = string.split("&"),
      counters = {},
      data = {};

  for (var i = 0; i < entries.length; i++) {
    var entry = entries[i].split("=");
    var key = decodeURIComponent(entry[0]);
    var value = entry.length === 2 ? decodeURIComponent(entry[1]) : "";
    if (value === "true") value = true;else if (value === "false") value = false;
    var levels = key.split(/\]\[?|\[/);
    var cursor = data;
    if (key.indexOf("[") > -1) levels.pop();

    for (var j = 0; j < levels.length; j++) {
      var level = levels[j],
          nextLevel = levels[j + 1];
      var isNumber = nextLevel == "" || !isNaN(parseInt(nextLevel, 10));

      if (level === "") {
        var key = levels.slice(0, j).join();

        if (counters[key] == null) {
          counters[key] = Array.isArray(cursor) ? cursor.length : 0;
        }

        level = counters[key]++;
      } // Disallow direct prototype pollution
      else if (level === "__proto__") break;

      if (j === levels.length - 1) cursor[level] = value;else {
        // Read own properties exclusively to disallow indirect
        // prototype pollution
        var desc = Object.getOwnPropertyDescriptor(cursor, level);
        if (desc != null) desc = desc.value;
        if (desc == null) cursor[level] = desc = isNumber ? [] : {};
        cursor = desc;
      }
    }
  }

  return data;
};

/***/ }),

/***/ "./node_modules/mithril/render.js":
/*!****************************************!*\
  !*** ./node_modules/mithril/render.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = __webpack_require__(/*! ./render/render */ "./node_modules/mithril/render/render.js")(window);

/***/ }),

/***/ "./node_modules/mithril/render/fragment.js":
/*!*************************************************!*\
  !*** ./node_modules/mithril/render/fragment.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

var hyperscriptVnode = __webpack_require__(/*! ./hyperscriptVnode */ "./node_modules/mithril/render/hyperscriptVnode.js");

module.exports = function () {
  var vnode = hyperscriptVnode.apply(0, arguments);
  vnode.tag = "[";
  vnode.children = Vnode.normalizeChildren(vnode.children);
  return vnode;
};

/***/ }),

/***/ "./node_modules/mithril/render/hyperscript.js":
/*!****************************************************!*\
  !*** ./node_modules/mithril/render/hyperscript.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

var hyperscriptVnode = __webpack_require__(/*! ./hyperscriptVnode */ "./node_modules/mithril/render/hyperscriptVnode.js");

var selectorParser = /(?:(^|#|\.)([^#\.\[\]]+))|(\[(.+?)(?:\s*=\s*("|'|)((?:\\["'\]]|.)*?)\5)?\])/g;
var selectorCache = {};
var hasOwn = {}.hasOwnProperty;

function isEmpty(object) {
  for (var key in object) {
    if (hasOwn.call(object, key)) return false;
  }

  return true;
}

function compileSelector(selector) {
  var match,
      tag = "div",
      classes = [],
      attrs = {};

  while (match = selectorParser.exec(selector)) {
    var type = match[1],
        value = match[2];
    if (type === "" && value !== "") tag = value;else if (type === "#") attrs.id = value;else if (type === ".") classes.push(value);else if (match[3][0] === "[") {
      var attrValue = match[6];
      if (attrValue) attrValue = attrValue.replace(/\\(["'])/g, "$1").replace(/\\\\/g, "\\");
      if (match[4] === "class") classes.push(attrValue);else attrs[match[4]] = attrValue === "" ? attrValue : attrValue || true;
    }
  }

  if (classes.length > 0) attrs.className = classes.join(" ");
  return selectorCache[selector] = {
    tag: tag,
    attrs: attrs
  };
}

function execSelector(state, vnode) {
  var attrs = vnode.attrs;
  var children = Vnode.normalizeChildren(vnode.children);
  var hasClass = hasOwn.call(attrs, "class");
  var className = hasClass ? attrs["class"] : attrs.className;
  vnode.tag = state.tag;
  vnode.attrs = null;
  vnode.children = undefined;

  if (!isEmpty(state.attrs) && !isEmpty(attrs)) {
    var newAttrs = {};

    for (var key in attrs) {
      if (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key];
    }

    attrs = newAttrs;
  }

  for (var key in state.attrs) {
    if (hasOwn.call(state.attrs, key) && key !== "className" && !hasOwn.call(attrs, key)) {
      attrs[key] = state.attrs[key];
    }
  }

  if (className != null || state.attrs.className != null) attrs.className = className != null ? state.attrs.className != null ? String(state.attrs.className) + " " + String(className) : className : state.attrs.className != null ? state.attrs.className : null;
  if (hasClass) attrs["class"] = null;

  for (var key in attrs) {
    if (hasOwn.call(attrs, key) && key !== "key") {
      vnode.attrs = attrs;
      break;
    }
  }

  if (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === "#") {
    vnode.text = children[0].children;
  } else {
    vnode.children = children;
  }

  return vnode;
}

function hyperscript(selector) {
  if (selector == null || typeof selector !== "string" && typeof selector !== "function" && typeof selector.view !== "function") {
    throw Error("The selector must be either a string or a component.");
  }

  var vnode = hyperscriptVnode.apply(1, arguments);

  if (typeof selector === "string") {
    vnode.children = Vnode.normalizeChildren(vnode.children);
    if (selector !== "[") return execSelector(selectorCache[selector] || compileSelector(selector), vnode);
  }

  vnode.tag = selector;
  return vnode;
}

module.exports = hyperscript;

/***/ }),

/***/ "./node_modules/mithril/render/hyperscriptVnode.js":
/*!*********************************************************!*\
  !*** ./node_modules/mithril/render/hyperscriptVnode.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js"); // Call via `hyperscriptVnode.apply(startOffset, arguments)`
//
// The reason I do it this way, forwarding the arguments and passing the start
// offset in `this`, is so I don't have to create a temporary array in a
// performance-critical path.
//
// In native ES6, I'd instead add a final `...args` parameter to the
// `hyperscript` and `fragment` factories and define this as
// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But
// ES5 (what Mithril requires thanks to IE support) doesn't give me that luxury,
// and engines aren't nearly intelligent enough to do either of these:
//
// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to
//    another function only to be indexed.
// 2. Elide an `arguments` allocation when it's passed to any function other
//    than `Function.prototype.apply` or `Reflect.apply`.
//
// In ES6, it'd probably look closer to this (I'd need to profile it, though):
// module.exports = function(attrs, ...children) {
//     if (attrs == null || typeof attrs === "object" && attrs.tag == null && !Array.isArray(attrs)) {
//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]
//     } else {
//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]
//         attrs = undefined
//     }
//
//     if (attrs == null) attrs = {}
//     return Vnode("", attrs.key, attrs, children)
// }


module.exports = function () {
  var attrs = arguments[this],
      start = this + 1,
      children;

  if (attrs == null) {
    attrs = {};
  } else if (typeof attrs !== "object" || attrs.tag != null || Array.isArray(attrs)) {
    attrs = {};
    start = this;
  }

  if (arguments.length === start + 1) {
    children = arguments[start];
    if (!Array.isArray(children)) children = [children];
  } else {
    children = [];

    while (start < arguments.length) {
      children.push(arguments[start++]);
    }
  }

  return Vnode("", attrs.key, attrs, children);
};

/***/ }),

/***/ "./node_modules/mithril/render/render.js":
/*!***********************************************!*\
  !*** ./node_modules/mithril/render/render.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

module.exports = function ($window) {
  var $doc = $window && $window.document;
  var currentRedraw;
  var nameSpace = {
    svg: "http://www.w3.org/2000/svg",
    math: "http://www.w3.org/1998/Math/MathML"
  };

  function getNameSpace(vnode) {
    return vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag];
  } //sanity check to discourage people from doing `vnode.state = ...`


  function checkState(vnode, original) {
    if (vnode.state !== original) throw new Error("`vnode.state` must not be modified");
  } //Note: the hook is passed as the `this` argument to allow proxying the
  //arguments without requiring a full array allocation to do so. It also
  //takes advantage of the fact the current `vnode` is the first argument in
  //all lifecycle methods.


  function callHook(vnode) {
    var original = vnode.state;

    try {
      return this.apply(original, arguments);
    } finally {
      checkState(vnode, original);
    }
  } // IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when
  // inside an iframe. Catch and swallow this error, and heavy-handidly return null.


  function activeElement() {
    try {
      return $doc.activeElement;
    } catch (e) {
      return null;
    }
  } //create


  function createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {
    for (var i = start; i < end; i++) {
      var vnode = vnodes[i];

      if (vnode != null) {
        createNode(parent, vnode, hooks, ns, nextSibling);
      }
    }
  }

  function createNode(parent, vnode, hooks, ns, nextSibling) {
    var tag = vnode.tag;

    if (typeof tag === "string") {
      vnode.state = {};
      if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks);

      switch (tag) {
        case "#":
          createText(parent, vnode, nextSibling);
          break;

        case "<":
          createHTML(parent, vnode, ns, nextSibling);
          break;

        case "[":
          createFragment(parent, vnode, hooks, ns, nextSibling);
          break;

        default:
          createElement(parent, vnode, hooks, ns, nextSibling);
      }
    } else createComponent(parent, vnode, hooks, ns, nextSibling);
  }

  function createText(parent, vnode, nextSibling) {
    vnode.dom = $doc.createTextNode(vnode.children);
    insertNode(parent, vnode.dom, nextSibling);
  }

  var possibleParents = {
    caption: "table",
    thead: "table",
    tbody: "table",
    tfoot: "table",
    tr: "tbody",
    th: "tr",
    td: "tr",
    colgroup: "table",
    col: "colgroup"
  };

  function createHTML(parent, vnode, ns, nextSibling) {
    var match = vnode.children.match(/^\s*?<(\w+)/im) || []; // not using the proper parent makes the child element(s) vanish.
    //     var div = document.createElement("div")
    //     div.innerHTML = "<td>i</td><td>j</td>"
    //     console.log(div.innerHTML)
    // --> "ij", no <td> in sight.

    var temp = $doc.createElement(possibleParents[match[1]] || "div");

    if (ns === "http://www.w3.org/2000/svg") {
      temp.innerHTML = "<svg xmlns=\"http://www.w3.org/2000/svg\">" + vnode.children + "</svg>";
      temp = temp.firstChild;
    } else {
      temp.innerHTML = vnode.children;
    }

    vnode.dom = temp.firstChild;
    vnode.domSize = temp.childNodes.length; // Capture nodes to remove, so we don't confuse them.

    vnode.instance = [];
    var fragment = $doc.createDocumentFragment();
    var child;

    while (child = temp.firstChild) {
      vnode.instance.push(child);
      fragment.appendChild(child);
    }

    insertNode(parent, fragment, nextSibling);
  }

  function createFragment(parent, vnode, hooks, ns, nextSibling) {
    var fragment = $doc.createDocumentFragment();

    if (vnode.children != null) {
      var children = vnode.children;
      createNodes(fragment, children, 0, children.length, hooks, null, ns);
    }

    vnode.dom = fragment.firstChild;
    vnode.domSize = fragment.childNodes.length;
    insertNode(parent, fragment, nextSibling);
  }

  function createElement(parent, vnode, hooks, ns, nextSibling) {
    var tag = vnode.tag;
    var attrs = vnode.attrs;
    var is = attrs && attrs.is;
    ns = getNameSpace(vnode) || ns;
    var element = ns ? is ? $doc.createElementNS(ns, tag, {
      is: is
    }) : $doc.createElementNS(ns, tag) : is ? $doc.createElement(tag, {
      is: is
    }) : $doc.createElement(tag);
    vnode.dom = element;

    if (attrs != null) {
      setAttrs(vnode, attrs, ns);
    }

    insertNode(parent, element, nextSibling);

    if (!maybeSetContentEditable(vnode)) {
      if (vnode.text != null) {
        if (vnode.text !== "") element.textContent = vnode.text;else vnode.children = [Vnode("#", undefined, undefined, vnode.text, undefined, undefined)];
      }

      if (vnode.children != null) {
        var children = vnode.children;
        createNodes(element, children, 0, children.length, hooks, null, ns);
        if (vnode.tag === "select" && attrs != null) setLateSelectAttrs(vnode, attrs);
      }
    }
  }

  function initComponent(vnode, hooks) {
    var sentinel;

    if (typeof vnode.tag.view === "function") {
      vnode.state = Object.create(vnode.tag);
      sentinel = vnode.state.view;
      if (sentinel.$$reentrantLock$$ != null) return;
      sentinel.$$reentrantLock$$ = true;
    } else {
      vnode.state = void 0;
      sentinel = vnode.tag;
      if (sentinel.$$reentrantLock$$ != null) return;
      sentinel.$$reentrantLock$$ = true;
      vnode.state = vnode.tag.prototype != null && typeof vnode.tag.prototype.view === "function" ? new vnode.tag(vnode) : vnode.tag(vnode);
    }

    initLifecycle(vnode.state, vnode, hooks);
    if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks);
    vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode));
    if (vnode.instance === vnode) throw Error("A view cannot return the vnode it received as argument");
    sentinel.$$reentrantLock$$ = null;
  }

  function createComponent(parent, vnode, hooks, ns, nextSibling) {
    initComponent(vnode, hooks);

    if (vnode.instance != null) {
      createNode(parent, vnode.instance, hooks, ns, nextSibling);
      vnode.dom = vnode.instance.dom;
      vnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0;
    } else {
      vnode.domSize = 0;
    }
  } //update

  /**
   * @param {Element|Fragment} parent - the parent element
   * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for
   *                               this part of the tree
   * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.
   * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)
   * @param {Element | null} nextSibling - the next DOM node if we're dealing with a
   *                                       fragment that is not the last item in its
   *                                       parent
   * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any
   * @returns void
   */
  // This function diffs and patches lists of vnodes, both keyed and unkeyed.
  //
  // We will:
  //
  // 1. describe its general structure
  // 2. focus on the diff algorithm optimizations
  // 3. discuss DOM node operations.
  // ## Overview:
  //
  // The updateNodes() function:
  // - deals with trivial cases
  // - determines whether the lists are keyed or unkeyed based on the first non-null node
  //   of each list.
  // - diffs them and patches the DOM if needed (that's the brunt of the code)
  // - manages the leftovers: after diffing, are there:
  //   - old nodes left to remove?
  // 	 - new nodes to insert?
  // 	 deal with them!
  //
  // The lists are only iterated over once, with an exception for the nodes in `old` that
  // are visited in the fourth part of the diff and in the `removeNodes` loop.
  // ## Diffing
  //
  // Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837
  // may be good for context on longest increasing subsequence-based logic for moving nodes.
  //
  // In order to diff keyed lists, one has to
  //
  // 1) match nodes in both lists, per key, and update them accordingly
  // 2) create the nodes present in the new list, but absent in the old one
  // 3) remove the nodes present in the old list, but absent in the new one
  // 4) figure out what nodes in 1) to move in order to minimize the DOM operations.
  //
  // To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate
  // over the new list and for each new vnode, find the corresponding vnode in the old list using
  // the map.
  // 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new
  // and must be created.
  // For the removals, we actually remove the nodes that have been updated from the old list.
  // The nodes that remain in that list after 1) and 2) have been performed can be safely removed.
  // The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)
  // algorithm.
  //
  // the longest increasing subsequence is the list of nodes that can remain in place. Imagine going
  // from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices
  // corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would
  //  match the above lists, for example).
  //
  // In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We
  // can update those nodes without moving them, and only call `insertNode` on `4` and `5`.
  //
  // @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually
  // the longest increasing subsequence *of old nodes still present in the new list*).
  //
  // It is a general algorithm that is fireproof in all circumstances, but it requires the allocation
  // and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,
  // the `LIS` and a temporary one to create the LIS).
  //
  // So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of
  // the LIS and can be updated without moving them.
  //
  // If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with
  // the exception of the last node if the list is fully reversed).
  //
  // ## Finding the next sibling.
  //
  // `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.
  // When the list is being traversed top-down, at any index, the DOM nodes up to the previous
  // vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old
  // list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.
  //
  // In the other scenarios (swaps, upwards traversal, map-based diff),
  // the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the
  // bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node
  // as the next sibling (cached in the `nextSibling` variable).
  // ## DOM node moves
  //
  // In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,
  // this is not the case if the node moved (second and fourth part of the diff algo). We move
  // the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`
  // variable rather than fetching it using `getNextSibling()`.
  //
  // The fourth part of the diff currently inserts nodes unconditionally, leading to issues
  // like #1791 and #1999. We need to be smarter about those situations where adjascent old
  // nodes remain together in the new list in a way that isn't covered by parts one and
  // three of the diff algo.


  function updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {
    if (old === vnodes || old == null && vnodes == null) return;else if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns);else if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length);else {
      var isOldKeyed = old[0] != null && old[0].key != null;
      var isKeyed = vnodes[0] != null && vnodes[0].key != null;
      var start = 0,
          oldStart = 0;
      if (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) {
        oldStart++;
      }
      if (!isKeyed) while (start < vnodes.length && vnodes[start] == null) {
        start++;
      }
      if (isKeyed === null && isOldKeyed == null) return; // both lists are full of nulls

      if (isOldKeyed !== isKeyed) {
        removeNodes(parent, old, oldStart, old.length);
        createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns);
      } else if (!isKeyed) {
        // Don't index past the end of either list (causes deopts).
        var commonLength = old.length < vnodes.length ? old.length : vnodes.length; // Rewind if necessary to the first non-null index on either side.
        // We could alternatively either explicitly create or remove nodes when `start !== oldStart`
        // but that would be optimizing for sparse lists which are more rare than dense ones.

        start = start < oldStart ? start : oldStart;

        for (; start < commonLength; start++) {
          o = old[start];
          v = vnodes[start];
          if (o === v || o == null && v == null) continue;else if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling));else if (v == null) removeNode(parent, o);else updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns);
        }

        if (old.length > commonLength) removeNodes(parent, old, start, old.length);
        if (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns);
      } else {
        // keyed diff
        var oldEnd = old.length - 1,
            end = vnodes.length - 1,
            map,
            o,
            v,
            oe,
            ve,
            topSibling; // bottom-up

        while (oldEnd >= oldStart && end >= start) {
          oe = old[oldEnd];
          ve = vnodes[end];
          if (oe.key !== ve.key) break;
          if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);
          if (ve.dom != null) nextSibling = ve.dom;
          oldEnd--, end--;
        } // top-down


        while (oldEnd >= oldStart && end >= start) {
          o = old[oldStart];
          v = vnodes[start];
          if (o.key !== v.key) break;
          oldStart++, start++;
          if (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns);
        } // swaps and list reversals


        while (oldEnd >= oldStart && end >= start) {
          if (start === end) break;
          if (o.key !== ve.key || oe.key !== v.key) break;
          topSibling = getNextSibling(old, oldStart, nextSibling);
          moveNodes(parent, oe, topSibling);
          if (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns);
          if (++start <= --end) moveNodes(parent, o, nextSibling);
          if (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns);
          if (ve.dom != null) nextSibling = ve.dom;
          oldStart++;
          oldEnd--;
          oe = old[oldEnd];
          ve = vnodes[end];
          o = old[oldStart];
          v = vnodes[start];
        } // bottom up once again


        while (oldEnd >= oldStart && end >= start) {
          if (oe.key !== ve.key) break;
          if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);
          if (ve.dom != null) nextSibling = ve.dom;
          oldEnd--, end--;
          oe = old[oldEnd];
          ve = vnodes[end];
        }

        if (start > end) removeNodes(parent, old, oldStart, oldEnd + 1);else if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns);else {
          // inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul
          var originalNextSibling = nextSibling,
              vnodesLength = end - start + 1,
              oldIndices = new Array(vnodesLength),
              li = 0,
              i = 0,
              pos = 2147483647,
              matched = 0,
              map,
              lisIndices;

          for (i = 0; i < vnodesLength; i++) {
            oldIndices[i] = -1;
          }

          for (i = end; i >= start; i--) {
            if (map == null) map = getKeyMap(old, oldStart, oldEnd + 1);
            ve = vnodes[i];
            var oldIndex = map[ve.key];

            if (oldIndex != null) {
              pos = oldIndex < pos ? oldIndex : -1; // becomes -1 if nodes were re-ordered

              oldIndices[i - start] = oldIndex;
              oe = old[oldIndex];
              old[oldIndex] = null;
              if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns);
              if (ve.dom != null) nextSibling = ve.dom;
              matched++;
            }
          }

          nextSibling = originalNextSibling;
          if (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1);
          if (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns);else {
            if (pos === -1) {
              // the indices of the indices of the items that are part of the
              // longest increasing subsequence in the oldIndices list
              lisIndices = makeLisIndices(oldIndices);
              li = lisIndices.length - 1;

              for (i = end; i >= start; i--) {
                v = vnodes[i];
                if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling);else {
                  if (lisIndices[li] === i - start) li--;else moveNodes(parent, v, nextSibling);
                }
                if (v.dom != null) nextSibling = vnodes[i].dom;
              }
            } else {
              for (i = end; i >= start; i--) {
                v = vnodes[i];
                if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling);
                if (v.dom != null) nextSibling = vnodes[i].dom;
              }
            }
          }
        }
      }
    }
  }

  function updateNode(parent, old, vnode, hooks, nextSibling, ns) {
    var oldTag = old.tag,
        tag = vnode.tag;

    if (oldTag === tag) {
      vnode.state = old.state;
      vnode.events = old.events;
      if (shouldNotUpdate(vnode, old)) return;

      if (typeof oldTag === "string") {
        if (vnode.attrs != null) {
          updateLifecycle(vnode.attrs, vnode, hooks);
        }

        switch (oldTag) {
          case "#":
            updateText(old, vnode);
            break;

          case "<":
            updateHTML(parent, old, vnode, ns, nextSibling);
            break;

          case "[":
            updateFragment(parent, old, vnode, hooks, nextSibling, ns);
            break;

          default:
            updateElement(old, vnode, hooks, ns);
        }
      } else updateComponent(parent, old, vnode, hooks, nextSibling, ns);
    } else {
      removeNode(parent, old);
      createNode(parent, vnode, hooks, ns, nextSibling);
    }
  }

  function updateText(old, vnode) {
    if (old.children.toString() !== vnode.children.toString()) {
      old.dom.nodeValue = vnode.children;
    }

    vnode.dom = old.dom;
  }

  function updateHTML(parent, old, vnode, ns, nextSibling) {
    if (old.children !== vnode.children) {
      removeHTML(parent, old);
      createHTML(parent, vnode, ns, nextSibling);
    } else {
      vnode.dom = old.dom;
      vnode.domSize = old.domSize;
      vnode.instance = old.instance;
    }
  }

  function updateFragment(parent, old, vnode, hooks, nextSibling, ns) {
    updateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns);
    var domSize = 0,
        children = vnode.children;
    vnode.dom = null;

    if (children != null) {
      for (var i = 0; i < children.length; i++) {
        var child = children[i];

        if (child != null && child.dom != null) {
          if (vnode.dom == null) vnode.dom = child.dom;
          domSize += child.domSize || 1;
        }
      }

      if (domSize !== 1) vnode.domSize = domSize;
    }
  }

  function updateElement(old, vnode, hooks, ns) {
    var element = vnode.dom = old.dom;
    ns = getNameSpace(vnode) || ns;

    if (vnode.tag === "textarea") {
      if (vnode.attrs == null) vnode.attrs = {};

      if (vnode.text != null) {
        vnode.attrs.value = vnode.text; //FIXME handle multiple children

        vnode.text = undefined;
      }
    }

    updateAttrs(vnode, old.attrs, vnode.attrs, ns);

    if (!maybeSetContentEditable(vnode)) {
      if (old.text != null && vnode.text != null && vnode.text !== "") {
        if (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text;
      } else {
        if (old.text != null) old.children = [Vnode("#", undefined, undefined, old.text, undefined, old.dom.firstChild)];
        if (vnode.text != null) vnode.children = [Vnode("#", undefined, undefined, vnode.text, undefined, undefined)];
        updateNodes(element, old.children, vnode.children, hooks, null, ns);
      }
    }
  }

  function updateComponent(parent, old, vnode, hooks, nextSibling, ns) {
    vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode));
    if (vnode.instance === vnode) throw Error("A view cannot return the vnode it received as argument");
    updateLifecycle(vnode.state, vnode, hooks);
    if (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks);

    if (vnode.instance != null) {
      if (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling);else updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns);
      vnode.dom = vnode.instance.dom;
      vnode.domSize = vnode.instance.domSize;
    } else if (old.instance != null) {
      removeNode(parent, old.instance);
      vnode.dom = undefined;
      vnode.domSize = 0;
    } else {
      vnode.dom = old.dom;
      vnode.domSize = old.domSize;
    }
  }

  function getKeyMap(vnodes, start, end) {
    var map = Object.create(null);

    for (; start < end; start++) {
      var vnode = vnodes[start];

      if (vnode != null) {
        var key = vnode.key;
        if (key != null) map[key] = start;
      }
    }

    return map;
  } // Lifted from ivi https://github.com/ivijs/ivi/
  // takes a list of unique numbers (-1 is special and can
  // occur multiple times) and returns an array with the indices
  // of the items that are part of the longest increasing
  // subsequece


  var lisTemp = [];

  function makeLisIndices(a) {
    var result = [0];
    var u = 0,
        v = 0,
        i = 0;
    var il = lisTemp.length = a.length;

    for (var i = 0; i < il; i++) {
      lisTemp[i] = a[i];
    }

    for (var i = 0; i < il; ++i) {
      if (a[i] === -1) continue;
      var j = result[result.length - 1];

      if (a[j] < a[i]) {
        lisTemp[i] = j;
        result.push(i);
        continue;
      }

      u = 0;
      v = result.length - 1;

      while (u < v) {
        // Fast integer average without overflow.
        // eslint-disable-next-line no-bitwise
        var c = (u >>> 1) + (v >>> 1) + (u & v & 1);

        if (a[result[c]] < a[i]) {
          u = c + 1;
        } else {
          v = c;
        }
      }

      if (a[i] < a[result[u]]) {
        if (u > 0) lisTemp[i] = result[u - 1];
        result[u] = i;
      }
    }

    u = result.length;
    v = result[u - 1];

    while (u-- > 0) {
      result[u] = v;
      v = lisTemp[v];
    }

    lisTemp.length = 0;
    return result;
  }

  function getNextSibling(vnodes, i, nextSibling) {
    for (; i < vnodes.length; i++) {
      if (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom;
    }

    return nextSibling;
  } // This covers a really specific edge case:
  // - Parent node is keyed and contains child
  // - Child is removed, returns unresolved promise in `onbeforeremove`
  // - Parent node is moved in keyed diff
  // - Remaining children still need moved appropriately
  //
  // Ideally, I'd track removed nodes as well, but that introduces a lot more
  // complexity and I'm not exactly interested in doing that.


  function moveNodes(parent, vnode, nextSibling) {
    var frag = $doc.createDocumentFragment();
    moveChildToFrag(parent, frag, vnode);
    insertNode(parent, frag, nextSibling);
  }

  function moveChildToFrag(parent, frag, vnode) {
    // Dodge the recursion overhead in a few of the most common cases.
    while (vnode.dom != null && vnode.dom.parentNode === parent) {
      if (typeof vnode.tag !== "string") {
        vnode = vnode.instance;
        if (vnode != null) continue;
      } else if (vnode.tag === "<") {
        for (var i = 0; i < vnode.instance.length; i++) {
          frag.appendChild(vnode.instance[i]);
        }
      } else if (vnode.tag !== "[") {
        // Don't recurse for text nodes *or* elements, just fragments
        frag.appendChild(vnode.dom);
      } else if (vnode.children.length === 1) {
        vnode = vnode.children[0];
        if (vnode != null) continue;
      } else {
        for (var i = 0; i < vnode.children.length; i++) {
          var child = vnode.children[i];
          if (child != null) moveChildToFrag(parent, frag, child);
        }
      }

      break;
    }
  }

  function insertNode(parent, dom, nextSibling) {
    if (nextSibling != null) parent.insertBefore(dom, nextSibling);else parent.appendChild(dom);
  }

  function maybeSetContentEditable(vnode) {
    if (vnode.attrs == null || vnode.attrs.contenteditable == null && // attribute
    vnode.attrs.contentEditable == null // property
    ) return false;
    var children = vnode.children;

    if (children != null && children.length === 1 && children[0].tag === "<") {
      var content = children[0].children;
      if (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content;
    } else if (vnode.text != null || children != null && children.length !== 0) throw new Error("Child node of a contenteditable must be trusted");

    return true;
  } //remove


  function removeNodes(parent, vnodes, start, end) {
    for (var i = start; i < end; i++) {
      var vnode = vnodes[i];
      if (vnode != null) removeNode(parent, vnode);
    }
  }

  function removeNode(parent, vnode) {
    var mask = 0;
    var original = vnode.state;
    var stateResult, attrsResult;

    if (typeof vnode.tag !== "string" && typeof vnode.state.onbeforeremove === "function") {
      var result = callHook.call(vnode.state.onbeforeremove, vnode);

      if (result != null && typeof result.then === "function") {
        mask = 1;
        stateResult = result;
      }
    }

    if (vnode.attrs && typeof vnode.attrs.onbeforeremove === "function") {
      var result = callHook.call(vnode.attrs.onbeforeremove, vnode);

      if (result != null && typeof result.then === "function") {
        // eslint-disable-next-line no-bitwise
        mask |= 2;
        attrsResult = result;
      }
    }

    checkState(vnode, original); // If we can, try to fast-path it and avoid all the overhead of awaiting

    if (!mask) {
      onremove(vnode);
      removeChild(parent, vnode);
    } else {
      if (stateResult != null) {
        var next = function next() {
          // eslint-disable-next-line no-bitwise
          if (mask & 1) {
            mask &= 2;
            if (!mask) reallyRemove();
          }
        };

        stateResult.then(next, next);
      }

      if (attrsResult != null) {
        var next = function next() {
          // eslint-disable-next-line no-bitwise
          if (mask & 2) {
            mask &= 1;
            if (!mask) reallyRemove();
          }
        };

        attrsResult.then(next, next);
      }
    }

    function reallyRemove() {
      checkState(vnode, original);
      onremove(vnode);
      removeChild(parent, vnode);
    }
  }

  function removeHTML(parent, vnode) {
    for (var i = 0; i < vnode.instance.length; i++) {
      parent.removeChild(vnode.instance[i]);
    }
  }

  function removeChild(parent, vnode) {
    // Dodge the recursion overhead in a few of the most common cases.
    while (vnode.dom != null && vnode.dom.parentNode === parent) {
      if (typeof vnode.tag !== "string") {
        vnode = vnode.instance;
        if (vnode != null) continue;
      } else if (vnode.tag === "<") {
        removeHTML(parent, vnode);
      } else {
        if (vnode.tag !== "[") {
          parent.removeChild(vnode.dom);
          if (!Array.isArray(vnode.children)) break;
        }

        if (vnode.children.length === 1) {
          vnode = vnode.children[0];
          if (vnode != null) continue;
        } else {
          for (var i = 0; i < vnode.children.length; i++) {
            var child = vnode.children[i];
            if (child != null) removeChild(parent, child);
          }
        }
      }

      break;
    }
  }

  function onremove(vnode) {
    if (typeof vnode.tag !== "string" && typeof vnode.state.onremove === "function") callHook.call(vnode.state.onremove, vnode);
    if (vnode.attrs && typeof vnode.attrs.onremove === "function") callHook.call(vnode.attrs.onremove, vnode);

    if (typeof vnode.tag !== "string") {
      if (vnode.instance != null) onremove(vnode.instance);
    } else {
      var children = vnode.children;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          var child = children[i];
          if (child != null) onremove(child);
        }
      }
    }
  } //attrs


  function setAttrs(vnode, attrs, ns) {
    for (var key in attrs) {
      setAttr(vnode, key, null, attrs[key], ns);
    }
  }

  function setAttr(vnode, key, old, value, ns) {
    if (key === "key" || key === "is" || value == null || isLifecycleMethod(key) || old === value && !isFormAttribute(vnode, key) && typeof value !== "object") return;
    if (key[0] === "o" && key[1] === "n") return updateEvent(vnode, key, value);
    if (key.slice(0, 6) === "xlink:") vnode.dom.setAttributeNS("http://www.w3.org/1999/xlink", key.slice(6), value);else if (key === "style") updateStyle(vnode.dom, old, value);else if (hasPropertyKey(vnode, key, ns)) {
      if (key === "value") {
        // Only do the coercion if we're actually going to check the value.

        /* eslint-disable no-implicit-coercion */
        //setting input[value] to same value by typing on focused element moves cursor to end in Chrome
        if ((vnode.tag === "input" || vnode.tag === "textarea") && vnode.dom.value === "" + value && vnode.dom === activeElement()) return; //setting select[value] to same value while having select open blinks select dropdown in Chrome

        if (vnode.tag === "select" && old !== null && vnode.dom.value === "" + value) return; //setting option[value] to same value while having select open blinks select dropdown in Chrome

        if (vnode.tag === "option" && old !== null && vnode.dom.value === "" + value) return;
        /* eslint-enable no-implicit-coercion */
      } // If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.


      if (vnode.tag === "input" && key === "type") vnode.dom.setAttribute(key, value);else vnode.dom[key] = value;
    } else {
      if (typeof value === "boolean") {
        if (value) vnode.dom.setAttribute(key, "");else vnode.dom.removeAttribute(key);
      } else vnode.dom.setAttribute(key === "className" ? "class" : key, value);
    }
  }

  function removeAttr(vnode, key, old, ns) {
    if (key === "key" || key === "is" || old == null || isLifecycleMethod(key)) return;
    if (key[0] === "o" && key[1] === "n" && !isLifecycleMethod(key)) updateEvent(vnode, key, undefined);else if (key === "style") updateStyle(vnode.dom, old, null);else if (hasPropertyKey(vnode, key, ns) && key !== "className" && !(key === "value" && (vnode.tag === "option" || vnode.tag === "select" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement())) && !(vnode.tag === "input" && key === "type")) {
      vnode.dom[key] = null;
    } else {
      var nsLastIndex = key.indexOf(":");
      if (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1);
      if (old !== false) vnode.dom.removeAttribute(key === "className" ? "class" : key);
    }
  }

  function setLateSelectAttrs(vnode, attrs) {
    if ("value" in attrs) {
      if (attrs.value === null) {
        if (vnode.dom.selectedIndex !== -1) vnode.dom.value = null;
      } else {
        var normalized = "" + attrs.value; // eslint-disable-line no-implicit-coercion

        if (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {
          vnode.dom.value = normalized;
        }
      }
    }

    if ("selectedIndex" in attrs) setAttr(vnode, "selectedIndex", null, attrs.selectedIndex, undefined);
  }

  function updateAttrs(vnode, old, attrs, ns) {
    if (attrs != null) {
      for (var key in attrs) {
        setAttr(vnode, key, old && old[key], attrs[key], ns);
      }
    }

    var val;

    if (old != null) {
      for (var key in old) {
        if ((val = old[key]) != null && (attrs == null || attrs[key] == null)) {
          removeAttr(vnode, key, val, ns);
        }
      }
    }
  }

  function isFormAttribute(vnode, attr) {
    return attr === "value" || attr === "checked" || attr === "selectedIndex" || attr === "selected" && vnode.dom === activeElement() || vnode.tag === "option" && vnode.dom.parentNode === $doc.activeElement;
  }

  function isLifecycleMethod(attr) {
    return attr === "oninit" || attr === "oncreate" || attr === "onupdate" || attr === "onremove" || attr === "onbeforeremove" || attr === "onbeforeupdate";
  }

  function hasPropertyKey(vnode, key, ns) {
    // Filter out namespaced keys
    return ns === undefined && ( // If it's a custom element, just keep it.
    vnode.tag.indexOf("-") > -1 || vnode.attrs != null && vnode.attrs.is || // If it's a normal element, let's try to avoid a few browser bugs.
    key !== "href" && key !== "list" && key !== "form" && key !== "width" && key !== "height" // && key !== "type"
    // Defer the property check until *after* we check everything.
    ) && key in vnode.dom;
  } //style


  var uppercaseRegex = /[A-Z]/g;

  function toLowerCase(capital) {
    return "-" + capital.toLowerCase();
  }

  function normalizeKey(key) {
    return key[0] === "-" && key[1] === "-" ? key : key === "cssFloat" ? "float" : key.replace(uppercaseRegex, toLowerCase);
  }

  function updateStyle(element, old, style) {
    if (old === style) {// Styles are equivalent, do nothing.
    } else if (style == null) {
      // New style is missing, just clear it.
      element.style.cssText = "";
    } else if (typeof style !== "object") {
      // New style is a string, let engine deal with patching.
      element.style.cssText = style;
    } else if (old == null || typeof old !== "object") {
      // `old` is missing or a string, `style` is an object.
      element.style.cssText = ""; // Add new style properties

      for (var key in style) {
        var value = style[key];
        if (value != null) element.style.setProperty(normalizeKey(key), String(value));
      }
    } else {
      // Both old & new are (different) objects.
      // Update style properties that have changed
      for (var key in style) {
        var value = style[key];

        if (value != null && (value = String(value)) !== String(old[key])) {
          element.style.setProperty(normalizeKey(key), value);
        }
      } // Remove style properties that no longer exist


      for (var key in old) {
        if (old[key] != null && style[key] == null) {
          element.style.removeProperty(normalizeKey(key));
        }
      }
    }
  } // Here's an explanation of how this works:
  // 1. The event names are always (by design) prefixed by `on`.
  // 2. The EventListener interface accepts either a function or an object
  //    with a `handleEvent` method.
  // 3. The object does not inherit from `Object.prototype`, to avoid
  //    any potential interference with that (e.g. setters).
  // 4. The event name is remapped to the handler before calling it.
  // 5. In function-based event handlers, `ev.target === this`. We replicate
  //    that below.
  // 6. In function-based event handlers, `return false` prevents the default
  //    action and stops event propagation. We replicate that below.


  function EventDict() {
    // Save this, so the current redraw is correctly tracked.
    this._ = currentRedraw;
  }

  EventDict.prototype = Object.create(null);

  EventDict.prototype.handleEvent = function (ev) {
    var handler = this["on" + ev.type];
    var result;
    if (typeof handler === "function") result = handler.call(ev.currentTarget, ev);else if (typeof handler.handleEvent === "function") handler.handleEvent(ev);
    if (this._ && ev.redraw !== false) (0, this._)();

    if (result === false) {
      ev.preventDefault();
      ev.stopPropagation();
    }
  }; //event


  function updateEvent(vnode, key, value) {
    if (vnode.events != null) {
      if (vnode.events[key] === value) return;

      if (value != null && (typeof value === "function" || typeof value === "object")) {
        if (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false);
        vnode.events[key] = value;
      } else {
        if (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false);
        vnode.events[key] = undefined;
      }
    } else if (value != null && (typeof value === "function" || typeof value === "object")) {
      vnode.events = new EventDict();
      vnode.dom.addEventListener(key.slice(2), vnode.events, false);
      vnode.events[key] = value;
    }
  } //lifecycle


  function initLifecycle(source, vnode, hooks) {
    if (typeof source.oninit === "function") callHook.call(source.oninit, vnode);
    if (typeof source.oncreate === "function") hooks.push(callHook.bind(source.oncreate, vnode));
  }

  function updateLifecycle(source, vnode, hooks) {
    if (typeof source.onupdate === "function") hooks.push(callHook.bind(source.onupdate, vnode));
  }

  function shouldNotUpdate(vnode, old) {
    do {
      if (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === "function") {
        var force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old);
        if (force !== undefined && !force) break;
      }

      if (typeof vnode.tag !== "string" && typeof vnode.state.onbeforeupdate === "function") {
        var force = callHook.call(vnode.state.onbeforeupdate, vnode, old);
        if (force !== undefined && !force) break;
      }

      return false;
    } while (false); // eslint-disable-line no-constant-condition


    vnode.dom = old.dom;
    vnode.domSize = old.domSize;
    vnode.instance = old.instance; // One would think having the actual latest attributes would be ideal,
    // but it doesn't let us properly diff based on our current internal
    // representation. We have to save not only the old DOM info, but also
    // the attributes used to create it, as we diff *that*, not against the
    // DOM directly (with a few exceptions in `setAttr`). And, of course, we
    // need to save the children and text as they are conceptually not
    // unlike special "attributes" internally.

    vnode.attrs = old.attrs;
    vnode.children = old.children;
    vnode.text = old.text;
    return true;
  }

  return function (dom, vnodes, redraw) {
    if (!dom) throw new TypeError("Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.");
    var hooks = [];
    var active = activeElement();
    var namespace = dom.namespaceURI; // First time rendering into a node clears it out

    if (dom.vnodes == null) dom.textContent = "";
    vnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes]);
    var prevRedraw = currentRedraw;

    try {
      currentRedraw = typeof redraw === "function" ? redraw : undefined;
      updateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === "http://www.w3.org/1999/xhtml" ? undefined : namespace);
    } finally {
      currentRedraw = prevRedraw;
    }

    dom.vnodes = vnodes; // `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement

    if (active != null && activeElement() !== active && typeof active.focus === "function") active.focus();

    for (var i = 0; i < hooks.length; i++) {
      hooks[i]();
    }
  };
};

/***/ }),

/***/ "./node_modules/mithril/render/trust.js":
/*!**********************************************!*\
  !*** ./node_modules/mithril/render/trust.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Vnode = __webpack_require__(/*! ../render/vnode */ "./node_modules/mithril/render/vnode.js");

module.exports = function (html) {
  if (html == null) html = "";
  return Vnode("<", undefined, undefined, html, undefined, undefined);
};

/***/ }),

/***/ "./node_modules/mithril/render/vnode.js":
/*!**********************************************!*\
  !*** ./node_modules/mithril/render/vnode.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";


function Vnode(tag, key, attrs, children, text, dom) {
  return {
    tag: tag,
    key: key,
    attrs: attrs,
    children: children,
    text: text,
    dom: dom,
    domSize: undefined,
    state: undefined,
    events: undefined,
    instance: undefined
  };
}

Vnode.normalize = function (node) {
  if (Array.isArray(node)) return Vnode("[", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined);
  if (node == null || typeof node === "boolean") return null;
  if (typeof node === "object") return node;
  return Vnode("#", undefined, undefined, String(node), undefined, undefined);
};

Vnode.normalizeChildren = function (input) {
  var children = [];

  if (input.length) {
    var isKeyed = input[0] != null && input[0].key != null; // Note: this is a *very* perf-sensitive check.
    // Fun fact: merging the loop like this is somehow faster than splitting
    // it, noticeably so.

    for (var i = 1; i < input.length; i++) {
      if ((input[i] != null && input[i].key != null) !== isKeyed) {
        throw new TypeError("Vnodes must either always have keys or never have keys!");
      }
    }

    for (var i = 0; i < input.length; i++) {
      children[i] = Vnode.normalize(input[i]);
    }
  }

  return children;
};

module.exports = Vnode;

/***/ }),

/***/ "./node_modules/mithril/request.js":
/*!*****************************************!*\
  !*** ./node_modules/mithril/request.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var PromisePolyfill = __webpack_require__(/*! ./promise/promise */ "./node_modules/mithril/promise/promise.js");

var mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js");

module.exports = __webpack_require__(/*! ./request/request */ "./node_modules/mithril/request/request.js")(window, PromisePolyfill, mountRedraw.redraw);

/***/ }),

/***/ "./node_modules/mithril/request/request.js":
/*!*************************************************!*\
  !*** ./node_modules/mithril/request/request.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var buildPathname = __webpack_require__(/*! ../pathname/build */ "./node_modules/mithril/pathname/build.js");

module.exports = function ($window, Promise, oncompletion) {
  var callbackCount = 0;

  function PromiseProxy(executor) {
    return new Promise(executor);
  } // In case the global Promise is some userland library's where they rely on
  // `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or
  // similar. Let's *not* break them.


  PromiseProxy.prototype = Promise.prototype;
  PromiseProxy.__proto__ = Promise; // eslint-disable-line no-proto

  function makeRequest(factory) {
    return function (url, args) {
      if (typeof url !== "string") {
        args = url;
        url = url.url;
      } else if (args == null) args = {};

      var promise = new Promise(function (resolve, reject) {
        factory(buildPathname(url, args.params), args, function (data) {
          if (typeof args.type === "function") {
            if (Array.isArray(data)) {
              for (var i = 0; i < data.length; i++) {
                data[i] = new args.type(data[i]);
              }
            } else data = new args.type(data);
          }

          resolve(data);
        }, reject);
      });
      if (args.background === true) return promise;
      var count = 0;

      function complete() {
        if (--count === 0 && typeof oncompletion === "function") oncompletion();
      }

      return wrap(promise);

      function wrap(promise) {
        var then = promise.then; // Set the constructor, so engines know to not await or resolve
        // this as a native promise. At the time of writing, this is
        // only necessary for V8, but their behavior is the correct
        // behavior per spec. See this spec issue for more details:
        // https://github.com/tc39/ecma262/issues/1577. Also, see the
        // corresponding comment in `request/tests/test-request.js` for
        // a bit more background on the issue at hand.

        promise.constructor = PromiseProxy;

        promise.then = function () {
          count++;
          var next = then.apply(promise, arguments);
          next.then(complete, function (e) {
            complete();
            if (count === 0) throw e;
          });
          return wrap(next);
        };

        return promise;
      }
    };
  }

  function hasHeader(args, name) {
    for (var key in args.headers) {
      if ({}.hasOwnProperty.call(args.headers, key) && name.test(key)) return true;
    }

    return false;
  }

  return {
    request: makeRequest(function (url, args, resolve, reject) {
      var method = args.method != null ? args.method.toUpperCase() : "GET";
      var body = args.body;
      var assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData);
      var responseType = args.responseType || (typeof args.extract === "function" ? "" : "json");
      var xhr = new $window.XMLHttpRequest(),
          aborted = false;
      var original = xhr,
          replacedAbort;
      var abort = xhr.abort;

      xhr.abort = function () {
        aborted = true;
        abort.call(this);
      };

      xhr.open(method, url, args.async !== false, typeof args.user === "string" ? args.user : undefined, typeof args.password === "string" ? args.password : undefined);

      if (assumeJSON && body != null && !hasHeader(args, /^content-type$/i)) {
        xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");
      }

      if (typeof args.deserialize !== "function" && !hasHeader(args, /^accept$/i)) {
        xhr.setRequestHeader("Accept", "application/json, text/*");
      }

      if (args.withCredentials) xhr.withCredentials = args.withCredentials;
      if (args.timeout) xhr.timeout = args.timeout;
      xhr.responseType = responseType;

      for (var key in args.headers) {
        if ({}.hasOwnProperty.call(args.headers, key)) {
          xhr.setRequestHeader(key, args.headers[key]);
        }
      }

      xhr.onreadystatechange = function (ev) {
        // Don't throw errors on xhr.abort().
        if (aborted) return;

        if (ev.target.readyState === 4) {
          try {
            var success = ev.target.status >= 200 && ev.target.status < 300 || ev.target.status === 304 || /^file:\/\//i.test(url); // When the response type isn't "" or "text",
            // `xhr.responseText` is the wrong thing to use.
            // Browsers do the right thing and throw here, and we
            // should honor that and do the right thing by
            // preferring `xhr.response` where possible/practical.

            var response = ev.target.response,
                message;

            if (responseType === "json") {
              // For IE and Edge, which don't implement
              // `responseType: "json"`.
              if (!ev.target.responseType && typeof args.extract !== "function") response = JSON.parse(ev.target.responseText);
            } else if (!responseType || responseType === "text") {
              // Only use this default if it's text. If a parsed
              // document is needed on old IE and friends (all
              // unsupported), the user should use a custom
              // `config` instead. They're already using this at
              // their own risk.
              if (response == null) response = ev.target.responseText;
            }

            if (typeof args.extract === "function") {
              response = args.extract(ev.target, args);
              success = true;
            } else if (typeof args.deserialize === "function") {
              response = args.deserialize(response);
            }

            if (success) resolve(response);else {
              try {
                message = ev.target.responseText;
              } catch (e) {
                message = response;
              }

              var error = new Error(message);
              error.code = ev.target.status;
              error.response = response;
              reject(error);
            }
          } catch (e) {
            reject(e);
          }
        }
      };

      if (typeof args.config === "function") {
        xhr = args.config(xhr, args, url) || xhr; // Propagate the `abort` to any replacement XHR as well.

        if (xhr !== original) {
          replacedAbort = xhr.abort;

          xhr.abort = function () {
            aborted = true;
            replacedAbort.call(this);
          };
        }
      }

      if (body == null) xhr.send();else if (typeof args.serialize === "function") xhr.send(args.serialize(body));else if (body instanceof $window.FormData) xhr.send(body);else xhr.send(JSON.stringify(body));
    }),
    jsonp: makeRequest(function (url, args, resolve, reject) {
      var callbackName = args.callbackName || "_mithril_" + Math.round(Math.random() * 1e16) + "_" + callbackCount++;
      var script = $window.document.createElement("script");

      $window[callbackName] = function (data) {
        delete $window[callbackName];
        script.parentNode.removeChild(script);
        resolve(data);
      };

      script.onerror = function () {
        delete $window[callbackName];
        script.parentNode.removeChild(script);
        reject(new Error("JSONP request failed"));
      };

      script.src = url + (url.indexOf("?") < 0 ? "?" : "&") + encodeURIComponent(args.callbackKey || "callback") + "=" + encodeURIComponent(callbackName);
      $window.document.documentElement.appendChild(script);
    })
  };
};

/***/ }),

/***/ "./node_modules/mithril/route.js":
/*!***************************************!*\
  !*** ./node_modules/mithril/route.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var mountRedraw = __webpack_require__(/*! ./mount-redraw */ "./node_modules/mithril/mount-redraw.js");

module.exports = __webpack_require__(/*! ./api/router */ "./node_modules/mithril/api/router.js")(window, mountRedraw);

/***/ }),

/***/ "./node_modules/mithril/stream.js":
/*!****************************************!*\
  !*** ./node_modules/mithril/stream.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


module.exports = __webpack_require__(/*! ./stream/stream */ "./node_modules/mithril/stream/stream.js");

/***/ }),

/***/ "./node_modules/mithril/stream/stream.js":
/*!***********************************************!*\
  !*** ./node_modules/mithril/stream/stream.js ***!
  \***********************************************/
/***/ ((module) => {

/* eslint-disable */
;

(function () {
  "use strict";
  /* eslint-enable */

  Stream.SKIP = {};
  Stream.lift = lift;
  Stream.scan = scan;
  Stream.merge = merge;
  Stream.combine = combine;
  Stream.scanMerge = scanMerge;
  Stream["fantasy-land/of"] = Stream;
  var warnedHalt = false;
  Object.defineProperty(Stream, "HALT", {
    get: function get() {
      warnedHalt || console.log("HALT is deprecated and has been renamed to SKIP");
      warnedHalt = true;
      return Stream.SKIP;
    }
  });

  function Stream(value) {
    var dependentStreams = [];
    var dependentFns = [];

    function stream(v) {
      if (arguments.length && v !== Stream.SKIP) {
        value = v;

        if (open(stream)) {
          stream._changing();

          stream._state = "active";
          dependentStreams.forEach(function (s, i) {
            s(dependentFns[i](value));
          });
        }
      }

      return value;
    }

    stream.constructor = Stream;
    stream._state = arguments.length && value !== Stream.SKIP ? "active" : "pending";
    stream._parents = [];

    stream._changing = function () {
      if (open(stream)) stream._state = "changing";
      dependentStreams.forEach(function (s) {
        s._changing();
      });
    };

    stream._map = function (fn, ignoreInitial) {
      var target = ignoreInitial ? Stream() : Stream(fn(value));

      target._parents.push(stream);

      dependentStreams.push(target);
      dependentFns.push(fn);
      return target;
    };

    stream.map = function (fn) {
      return stream._map(fn, stream._state !== "active");
    };

    var end;

    function createEnd() {
      end = Stream();
      end.map(function (value) {
        if (value === true) {
          stream._parents.forEach(function (p) {
            p._unregisterChild(stream);
          });

          stream._state = "ended";
          stream._parents.length = dependentStreams.length = dependentFns.length = 0;
        }

        return value;
      });
      return end;
    }

    stream.toJSON = function () {
      return value != null && typeof value.toJSON === "function" ? value.toJSON() : value;
    };

    stream["fantasy-land/map"] = stream.map;

    stream["fantasy-land/ap"] = function (x) {
      return combine(function (s1, s2) {
        return s1()(s2());
      }, [x, stream]);
    };

    stream._unregisterChild = function (child) {
      var childIndex = dependentStreams.indexOf(child);

      if (childIndex !== -1) {
        dependentStreams.splice(childIndex, 1);
        dependentFns.splice(childIndex, 1);
      }
    };

    Object.defineProperty(stream, "end", {
      get: function get() {
        return end || createEnd();
      }
    });
    return stream;
  }

  function combine(fn, streams) {
    var ready = streams.every(function (s) {
      if (s.constructor !== Stream) throw new Error("Ensure that each item passed to stream.combine/stream.merge/lift is a stream");
      return s._state === "active";
    });
    var stream = ready ? Stream(fn.apply(null, streams.concat([streams]))) : Stream();
    var changed = [];
    var mappers = streams.map(function (s) {
      return s._map(function (value) {
        changed.push(s);

        if (ready || streams.every(function (s) {
          return s._state !== "pending";
        })) {
          ready = true;
          stream(fn.apply(null, streams.concat([changed])));
          changed = [];
        }

        return value;
      }, true);
    });
    var endStream = stream.end.map(function (value) {
      if (value === true) {
        mappers.forEach(function (mapper) {
          mapper.end(true);
        });
        endStream.end(true);
      }

      return undefined;
    });
    return stream;
  }

  function merge(streams) {
    return combine(function () {
      return streams.map(function (s) {
        return s();
      });
    }, streams);
  }

  function scan(fn, acc, origin) {
    var stream = origin.map(function (v) {
      var next = fn(acc, v);
      if (next !== Stream.SKIP) acc = next;
      return next;
    });
    stream(acc);
    return stream;
  }

  function scanMerge(tuples, seed) {
    var streams = tuples.map(function (tuple) {
      return tuple[0];
    });
    var stream = combine(function () {
      var changed = arguments[arguments.length - 1];
      streams.forEach(function (stream, i) {
        if (changed.indexOf(stream) > -1) seed = tuples[i][1](seed, stream());
      });
      return seed;
    }, streams);
    stream(seed);
    return stream;
  }

  function lift() {
    var fn = arguments[0];
    var streams = Array.prototype.slice.call(arguments, 1);
    return merge(streams).map(function (streams) {
      return fn.apply(undefined, streams);
    });
  }

  function open(s) {
    return s._state === "pending" || s._state === "active" || s._state === "changing";
  }

  if (true) module["exports"] = Stream;else {}
})();

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/punycode/punycode.es6.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/punycode/punycode.es6.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ucs2decode": () => (/* binding */ ucs2decode),
/* harmony export */   "ucs2encode": () => (/* binding */ ucs2encode),
/* harmony export */   "decode": () => (/* binding */ decode),
/* harmony export */   "encode": () => (/* binding */ encode),
/* harmony export */   "toASCII": () => (/* binding */ toASCII),
/* harmony export */   "toUnicode": () => (/* binding */ toUnicode),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });

/** Highest positive signed 32-bit float value */

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1

/** Bootstring parameters */

var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80

var delimiter = '-'; // '\x2D'

/** Regular expressions */

var regexPunycode = /^xn--/;
var regexNonASCII = /[^\0-\x7E]/; // non-ASCII chars

var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g; // RFC 3490 separators

/** Error messages */

var errors = {
  'overflow': 'Overflow: input needs wider integers to process',
  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
  'invalid-input': 'Invalid input'
};
/** Convenience shortcuts */

var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;
/*--------------------------------------------------------------------------*/

/**
 * A generic error utility function.
 * @private
 * @param {String} type The error type.
 * @returns {Error} Throws a `RangeError` with the applicable error message.
 */

function error(type) {
  throw new RangeError(errors[type]);
}
/**
 * A generic `Array#map` utility function.
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} callback The function that gets called for every array
 * item.
 * @returns {Array} A new array of values returned by the callback function.
 */


function map(array, fn) {
  var result = [];
  var length = array.length;

  while (length--) {
    result[length] = fn(array[length]);
  }

  return result;
}
/**
 * A simple `Array#map`-like wrapper to work with domain name strings or email
 * addresses.
 * @private
 * @param {String} domain The domain name or email address.
 * @param {Function} callback The function that gets called for every
 * character.
 * @returns {Array} A new string of characters returned by the callback
 * function.
 */


function mapDomain(string, fn) {
  var parts = string.split('@');
  var result = '';

  if (parts.length > 1) {
    // In email addresses, only the domain name should be punycoded. Leave
    // the local part (i.e. everything up to `@`) intact.
    result = parts[0] + '@';
    string = parts[1];
  } // Avoid `split(regex)` for IE8 compatibility. See #17.


  string = string.replace(regexSeparators, '\x2E');
  var labels = string.split('.');
  var encoded = map(labels, fn).join('.');
  return result + encoded;
}
/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 * @see `punycode.ucs2.encode`
 * @see <https://mathiasbynens.be/notes/javascript-encoding>
 * @memberOf punycode.ucs2
 * @name decode
 * @param {String} string The Unicode input string (UCS-2).
 * @returns {Array} The new array of code points.
 */


function ucs2decode(string) {
  var output = [];
  var counter = 0;
  var length = string.length;

  while (counter < length) {
    var value = string.charCodeAt(counter++);

    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = string.charCodeAt(counter++);

      if ((extra & 0xFC00) == 0xDC00) {
        // Low surrogate.
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }

  return output;
}
/**
 * Creates a string based on an array of numeric code points.
 * @see `punycode.ucs2.decode`
 * @memberOf punycode.ucs2
 * @name encode
 * @param {Array} codePoints The array of numeric code points.
 * @returns {String} The new Unicode string (UCS-2).
 */


var ucs2encode = function ucs2encode(array) {
  return String.fromCodePoint.apply(String, array);
};
/**
 * Converts a basic code point into a digit/integer.
 * @see `digitToBasic()`
 * @private
 * @param {Number} codePoint The basic numeric code point value.
 * @returns {Number} The numeric value of a basic code point (for use in
 * representing integers) in the range `0` to `base - 1`, or `base` if
 * the code point does not represent a value.
 */


var basicToDigit = function basicToDigit(codePoint) {
  if (codePoint - 0x30 < 0x0A) {
    return codePoint - 0x16;
  }

  if (codePoint - 0x41 < 0x1A) {
    return codePoint - 0x41;
  }

  if (codePoint - 0x61 < 0x1A) {
    return codePoint - 0x61;
  }

  return base;
};
/**
 * Converts a digit/integer into a basic code point.
 * @see `basicToDigit()`
 * @private
 * @param {Number} digit The numeric value of a basic code point.
 * @returns {Number} The basic code point whose value (when used for
 * representing integers) is `digit`, which needs to be in the range
 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
 * used; else, the lowercase form is used. The behavior is undefined
 * if `flag` is non-zero and `digit` has no uppercase form.
 */


var digitToBasic = function digitToBasic(digit, flag) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
};
/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 * @private
 */


var adapt = function adapt(delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);

  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }

  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};
/**
 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
 * symbols.
 * @memberOf punycode
 * @param {String} input The Punycode string of ASCII-only symbols.
 * @returns {String} The resulting string of Unicode symbols.
 */


var decode = function decode(input) {
  // Don't use UCS-2.
  var output = [];
  var inputLength = input.length;
  var i = 0;
  var n = initialN;
  var bias = initialBias; // Handle the basic code points: let `basic` be the number of input code
  // points before the last delimiter, or `0` if there is none, then copy
  // the first basic code points to the output.

  var basic = input.lastIndexOf(delimiter);

  if (basic < 0) {
    basic = 0;
  }

  for (var j = 0; j < basic; ++j) {
    // if it's not a basic code point
    if (input.charCodeAt(j) >= 0x80) {
      error('not-basic');
    }

    output.push(input.charCodeAt(j));
  } // Main decoding loop: start just after the last delimiter if any basic code
  // points were copied; start at the beginning otherwise.


  for (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) {
    // `index` is the index of the next character to be consumed.
    // Decode a generalized variable-length integer into `delta`,
    // which gets added to `i`. The overflow checking is easier
    // if we increase `i` as we go, then subtract off its starting
    // value at the end to obtain `delta`.
    var oldi = i;

    for (var w = 1, k = base;; k += base) {
      if (index >= inputLength) {
        error('invalid-input');
      }

      var digit = basicToDigit(input.charCodeAt(index++));

      if (digit >= base || digit > floor((maxInt - i) / w)) {
        error('overflow');
      }

      i += digit * w;
      var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

      if (digit < t) {
        break;
      }

      var baseMinusT = base - t;

      if (w > floor(maxInt / baseMinusT)) {
        error('overflow');
      }

      w *= baseMinusT;
    }

    var out = output.length + 1;
    bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
    // incrementing `n` each time, so we'll fix that now:

    if (floor(i / out) > maxInt - n) {
      error('overflow');
    }

    n += floor(i / out);
    i %= out; // Insert `n` at position `i` of the output.

    output.splice(i++, 0, n);
  }

  return String.fromCodePoint.apply(String, output);
};
/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 * @memberOf punycode
 * @param {String} input The string of Unicode symbols.
 * @returns {String} The resulting Punycode string of ASCII-only symbols.
 */


var encode = function encode(input) {
  var output = []; // Convert the input in UCS-2 to an array of Unicode code points.

  input = ucs2decode(input); // Cache the length.

  var inputLength = input.length; // Initialize the state.

  var n = initialN;
  var delta = 0;
  var bias = initialBias; // Handle the basic code points.

  for (var _iterator = _createForOfIteratorHelperLoose(input), _step; !(_step = _iterator()).done;) {
    var _currentValue2 = _step.value;

    if (_currentValue2 < 0x80) {
      output.push(stringFromCharCode(_currentValue2));
    }
  }

  var basicLength = output.length;
  var handledCPCount = basicLength; // `handledCPCount` is the number of code points that have been handled;
  // `basicLength` is the number of basic code points.
  // Finish the basic string with a delimiter unless it's empty.

  if (basicLength) {
    output.push(delimiter);
  } // Main encoding loop:


  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next
    // larger one:
    var m = maxInt;

    for (var _iterator2 = _createForOfIteratorHelperLoose(input), _step2; !(_step2 = _iterator2()).done;) {
      var currentValue = _step2.value;

      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
    // but guard against overflow.


    var handledCPCountPlusOne = handledCPCount + 1;

    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      error('overflow');
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (var _iterator3 = _createForOfIteratorHelperLoose(input), _step3; !(_step3 = _iterator3()).done;) {
      var _currentValue = _step3.value;

      if (_currentValue < n && ++delta > maxInt) {
        error('overflow');
      }

      if (_currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;

        for (var k = base;; k += base) {
          var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

          if (q < t) {
            break;
          }

          var qMinusT = q - t;
          var baseMinusT = base - t;
          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
          q = floor(qMinusT / baseMinusT);
        }

        output.push(stringFromCharCode(digitToBasic(q, 0)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }

    ++delta;
    ++n;
  }

  return output.join('');
};
/**
 * Converts a Punycode string representing a domain name or an email address
 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
 * it doesn't matter if you call it on a string that has already been
 * converted to Unicode.
 * @memberOf punycode
 * @param {String} input The Punycoded domain name or email address to
 * convert to Unicode.
 * @returns {String} The Unicode representation of the given Punycode
 * string.
 */


var toUnicode = function toUnicode(input) {
  return mapDomain(input, function (string) {
    return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
  });
};
/**
 * Converts a Unicode string representing a domain name or an email address to
 * Punycode. Only the non-ASCII parts of the domain name will be converted,
 * i.e. it doesn't matter if you call it with a domain that's already in
 * ASCII.
 * @memberOf punycode
 * @param {String} input The domain name or email address to convert, as a
 * Unicode string.
 * @returns {String} The Punycode representation of the given domain name or
 * email address.
 */


var toASCII = function toASCII(input) {
  return mapDomain(input, function (string) {
    return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
  });
};
/*--------------------------------------------------------------------------*/

/** Define the public API */


var punycode = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  'version': '2.1.0',

  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  'ucs2': {
    'decode': ucs2decode,
    'encode': ucs2encode
  },
  'decode': decode,
  'encode': encode,
  'toASCII': toASCII,
  'toUnicode': toUnicode
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (punycode);

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  define(Gp, iteratorSymbol, function () {
    return this;
  });
  define(Gp, "toString", function () {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : 0);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

/***/ }),

/***/ "./node_modules/tabbable/dist/index.esm.js":
/*!*************************************************!*\
  !*** ./node_modules/tabbable/dist/index.esm.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "focusable": () => (/* binding */ focusable),
/* harmony export */   "isFocusable": () => (/* binding */ isFocusable),
/* harmony export */   "isTabbable": () => (/* binding */ isTabbable),
/* harmony export */   "tabbable": () => (/* binding */ tabbable)
/* harmony export */ });
/*!
* tabbable 5.2.1
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])', 'details>summary:first-of-type', 'details'];
var candidateSelector = /* #__PURE__ */candidateSelectors.join(',');
var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

var getCandidates = function getCandidates(el, includeContainer, filter) {
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));

  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }

  candidates = candidates.filter(filter);
  return candidates;
};

var isContentEditable = function isContentEditable(node) {
  return node.contentEditable === 'true';
};

var getTabindex = function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);

  if (!isNaN(tabindexAttr)) {
    return tabindexAttr;
  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.


  if (isContentEditable(node)) {
    return 0;
  } // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default
  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,
  //  yet they are still part of the regular tab order; in FF, they get a default
  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab
  //  order, consider their tab index to be 0.


  if ((node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {
    return 0;
  }

  return node.tabIndex;
};

var sortOrderedTabbables = function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
};

var isInput = function isInput(node) {
  return node.tagName === 'INPUT';
};

var isHiddenInput = function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
};

var isDetailsWithSummary = function isDetailsWithSummary(node) {
  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {
    return child.tagName === 'SUMMARY';
  });
  return r;
};

var getCheckedRadio = function getCheckedRadio(nodes, form) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked && nodes[i].form === form) {
      return nodes[i];
    }
  }
};

var isTabbableRadio = function isTabbableRadio(node) {
  if (!node.name) {
    return true;
  }

  var radioScope = node.form || node.ownerDocument;

  var queryRadios = function queryRadios(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };

  var radioSet;

  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      // eslint-disable-next-line no-console
      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);
      return false;
    }
  }

  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};

var isRadio = function isRadio(node) {
  return isInput(node) && node.type === 'radio';
};

var isNonTabbableRadio = function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
};

var isHidden = function isHidden(node, displayCheck) {
  if (getComputedStyle(node).visibility === 'hidden') {
    return true;
  }

  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;

  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {
    return true;
  }

  if (!displayCheck || displayCheck === 'full') {
    while (node) {
      if (getComputedStyle(node).display === 'none') {
        return true;
      }

      node = node.parentElement;
    }
  } else if (displayCheck === 'non-zero-area') {
    var _node$getBoundingClie = node.getBoundingClientRect(),
        width = _node$getBoundingClie.width,
        height = _node$getBoundingClie.height;

    return width === 0 && height === 0;
  }

  return false;
}; // form fields (nested) inside a disabled fieldset are not focusable/tabbable
//  unless they are in the _first_ <legend> element of the top-most disabled
//  fieldset


var isDisabledFromFieldset = function isDisabledFromFieldset(node) {
  if (isInput(node) || node.tagName === 'SELECT' || node.tagName === 'TEXTAREA' || node.tagName === 'BUTTON') {
    var parentNode = node.parentElement;

    while (parentNode) {
      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {
        // look for the first <legend> as an immediate child of the disabled
        //  <fieldset>: if the node is in that legend, it'll be enabled even
        //  though the fieldset is disabled; otherwise, the node is in a
        //  secondary/subsequent legend, or somewhere else within the fieldset
        //  (however deep nested) and it'll be disabled
        for (var i = 0; i < parentNode.children.length; i++) {
          var child = parentNode.children.item(i);

          if (child.tagName === 'LEGEND') {
            if (child.contains(node)) {
              return false;
            } // the node isn't in the first legend (in doc order), so no matter
            //  where it is now, it'll be disabled


            return true;
          }
        } // the node isn't in a legend, so no matter where it is now, it'll be disabled


        return true;
      }

      parentNode = parentNode.parentElement;
    }
  } // else, node's tabbable/focusable state should not be affected by a fieldset's
  //  enabled/disabled state


  return false;
};

var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {
  if (node.disabled || isHiddenInput(node) || isHidden(node, options.displayCheck) || // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }

  return true;
};

var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {
  if (!isNodeMatchingSelectorFocusable(options, node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
    return false;
  }

  return true;
};

var tabbable = function tabbable(el, options) {
  options = options || {};
  var regularTabbables = [];
  var orderedTabbables = [];
  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  candidates.forEach(function (candidate, i) {
    var candidateTabindex = getTabindex(candidate);

    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate
      });
    }
  });
  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
    return a.node;
  }).concat(regularTabbables);
  return tabbableNodes;
};

var focusable = function focusable(el, options) {
  options = options || {};
  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));
  return candidates;
};

var isTabbable = function isTabbable(node, options) {
  options = options || {};

  if (!node) {
    throw new Error('No node provided');
  }

  if (matches.call(node, candidateSelector) === false) {
    return false;
  }

  return isNodeMatchingSelectorTabbable(options, node);
};

var focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');

var isFocusable = function isFocusable(node, options) {
  options = options || {};

  if (!node) {
    throw new Error('No node provided');
  }

  if (matches.call(node, focusableCandidateSelector) === false) {
    return false;
  }

  return isNodeMatchingSelectorFocusable(options, node);
};



/***/ }),

/***/ "./node_modules/textarea-caret/index.js":
/*!**********************************************!*\
  !*** ./node_modules/textarea-caret/index.js ***!
  \**********************************************/
/***/ ((module) => {

/* jshint browser: true */
(function () {
  // We'll copy the properties below into the mirror div.
  // Note that some browsers, such as Firefox, do not concatenate properties
  // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),
  // so we have to list every single property explicitly.
  var properties = ['direction', // RTL support
  'boxSizing', 'width', // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does
  'height', 'overflowX', 'overflowY', // copy the scrollbar for IE
  'borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', // https://developer.mozilla.org/en-US/docs/Web/CSS/font
  'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch', 'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily', 'textAlign', 'textTransform', 'textIndent', 'textDecoration', // might not make a difference, but better be safe
  'letterSpacing', 'wordSpacing', 'tabSize', 'MozTabSize'];
  var isBrowser = typeof window !== 'undefined';
  var isFirefox = isBrowser && window.mozInnerScreenX != null;

  function getCaretCoordinates(element, position, options) {
    if (!isBrowser) {
      throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');
    }

    var debug = options && options.debug || false;

    if (debug) {
      var el = document.querySelector('#input-textarea-caret-position-mirror-div');
      if (el) el.parentNode.removeChild(el);
    } // The mirror div will replicate the textarea's style


    var div = document.createElement('div');
    div.id = 'input-textarea-caret-position-mirror-div';
    document.body.appendChild(div);
    var style = div.style;
    var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle; // currentStyle for IE < 9

    var isInput = element.nodeName === 'INPUT'; // Default textarea styles

    style.whiteSpace = 'pre-wrap';
    if (!isInput) style.wordWrap = 'break-word'; // only for textarea-s
    // Position off-screen

    style.position = 'absolute'; // required to return coordinates properly

    if (!debug) style.visibility = 'hidden'; // not 'display: none' because we want rendering
    // Transfer the element's properties to the div

    properties.forEach(function (prop) {
      if (isInput && prop === 'lineHeight') {
        // Special case for <input>s because text is rendered centered and line height may be != height
        style.lineHeight = computed.height;
      } else {
        style[prop] = computed[prop];
      }
    });

    if (isFirefox) {
      // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275
      if (element.scrollHeight > parseInt(computed.height)) style.overflowY = 'scroll';
    } else {
      style.overflow = 'hidden'; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'
    }

    div.textContent = element.value.substring(0, position); // The second special handling for input type="text" vs textarea:
    // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037

    if (isInput) div.textContent = div.textContent.replace(/\s/g, "\xA0");
    var span = document.createElement('span'); // Wrapping must be replicated *exactly*, including when a long word gets
    // onto the next line, with whitespace at the end of the line before (#7).
    // The  *only* reliable way to do that is to copy the *entire* rest of the
    // textarea's content into the <span> created at the caret position.
    // For inputs, just '.' would be enough, but no need to bother.

    span.textContent = element.value.substring(position) || '.'; // || because a completely empty faux span doesn't render at all

    div.appendChild(span);
    var coordinates = {
      top: span.offsetTop + parseInt(computed['borderTopWidth']),
      left: span.offsetLeft + parseInt(computed['borderLeftWidth']),
      height: parseInt(computed['lineHeight'])
    };

    if (debug) {
      span.style.backgroundColor = '#aaa';
    } else {
      document.body.removeChild(div);
    }

    return coordinates;
  }

  if ( true && typeof module.exports != 'undefined') {
    module.exports = getCaretCoordinates;
  } else if (isBrowser) {
    window.getCaretCoordinates = getCaretCoordinates;
  }
})();

/***/ }),

/***/ "./src/common/Application.tsx":
/*!************************************!*\
  !*** ./src/common/Application.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Application)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/app */ "./src/common/app.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _components_ModalManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/ModalManager */ "./src/common/components/ModalManager.tsx");
/* harmony import */ var _components_AlertManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/AlertManager */ "./src/common/components/AlertManager.js");
/* harmony import */ var _components_RequestErrorModal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/RequestErrorModal */ "./src/common/components/RequestErrorModal.tsx");
/* harmony import */ var _Translator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Translator */ "./src/common/Translator.tsx");
/* harmony import */ var _Store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Store */ "./src/common/Store.ts");
/* harmony import */ var _Session__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Session */ "./src/common/Session.ts");
/* harmony import */ var _utils_extract__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/extract */ "./src/common/utils/extract.ts");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _utils_Drawer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/Drawer */ "./src/common/utils/Drawer.js");
/* harmony import */ var _utils_mapRoutes__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/mapRoutes */ "./src/common/utils/mapRoutes.ts");
/* harmony import */ var _utils_RequestError__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/RequestError */ "./src/common/utils/RequestError.ts");
/* harmony import */ var _utils_ScrollListener__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/ScrollListener */ "./src/common/utils/ScrollListener.js");
/* harmony import */ var _utils_liveHumanTimes__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./utils/liveHumanTimes */ "./src/common/utils/liveHumanTimes.ts");
/* harmony import */ var _extend_ts__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./extend.ts */ "./src/common/extend.ts");
/* harmony import */ var _models_Forum__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./models/Forum */ "./src/common/models/Forum.ts");
/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./models/User */ "./src/common/models/User.tsx");
/* harmony import */ var _models_Discussion__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./models/Discussion */ "./src/common/models/Discussion.tsx");
/* harmony import */ var _models_Post__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./models/Post */ "./src/common/models/Post.ts");
/* harmony import */ var _models_Group__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./models/Group */ "./src/common/models/Group.ts");
/* harmony import */ var _models_Notification__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./models/Notification */ "./src/common/models/Notification.ts");
/* harmony import */ var _states_PageState__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./states/PageState */ "./src/common/states/PageState.js");
/* harmony import */ var _states_ModalManagerState__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./states/ModalManagerState */ "./src/common/states/ModalManagerState.ts");
/* harmony import */ var _states_AlertManagerState__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./states/AlertManagerState */ "./src/common/states/AlertManagerState.ts");



var _excluded = ["background", "deserialize", "extract", "modifyText"];

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
















 // @ts-expect-error We need to explicitly use the prefix to distinguish between the extend folder.












/**
 * The `App` class provides a container for an application, as well as various
 * utilities for the rest of the app to use.
 */
var Application = /*#__PURE__*/function () {
  function Application() {
    this.forum = void 0;
    this.routes = {};
    this.initializers = new _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();
    this.session = void 0;
    this.translator = new _Translator__WEBPACK_IMPORTED_MODULE_9__["default"]();
    this.store = new _Store__WEBPACK_IMPORTED_MODULE_10__["default"]({
      forums: _models_Forum__WEBPACK_IMPORTED_MODULE_20__["default"],
      users: _models_User__WEBPACK_IMPORTED_MODULE_21__["default"],
      discussions: _models_Discussion__WEBPACK_IMPORTED_MODULE_22__["default"],
      posts: _models_Post__WEBPACK_IMPORTED_MODULE_23__["default"],
      groups: _models_Group__WEBPACK_IMPORTED_MODULE_24__["default"],
      notifications: _models_Notification__WEBPACK_IMPORTED_MODULE_25__["default"]
    });
    this.cache = {};
    this.booted = false;
    this.current = new _states_PageState__WEBPACK_IMPORTED_MODULE_26__["default"](null);
    this.previous = new _states_PageState__WEBPACK_IMPORTED_MODULE_26__["default"](null);
    this.modal = new _states_ModalManagerState__WEBPACK_IMPORTED_MODULE_27__["default"]();
    this.alerts = new _states_AlertManagerState__WEBPACK_IMPORTED_MODULE_28__["default"]();
    this.drawer = void 0;
    this.data = void 0;
    this._title = '';
    this._titleCount = 0;
    this.requestErrorAlert = null;
    this.initialRoute = void 0;
  }

  var _proto = Application.prototype;

  _proto.load = function load(payload) {
    this.data = payload;
    this.translator.setLocale(payload.locale);
  };

  _proto.boot = function boot() {
    var _this = this,
        _this$store$getById;

    this.initializers.toArray().forEach(function (initializer) {
      return initializer(_this);
    });
    this.store.pushPayload({
      data: this.data.resources
    });
    this.forum = this.store.getById('forums', '1');
    this.session = new _Session__WEBPACK_IMPORTED_MODULE_11__["default"]((_this$store$getById = this.store.getById('users', String(this.data.session.userId))) != null ? _this$store$getById : null, this.data.session.csrfToken);
    this.mount();
    this.initialRoute = window.location.href;
  } // TODO: This entire system needs a do-over for v2
  ;

  _proto.bootExtensions = function bootExtensions(extensions) {
    var _this2 = this;

    Object.keys(extensions).forEach(function (name) {
      var extension = extensions[name]; // If an extension doesn't define extenders, there's nothing more to do here.

      if (!extension.extend) return;
      var extenders = extension.extend.flat(Infinity);

      for (var _iterator = _createForOfIteratorHelperLoose(extenders), _step; !(_step = _iterator()).done;) {
        var extender = _step.value;
        // @ts-expect-error This is beyond saving atm.
        extender.extend(_this2, {
          name: name,
          exports: extension
        });
      }
    });
  };

  _proto.mount = function mount(basePath) {
    var _this3 = this;

    if (basePath === void 0) {
      basePath = '';
    }

    // An object with a callable view property is used in order to pass arguments to the component; see https://mithril.js.org/mount.html
    m.mount(document.getElementById('modal'), {
      view: function view() {
        return _components_ModalManager__WEBPACK_IMPORTED_MODULE_6__["default"].component({
          state: _this3.modal
        });
      }
    });
    m.mount(document.getElementById('alerts'), {
      view: function view() {
        return _components_AlertManager__WEBPACK_IMPORTED_MODULE_7__["default"].component({
          state: _this3.alerts
        });
      }
    });
    this.drawer = new _utils_Drawer__WEBPACK_IMPORTED_MODULE_14__["default"]();
    m.route(document.getElementById('content'), basePath + '/', (0,_utils_mapRoutes__WEBPACK_IMPORTED_MODULE_15__["default"])(this.routes, basePath));
    var appEl = document.getElementById('app');
    var appHeaderEl = document.querySelector('.App-header'); // Add a class to the body which indicates that the page has been scrolled
    // down. When this happens, we'll add classes to the header and app body
    // which will set the navbar's position to fixed. We don't want to always
    // have it fixed, as that could overlap with custom headers.

    var scrollListener = new _utils_ScrollListener__WEBPACK_IMPORTED_MODULE_17__["default"](function (top) {
      var offset = appEl.getBoundingClientRect().top + document.body.scrollTop;
      appEl.classList.toggle('affix', top >= offset);
      appEl.classList.toggle('scrolled', top > offset);
      appHeaderEl.classList.toggle('navbar-fixed-top', top >= offset);
    });
    scrollListener.start();
    scrollListener.update();
    document.body.classList.add('ontouchstart' in window ? 'touch' : 'no-touch');
    (0,_utils_liveHumanTimes__WEBPACK_IMPORTED_MODULE_18__["default"])();
  }
  /**
   * Get the API response document that has been preloaded into the application.
   */
  ;

  _proto.preloadedApiDocument = function preloadedApiDocument() {
    // If the URL has changed, the preloaded Api document is invalid.
    if (this.data.apiDocument && window.location.href === this.initialRoute) {
      var results = (0,_Store__WEBPACK_IMPORTED_MODULE_10__.payloadIsPlural)(this.data.apiDocument) ? this.store.pushPayload(this.data.apiDocument) : this.store.pushPayload(this.data.apiDocument);
      this.data.apiDocument = null;
      return results;
    }

    return null;
  }
  /**
   * Determine the current screen mode, based on our media queries.
   */
  ;

  _proto.screen = function screen() {
    var styles = getComputedStyle(document.documentElement);
    return styles.getPropertyValue('--flarum-screen');
  }
  /**
   * Set the `<title>` of the page.
   *
   * @param title New page title
   */
  ;

  _proto.setTitle = function setTitle(title) {
    this.title = title;
    this.updateTitle();
  }
  /**
   * Set a number to display in the `<title>` of the page.
   *
   * @param count Number to display in title
   */
  ;

  _proto.setTitleCount = function setTitleCount(count) {
    this.titleCount = count;
    this.updateTitle();
  };

  _proto.updateTitle = function updateTitle() {
    var count = this.titleCount ? "(" + this.titleCount + ") " : '';
    var onHomepage = m.route.get() === this.forum.attribute('basePath') + '/';
    var params = {
      pageTitle: this.title,
      forumName: this.forum.attribute('title'),
      // Until we add page numbers to the frontend, this is constant at 1
      // so that the page number portion doesn't show up in the URL.
      pageNumber: 1
    };
    var title = onHomepage || !this.title ? (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_13__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.meta_titles.without_page_title', params)) : (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_13__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.meta_titles.with_page_title', params));
    document.title = count + title;
  };

  _proto.transformRequestOptions = function transformRequestOptions(flarumOptions) {
    var _this4 = this;

    var _flarumOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, flarumOptions),
        background = _flarumOptions.background,
        deserialize = _flarumOptions.deserialize,
        extract = _flarumOptions.extract,
        modifyText = _flarumOptions.modifyText,
        tmpOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_flarumOptions, _excluded); // Unless specified otherwise, requests should run asynchronously in the
    // background, so that they don't prevent redraws from occurring.


    var defaultBackground = true; // When we deserialize JSON data, if for some reason the server has provided
    // a dud response, we don't want the application to crash. We'll show an
    // error message to the user instead.
    // @ts-expect-error Typescript doesn't know we return promisified `ReturnType` OR `string`,
    // so it errors due to Mithril's typings

    var defaultDeserialize = function defaultDeserialize(response) {
      return response;
    }; // When extracting the data from the response, we can check the server
    // response code and show an error message to the user if something's gone
    // awry.


    var originalExtract = modifyText || extract;

    var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      background: background != null ? background : defaultBackground,
      deserialize: deserialize != null ? deserialize : defaultDeserialize
    }, tmpOptions);

    (0,_extend_ts__WEBPACK_IMPORTED_MODULE_19__.extend)(options, 'config', function (_, xhr) {
      xhr.setRequestHeader('X-CSRF-Token', _this4.session.csrfToken);
    }); // If the method is something like PATCH or DELETE, which not all servers
    // and clients support, then we'll send it as a POST request with the
    // intended method specified in the X-HTTP-Method-Override header.

    if (options.method && !['GET', 'POST'].includes(options.method)) {
      var method = options.method;
      (0,_extend_ts__WEBPACK_IMPORTED_MODULE_19__.extend)(options, 'config', function (_, xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', method);
      });
      options.method = 'POST';
    }

    options.extract = function (xhr) {
      var responseText;

      if (originalExtract) {
        responseText = originalExtract(xhr.responseText);
      } else {
        responseText = xhr.responseText;
      }

      var status = xhr.status;

      if (status < 200 || status > 299) {
        throw new _utils_RequestError__WEBPACK_IMPORTED_MODULE_16__["default"](status, "" + responseText, options, xhr);
      }

      if (xhr.getResponseHeader) {
        var csrfToken = xhr.getResponseHeader('X-CSRF-Token');
        if (csrfToken) _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].session.csrfToken = csrfToken;
      }

      try {
        if (responseText === '') {
          return null;
        }

        return JSON.parse(responseText);
      } catch (e) {
        throw new _utils_RequestError__WEBPACK_IMPORTED_MODULE_16__["default"](500, "" + responseText, options, xhr);
      }
    };

    return options;
  }
  /**
   * Make an AJAX request, handling any low-level errors that may occur.
   *
   * @see https://mithril.js.org/request.html
   */
  ;

  _proto.request = function request(originalOptions) {
    var _this5 = this;

    var options = this.transformRequestOptions(originalOptions);
    if (this.requestErrorAlert) this.alerts.dismiss(this.requestErrorAlert);
    return m.request(options)["catch"](function (e) {
      return _this5.requestErrorCatch(e, originalOptions.errorHandler);
    });
  }
  /**
   * By default, show an error alert, and log the error to the console.
   */
  ;

  _proto.requestErrorCatch = function requestErrorCatch(error, customErrorHandler) {
    var _error$response$error, _error$response, _error$response$error2;

    // the details property is decoded to transform escaped characters such as '\n'
    var formattedErrors = (_error$response$error = (_error$response = error.response) == null ? void 0 : (_error$response$error2 = _error$response.errors) == null ? void 0 : _error$response$error2.map(function (e) {
      var _e$detail;

      return decodeURI((_e$detail = e.detail) != null ? _e$detail : '');
    })) != null ? _error$response$error : [];
    var content;

    switch (error.status) {
      case 422:
        content = formattedErrors.map(function (detail) {
          return [detail, m("br", null)];
        }).flat().slice(0, -1);
        break;

      case 401:
      case 403:
        content = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.error.permission_denied_message');
        break;

      case 404:
      case 410:
        content = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.error.not_found_message');
        break;

      case 413:
        content = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.error.payload_too_large_message');
        break;

      case 429:
        content = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.error.rate_limit_exceeded_message');
        break;

      default:
        content = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.error.generic_message');
    }

    var isDebug = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].forum.attribute('debug');
    error.alert = {
      type: 'error',
      content: content,
      controls: isDebug && [m(_components_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
        className: "Button Button--link",
        onclick: this.showDebug.bind(this, error, formattedErrors)
      }, _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.lib.debug_button'))]
    };

    if (customErrorHandler) {
      customErrorHandler(error);
    } else {
      this.requestErrorDefaultHandler(error, isDebug, formattedErrors);
    }

    return Promise.reject(error);
  };

  _proto.requestErrorDefaultHandler = function requestErrorDefaultHandler(e, isDebug, formattedErrors) {
    if (e instanceof _utils_RequestError__WEBPACK_IMPORTED_MODULE_16__["default"]) {
      if (isDebug && e.xhr) {
        var _e$options = e.options,
            method = _e$options.method,
            url = _e$options.url;
        var _e$xhr$status = e.xhr.status,
            status = _e$xhr$status === void 0 ? '' : _e$xhr$status;
        console.group(method + " " + url + " " + status);

        if (formattedErrors.length) {
          var _console;

          (_console = console).error.apply(_console, formattedErrors);
        } else {
          console.error(e);
        }

        console.groupEnd();
      }

      if (e.alert) {
        this.requestErrorAlert = this.alerts.show(e.alert, e.alert.content);
      }
    } else {
      throw e;
    }
  };

  _proto.showDebug = function showDebug(error, formattedError) {
    if (this.requestErrorAlert !== null) this.alerts.dismiss(this.requestErrorAlert);
    this.modal.show(_components_RequestErrorModal__WEBPACK_IMPORTED_MODULE_8__["default"], {
      error: error,
      formattedError: formattedError
    });
  }
  /**
   * Construct a URL to the route with the given name.
   */
  ;

  _proto.route = function route(name, params) {
    if (params === void 0) {
      params = {};
    }

    var route = this.routes[name];
    if (!route) throw new Error("Route '" + name + "' does not exist");
    var url = route.path.replace(/:([^\/]+)/g, function (m, key) {
      return "" + (0,_utils_extract__WEBPACK_IMPORTED_MODULE_12__["default"])(params, key);
    }); // Remove falsy values in params to avoid having urls like '/?sort&q'

    for (var _key in params) {
      if (params.hasOwnProperty(_key) && !params[_key]) delete params[_key];
    }

    var queryString = m.buildQueryString(params);
    var prefix = m.route.prefix === '' ? this.forum.attribute('basePath') : '';
    return prefix + url + (queryString ? '?' + queryString : '');
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Application, [{
    key: "title",
    get: function get() {
      return this._title;
    },
    set: function set(val) {
      this._title = val;
    }
  }, {
    key: "titleCount",
    get: function get() {
      return this._titleCount;
    }
    /**
     * The key for an Alert that was shown as a result of an AJAX request error.
     * If present, it will be dismissed on the next successful request.
     */
    ,
    set: function set(val) {
      this._titleCount = val;
    }
  }]);

  return Application;
}();



/***/ }),

/***/ "./src/common/Component.ts":
/*!*********************************!*\
  !*** ./src/common/Component.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Component)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");


/**
 * The `Component` class defines a user interface 'building block'. A component
 * generates a virtual DOM to be rendered on each redraw.
 *
 * Essentially, this is a wrapper for Mithril's components that adds several useful features:
 *
 *  - In the `oninit` and `onbeforeupdate` lifecycle hooks, we store vnode attrs in `this.attrs.
 *    This allows us to use attrs across components without having to pass the vnode to every single
 *    method.
 *  - The static `initAttrs` method allows a convenient way to provide defaults (or to otherwise modify)
 *    the attrs that have been passed into a component.
 *  - When the component is created in the DOM, we store its DOM element under `this.element`; this lets
 *    us use jQuery to modify child DOM state from internal methods via the `this.$()` method.
 *  - A convenience `component` method, which serves as an alternative to hyperscript and JSX.
 *
 * As with other Mithril components, components extending Component can be initialized
 * and nested using JSX, hyperscript, or a combination of both. The `component` method can also
 * be used.
 *
 * @example
 * return m('div', <MyComponent foo="bar"><p>Hello World</p></MyComponent>);
 *
 * @example
 * return m('div', MyComponent.component({foo: 'bar'), m('p', 'Hello World!'));
 *
 * @see https://mithril.js.org/components.html
 */
var Component = /*#__PURE__*/function () {
  function Component() {
    this.element = void 0;
    this.attrs = void 0;
    this.state = void 0;
  }

  var _proto = Component.prototype;

  /**
   * @inheritdoc
   */
  _proto.oninit = function oninit(vnode) {
    this.setAttrs(vnode.attrs);
  }
  /**
   * @inheritdoc
   */
  ;

  _proto.oncreate = function oncreate(vnode) {
    this.element = vnode.dom;
  }
  /**
   * @inheritdoc
   */
  ;

  _proto.onbeforeupdate = function onbeforeupdate(vnode) {
    this.setAttrs(vnode.attrs);
  }
  /**
   * @inheritdoc
   */
  ;

  _proto.onupdate = function onupdate(vnode) {}
  /**
   * @inheritdoc
   */
  ;

  _proto.onbeforeremove = function onbeforeremove(vnode) {}
  /**
   * @inheritdoc
   */
  ;

  _proto.onremove = function onremove(vnode) {}
  /**
   * Returns a jQuery object for this component's element. If you pass in a
   * selector string, this method will return a jQuery object, using the current
   * element as its buffer.
   *
   * For example, calling `component.$('li')` will return a jQuery object
   * containing all of the `li` elements inside the DOM element of this
   * component.
   *
   * @param [selector] a jQuery-compatible selector string
   * @returns the jQuery object for the DOM node
   * @final
   */
  ;

  _proto.$ = function (_$) {
    function $(_x) {
      return _$.apply(this, arguments);
    }

    $.toString = function () {
      return _$.toString();
    };

    return $;
  }(function (selector) {
    var $element = $(this.element);
    return selector ? $element.find(selector) : $element;
  }
  /**
   * Convenience method to attach a component without JSX.
   * Has the same effect as calling `m(THIS_CLASS, attrs, children)`.
   *
   * @see https://mithril.js.org/hyperscript.html#mselector,-attributes,-children
   */
  );

  Component.component = function component(attrs, children) {
    if (attrs === void 0) {
      attrs = {};
    }

    if (children === void 0) {
      children = null;
    }

    var componentAttrs = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, attrs);

    return m(this, componentAttrs, children);
  }
  /**
   * Saves a reference to the vnode attrs after running them through initAttrs,
   * and checking for common issues.
   */
  ;

  _proto.setAttrs = function setAttrs(attrs) {
    if (attrs === void 0) {
      attrs = {};
    }

    this.constructor.initAttrs(attrs);

    if (attrs) {
      if ('children' in attrs) {
        throw new Error("[" + this.constructor.name + "] The \"children\" attribute of attrs should never be used. Either pass children in as the vnode children or rename the attribute");
      }

      if ('tag' in attrs) {
        throw new Error("[" + this.constructor.name + "] You cannot use the \"tag\" attribute name with Mithril 2.");
      }
    }

    this.attrs = attrs;
  }
  /**
   * Initialize the component's attrs.
   *
   * This can be used to assign default values for missing, optional attrs.
   */
  ;

  Component.initAttrs = function initAttrs(attrs) {};

  return Component;
}();



/***/ }),

/***/ "./src/common/Fragment.ts":
/*!********************************!*\
  !*** ./src/common/Fragment.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Fragment)
/* harmony export */ });
/**
 * The `Fragment` class represents a chunk of DOM that is rendered once with Mithril and then takes
 * over control of its own DOM and lifecycle.
 *
 * This is very similar to the `Component` wrapper class, but is used for more fine-grained control over
 * the rendering and display of some significant chunks of the DOM. In contrast to components, fragments
 * do not offer Mithril's lifecycle hooks.
 *
 * Use this when you want to enjoy the benefits of JSX / VDOM for initial rendering, combined with
 * small helper methods that then make updates to that DOM directly, instead of fully redrawing
 * everything through Mithril.
 *
 * This should only be used when necessary, and only with `m.render`. If you are unsure whether you need
 * this or `Component, you probably need `Component`.
 */
var Fragment = /*#__PURE__*/function () {
  function Fragment() {
    this.element = void 0;
  }

  var _proto = Fragment.prototype;

  /**
   * Returns a jQuery object for this fragment's element. If you pass in a
   * selector string, this method will return a jQuery object, using the current
   * element as its buffer.
   *
   * For example, calling `fragment.$('li')` will return a jQuery object
   * containing all of the `li` elements inside the DOM element of this
   * fragment.
   *
   * @param [selector] a jQuery-compatible selector string
   * @returns the jQuery object for the DOM node
   * @final
   */
  _proto.$ = function (_$) {
    function $(_x) {
      return _$.apply(this, arguments);
    }

    $.toString = function () {
      return _$.toString();
    };

    return $;
  }(function (selector) {
    var $element = $(this.element);
    return selector ? $element.find(selector) : $element;
  }
  /**
   * Get the renderable virtual DOM that represents the fragment's view.
   *
   * This should NOT be overridden by subclasses. Subclasses wishing to define
   * their virtual DOM should override Fragment#view instead.
   *
   * @example
   * const fragment = new MyFragment();
   * m.render(document.body, fragment.render());
   *
   * @final
   */
  );

  _proto.render = function render() {
    var _this = this;

    var vdom = this.view();
    vdom.attrs = vdom.attrs || {};
    var originalOnCreate = vdom.attrs.oncreate;

    vdom.attrs.oncreate = function (vnode) {
      _this.element = vnode.dom;
      if (originalOnCreate) originalOnCreate.apply(_this, [vnode]);
    };

    return vdom;
  }
  /**
   * Creates a view out of virtual elements.
   */
  ;

  return Fragment;
}();



/***/ }),

/***/ "./src/common/Model.ts":
/*!*****************************!*\
  !*** ./src/common/Model.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Model)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/app */ "./src/common/app.ts");
/* harmony import */ var _helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");




/**
 * The `Model` class represents a local data resource. It provides methods to
 * persist changes via the API.
 */
var Model = /*#__PURE__*/function () {
  /**
   * The resource object from the API.
   */

  /**
   * The time at which the model's data was last updated. Watching the value
   * of this property is a fast way to retain/cache a subtree if data hasn't
   * changed.
   */

  /**
   * Whether or not the resource exists on the server.
   */

  /**
   * The data store that this resource should be persisted to.
   */

  /**
   * @param data A resource object from the API.
   * @param store The data store that this model should be persisted to.
   */
  function Model(data, store) {
    if (data === void 0) {
      data = {};
    }

    if (store === void 0) {
      store = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].store;
    }

    this.data = {};
    this.freshness = new Date();
    this.exists = false;
    this.store = void 0;
    this.data = data;
    this.store = store;
  }
  /**
   * Get the model's ID.
   *
   * @final
   */


  var _proto = Model.prototype;

  _proto.id = function id() {
    return 'id' in this.data ? this.data.id : undefined;
  }
  /**
   * Get one of the model's attributes.
   *
   * @final
   */
  ;

  _proto.attribute = function (_attribute) {
    function attribute(_x) {
      return _attribute.apply(this, arguments);
    }

    attribute.toString = function () {
      return _attribute.toString();
    };

    return attribute;
  }(function (attribute) {
    var _this$data, _this$data$attributes;

    return (_this$data = this.data) == null ? void 0 : (_this$data$attributes = _this$data.attributes) == null ? void 0 : _this$data$attributes[attribute];
  }
  /**
   * Merge new data into this model locally.
   *
   * @param data A resource object to merge into this model
   */
  );

  _proto.pushData = function pushData(data) {
    if ('id' in data) {
      this.data.id = data.id;
    }

    if ('type' in data) {
      this.data.type = data.type;
    }

    if ('attributes' in data) {
      var _this$data2;

      (_this$data2 = this.data).attributes || (_this$data2.attributes = {}); // @deprecated
      // Filter out relationships that got in by accident.

      for (var _key in data.attributes) {
        var val = data.attributes[_key];

        if (val && val instanceof Model) {
          (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_2__.fireDeprecationWarning)('Providing models as attributes to `Model.pushData()` or `Model.pushAttributes()` is deprecated.', '3249');
          delete data.attributes[_key];
          data.relationships || (data.relationships = {});
          data.relationships[_key] = {
            data: Model.getIdentifier(val)
          };
        }
      }

      Object.assign(this.data.attributes, data.attributes);
    }

    if ('relationships' in data) {
      var _this$data$relationsh;

      var relationships = (_this$data$relationsh = this.data.relationships) != null ? _this$data$relationsh : {}; // For every relationship field, we need to check if we've
      // been handed a Model instance. If so, we will convert it to a
      // relationship data object.

      for (var r in data.relationships) {
        var _relationship = data.relationships[r];
        var identifier = void 0;

        if (_relationship instanceof Model) {
          identifier = {
            data: Model.getIdentifier(_relationship)
          };
        } else if (_relationship instanceof Array) {
          identifier = {
            data: _relationship.map(Model.getIdentifier)
          };
        } else {
          identifier = _relationship;
        }

        data.relationships[r] = identifier;
        relationships[r] = identifier;
      }

      this.data.relationships = relationships;
    } // Now that we've updated the data, we can say that the model is fresh.
    // This is an easy way to invalidate retained subtrees etc.


    this.freshness = new Date();
    return this;
  }
  /**
   * Merge new attributes into this model locally.
   *
   * @param attributes The attributes to merge.
   */
  ;

  _proto.pushAttributes = function pushAttributes(attributes) {
    this.pushData({
      attributes: attributes
    });
  }
  /**
   * Merge new attributes into this model, both locally and with persistence.
   *
   * @param attributes The attributes to save. If a 'relationships' key
   *     exists, it will be extracted and relationships will also be saved.
   */
  ;

  _proto.save = function save(attributes, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    var data = {
      type: this.data.type,
      attributes: attributes
    };

    if ('id' in this.data) {
      data.id = this.data.id;
    } // If a 'relationships' key exists, extract it from the attributes hash and
    // set it on the top-level data object instead. We will be sending this data
    // object to the API for persistence.


    if (attributes.relationships) {
      data.relationships = {};

      for (var _key2 in attributes.relationships) {
        var _model = attributes.relationships[_key2];
        data.relationships[_key2] = {
          data: _model instanceof Array ? _model.map(Model.getIdentifier) : Model.getIdentifier(_model)
        };
      }

      delete attributes.relationships;
    } // Before we update the model's data, we should make a copy of the model's
    // old data so that we can revert back to it if something goes awry during
    // persistence.


    var oldData = this.copyData();
    this.pushData(data);
    var request = {
      data: data,
      meta: options.meta || undefined
    };
    return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].request((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      method: this.exists ? 'PATCH' : 'POST',
      url: _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + this.apiEndpoint(),
      body: request
    }, options)).then( // If everything went well, we'll make sure the store knows that this
    // model exists now (if it didn't already), and we'll push the data that
    // the API returned into the store.
    function (payload) {
      return _this.store.pushPayload(payload);
    }, // If something went wrong, though... good thing we backed up our model's
    // old data! We'll revert to that and let others handle the error.
    function (err) {
      _this.pushData(oldData);

      m.redraw();
      throw err;
    });
  }
  /**
   * Send a request to delete the resource.
   *
   * @param body Data to send along with the DELETE request.
   */
  ;

  _proto["delete"] = function _delete(body, options) {
    var _this2 = this;

    if (body === void 0) {
      body = {};
    }

    if (options === void 0) {
      options = {};
    }

    if (!this.exists) return Promise.resolve();
    return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].request((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      method: 'DELETE',
      url: _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + this.apiEndpoint(),
      body: body
    }, options)).then(function () {
      _this2.exists = false;

      _this2.store.remove(_this2);
    });
  }
  /**
   * Construct a path to the API endpoint for this resource.
   */
  ;

  _proto.apiEndpoint = function apiEndpoint() {
    return '/' + this.data.type + ('id' in this.data ? '/' + this.data.id : '');
  };

  _proto.copyData = function copyData() {
    return JSON.parse(JSON.stringify(this.data));
  };

  _proto.rawRelationship = function rawRelationship(relationship) {
    var _this$data$relationsh2, _this$data$relationsh3;

    return (_this$data$relationsh2 = this.data.relationships) == null ? void 0 : (_this$data$relationsh3 = _this$data$relationsh2[relationship]) == null ? void 0 : _this$data$relationsh3.data;
  }
  /**
   * Generate a function which returns the value of the given attribute.
   *
   * @param transform A function to transform the attribute value
   */
  ;

  Model.attribute = function attribute(name, transform) {
    return function () {
      if (transform) {
        return transform(this.attribute(name));
      }

      return this.attribute(name);
    };
  }
  /**
   * Generate a function which returns the value of the given has-one
   * relationship.
   *
   * @return false if no information about the
   *     relationship exists; undefined if the relationship exists but the model
   *     has not been loaded; or the model if it has been loaded.
   */
  ;

  Model.hasOne = function hasOne(name) {
    return function () {
      var _this$data$relationsh4, _this$data$relationsh5;

      var relationshipData = (_this$data$relationsh4 = this.data.relationships) == null ? void 0 : (_this$data$relationsh5 = _this$data$relationsh4[name]) == null ? void 0 : _this$data$relationsh5.data;

      if (relationshipData && relationshipData instanceof Array) {
        throw new Error("Relationship " + name + " on model " + this.data.type + " is plural, so the hasOne method cannot be used to access it.");
      }

      if (relationshipData) {
        return this.store.getById(relationshipData.type, relationshipData.id);
      }

      return false;
    };
  }
  /**
   * Generate a function which returns the value of the given has-many
   * relationship.
   *
   * @return false if no information about the relationship
   *     exists; an array if it does, containing models if they have been
   *     loaded, and undefined for those that have not.
   */
  ;

  Model.hasMany = function hasMany(name) {
    return function () {
      var _this$data$relationsh6,
          _this$data$relationsh7,
          _this3 = this;

      var relationshipData = (_this$data$relationsh6 = this.data.relationships) == null ? void 0 : (_this$data$relationsh7 = _this$data$relationsh6[name]) == null ? void 0 : _this$data$relationsh7.data;

      if (relationshipData && !(relationshipData instanceof Array)) {
        throw new Error("Relationship " + name + " on model " + this.data.type + " is singular, so the hasMany method cannot be used to access it.");
      }

      if (relationshipData) {
        return relationshipData.map(function (data) {
          return _this3.store.getById(data.type, data.id);
        });
      }

      return false;
    };
  }
  /**
   * Transform the given value into a Date object.
   */
  ;

  Model.transformDate = function transformDate(value) {
    return value != null ? new Date(value) : value;
  }
  /**
   * Get a resource identifier object for the given model.
   */
  ;

  Model.getIdentifier = function getIdentifier(model) {
    if (!model || !('id' in model.data)) return null;
    return {
      type: model.data.type,
      id: model.data.id
    };
  };

  return Model;
}();



/***/ }),

/***/ "./src/common/Session.ts":
/*!*******************************!*\
  !*** ./src/common/Session.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Session)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/app */ "./src/common/app.ts");



/**
 * The `Session` class defines the current user session. It stores a reference
 * to the current authenticated user, and provides methods to log in/out.
 */
var Session = /*#__PURE__*/function () {
  /**
   * The current authenticated user.
   */

  /**
   * The CSRF token.
   */
  function Session(user, csrfToken) {
    this.user = void 0;
    this.csrfToken = void 0;
    this.user = user;
    this.csrfToken = csrfToken;
  }
  /**
   * Attempt to log in a user.
   */


  var _proto = Session.prototype;

  _proto.login = function login(body, options) {
    if (options === void 0) {
      options = {};
    }

    return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].request((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      method: 'POST',
      url: _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('baseUrl') + "/login",
      body: body
    }, options));
  }
  /**
   * Log the user out.
   */
  ;

  _proto.logout = function logout() {
    window.location.href = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('baseUrl') + "/logout?token=" + this.csrfToken;
  };

  return Session;
}();



/***/ }),

/***/ "./src/common/Store.ts":
/*!*****************************!*\
  !*** ./src/common/Store.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "payloadIsPlural": () => (/* binding */ payloadIsPlural),
/* harmony export */   "default": () => (/* binding */ Store)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/app */ "./src/common/app.ts");
/* harmony import */ var _helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");





function payloadIsPlural(payload) {
  return Array.isArray(payload.data);
}
/**
 * The `Store` class defines a local data store, and provides methods to
 * retrieve data from the API.
 */

var Store = /*#__PURE__*/function () {
  /**
   * The local data store. A tree of resource types to IDs, such that
   * accessing data[type][id] will return the model for that type/ID.
   */

  /**
   * The model registry. A map of resource types to the model class that
   * should be used to represent resources of that type.
   */
  function Store(models) {
    this.data = {};
    this.models = void 0;
    this.models = models;
  }
  /**
   * Push resources contained within an API payload into the store.
   *
   * @return The model(s) representing the resource(s) contained
   *     within the 'data' key of the payload.
   */


  var _proto = Store.prototype;

  _proto.pushPayload = function pushPayload(payload) {
    var _this = this;

    if (payload.included) payload.included.map(this.pushObject.bind(this));
    var models = payload.data instanceof Array ? payload.data.map(function (o) {
      return _this.pushObject(o, false);
    }) : this.pushObject(payload.data, false);
    var result = models; // Attach the original payload to the model that we give back. This is
    // useful to consumers as it allows them to access meta information
    // associated with their request.

    result.payload = payload;
    return result;
  }
  /**
   * Create a model to represent a resource object (or update an existing one),
   * and push it into the store.
   *
   * @param data The resource object
   * @return The model, or null if no model class has been
   *     registered for this resource type.
   */
  ;

  _proto.pushObject = function pushObject(data, allowUnregistered) {
    if (allowUnregistered === void 0) {
      allowUnregistered = true;
    }

    if (!this.models[data.type]) {
      if (!allowUnregistered) {
        setTimeout(function () {
          return (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_4__.fireDeprecationWarning)("Pushing object of type `" + data.type + "` not allowed, as type not yet registered in the store.", '3206');
        });
      }

      return null;
    }

    var type = this.data[data.type] = this.data[data.type] || {}; // Necessary for TS to narrow correctly.

    var curr = type[data.id];
    var instance = curr ? curr.pushData(data) : this.createRecord(data.type, data);
    type[data.id] = instance;
    instance.exists = true;
    return instance;
  }
  /**
   * Make a request to the API to find record(s) of a specific type.
   */
  ;

  _proto.find = /*#__PURE__*/function () {
    var _find = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(type, idOrParams, query, options) {
      var _this2 = this;

      var params, url;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (query === void 0) {
                query = {};
              }

              if (options === void 0) {
                options = {};
              }

              params = query;
              url = _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].forum.attribute('apiUrl') + '/' + type;

              if (idOrParams instanceof Array) {
                url += '?filter[id]=' + idOrParams.join(',');
              } else if (typeof idOrParams === 'object') {
                params = idOrParams;
              } else if (idOrParams) {
                url += '/' + idOrParams;
              }

              return _context.abrupt("return", _common_app__WEBPACK_IMPORTED_MODULE_3__["default"].request((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
                method: 'GET',
                url: url,
                params: params
              }, options)).then(function (payload) {
                if (payloadIsPlural(payload)) {
                  return _this2.pushPayload(payload);
                } else {
                  return _this2.pushPayload(payload);
                }
              }));

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function find(_x, _x2, _x3, _x4) {
      return _find.apply(this, arguments);
    }

    return find;
  }()
  /**
   * Get a record from the store by ID.
   */
  ;

  _proto.getById = function getById(type, id) {
    var _this$data, _this$data$type;

    return (_this$data = this.data) == null ? void 0 : (_this$data$type = _this$data[type]) == null ? void 0 : _this$data$type[id];
  }
  /**
   * Get a record from the store by the value of a model attribute.
   *
   * @param type The resource type.
   * @param key The name of the method on the model.
   * @param value The value of the model attribute.
   */
  ;

  _proto.getBy = function getBy(type, key, value) {
    // @ts-expect-error No way to do this safely, unfortunately.
    return this.all(type).filter(function (model) {
      return model[key]() === value;
    })[0];
  }
  /**
   * Get all loaded records of a specific type.
   */
  ;

  _proto.all = function all(type) {
    var records = this.data[type];
    return records ? Object.values(records) : [];
  }
  /**
   * Remove the given model from the store.
   */
  ;

  _proto.remove = function remove(model) {
    delete this.data[model.data.type][model.id()];
  }
  /**
   * Create a new record of the given type.
   *
   * @param type The resource type
   * @param data Any data to initialize the model with
   */
  ;

  _proto.createRecord = function createRecord(type, data) {
    if (data === void 0) {
      data = {};
    }

    data.type = data.type || type; // @ts-expect-error this will complain about initializing abstract models,
    // but we can safely assume that all models registered with the store are
    // not abstract.

    return new this.models[type](data, this);
  };

  return Store;
}();



/***/ }),

/***/ "./src/common/Translator.tsx":
/*!***********************************!*\
  !*** ./src/common/Translator.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Translator)
/* harmony export */ });
/* harmony import */ var _askvortsov_rich_icu_message_formatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @askvortsov/rich-icu-message-formatter */ "./node_modules/@askvortsov/rich-icu-message-formatter/lib/rich-icu-message-formatter.es.js");
/* harmony import */ var _ultraq_icu_message_formatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ultraq/icu-message-formatter */ "./node_modules/@ultraq/icu-message-formatter/lib/icu-message-formatter.es.js");
/* harmony import */ var _helpers_username__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _utils_extract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/extract */ "./src/common/utils/extract.ts");





var Translator = /*#__PURE__*/function () {
  function Translator() {
    this.translations = {};
    this.formatter = new _askvortsov_rich_icu_message_formatter__WEBPACK_IMPORTED_MODULE_2__.RichMessageFormatter(null, this.formatterTypeHandlers(), _askvortsov_rich_icu_message_formatter__WEBPACK_IMPORTED_MODULE_2__.mithrilRichHandler);
  }

  var _proto = Translator.prototype;

  _proto.setLocale = function setLocale(locale) {
    this.formatter.locale = locale;
  };

  _proto.addTranslations = function addTranslations(translations) {
    Object.assign(this.translations, translations);
  }
  /**
   * An extensible entrypoint for extenders to register type handlers for translations.
   */
  ;

  _proto.formatterTypeHandlers = function formatterTypeHandlers() {
    return {
      plural: _ultraq_icu_message_formatter__WEBPACK_IMPORTED_MODULE_3__.pluralTypeHandler,
      select: _ultraq_icu_message_formatter__WEBPACK_IMPORTED_MODULE_3__.selectTypeHandler
    };
  }
  /**
   * A temporary system to preprocess parameters.
   * Should not be used by extensions.
   * TODO: An extender will be added in v1.x.
   *
   * @internal
   */
  ;

  _proto.preprocessParameters = function preprocessParameters(parameters) {
    // If we've been given a user model as one of the input parameters, then
    // we'll extract the username and use that for the translation. In the
    // future there should be a hook here to inspect the user and change the
    // translation key. This will allow a gender property to determine which
    // translation key is used.
    if ('user' in parameters) {
      var user = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_1__["default"])(parameters, 'user');
      if (!parameters.username) parameters.username = (0,_helpers_username__WEBPACK_IMPORTED_MODULE_0__["default"])(user);
    }

    return parameters;
  };

  _proto.trans = function trans(id, parameters) {
    if (parameters === void 0) {
      parameters = {};
    }

    var translation = this.translations[id];

    if (translation) {
      parameters = this.preprocessParameters(parameters);
      return this.formatter.rich(translation, parameters);
    }

    return id;
  };

  return Translator;
}();



/***/ }),

/***/ "./src/common/app.ts":
/*!***************************!*\
  !*** ./src/common/app.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Used to fix typings
var w = window;
/**
 * Proxy app. Common JS is run first, at which point `window.app` is not
 * set as this is done by the namespaced JS.
 *
 * When the corrent value is set, this code would retain the reference to
 * the original invalid value.
 *
 * By using a proxy, we can ensure that our `window.app` value is always
 * up-to-date with the latest reference.
 */

var appProxy = new Proxy({}, {
  get: function get(_, properties) {
    return Reflect.get(w.app, properties, w.app);
  },
  set: function set(_, properties, value) {
    return Reflect.set(w.app, properties, value, w.app);
  }
});
/**
 * The instance of Application within the common namespace.
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (appProxy);

/***/ }),

/***/ "./src/common/compat.js":
/*!******************************!*\
  !*** ./src/common/compat.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _extend_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extend.ts */ "./src/common/extend.ts");
/* harmony import */ var _Session__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Session */ "./src/common/Session.ts");
/* harmony import */ var _Store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Store */ "./src/common/Store.ts");
/* harmony import */ var _utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/BasicEditorDriver */ "./src/common/utils/BasicEditorDriver.ts");
/* harmony import */ var _utils_evented__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/evented */ "./src/common/utils/evented.js");
/* harmony import */ var _utils_liveHumanTimes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/liveHumanTimes */ "./src/common/utils/liveHumanTimes.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _utils_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/mixin */ "./src/common/utils/mixin.js");
/* harmony import */ var _utils_humanTime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/humanTime */ "./src/common/utils/humanTime.ts");
/* harmony import */ var _utils_computed__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/computed */ "./src/common/utils/computed.ts");
/* harmony import */ var _utils_insertText__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/insertText */ "./src/common/utils/insertText.ts");
/* harmony import */ var _utils_styleSelectedText__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/styleSelectedText */ "./src/common/utils/styleSelectedText.ts");
/* harmony import */ var _utils_Drawer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/Drawer */ "./src/common/utils/Drawer.js");
/* harmony import */ var _utils_anchorScroll__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/anchorScroll */ "./src/common/utils/anchorScroll.js");
/* harmony import */ var _utils_RequestError__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/RequestError */ "./src/common/utils/RequestError.ts");
/* harmony import */ var _utils_abbreviateNumber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/abbreviateNumber */ "./src/common/utils/abbreviateNumber.ts");
/* harmony import */ var _utils_escapeRegExp__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/escapeRegExp */ "./src/common/utils/escapeRegExp.ts");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/string */ "./src/common/utils/string.ts");
/* harmony import */ var _utils_throttleDebounce__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./utils/throttleDebounce */ "./src/common/utils/throttleDebounce.ts");
/* harmony import */ var _utils_Stream__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/Stream */ "./src/common/utils/Stream.ts");
/* harmony import */ var _utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/SubtreeRetainer */ "./src/common/utils/SubtreeRetainer.ts");
/* harmony import */ var _utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/setRouteWithForcedRefresh */ "./src/common/utils/setRouteWithForcedRefresh.ts");
/* harmony import */ var _utils_extract__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils/extract */ "./src/common/utils/extract.ts");
/* harmony import */ var _utils_ScrollListener__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./utils/ScrollListener */ "./src/common/utils/ScrollListener.js");
/* harmony import */ var _utils_stringToColor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utils/stringToColor */ "./src/common/utils/stringToColor.ts");
/* harmony import */ var _utils_subclassOf__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./utils/subclassOf */ "./src/common/utils/subclassOf.js");
/* harmony import */ var _utils_patchMithril__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./utils/patchMithril */ "./src/common/utils/patchMithril.js");
/* harmony import */ var _utils_proxifyCompat__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/proxifyCompat */ "./src/common/utils/proxifyCompat.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _utils_formatNumber__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils/formatNumber */ "./src/common/utils/formatNumber.ts");
/* harmony import */ var _utils_mapRoutes__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./utils/mapRoutes */ "./src/common/utils/mapRoutes.ts");
/* harmony import */ var _utils_withAttr__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./utils/withAttr */ "./src/common/utils/withAttr.ts");
/* harmony import */ var _utils_focusTrap__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./utils/focusTrap */ "./src/common/utils/focusTrap.ts");
/* harmony import */ var _models_Notification__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./models/Notification */ "./src/common/models/Notification.ts");
/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./models/User */ "./src/common/models/User.tsx");
/* harmony import */ var _models_Post__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./models/Post */ "./src/common/models/Post.ts");
/* harmony import */ var _models_Discussion__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./models/Discussion */ "./src/common/models/Discussion.tsx");
/* harmony import */ var _models_Group__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./models/Group */ "./src/common/models/Group.ts");
/* harmony import */ var _models_Forum__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./models/Forum */ "./src/common/models/Forum.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./Component */ "./src/common/Component.ts");
/* harmony import */ var _Translator__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./Translator */ "./src/common/Translator.tsx");
/* harmony import */ var _components_AlertManager__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/AlertManager */ "./src/common/components/AlertManager.js");
/* harmony import */ var _components_Page__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/Page */ "./src/common/components/Page.tsx");
/* harmony import */ var _components_Switch__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/Switch */ "./src/common/components/Switch.js");
/* harmony import */ var _components_Badge__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/Badge */ "./src/common/components/Badge.js");
/* harmony import */ var _components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _components_Placeholder__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/Placeholder */ "./src/common/components/Placeholder.js");
/* harmony import */ var _components_Separator__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _components_Dropdown__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _components_SplitDropdown__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/SplitDropdown */ "./src/common/components/SplitDropdown.js");
/* harmony import */ var _components_RequestErrorModal__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/RequestErrorModal */ "./src/common/components/RequestErrorModal.tsx");
/* harmony import */ var _components_FieldSet__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/FieldSet */ "./src/common/components/FieldSet.js");
/* harmony import */ var _components_Select__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/Select */ "./src/common/components/Select.js");
/* harmony import */ var _components_Navigation__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/Navigation */ "./src/common/components/Navigation.js");
/* harmony import */ var _components_Alert__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/Alert */ "./src/common/components/Alert.tsx");
/* harmony import */ var _components_Link__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _components_LinkButton__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/LinkButton */ "./src/common/components/LinkButton.js");
/* harmony import */ var _components_Checkbox__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/Checkbox */ "./src/common/components/Checkbox.js");
/* harmony import */ var _components_ColorPreviewInput__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/ColorPreviewInput */ "./src/common/components/ColorPreviewInput.tsx");
/* harmony import */ var _components_SelectDropdown__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/SelectDropdown */ "./src/common/components/SelectDropdown.js");
/* harmony import */ var _components_ModalManager__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/ModalManager */ "./src/common/components/ModalManager.tsx");
/* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _components_GroupBadge__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/GroupBadge */ "./src/common/components/GroupBadge.js");
/* harmony import */ var _components_TextEditor__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./components/TextEditor */ "./src/common/components/TextEditor.js");
/* harmony import */ var _components_TextEditorButton__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/TextEditorButton */ "./src/common/components/TextEditorButton.js");
/* harmony import */ var _components_EditUserModal__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./components/EditUserModal */ "./src/common/components/EditUserModal.tsx");
/* harmony import */ var _components_Tooltip__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./components/Tooltip */ "./src/common/components/Tooltip.tsx");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./Model */ "./src/common/Model.ts");
/* harmony import */ var _Application__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./Application */ "./src/common/Application.tsx");
/* harmony import */ var _helpers_fullTime__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./helpers/fullTime */ "./src/common/helpers/fullTime.tsx");
/* harmony import */ var _helpers_avatar__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _helpers_humanTime__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./helpers/humanTime */ "./src/common/helpers/humanTime.tsx");
/* harmony import */ var _helpers_punctuateSeries__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./helpers/punctuateSeries */ "./src/common/helpers/punctuateSeries.js");
/* harmony import */ var _helpers_highlight__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./helpers/highlight */ "./src/common/helpers/highlight.tsx");
/* harmony import */ var _helpers_username__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _helpers_userOnline__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./helpers/userOnline */ "./src/common/helpers/userOnline.tsx");
/* harmony import */ var _helpers_listItems__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _Fragment__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./Fragment */ "./src/common/Fragment.ts");
/* harmony import */ var _resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./resolvers/DefaultResolver */ "./src/common/resolvers/DefaultResolver.ts");
/* harmony import */ var _states_PaginatedListState__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./states/PaginatedListState */ "./src/common/states/PaginatedListState.ts");
/* harmony import */ var _utils_isObject__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./utils/isObject */ "./src/common/utils/isObject.ts");




















































































/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  extend: _extend_ts__WEBPACK_IMPORTED_MODULE_0__,
  Session: _Session__WEBPACK_IMPORTED_MODULE_1__["default"],
  Store: _Store__WEBPACK_IMPORTED_MODULE_2__["default"],
  'utils/BasicEditorDriver': _utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_3__["default"],
  'utils/evented': _utils_evented__WEBPACK_IMPORTED_MODULE_4__["default"],
  'utils/liveHumanTimes': _utils_liveHumanTimes__WEBPACK_IMPORTED_MODULE_5__["default"],
  'utils/ItemList': _utils_ItemList__WEBPACK_IMPORTED_MODULE_6__["default"],
  'utils/mixin': _utils_mixin__WEBPACK_IMPORTED_MODULE_7__["default"],
  'utils/humanTime': _utils_humanTime__WEBPACK_IMPORTED_MODULE_8__["default"],
  'utils/computed': _utils_computed__WEBPACK_IMPORTED_MODULE_9__["default"],
  'utils/insertText': _utils_insertText__WEBPACK_IMPORTED_MODULE_10__["default"],
  'utils/styleSelectedText': _utils_styleSelectedText__WEBPACK_IMPORTED_MODULE_11__["default"],
  'utils/Drawer': _utils_Drawer__WEBPACK_IMPORTED_MODULE_12__["default"],
  'utils/anchorScroll': _utils_anchorScroll__WEBPACK_IMPORTED_MODULE_13__["default"],
  'utils/RequestError': _utils_RequestError__WEBPACK_IMPORTED_MODULE_14__["default"],
  'utils/abbreviateNumber': _utils_abbreviateNumber__WEBPACK_IMPORTED_MODULE_15__["default"],
  'utils/string': _utils_string__WEBPACK_IMPORTED_MODULE_17__,
  'utils/SubtreeRetainer': _utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_20__["default"],
  'utils/escapeRegExp': _utils_escapeRegExp__WEBPACK_IMPORTED_MODULE_16__["default"],
  'utils/extract': _utils_extract__WEBPACK_IMPORTED_MODULE_22__["default"],
  'utils/ScrollListener': _utils_ScrollListener__WEBPACK_IMPORTED_MODULE_23__["default"],
  'utils/stringToColor': _utils_stringToColor__WEBPACK_IMPORTED_MODULE_24__["default"],
  'utils/Stream': _utils_Stream__WEBPACK_IMPORTED_MODULE_19__["default"],
  'utils/subclassOf': _utils_subclassOf__WEBPACK_IMPORTED_MODULE_25__["default"],
  'utils/setRouteWithForcedRefresh': _utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_21__["default"],
  'utils/patchMithril': _utils_patchMithril__WEBPACK_IMPORTED_MODULE_26__["default"],
  'utils/proxifyCompat': _utils_proxifyCompat__WEBPACK_IMPORTED_MODULE_27__["default"],
  'utils/classList': _utils_classList__WEBPACK_IMPORTED_MODULE_28__["default"],
  'utils/extractText': _utils_extractText__WEBPACK_IMPORTED_MODULE_29__["default"],
  'utils/formatNumber': _utils_formatNumber__WEBPACK_IMPORTED_MODULE_30__["default"],
  'utils/mapRoutes': _utils_mapRoutes__WEBPACK_IMPORTED_MODULE_31__["default"],
  'utils/withAttr': _utils_withAttr__WEBPACK_IMPORTED_MODULE_32__["default"],
  'utils/throttleDebounce': _utils_throttleDebounce__WEBPACK_IMPORTED_MODULE_18__,
  'utils/isObject': _utils_isObject__WEBPACK_IMPORTED_MODULE_83__["default"],
  'utils/focusTrap': _utils_focusTrap__WEBPACK_IMPORTED_MODULE_33__,
  'models/Notification': _models_Notification__WEBPACK_IMPORTED_MODULE_34__["default"],
  'models/User': _models_User__WEBPACK_IMPORTED_MODULE_35__["default"],
  'models/Post': _models_Post__WEBPACK_IMPORTED_MODULE_36__["default"],
  'models/Discussion': _models_Discussion__WEBPACK_IMPORTED_MODULE_37__["default"],
  'models/Group': _models_Group__WEBPACK_IMPORTED_MODULE_38__["default"],
  'models/Forum': _models_Forum__WEBPACK_IMPORTED_MODULE_39__["default"],
  Component: _Component__WEBPACK_IMPORTED_MODULE_40__["default"],
  Fragment: _Fragment__WEBPACK_IMPORTED_MODULE_80__["default"],
  Translator: _Translator__WEBPACK_IMPORTED_MODULE_41__["default"],
  'components/AlertManager': _components_AlertManager__WEBPACK_IMPORTED_MODULE_42__["default"],
  'components/Page': _components_Page__WEBPACK_IMPORTED_MODULE_43__["default"],
  'components/Switch': _components_Switch__WEBPACK_IMPORTED_MODULE_44__["default"],
  'components/Badge': _components_Badge__WEBPACK_IMPORTED_MODULE_45__["default"],
  'components/LoadingIndicator': _components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_46__["default"],
  'components/Placeholder': _components_Placeholder__WEBPACK_IMPORTED_MODULE_47__["default"],
  'components/Separator': _components_Separator__WEBPACK_IMPORTED_MODULE_48__["default"],
  'components/Dropdown': _components_Dropdown__WEBPACK_IMPORTED_MODULE_49__["default"],
  'components/SplitDropdown': _components_SplitDropdown__WEBPACK_IMPORTED_MODULE_50__["default"],
  'components/RequestErrorModal': _components_RequestErrorModal__WEBPACK_IMPORTED_MODULE_51__["default"],
  'components/FieldSet': _components_FieldSet__WEBPACK_IMPORTED_MODULE_52__["default"],
  'components/Select': _components_Select__WEBPACK_IMPORTED_MODULE_53__["default"],
  'components/Navigation': _components_Navigation__WEBPACK_IMPORTED_MODULE_54__["default"],
  'components/Alert': _components_Alert__WEBPACK_IMPORTED_MODULE_55__["default"],
  'components/Link': _components_Link__WEBPACK_IMPORTED_MODULE_56__["default"],
  'components/LinkButton': _components_LinkButton__WEBPACK_IMPORTED_MODULE_57__["default"],
  'components/Checkbox': _components_Checkbox__WEBPACK_IMPORTED_MODULE_58__["default"],
  'components/ColorPreviewInput': _components_ColorPreviewInput__WEBPACK_IMPORTED_MODULE_59__["default"],
  'components/SelectDropdown': _components_SelectDropdown__WEBPACK_IMPORTED_MODULE_60__["default"],
  'components/ModalManager': _components_ModalManager__WEBPACK_IMPORTED_MODULE_61__["default"],
  'components/Button': _components_Button__WEBPACK_IMPORTED_MODULE_62__["default"],
  'components/Modal': _components_Modal__WEBPACK_IMPORTED_MODULE_63__["default"],
  'components/GroupBadge': _components_GroupBadge__WEBPACK_IMPORTED_MODULE_64__["default"],
  'components/TextEditor': _components_TextEditor__WEBPACK_IMPORTED_MODULE_65__["default"],
  'components/TextEditorButton': _components_TextEditorButton__WEBPACK_IMPORTED_MODULE_66__["default"],
  'components/Tooltip': _components_Tooltip__WEBPACK_IMPORTED_MODULE_68__["default"],
  'components/EditUserModal': _components_EditUserModal__WEBPACK_IMPORTED_MODULE_67__["default"],
  Model: _Model__WEBPACK_IMPORTED_MODULE_69__["default"],
  Application: _Application__WEBPACK_IMPORTED_MODULE_70__["default"],
  'helpers/fullTime': _helpers_fullTime__WEBPACK_IMPORTED_MODULE_71__["default"],
  'helpers/avatar': _helpers_avatar__WEBPACK_IMPORTED_MODULE_72__["default"],
  'helpers/icon': _helpers_icon__WEBPACK_IMPORTED_MODULE_73__["default"],
  'helpers/humanTime': _helpers_humanTime__WEBPACK_IMPORTED_MODULE_74__["default"],
  'helpers/punctuateSeries': _helpers_punctuateSeries__WEBPACK_IMPORTED_MODULE_75__["default"],
  'helpers/highlight': _helpers_highlight__WEBPACK_IMPORTED_MODULE_76__["default"],
  'helpers/username': _helpers_username__WEBPACK_IMPORTED_MODULE_77__["default"],
  'helpers/userOnline': _helpers_userOnline__WEBPACK_IMPORTED_MODULE_78__["default"],
  'helpers/listItems': _helpers_listItems__WEBPACK_IMPORTED_MODULE_79__["default"],
  'resolvers/DefaultResolver': _resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_81__["default"],
  'states/PaginatedListState': _states_PaginatedListState__WEBPACK_IMPORTED_MODULE_82__["default"]
});

/***/ }),

/***/ "./src/common/components/Alert.tsx":
/*!*****************************************!*\
  !*** ./src/common/components/Alert.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Alert)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _helpers_listItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _utils_extract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/extract */ "./src/common/utils/extract.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../app */ "./src/common/app.ts");








/**
 * The `Alert` component represents an alert box, which contains a message,
 * some controls, and may be dismissible.
 */
var Alert = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Alert, _Component);

  function Alert() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Alert.prototype;

  _proto.view = function view(vnode) {
    var attrs = Object.assign({}, this.attrs);
    var type = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(attrs, 'type');
    attrs.className = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_5__["default"])('Alert', "Alert--" + type, attrs.className);
    var content = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(attrs, 'content') || vnode.children;
    var controls = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(attrs, 'controls') || []; // If the alert is meant to be dismissible (which is the case by default),
    // then we will create a dismiss button to append as the final control in
    // the alert.

    var dismissible = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(attrs, 'dismissible');
    var ondismiss = (0,_utils_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(attrs, 'ondismiss');
    var dismissControl = [];

    if (dismissible || dismissible === undefined) {
      dismissControl.push(m(_Button__WEBPACK_IMPORTED_MODULE_2__["default"], {
        "aria-label": _app__WEBPACK_IMPORTED_MODULE_6__["default"].translator.trans('core.lib.alert.dismiss_a11y_label'),
        icon: "fas fa-times",
        "class": "Button Button--link Button--icon Alert-dismiss",
        onclick: ondismiss
      }));
    }

    return m("div", attrs, m("span", {
      "class": "Alert-body"
    }, content), m("ul", {
      "class": "Alert-controls"
    }, (0,_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__["default"])(controls.concat(dismissControl))));
  };

  return Alert;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/AlertManager.js":
/*!***********************************************!*\
  !*** ./src/common/components/AlertManager.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AlertManager)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");


/**
 * The `AlertManager` component provides an area in which `Alert` components can
 * be shown and dismissed.
 */

var AlertManager = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(AlertManager, _Component);

  function AlertManager() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = AlertManager.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    this.state = this.attrs.state;
  };

  _proto.view = function view() {
    var _this = this;

    return m("div", {
      "class": "AlertManager"
    }, Object.entries(this.state.getActiveAlerts()).map(function (_ref) {
      var key = _ref[0],
          alert = _ref[1];
      var urgent = alert.attrs.type === 'error';
      return m("div", {
        "class": "AlertManager-alert",
        role: "alert",
        "aria-live": urgent ? 'assertive' : 'polite'
      }, m(alert.componentClass, Object.assign({}, alert.attrs, {
        ondismiss: _this.state.dismiss.bind(_this.state, key)
      }), alert.children));
    }));
  };

  return AlertManager;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Badge.js":
/*!****************************************!*\
  !*** ./src/common/components/Badge.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Badge)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tooltip */ "./src/common/components/Tooltip.tsx");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");



var _excluded = ["type", "icon", "label", "color", "style"];




/**
 * The `Badge` component represents a user/discussion badge, indicating some
 * status (e.g. a discussion is stickied, a user is an admin).
 *
 * A badge may have the following special attrs:
 *
 * - `type` The type of badge this is. This will be used to give the badge a
 *   class name of `Badge--{type}`.
 * - `icon` The name of an icon to show inside the badge.
 * - `label`
 *
 * All other attrs will be assigned as attributes on the badge element.
 */

var Badge = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(Badge, _Component);

  function Badge() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Badge.prototype;

  _proto.view = function view() {
    var _this$attrs = this.attrs,
        type = _this$attrs.type,
        iconName = _this$attrs.icon,
        label = _this$attrs.label,
        color = _this$attrs.color,
        _this$attrs$style = _this$attrs.style,
        style = _this$attrs$style === void 0 ? {} : _this$attrs$style,
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$attrs, _excluded);

    var className = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_6__["default"])('Badge', [type && "Badge--" + type], attrs.className);
    var iconChild = iconName ? (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_5__["default"])(iconName, {
      className: 'Badge-icon'
    }) : m.trust('&nbsp;');

    var newStyle = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, style, {
      '--badge-bg': color
    });

    var badgeAttrs = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, attrs, {
      className: className,
      style: newStyle
    });

    var badgeNode = m("div", badgeAttrs, iconChild); // If we don't have a tooltip label, don't render the tooltip component.

    if (!label) return badgeNode;
    return m(_Tooltip__WEBPACK_IMPORTED_MODULE_3__["default"], {
      text: label
    }, badgeNode);
  };

  return Badge;
}(_Component__WEBPACK_IMPORTED_MODULE_4__["default"]);



/***/ }),

/***/ "./src/common/components/Button.tsx":
/*!******************************************!*\
  !*** ./src/common/components/Button.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");



var _excluded = ["type", "title", "aria-label", "icon", "disabled", "loading", "className", "class"];







/**
 * The `Button` component defines an element which, when clicked, performs an
 * action.
 *
 * Other attrs will be assigned as attributes on the `<button>` element.
 *
 * Note that a Button has no default class names. This is because a Button can
 * be used to represent any generic clickable control, like a menu item. Common
 * styles can be applied by providing `className="Button"` to the Button component.
 */
var Button = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(Button, _Component);

  function Button() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Button.prototype;

  _proto.view = function view(vnode) {
    var _this$attrs = this.attrs,
        type = _this$attrs.type,
        title = _this$attrs.title,
        ariaLabel = _this$attrs['aria-label'],
        iconName = _this$attrs.icon,
        disabled = _this$attrs.disabled,
        loading = _this$attrs.loading,
        className = _this$attrs.className,
        _class = _this$attrs["class"],
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$attrs, _excluded); // If no `type` attr provided, set to "button"


    type || (type = 'button'); // Use `title` attribute as `aria-label` if none provided

    ariaLabel || (ariaLabel = title); // If given a translation object, extract the text.

    if (typeof ariaLabel === 'object') {
      ariaLabel = (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(ariaLabel);
    }

    if (disabled || loading) {
      delete attrs.onclick;
    }

    className = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_6__["default"])(_class, className, {
      hasIcon: iconName,
      disabled: disabled || loading,
      loading: loading
    });

    var buttonAttrs = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      disabled: disabled,
      className: className,
      type: type,
      'aria-label': ariaLabel
    }, attrs);

    return m("button", buttonAttrs, this.getButtonContent(vnode.children));
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this$element;

    _Component.prototype.oncreate.call(this, vnode);

    var ariaLabel = this.attrs['aria-label'];

    if (this.view === Button.prototype.view && !ariaLabel && !(0,_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(vnode.children) && !((_this$element = this.element) != null && _this$element.getAttribute != null && _this$element.getAttribute('aria-label'))) {
      (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_4__["default"])('[Flarum Accessibility Warning] Button has no content and no accessible label. This means that screen-readers will not be able to interpret its meaning and just read "Button". Consider providing accessible text via the `aria-label` attribute. https://web.dev/button-name', this.element);
    }
  }
  /**
   * Get the template for the button's content.
   */
  ;

  _proto.getButtonContent = function getButtonContent(children) {
    var iconName = this.attrs.icon;
    return [iconName && (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_5__["default"])(iconName, {
      className: 'Button-icon'
    }), children && m("span", {
      className: "Button-label"
    }, children), this.attrs.loading && m(_LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__["default"], {
      size: "small",
      display: "inline"
    })];
  };

  return Button;
}(_Component__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/common/components/Checkbox.js":
/*!*******************************************!*\
  !*** ./src/common/components/Checkbox.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Checkbox)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _LoadingIndicator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _utils_withAttr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/withAttr */ "./src/common/utils/withAttr.ts");






/**
 * The `Checkbox` component defines a checkbox input.
 *
 * ### Attrs
 *
 * - `state` Whether or not the checkbox is checked.
 * - `className` The class name for the root element.
 * - `disabled` Whether or not the checkbox is disabled.
 * - `loading` Whether or not the checkbox is loading.
 * - `onchange` A callback to run when the checkbox is checked/unchecked.
 * - `children` A text label to display next to the checkbox.
 */

var Checkbox = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Checkbox, _Component);

  function Checkbox() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Checkbox.prototype;

  _proto.view = function view(vnode) {
    // Sometimes, false is stored in the DB as '0'. This is a temporary
    // conversion layer until a more robust settings encoding is introduced
    if (this.attrs.state === '0') this.attrs.state = false;
    var className = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_4__["default"])(['Checkbox', this.attrs.state ? 'on' : 'off', this.attrs.className, this.attrs.loading && 'loading', this.attrs.disabled && 'disabled']);
    return m("label", {
      className: className
    }, m("input", {
      type: "checkbox",
      checked: this.attrs.state,
      disabled: this.attrs.disabled,
      onchange: (0,_utils_withAttr__WEBPACK_IMPORTED_MODULE_5__["default"])('checked', this.onchange.bind(this))
    }), m("div", {
      className: "Checkbox-display",
      "aria-hidden": "true"
    }, this.getDisplay()), vnode.children);
  }
  /**
   * Get the template for the checkbox's display (tick/cross icon).
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getDisplay = function getDisplay() {
    return this.attrs.loading ? m(_LoadingIndicator__WEBPACK_IMPORTED_MODULE_2__["default"], {
      display: "unset",
      size: "small"
    }) : (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])(this.attrs.state ? 'fas fa-check' : 'fas fa-times');
  }
  /**
   * Run a callback when the state of the checkbox is changed.
   *
   * @param {boolean} checked
   * @protected
   */
  ;

  _proto.onchange = function onchange(checked) {
    if (this.attrs.onchange) this.attrs.onchange(checked, this);
  };

  return Checkbox;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/ColorPreviewInput.tsx":
/*!*****************************************************!*\
  !*** ./src/common/components/ColorPreviewInput.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ColorPreviewInput)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");


var _excluded = ["className"];




var ColorPreviewInput = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ColorPreviewInput, _Component);

  function ColorPreviewInput() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.value = void 0;
    return _this;
  }

  var _proto = ColorPreviewInput.prototype;

  _proto.view = function view(vnode) {
    var _this$attrs = this.attrs,
        className = _this$attrs.className,
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$attrs, _excluded);

    var value = (attrs.bidi == null ? void 0 : attrs.bidi()) || attrs.value;
    attrs.type || (attrs.type = 'text');
    return m("div", {
      className: "ColorInput"
    }, m("input", Object.assign({
      className: (0,_utils_classList__WEBPACK_IMPORTED_MODULE_3__["default"])('FormControl', className)
    }, attrs)), m("span", {
      className: "ColorInput-icon",
      role: "presentation"
    }, (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])('fas fa-exclamation-circle')), m("div", {
      className: "ColorInput-preview",
      style: {
        '--input-value': value
      },
      role: "presentation"
    }));
  };

  return ColorPreviewInput;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/ConfirmDocumentUnload.js":
/*!********************************************************!*\
  !*** ./src/common/components/ConfirmDocumentUnload.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ConfirmDocumentUnload)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");


/**
 * The `ConfirmDocumentUnload` component can be used to register a global
 * event handler that prevents closing the browser window/tab based on the
 * return value of a given callback prop.
 *
 * ### Attrs
 *
 * - `when` - a callback returning true when the browser should prompt for
 *            confirmation before closing the window/tab
 *
 * ### Children
 *
 * NOTE: Only the first child will be rendered. (Use this component to wrap
 * another component / DOM element.)
 *
 */

var ConfirmDocumentUnload = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ConfirmDocumentUnload, _Component);

  function ConfirmDocumentUnload() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ConfirmDocumentUnload.prototype;

  _proto.handler = function handler() {
    return this.attrs.when() || undefined;
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    this.boundHandler = this.handler.bind(this);
    $(window).on('beforeunload', this.boundHandler);
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    $(window).off('beforeunload', this.boundHandler);
  };

  _proto.view = function view(vnode) {
    // To avoid having to render another wrapping <div> here, we assume that
    // this component is only wrapped around a single element / component.
    return vnode.children[0];
  };

  return ConfirmDocumentUnload;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Dropdown.js":
/*!*******************************************!*\
  !*** ./src/common/components/Dropdown.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Dropdown)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _helpers_listItems__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/listItems */ "./src/common/helpers/listItems.tsx");





/**
 * The `Dropdown` component displays a button which, when clicked, shows a
 * dropdown menu beneath it.
 *
 * ### Attrs
 *
 * - `buttonClassName` A class name to apply to the dropdown toggle button.
 * - `menuClassName` A class name to apply to the dropdown menu.
 * - `icon` The name of an icon to show in the dropdown toggle button.
 * - `caretIcon` The name of an icon to show on the right of the button.
 * - `label` The label of the dropdown toggle button. Defaults to 'Controls'.
 * - `accessibleToggleLabel` The label used to describe the dropdown toggle button to assistive readers. Defaults to 'Toggle dropdown menu'.
 * - `onhide`
 * - `onshow`
 *
 * The children will be displayed as a list inside of the dropdown menu.
 */

var Dropdown = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Dropdown, _Component);

  function Dropdown() {
    return _Component.apply(this, arguments) || this;
  }

  Dropdown.initAttrs = function initAttrs(attrs) {
    attrs.className = attrs.className || '';
    attrs.buttonClassName = attrs.buttonClassName || '';
    attrs.menuClassName = attrs.menuClassName || '';
    attrs.label = attrs.label || '';
    attrs.caretIcon = typeof attrs.caretIcon !== 'undefined' ? attrs.caretIcon : 'fas fa-caret-down';
    attrs.accessibleToggleLabel = attrs.accessibleToggleLabel || _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.dropdown.toggle_dropdown_accessible_label');
  };

  var _proto = Dropdown.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    this.showing = false;
  };

  _proto.view = function view(vnode) {
    var items = vnode.children ? (0,_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__["default"])(vnode.children) : [];
    var renderItems = this.attrs.lazyDraw ? this.showing : true;
    return m("div", {
      className: 'ButtonGroup Dropdown dropdown ' + this.attrs.className + ' itemCount' + items.length + (this.showing ? ' open' : '')
    }, this.getButton(vnode.children), renderItems && this.getMenu(items));
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this = this;

    _Component.prototype.oncreate.call(this, vnode); // When opening the dropdown menu, work out if the menu goes beyond the
    // bottom of the viewport. If it does, we will apply class to make it show
    // above the toggle button instead of below it.


    this.$().on('shown.bs.dropdown', function () {
      var _this$attrs = _this.attrs,
          lazyDraw = _this$attrs.lazyDraw,
          onshow = _this$attrs.onshow;
      _this.showing = true; // If using lazy drawing, redraw before calling `onshow` function
      // to make sure the menu DOM exists in case the callback tries to use it.

      if (lazyDraw) {
        m.redraw.sync();
      }

      if (typeof onshow === 'function') {
        onshow();
      } // If not using lazy drawing, keep previous functionality
      // of redrawing after calling onshow()


      if (!lazyDraw) {
        m.redraw();
      }

      var $menu = _this.$('.Dropdown-menu');

      var isRight = $menu.hasClass('Dropdown-menu--right');
      $menu.removeClass('Dropdown-menu--top Dropdown-menu--right');
      $menu.toggleClass('Dropdown-menu--top', $menu.offset().top + $menu.height() > $(window).scrollTop() + $(window).height());

      if ($menu.offset().top < 0) {
        $menu.removeClass('Dropdown-menu--top');
      }

      $menu.toggleClass('Dropdown-menu--right', isRight || $menu.offset().left + $menu.width() > $(window).scrollLeft() + $(window).width());
    });
    this.$().on('hidden.bs.dropdown', function () {
      _this.showing = false;

      if (_this.attrs.onhide) {
        _this.attrs.onhide();
      }

      m.redraw();
    });
  }
  /**
   * Get the template for the button.
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getButton = function getButton(children) {
    return m("button", {
      className: 'Dropdown-toggle ' + this.attrs.buttonClassName,
      "aria-haspopup": "menu",
      "aria-label": this.attrs.accessibleToggleLabel,
      "data-toggle": "dropdown",
      onclick: this.attrs.onclick
    }, this.getButtonContent(children));
  }
  /**
   * Get the template for the button's content.
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getButtonContent = function getButtonContent(children) {
    return [this.attrs.icon ? (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])(this.attrs.icon, {
      className: 'Button-icon'
    }) : '', m("span", {
      className: "Button-label"
    }, this.attrs.label), this.attrs.caretIcon ? (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])(this.attrs.caretIcon, {
      className: 'Button-caret'
    }) : ''];
  };

  _proto.getMenu = function getMenu(items) {
    return m("ul", {
      className: 'Dropdown-menu dropdown-menu ' + this.attrs.menuClassName
    }, items);
  };

  return Dropdown;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/EditUserModal.tsx":
/*!*************************************************!*\
  !*** ./src/common/components/EditUserModal.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ EditUserModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _GroupBadge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GroupBadge */ "./src/common/components/GroupBadge.js");
/* harmony import */ var _models_Group__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/Group */ "./src/common/models/Group.ts");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _utils_Stream__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Stream */ "./src/common/utils/Stream.ts");










var EditUserModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(EditUserModal, _Modal);

  function EditUserModal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Modal.call.apply(_Modal, [this].concat(args)) || this;
    _this.username = void 0;
    _this.email = void 0;
    _this.isEmailConfirmed = void 0;
    _this.setPassword = void 0;
    _this.password = void 0;
    _this.groups = {};
    return _this;
  }

  var _proto = EditUserModal.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this2 = this;

    _Modal.prototype.oninit.call(this, vnode);

    var user = this.attrs.user;
    this.username = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(user.username() || '');
    this.email = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(user.email() || '');
    this.isEmailConfirmed = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(user.isEmailConfirmed() || false);
    this.setPassword = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(false);
    this.password = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(user.password() || '');
    var userGroups = user.groups() || [];
    _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.all('groups').filter(function (group) {
      return ![_models_Group__WEBPACK_IMPORTED_MODULE_5__["default"].GUEST_ID, _models_Group__WEBPACK_IMPORTED_MODULE_5__["default"].MEMBER_ID].includes(group.id());
    }).forEach(function (group) {
      return _this2.groups[group.id()] = (0,_utils_Stream__WEBPACK_IMPORTED_MODULE_8__["default"])(userGroups.includes(group));
    });
  };

  _proto.className = function className() {
    return 'EditUserModal Modal--small';
  };

  _proto.title = function title() {
    return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.title');
  };

  _proto.content = function content() {
    var fields = this.fields().toArray();
    return m("div", {
      className: "Modal-body"
    }, fields.length > 1 ? m("div", {
      className: "Form"
    }, this.fields().toArray()) : _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.nothing_available'));
  };

  _proto.fields = function fields() {
    var _app$session$user,
        _this3 = this,
        _app$session$user2;

    var items = new _utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();

    if ((_app$session$user = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) != null && _app$session$user.canEditCredentials()) {
      items.add('username', m("div", {
        className: "Form-group"
      }, m("label", null, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.username_heading')), m("input", {
        className: "FormControl",
        placeholder: (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_6__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.username_label')),
        bidi: this.username,
        disabled: this.nonAdminEditingAdmin()
      })), 40);

      if (_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user !== this.attrs.user) {
        items.add('email', m("div", {
          className: "Form-group"
        }, m("label", null, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.email_heading')), m("div", null, m("input", {
          className: "FormControl",
          placeholder: (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_6__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.email_label')),
          bidi: this.email,
          disabled: this.nonAdminEditingAdmin()
        })), !this.isEmailConfirmed() && this.userIsAdmin(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) ? m("div", null, _Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          className: 'Button Button--block',
          loading: this.loading,
          onclick: this.activate.bind(this)
        }, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.activate_button'))) : ''), 30);
        items.add('password', m("div", {
          className: "Form-group"
        }, m("label", null, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.password_heading')), m("div", null, m("label", {
          className: "checkbox"
        }, m("input", {
          type: "checkbox",
          onchange: function onchange(e) {
            var target = e.target;

            _this3.setPassword(target.checked);

            m.redraw.sync();
            if (target.checked) _this3.$('[name=password]').select();
            e.redraw = false;
          },
          disabled: this.nonAdminEditingAdmin()
        }), _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.set_password_label')), this.setPassword() ? m("input", {
          className: "FormControl",
          type: "password",
          name: "password",
          placeholder: (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_6__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.password_label')),
          bidi: this.password,
          disabled: this.nonAdminEditingAdmin()
        }) : '')), 20);
      }
    }

    if ((_app$session$user2 = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) != null && _app$session$user2.canEditGroups()) {
      items.add('groups', m("div", {
        className: "Form-group EditUserModal-groups"
      }, m("label", null, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.groups_heading')), m("div", null, Object.keys(this.groups).map(function (id) {
        return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.getById('groups', id);
      }).filter(Boolean).map(function (group) {
        return (// Necessary because filter(Boolean) doesn't narrow out falsy values.
          group && m("label", {
            className: "checkbox"
          }, m("input", {
            type: "checkbox",
            bidi: _this3.groups[group.id()],
            disabled: group.id() === _models_Group__WEBPACK_IMPORTED_MODULE_5__["default"].ADMINISTRATOR_ID && (_this3.attrs.user === _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user || !_this3.userIsAdmin(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user))
          }), _GroupBadge__WEBPACK_IMPORTED_MODULE_4__["default"].component({
            group: group,
            label: ''
          }), " ", group.nameSingular())
        );
      }))), 10);
    }

    items.add('submit', m("div", {
      className: "Form-group"
    }, _Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--primary',
      type: 'submit',
      loading: this.loading
    }, _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.edit_user.submit_button'))), -10);
    return items;
  };

  _proto.activate = function activate() {
    var _this4 = this;

    this.loading = true;
    var data = {
      username: this.username(),
      isEmailConfirmed: true
    };
    this.attrs.user.save(data, {
      errorHandler: this.onerror.bind(this)
    }).then(function () {
      _this4.isEmailConfirmed(true);

      _this4.loading = false;
      m.redraw();
    })["catch"](function () {
      _this4.loading = false;
      m.redraw();
    });
  };

  _proto.data = function data() {
    var _this5 = this;

    var data = {};
    var relationships = {};

    if (this.attrs.user.canEditCredentials() && !this.nonAdminEditingAdmin()) {
      data.username = this.username();

      if (_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user !== this.attrs.user) {
        data.email = this.email();
      }

      if (this.setPassword()) {
        data.password = this.password();
      }
    }

    if (this.attrs.user.canEditGroups()) {
      relationships.groups = Object.keys(this.groups).filter(function (id) {
        return _this5.groups[id]();
      }).map(function (id) {
        return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.getById('groups', id);
      }).filter(function (g) {
        return g instanceof _models_Group__WEBPACK_IMPORTED_MODULE_5__["default"];
      });
    }

    data.relationships = relationships;
    return data;
  };

  _proto.onsubmit = function onsubmit(e) {
    var _this6 = this;

    e.preventDefault();
    this.loading = true;
    this.attrs.user.save(this.data(), {
      errorHandler: this.onerror.bind(this)
    }).then(this.hide.bind(this))["catch"](function () {
      _this6.loading = false;
      m.redraw();
    });
  };

  _proto.nonAdminEditingAdmin = function nonAdminEditingAdmin() {
    return this.userIsAdmin(this.attrs.user) && !this.userIsAdmin(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user);
  }
  /**
   * @internal
   */
  ;

  _proto.userIsAdmin = function userIsAdmin(user) {
    return user && (user.groups() || []).some(function (g) {
      return (g == null ? void 0 : g.id()) === _models_Group__WEBPACK_IMPORTED_MODULE_5__["default"].ADMINISTRATOR_ID;
    });
  };

  return EditUserModal;
}(_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/FieldSet.js":
/*!*******************************************!*\
  !*** ./src/common/components/FieldSet.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FieldSet)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _helpers_listItems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/listItems */ "./src/common/helpers/listItems.tsx");



/**
 * The `FieldSet` component defines a collection of fields, displayed in a list
 * underneath a title. Accepted properties are:
 *
 * - `className` The class name for the fieldset.
 * - `label` The title of this group of fields.
 *
 * The children should be an array of items to show in the fieldset.
 */

var FieldSet = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(FieldSet, _Component);

  function FieldSet() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = FieldSet.prototype;

  _proto.view = function view(vnode) {
    return m("fieldset", {
      className: this.attrs.className
    }, m("legend", null, this.attrs.label), m("ul", null, (0,_helpers_listItems__WEBPACK_IMPORTED_MODULE_2__["default"])(vnode.children)));
  };

  return FieldSet;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/GroupBadge.js":
/*!*********************************************!*\
  !*** ./src/common/components/GroupBadge.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GroupBadge)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Badge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Badge */ "./src/common/components/Badge.js");



var GroupBadge = /*#__PURE__*/function (_Badge) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(GroupBadge, _Badge);

  function GroupBadge() {
    return _Badge.apply(this, arguments) || this;
  }

  GroupBadge.initAttrs = function initAttrs(attrs) {
    _Badge.initAttrs.call(this, attrs);

    if (attrs.group) {
      attrs.icon = attrs.group.icon();
      attrs.color = attrs.group.color();
      attrs.label = typeof attrs.label === 'undefined' ? attrs.group.nameSingular() : attrs.label;
      attrs.type = 'group--' + attrs.group.id();
      delete attrs.group;
    }
  };

  return GroupBadge;
}(_Badge__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Link.js":
/*!***************************************!*\
  !*** ./src/common/components/Link.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Link)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_extract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/extract */ "./src/common/utils/extract.ts");


var _excluded = ["options"];


/**
 * The link component enables both internal and external links.
 * It will return a regular HTML link for any links to external sites,
 * and it will use Mithril's m.route.Link for any internal links.
 *
 * Links will default to internal; the 'external' attr must be set to
 * `true` for the link to be external.
 */

var Link = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Link, _Component);

  function Link() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Link.prototype;

  _proto.view = function view(vnode) {
    var _vnode$attrs = vnode.attrs,
        _vnode$attrs$options = _vnode$attrs.options,
        options = _vnode$attrs$options === void 0 ? {} : _vnode$attrs$options,
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_vnode$attrs, _excluded);

    attrs.href = attrs.href || ''; // For some reason, m.route.Link does not like vnode.text, so if present, we
    // need to convert it to text vnodes and store it in children.

    var children = vnode.children || {
      tag: '#',
      children: vnode.text
    };

    if (attrs.external) {
      return m("a", attrs, children);
    } // If the href URL of the link is the same as the current page path
    // we will not add a new entry to the browser history.
    // This allows us to still refresh the Page component
    // without adding endless history entries.


    if (attrs.href === m.route.get()) {
      if (!('replace' in options)) options.replace = true;
    } // Mithril 2 does not completely rerender the page if a route change leads to the same route
    // (or the same component handling a different route).
    // Here, the `force` parameter will use Mithril's key system to force a full rerender
    // see https://mithril.js.org/route.html#key-parameter


    if ((0,_utils_extract__WEBPACK_IMPORTED_MODULE_3__["default"])(attrs, 'force')) {
      if (!('state' in options)) options.state = {};
      if (!('key' in options.state)) options.state.key = Date.now();
    }

    attrs.options = options;
    return m(m.route.Link, attrs, children);
  };

  return Link;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/LinkButton.js":
/*!*********************************************!*\
  !*** ./src/common/components/LinkButton.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LinkButton)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Link */ "./src/common/components/Link.js");



/**
 * The `LinkButton` component defines a `Button` which links to a route.
 *
 * ### Attrs
 *
 * All of the attrs accepted by `Button`, plus:
 *
 * - `active` Whether or not the page that this button links to is currently
 *   active.
 * - `href` The URL to link to. If the current URL `m.route()` matches this,
 *   the `active` prop will automatically be set to true.
 * - `force` Whether the page should be fully rerendered. Defaults to `true`.
 */

var LinkButton = /*#__PURE__*/function (_Button) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(LinkButton, _Button);

  function LinkButton() {
    return _Button.apply(this, arguments) || this;
  }

  LinkButton.initAttrs = function initAttrs(attrs) {
    _Button.initAttrs.call(this, attrs);

    attrs.active = this.isActive(attrs);
    if (attrs.force === undefined) attrs.force = true;
  };

  var _proto = LinkButton.prototype;

  _proto.view = function view(vnode) {
    var vdom = _Button.prototype.view.call(this, vnode);

    vdom.tag = _Link__WEBPACK_IMPORTED_MODULE_2__["default"];
    vdom.attrs.active = String(vdom.attrs.active);
    delete vdom.attrs.type;
    return vdom;
  }
  /**
   * Determine whether a component with the given attrs is 'active'.
   *
   * @param {object} attrs
   * @return {boolean}
   */
  ;

  LinkButton.isActive = function isActive(attrs) {
    return typeof attrs.active !== 'undefined' ? attrs.active : m.route.get() === attrs.href;
  };

  return LinkButton;
}(_Button__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/LoadingIndicator.tsx":
/*!****************************************************!*\
  !*** ./src/common/components/LoadingIndicator.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LoadingIndicator)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");


var _excluded = ["display", "size", "containerClassName", "className"];




/**
 * The `LoadingIndicator` component displays a simple CSS-based loading spinner.
 *
 * To set a custom color, use the CSS `color` property.
 *
 * To increase spacing around the spinner, use the CSS `height` property on the
 * spinner's **container**. Setting the `display` attribute to `block` will set
 * a height of `100px` by default.
 *
 * To apply a custom size to the loading indicator, set the `--size` and
 * `--thickness` CSS custom properties on the loading indicator container.
 *
 * If you *really* want to change how this looks as part of your custom theme,
 * you can override the `border-radius` and `border` then set either a
 * background image, or use `content: "\<glyph>"` (e.g. `content: "\f1ce"`)
 * and `font-family: 'Font Awesome 5 Free'` to set an FA icon if you'd rather.
 *
 * ### Attrs
 *
 * - `containerClassName` Class name(s) to apply to the indicator's parent
 * - `className` Class name(s) to apply to the indicator itself
 * - `display` Determines how the spinner should be displayed (`inline`, `block` (default) or `unset`)
 * - `size` Size of the loading indicator (`small`, `medium` or `large`)
 * - `containerAttrs` Optional attrs to be applied to the container DOM element
 *
 * All other attrs will be assigned as attributes on the DOM element.
 */
var LoadingIndicator = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(LoadingIndicator, _Component);

  function LoadingIndicator() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LoadingIndicator.prototype;

  _proto.view = function view() {
    var _this$attrs = this.attrs,
        _this$attrs$display = _this$attrs.display,
        display = _this$attrs$display === void 0 ? 'block' : _this$attrs$display,
        _this$attrs$size = _this$attrs.size,
        size = _this$attrs$size === void 0 ? 'medium' : _this$attrs$size,
        containerClassName = _this$attrs.containerClassName,
        className = _this$attrs.className,
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$attrs, _excluded);

    var completeClassName = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_4__["default"])('LoadingIndicator', className);
    var completeContainerClassName = (0,_utils_classList__WEBPACK_IMPORTED_MODULE_4__["default"])('LoadingIndicator-container', display !== 'unset' && "LoadingIndicator-container--" + display, size && "LoadingIndicator-container--" + size, containerClassName);
    return m("div", Object.assign({
      "aria-label": _common_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.lib.loading_indicator.accessible_label'),
      role: "status"
    }, attrs.containerAttrs, {
      "data-size": size,
      className: completeContainerClassName
    }), m("div", Object.assign({
      "aria-hidden": "true",
      className: completeClassName
    }, attrs)));
  };

  return LoadingIndicator;
}(_Component__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/common/components/Modal.tsx":
/*!*****************************************!*\
  !*** ./src/common/components/Modal.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Modal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _Alert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Alert */ "./src/common/components/Alert.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");







/**
 * The `Modal` component displays a modal dialog, wrapped in a form. Subclasses
 * should implement the `className`, `title`, and `content` methods.
 */
var Modal = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Modal, _Component);

  function Modal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.loading = false;
    _this.alertAttrs = null;
    return _this;
  }

  var _proto = Modal.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this2 = this;

    _Component.prototype.oninit.call(this, vnode); // TODO: [Flarum 2.0] Remove the code below.
    // This code prevents extensions which do not implement all abstract methods of this class from breaking
    // the forum frontend. Without it, function calls would would error rather than returning `undefined.`


    var missingMethods = [];
    ['className', 'title', 'content', 'onsubmit'].forEach(function (method) {
      if (!_this2[method]) {
        _this2[method] = function () {};

        missingMethods.push(method);
      }
    });

    if (missingMethods.length > 0) {
      (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_5__["default"])("Modal `" + this.constructor.name + "` does not implement all abstract methods of the Modal super class. Missing methods: " + missingMethods.join(', ') + ".");
    }
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this3 = this;

    _Component.prototype.oncreate.call(this, vnode);

    this.attrs.animateShow(function () {
      return _this3.onready();
    });
  };

  _proto.onbeforeremove = function onbeforeremove(vnode) {
    _Component.prototype.onbeforeremove.call(this, vnode); // If the global modal state currently contains a modal,
    // we've just opened up a new one, and accordingly,
    // we don't need to show a hide animation.


    if (!this.attrs.state.modal) {
      this.attrs.animateHide(); // Here, we ensure that the animation has time to complete.
      // See https://mithril.js.org/lifecycle-methods.html#onbeforeremove
      // Bootstrap's Modal.TRANSITION_DURATION is 300 ms.

      return new Promise(function (resolve) {
        return setTimeout(resolve, 300);
      });
    }
  }
  /**
   * @todo split into FormModal and Modal in 2.0
   */
  ;

  _proto.view = function view() {
    var _this4 = this;

    if (this.alertAttrs) {
      this.alertAttrs.dismissible = false;
    }

    return m("div", {
      className: 'Modal modal-dialog ' + this.className()
    }, m("div", {
      className: "Modal-content"
    }, this.constructor.isDismissible && m("div", {
      className: "Modal-close App-backControl"
    }, _Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
      icon: 'fas fa-times',
      onclick: function onclick() {
        return _this4.hide();
      },
      className: 'Button Button--icon Button--link',
      'aria-label': _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.modal.close')
    })), m("form", {
      onsubmit: this.onsubmit.bind(this)
    }, m("div", {
      className: "Modal-header"
    }, m("h3", {
      className: "App-titleControl App-titleControl--text"
    }, this.title())), this.alertAttrs ? m("div", {
      className: "Modal-alert"
    }, _Alert__WEBPACK_IMPORTED_MODULE_3__["default"].component(this.alertAttrs)) : '', this.content())));
  }
  /**
   * Get the class name to apply to the modal.
   */
  ;

  /**
   * Handle the modal form's submit event.
   */
  _proto.onsubmit = function onsubmit(e) {// ...
  }
  /**
   * Callback executed when the modal is shown and ready to be interacted with.
   *
   * @remark Focuses the first input in the modal.
   */
  ;

  _proto.onready = function onready() {
    this.$().find('input, select, textarea').first().trigger('focus').trigger('select');
  }
  /**
   * Hides the modal.
   */
  ;

  _proto.hide = function hide() {
    this.attrs.state.close();
  }
  /**
   * Sets `loading` to false and triggers a redraw.
   */
  ;

  _proto.loaded = function loaded() {
    this.loading = false;
    m.redraw();
  }
  /**
   * Shows an alert describing an error returned from the API, and gives focus to
   * the first relevant field involved in the error.
   */
  ;

  _proto.onerror = function onerror(error) {
    var _error$response;

    this.alertAttrs = error.alert;
    m.redraw();

    if (error.status === 422 && (_error$response = error.response) != null && _error$response.errors) {
      this.$('form [name=' + error.response.errors[0].source.pointer.replace('/data/attributes/', '') + ']').trigger('select');
    } else {
      this.onready();
    }
  };

  return Modal;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);

Modal.isDismissible = true;


/***/ }),

/***/ "./src/common/components/ModalManager.tsx":
/*!************************************************!*\
  !*** ./src/common/components/ModalManager.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ModalManager)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_focusTrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/focusTrap */ "./src/common/utils/focusTrap.ts");




/**
 * The `ModalManager` component manages a modal dialog. Only one modal dialog
 * can be shown at once; loading a new component into the ModalManager will
 * overwrite the previous one.
 */
var ModalManager = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ModalManager, _Component);

  function ModalManager() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.focusTrap = void 0;
    _this.modalShown = false;
    return _this;
  }

  var _proto = ModalManager.prototype;

  _proto.view = function view(vnode) {
    var modal = this.attrs.state.modal;
    var Tag = modal == null ? void 0 : modal.componentClass;
    return m("div", {
      className: "ModalManager modal fade"
    }, !!Tag && m(Tag, Object.assign({
      key: modal == null ? void 0 : modal.key
    }, modal.attrs, {
      animateShow: this.animateShow.bind(this),
      animateHide: this.animateHide.bind(this),
      state: this.attrs.state
    })));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode); // Ensure the modal state is notified about a closed modal, even when the
    // DOM-based Bootstrap JavaScript code triggered the closing of the modal,
    // e.g. via ESC key or a click on the modal backdrop.


    this.$().on('hidden.bs.modal', this.attrs.state.close.bind(this.attrs.state));
    this.focusTrap = (0,_utils_focusTrap__WEBPACK_IMPORTED_MODULE_2__.createFocusTrap)(this.element, {
      allowOutsideClick: true
    });
  };

  _proto.onupdate = function onupdate(vnode) {
    var _this2 = this;

    _Component.prototype.onupdate.call(this, vnode);

    requestAnimationFrame(function () {
      try {
        if (_this2.modalShown) _this2.focusTrap.activate == null ? void 0 : _this2.focusTrap.activate();else _this2.focusTrap.deactivate == null ? void 0 : _this2.focusTrap.deactivate();
      } catch (_unused) {// We can expect errors to occur here due to the nature of mithril rendering
      }
    });
  };

  _proto.animateShow = function animateShow(readyCallback) {
    if (!this.attrs.state.modal) return;
    var dismissible = !!this.attrs.state.modal.componentClass.isDismissible;
    this.modalShown = true; // If we are opening this modal while another modal is already open,
    // the shown event will not run, because the modal is already open.
    // So, we need to manually trigger the readyCallback.

    if (this.$().hasClass('in')) {
      readyCallback();
      return;
    }

    this.$().one('shown.bs.modal', readyCallback) // @ts-expect-error: No typings available for Bootstrap modals.
    .modal({
      backdrop: dismissible || 'static',
      keyboard: dismissible
    }).modal('show');
  };

  _proto.animateHide = function animateHide() {
    // @ts-expect-error: No typings available for Bootstrap modals.
    this.$().modal('hide');
    this.modalShown = false;
  };

  return ModalManager;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Navigation.js":
/*!*********************************************!*\
  !*** ./src/common/components/Navigation.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Navigation)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _LinkButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LinkButton */ "./src/common/components/LinkButton.js");





/**
 * The `Navigation` component displays a set of navigation buttons. Typically
 * this is just a back button which pops the app's History. If the user is on
 * the root page and there is no history to pop, then in some instances it may
 * show a button that toggles the app's drawer.
 *
 * If the app has a pane, it will also include a 'pin' button which toggles the
 * pinned state of the pane.
 *
 * Accepts the following attrs:
 *
 * - `className` The name of a class to set on the root element.
 * - `drawer` Whether or not to show a button to toggle the app's drawer if
 *   there is no more history to pop.
 */

var Navigation = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Navigation, _Component);

  function Navigation() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Navigation.prototype;

  _proto.view = function view() {
    var history = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].history,
        pane = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane;
    return m("div", {
      className: 'Navigation ButtonGroup ' + (this.attrs.className || ''),
      onmouseenter: pane && pane.show.bind(pane),
      onmouseleave: pane && pane.onmouseleave.bind(pane)
    }, history.canGoBack() ? [this.getBackButton(), this.getPaneButton()] : this.getDrawerButton());
  }
  /**
   * Get the back button.
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getBackButton = function getBackButton() {
    var history = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].history;
    var previous = history.getPrevious() || {};
    return _LinkButton__WEBPACK_IMPORTED_MODULE_4__["default"].component({
      className: 'Button Navigation-back Button--icon',
      href: history.backUrl(),
      icon: 'fas fa-chevron-left',
      'aria-label': previous.title,
      onclick: function onclick(e) {
        if (e.shiftKey || e.ctrlKey || e.metaKey || e.which === 2) return;
        e.preventDefault();
        history.back();
      }
    });
  }
  /**
   * Get the pane pinned toggle button.
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getPaneButton = function getPaneButton() {
    var pane = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane;
    if (!pane || !pane.active) return '';
    return _Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--icon Navigation-pin' + (pane.pinned ? ' active' : ''),
      onclick: pane.togglePinned.bind(pane),
      icon: 'fas fa-thumbtack'
    });
  }
  /**
   * Get the drawer toggle button.
   *
   * @return {import('mithril').Children}
   * @protected
   */
  ;

  _proto.getDrawerButton = function getDrawerButton() {
    if (!this.attrs.drawer) return '';
    var drawer = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].drawer;
    var user = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user;
    return _Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--icon Navigation-drawer' + (user && user.newNotificationCount() ? ' new' : ''),
      onclick: function onclick(e) {
        e.stopPropagation();
        drawer.show();
      },
      icon: 'fas fa-bars',
      'aria-label': _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.nav.drawer_button')
    });
  };

  return Navigation;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/Page.tsx":
/*!****************************************!*\
  !*** ./src/common/components/Page.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Page)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _states_PageState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../states/PageState */ "./src/common/states/PageState.js");





/**
 * The `Page` component
 *
 * @abstract
 */
var Page = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Page, _Component);

  function Page() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.bodyClass = '';
    _this.scrollTopOnCreate = true;
    _this.useBrowserScrollRestoration = true;
    return _this;
  }

  var _proto = Page.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    _app__WEBPACK_IMPORTED_MODULE_1__["default"].previous = _app__WEBPACK_IMPORTED_MODULE_1__["default"].current;
    _app__WEBPACK_IMPORTED_MODULE_1__["default"].current = new _states_PageState__WEBPACK_IMPORTED_MODULE_3__["default"](this.constructor, {
      routeName: this.attrs.routeName
    });
    _app__WEBPACK_IMPORTED_MODULE_1__["default"].drawer.hide();
    _app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.close();
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    if (this.bodyClass) {
      $('#app').addClass(this.bodyClass);
    }

    if (this.scrollTopOnCreate) {
      $(window).scrollTop(0);
    }

    if ('scrollRestoration' in history) {
      history.scrollRestoration = this.useBrowserScrollRestoration ? 'auto' : 'manual';
    }
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    if (this.bodyClass) {
      $('#app').removeClass(this.bodyClass);
    }
  };

  return Page;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/Placeholder.js":
/*!**********************************************!*\
  !*** ./src/common/components/Placeholder.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Placeholder)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");


/**
 * The `Placeholder` component displays a muted text with some call to action,
 * usually used as an empty state.
 *
 * ### Attrs
 *
 * - `text`
 */

var Placeholder = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Placeholder, _Component);

  function Placeholder() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Placeholder.prototype;

  _proto.view = function view() {
    return m("div", {
      className: "Placeholder"
    }, m("p", null, this.attrs.text));
  };

  return Placeholder;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/RequestErrorModal.tsx":
/*!*****************************************************!*\
  !*** ./src/common/components/RequestErrorModal.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ RequestErrorModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Modal */ "./src/common/components/Modal.tsx");



var RequestErrorModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(RequestErrorModal, _Modal);

  function RequestErrorModal() {
    return _Modal.apply(this, arguments) || this;
  }

  var _proto = RequestErrorModal.prototype;

  _proto.className = function className() {
    return 'RequestErrorModal Modal--large';
  };

  _proto.title = function title() {
    return this.attrs.error.xhr ? this.attrs.error.xhr.status + " " + this.attrs.error.xhr.statusText : '';
  };

  _proto.content = function content() {
    var _this$attrs = this.attrs,
        error = _this$attrs.error,
        formattedError = _this$attrs.formattedError;
    var responseText; // If the error is already formatted, just add line endings;
    // else try to parse it as JSON and stringify it with indentation

    if (formattedError.length) {
      responseText = formattedError.join('\n\n');
    } else if (error.response) {
      responseText = JSON.stringify(error.response, null, 2);
    } else {
      responseText = error.responseText;
    }

    return m("div", {
      className: "Modal-body"
    }, m("pre", null, this.attrs.error.options.method, " ", this.attrs.error.options.url, m("br", null), m("br", null), responseText));
  };

  return RequestErrorModal;
}(_Modal__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Select.js":
/*!*****************************************!*\
  !*** ./src/common/components/Select.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Select)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _utils_withAttr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/withAttr */ "./src/common/utils/withAttr.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");


var _excluded = ["className", "class"],
    _excluded2 = ["options", "onchange", "value", "disabled", "className", "class", "wrapperAttrs"];




/**
 * The `Select` component displays a <select> input, surrounded with some extra
 * elements for styling. It accepts the following attrs:
 *
 * - `options` A map of option values to labels.
 * - `onchange` A callback to run when the selected value is changed.
 * - `value` The value of the selected option.
 * - `disabled` Disabled state for the input.
 * - `wrapperAttrs` A map of attrs to be passed to the DOM element wrapping the `<select>`
 *
 * Other attributes are passed directly to the `<select>` element rendered to the DOM.
 */

var Select = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Select, _Component);

  function Select() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Select.prototype;

  _proto.view = function view() {
    var _this$attrs = this.attrs,
        options = _this$attrs.options,
        onchange = _this$attrs.onchange,
        value = _this$attrs.value,
        disabled = _this$attrs.disabled,
        className = _this$attrs.className,
        _class = _this$attrs["class"],
        _this$attrs$wrapperAt = _this$attrs.wrapperAttrs;
    _this$attrs$wrapperAt = _this$attrs$wrapperAt === void 0 ? {} : _this$attrs$wrapperAt;

    var wrapperClassName = _this$attrs$wrapperAt.className,
        wrapperClass = _this$attrs$wrapperAt["class"],
        wrapperAttrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$attrs$wrapperAt, _excluded),
        domAttrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$attrs, _excluded2);

    return m("span", Object.assign({
      className: (0,_utils_classList__WEBPACK_IMPORTED_MODULE_5__["default"])('Select', wrapperClassName, wrapperClass)
    }, wrapperAttrs), m("select", Object.assign({
      className: (0,_utils_classList__WEBPACK_IMPORTED_MODULE_5__["default"])('Select-input FormControl', className, _class),
      onchange: onchange ? (0,_utils_withAttr__WEBPACK_IMPORTED_MODULE_4__["default"])('value', onchange.bind(this)) : undefined,
      value: value,
      disabled: disabled
    }, domAttrs), Object.keys(options).map(function (key) {
      return m("option", {
        value: key
      }, options[key]);
    })), (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])('fas fa-sort', {
      className: 'Select-caret'
    }));
  };

  return Select;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/SelectDropdown.js":
/*!*************************************************!*\
  !*** ./src/common/components/SelectDropdown.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SelectDropdown)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");



/**
 * Determines via a vnode is currently "active".
 * Due to changes in Mithril 2, attrs will not be instantiated until AFTER view()
 * is initially called on the parent component, so we can not always depend on the
 * active attr to determine which element should be displayed as the "active child".
 *
 * This is a temporary patch, and as so, is not exported / placed in utils.
 */

function isActive(vnode) {
  var tag = vnode.tag; // Allow non-selectable dividers/headers to be added.

  if (typeof tag === 'string' && tag !== 'a' && tag !== 'button') return false;

  if ('initAttrs' in tag) {
    tag.initAttrs(vnode.attrs);
  }

  return 'isActive' in tag ? tag.isActive(vnode.attrs) : vnode.attrs.active;
}
/**
 * The `SelectDropdown` component is the same as a `Dropdown`, except the toggle
 * button's label is set as the label of the first child which has a truthy
 * `active` prop.
 *
 * ### Attrs
 *
 * - `caretIcon`
 * - `defaultLabel`
 */


var SelectDropdown = /*#__PURE__*/function (_Dropdown) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SelectDropdown, _Dropdown);

  function SelectDropdown() {
    return _Dropdown.apply(this, arguments) || this;
  }

  SelectDropdown.initAttrs = function initAttrs(attrs) {
    attrs.caretIcon = typeof attrs.caretIcon !== 'undefined' ? attrs.caretIcon : 'fas fa-sort';

    _Dropdown.initAttrs.call(this, attrs);

    attrs.className += ' Dropdown--select';
  };

  var _proto = SelectDropdown.prototype;

  _proto.getButtonContent = function getButtonContent(children) {
    var activeChild = children.find(isActive);
    var label = activeChild && activeChild.children || this.attrs.defaultLabel;
    if (label instanceof Array) label = label[0];
    return [m("span", {
      className: "Button-label"
    }, label), (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_2__["default"])(this.attrs.caretIcon, {
      className: 'Button-caret'
    })];
  };

  return SelectDropdown;
}(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Separator.js":
/*!********************************************!*\
  !*** ./src/common/components/Separator.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");


/**
 * The `Separator` component defines a menu separator item.
 */

var Separator = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Separator, _Component);

  function Separator() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Separator.prototype;

  _proto.view = function view() {
    return m("li", {
      className: "Dropdown-separator"
    });
  };

  return Separator;
}(_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);

Separator.isListItem = true;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Separator);

/***/ }),

/***/ "./src/common/components/SplitDropdown.js":
/*!************************************************!*\
  !*** ./src/common/components/SplitDropdown.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SplitDropdown)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/icon */ "./src/common/helpers/icon.tsx");




/**
 * The `SplitDropdown` component is similar to `Dropdown`, but the first child
 * is displayed as its own button prior to the toggle button.
 */

var SplitDropdown = /*#__PURE__*/function (_Dropdown) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SplitDropdown, _Dropdown);

  function SplitDropdown() {
    return _Dropdown.apply(this, arguments) || this;
  }

  SplitDropdown.initAttrs = function initAttrs(attrs) {
    _Dropdown.initAttrs.call(this, attrs);

    attrs.className += ' Dropdown--split';
    attrs.menuClassName += ' Dropdown-menu--right';
  };

  var _proto = SplitDropdown.prototype;

  _proto.getButton = function getButton(children) {
    // Make a copy of the attrs of the first child component. We will assign
    // these attrs to a new button, so that it has exactly the same behaviour as
    // the first child.
    var firstChild = this.getFirstChild(children);
    var buttonAttrs = Object.assign({}, firstChild.attrs);
    buttonAttrs.className = (buttonAttrs.className || '') + ' SplitDropdown-button Button ' + this.attrs.buttonClassName;
    return [_Button__WEBPACK_IMPORTED_MODULE_2__["default"].component(buttonAttrs, firstChild.children), m("button", {
      className: 'Dropdown-toggle Button Button--icon ' + this.attrs.buttonClassName,
      "aria-haspopup": "menu",
      "aria-label": this.attrs.accessibleToggleLabel,
      "data-toggle": "dropdown"
    }, (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])(this.attrs.icon, {
      className: 'Button-icon'
    }), (0,_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])('fas fa-caret-down', {
      className: 'Button-caret'
    }))];
  }
  /**
   * Get the first child. If the first child is an array, the first item in that
   * array will be returned.
   *
   * @param {unknown[] | unknown} children
   * @return {unknown}
   * @protected
   */
  ;

  _proto.getFirstChild = function getFirstChild(children) {
    var firstChild = children;

    while (firstChild instanceof Array) {
      firstChild = firstChild[0];
    }

    return firstChild;
  };

  return SplitDropdown;
}(_Dropdown__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/Switch.js":
/*!*****************************************!*\
  !*** ./src/common/components/Switch.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Switch)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Checkbox */ "./src/common/components/Checkbox.js");


/**
 * The `Switch` component is a `Checkbox`, but with a switch display instead of
 * a tick/cross one.
 */

var Switch = /*#__PURE__*/function (_Checkbox) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Switch, _Checkbox);

  function Switch() {
    return _Checkbox.apply(this, arguments) || this;
  }

  Switch.initAttrs = function initAttrs(attrs) {
    _Checkbox.initAttrs.call(this, attrs);

    attrs.className = (attrs.className || '') + ' Checkbox--switch';
  };

  var _proto = Switch.prototype;

  _proto.getDisplay = function getDisplay() {
    return this.attrs.loading ? _Checkbox.prototype.getDisplay.call(this) : '';
  };

  return Switch;
}(_Checkbox__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/components/TextEditor.js":
/*!*********************************************!*\
  !*** ./src/common/components/TextEditor.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TextEditor)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _helpers_listItems__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BasicEditorDriver */ "./src/common/utils/BasicEditorDriver.ts");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tooltip */ "./src/common/components/Tooltip.tsx");








/**
 * The `TextEditor` component displays a textarea with controls, including a
 * submit button.
 *
 * ### Attrs
 *
 * - `composer`
 * - `submitLabel`
 * - `value`
 * - `placeholder`
 * - `disabled`
 * - `preview`
 */

var TextEditor = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(TextEditor, _Component);

  function TextEditor() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = TextEditor.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
    /**
     * The value of the editor.
     *
     * @type {String}
     */


    this.value = this.attrs.value || '';
    /**
     * Whether the editor is disabled.
     */

    this.disabled = !!this.attrs.disabled;
  };

  _proto.view = function view() {
    return m("div", {
      className: "TextEditor"
    }, m("div", {
      className: "TextEditor-editorContainer"
    }), m("ul", {
      className: "TextEditor-controls Composer-footer"
    }, (0,_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__["default"])(this.controlItems().toArray()), m("li", {
      className: "TextEditor-toolbar"
    }, this.toolbarItems().toArray())));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    this.attrs.composer.editor = this.buildEditor(this.$('.TextEditor-editorContainer')[0]);
  };

  _proto.onupdate = function onupdate(vnode) {
    _Component.prototype.onupdate.call(this, vnode);

    var newDisabled = !!this.attrs.disabled;

    if (this.disabled !== newDisabled) {
      this.disabled = newDisabled;
      this.attrs.composer.editor.disabled(newDisabled);
    }
  };

  _proto.buildEditorParams = function buildEditorParams() {
    var _this = this;

    return {
      classNames: ['FormControl', 'Composer-flexible', 'TextEditor-editor'],
      disabled: this.disabled,
      placeholder: this.attrs.placeholder || '',
      value: this.value,
      oninput: this.oninput.bind(this),
      inputListeners: [],
      onsubmit: function onsubmit() {
        _this.onsubmit();

        m.redraw();
      }
    };
  };

  _proto.buildEditor = function buildEditor(dom) {
    return new _utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_6__["default"](dom, this.buildEditorParams());
  }
  /**
   * Build an item list for the text editor controls.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.controlItems = function controlItems() {
    var items = new _utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('submit', _Button__WEBPACK_IMPORTED_MODULE_5__["default"].component({
      icon: 'fas fa-paper-plane',
      className: 'Button Button--primary',
      itemClassName: 'App-primaryControl',
      onclick: this.onsubmit.bind(this)
    }, this.attrs.submitLabel));

    if (this.attrs.preview) {
      items.add('preview', m(_Tooltip__WEBPACK_IMPORTED_MODULE_7__["default"], {
        text: _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer.preview_tooltip')
      }, m(_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
        icon: "far fa-eye",
        className: "Button Button--icon",
        onclick: this.attrs.preview
      })));
    }

    return items;
  }
  /**
   * Build an item list for the toolbar controls.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.toolbarItems = function toolbarItems() {
    return new _utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
  }
  /**
   * Handle input into the textarea.
   *
   * @param {string} value
   */
  ;

  _proto.oninput = function oninput(value) {
    this.value = value;
    this.attrs.onchange(this.value);
  }
  /**
   * Handle the submit button being clicked.
   */
  ;

  _proto.onsubmit = function onsubmit() {
    this.attrs.onsubmit(this.value);
  };

  return TextEditor;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/TextEditorButton.js":
/*!***************************************************!*\
  !*** ./src/common/components/TextEditorButton.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TextEditorButton)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tooltip */ "./src/common/components/Tooltip.tsx");




/**
 * The `TextEditorButton` component displays a button suitable for the text
 * editor toolbar.
 *
 * Automatically creates tooltips using the Tooltip component and provided text.
 *
 * ## Attrs
 * - `title` - Tooltip for the button
 */

var TextEditorButton = /*#__PURE__*/function (_Button) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(TextEditorButton, _Button);

  function TextEditorButton() {
    return _Button.apply(this, arguments) || this;
  }

  var _proto = TextEditorButton.prototype;

  _proto.view = function view(vnode) {
    var originalView = _Button.prototype.view.call(this, vnode);

    return m(_Tooltip__WEBPACK_IMPORTED_MODULE_3__["default"], {
      text: this.attrs.tooltipText || (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_1__["default"])(vnode.children)
    }, originalView);
  };

  TextEditorButton.initAttrs = function initAttrs(attrs) {
    _Button.initAttrs.call(this, attrs);

    attrs.className = attrs.className || 'Button Button--icon Button--link';
    attrs.tooltipText = attrs.title;
  };

  return TextEditorButton;
}(_Button__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/components/Tooltip.tsx":
/*!*******************************************!*\
  !*** ./src/common/components/Tooltip.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Component */ "./src/common/Component.ts");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _utils_extractText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/extractText */ "./src/common/utils/extractText.ts");


var _excluded = ["text", "tooltipVisible", "showOnFocus", "position", "ignoreTitleWarning", "html", "delay"];




/**
 * The `Tooltip` component is used to create a tooltip for an element. It
 * requires a single child element to be passed to it. Passing multiple
 * children or fragments will throw an error.
 *
 * You should use this for any tooltips you create to allow for backwards
 * compatibility when we switch to another tooltip library instead of
 * Bootstrap tooltips.
 *
 * If you need to pass multiple children, surround them with another element,
 * such as a `<span>` or `<div>`.
 *
 * **Note:** this component will overwrite the `title` attribute of the first
 * child you pass to it, as this is how the current tooltip system works in
 * Flarum. This shouldn't be an issue if you're using this component correctly.
 *
 * @example <caption>Basic usage</caption>
 *          <Tooltip text="You wish!">
 *            <Button>
 *              Click for free money!
 *            </Button>
 *          </Tooltip>
 *
 * @example <caption>Use of `position` and `showOnFocus` attrs</caption>
 *          <Tooltip text="Woah! That's cool!" position="bottom" showOnFocus>
 *            <span>3 replies</span>
 *          </Tooltip>
 *
 * @example <caption>Incorrect usage</caption>
 *          // This is wrong! Surround the children with a <span> or similar.
 *          <Tooltip text="This won't work">
 *            Click
 *            <a href="/">here</a>
 *          </Tooltip>
 */
var Tooltip = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Tooltip, _Component);

  function Tooltip() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.firstChild = null;
    _this.childDomNode = null;
    _this.oldText = '';
    _this.oldVisibility = void 0;
    _this.shouldRecreateTooltip = false;
    _this.shouldChangeTooltipVisibility = false;
    return _this;
  }

  var _proto = Tooltip.prototype;

  _proto.view = function view(vnode) {
    /**
     * We know this will be a ChildArray and not a primitive as this
     * vnode is a component, not a text or trusted HTML vnode.
     */
    var children = vnode.children; // We remove these to get the remaining attrs to pass to the DOM element

    var _this$attrs = this.attrs,
        text = _this$attrs.text,
        tooltipVisible = _this$attrs.tooltipVisible,
        _this$attrs$showOnFoc = _this$attrs.showOnFocus,
        showOnFocus = _this$attrs$showOnFoc === void 0 ? true : _this$attrs$showOnFoc,
        _this$attrs$position = _this$attrs.position,
        position = _this$attrs$position === void 0 ? 'top' : _this$attrs$position,
        _this$attrs$ignoreTit = _this$attrs.ignoreTitleWarning,
        ignoreTitleWarning = _this$attrs$ignoreTit === void 0 ? false : _this$attrs$ignoreTit,
        _this$attrs$html = _this$attrs.html,
        html = _this$attrs$html === void 0 ? false : _this$attrs$html,
        _this$attrs$delay = _this$attrs.delay,
        delay = _this$attrs$delay === void 0 ? 0 : _this$attrs$delay,
        attrs = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$attrs, _excluded);

    if (this.attrs.title && !ignoreTitleWarning) {
      console.warn('`title` attribute was passed to Tooltip component. Was this intentional? Tooltip content should be passed to the `text` attr instead.');
    }

    var realText = this.getRealText(); // We need to recreate the tooltip if the text has changed

    if (realText !== this.oldText) {
      this.oldText = realText;
      this.shouldRecreateTooltip = true;
    }

    if (tooltipVisible !== this.oldVisibility) {
      this.oldVisibility = this.attrs.tooltipVisible;
      this.shouldChangeTooltipVisibility = true;
    } // We'll try our best to detect any issues created by devs before they cause any weird effects.
    // Throwing an error will prevent the forum rendering, but will be better at alerting devs to
    // an issue.


    if (typeof children === 'undefined') {
      throw new Error("Tooltip component was provided with no direct child DOM element. Tooltips must contain a single direct DOM node to attach to.");
    }

    if (children.length !== 1) {
      throw new Error("Tooltip component was either passed more than one or no child node.\n\nPlease wrap multiple children in another element, such as a <div> or <span>.");
    }

    var firstChild = children[0];

    if (typeof firstChild !== 'object' || Array.isArray(firstChild) || firstChild === null) {
      throw new Error("Tooltip component was provided with no direct child DOM element. Tooltips must contain a single direct DOM node to attach to.");
    }

    if (typeof firstChild.tag === 'string' && ['#', '[', '<'].includes(firstChild.tag)) {
      throw new Error("Tooltip component with provided with a vnode with tag \"" + firstChild.tag + "\". This is not a DOM element, so is not a valid child element. Please wrap this vnode in another element, such as a <div> or <span>.");
    }

    this.firstChild = firstChild;
    return children;
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    this.checkDomNodeChanged();
    this.recreateTooltip();
  };

  _proto.onupdate = function onupdate(vnode) {
    _Component.prototype.onupdate.call(this, vnode);

    this.checkDomNodeChanged();
    this.recreateTooltip();
  };

  _proto.recreateTooltip = function recreateTooltip() {
    if (this.shouldRecreateTooltip && this.childDomNode !== null) {
      $(this.childDomNode).tooltip('destroy', // @ts-expect-error We don't want this arg to be part of the public API. It only exists to prevent deprecation warnings when using `$.tooltip` in this component.
      'DANGEROUS_tooltip_jquery_fn_deprecation_exempt');
      this.createTooltip();
      this.shouldRecreateTooltip = false;
    }

    if (this.shouldChangeTooltipVisibility) {
      this.shouldChangeTooltipVisibility = false;
      this.updateVisibility();
    }
  };

  _proto.updateVisibility = function updateVisibility() {
    if (this.childDomNode === null) return;

    if (this.attrs.tooltipVisible === true) {
      $(this.childDomNode).tooltip('show', // @ts-expect-error We don't want this arg to be part of the public API. It only exists to prevent deprecation warnings when using `$.tooltip` in this component.
      'DANGEROUS_tooltip_jquery_fn_deprecation_exempt');
    } else if (this.attrs.tooltipVisible === false) {
      $(this.childDomNode).tooltip('hide', // @ts-expect-error We don't want this arg to be part of the public API. It only exists to prevent deprecation warnings when using `$.tooltip` in this component.
      'DANGEROUS_tooltip_jquery_fn_deprecation_exempt');
    }
  };

  _proto.createTooltip = function createTooltip() {
    if (this.childDomNode === null) return;
    var _this$attrs2 = this.attrs,
        _this$attrs2$showOnFo = _this$attrs2.showOnFocus,
        showOnFocus = _this$attrs2$showOnFo === void 0 ? true : _this$attrs2$showOnFo,
        _this$attrs2$position = _this$attrs2.position,
        position = _this$attrs2$position === void 0 ? 'top' : _this$attrs2$position,
        delay = _this$attrs2.delay,
        _this$attrs2$html = _this$attrs2.html,
        html = _this$attrs2$html === void 0 ? false : _this$attrs2$html,
        tooltipVisible = _this$attrs2.tooltipVisible,
        text = _this$attrs2.text; // Fancy "hack" to assemble the trigger string

    var trigger = typeof tooltipVisible === 'boolean' ? 'manual' : (0,_utils_classList__WEBPACK_IMPORTED_MODULE_3__["default"])('hover', [showOnFocus && 'focus']);
    var realText = this.getRealText();
    this.childDomNode.setAttribute('title', realText);
    this.childDomNode.setAttribute('aria-label', realText); // https://getbootstrap.com/docs/3.3/javascript/#tooltips-options

    $(this.childDomNode).tooltip({
      html: html,
      delay: delay,
      placement: position,
      trigger: trigger
    }, // @ts-expect-error We don't want this arg to be part of the public API. It only exists to prevent deprecation warnings when using `$.tooltip` in this component.
    'DANGEROUS_tooltip_jquery_fn_deprecation_exempt');
  };

  _proto.getRealText = function getRealText() {
    var text = this.attrs.text;
    return Array.isArray(text) ? (0,_utils_extractText__WEBPACK_IMPORTED_MODULE_4__["default"])(text) : text;
  }
  /**
   * Checks if the tooltip DOM node has changed.
   *
   * If it has, it updates `this.childDomNode` to the new node, and sets
   * `shouldRecreateTooltip` to `true`.
   */
  ;

  _proto.checkDomNodeChanged = function checkDomNodeChanged() {
    var domNode = this.firstChild.dom;

    if (domNode && !domNode.isSameNode(this.childDomNode)) {
      this.childDomNode = domNode;
      this.shouldRecreateTooltip = true;
    }
  };

  return Tooltip;
}(_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/extend.ts":
/*!******************************!*\
  !*** ./src/common/extend.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extend": () => (/* binding */ extend),
/* harmony export */   "override": () => (/* binding */ override)
/* harmony export */ });
/**
 * Extend an object's method by running its output through a mutating callback
 * every time it is called.
 *
 * The callback accepts the method's return value and should perform any
 * mutations directly on this value. For this reason, this function will not be
 * effective on methods which return scalar values (numbers, strings, booleans).
 *
 * Care should be taken to extend the correct object – in most cases, a class'
 * prototype will be the desired target of extension, not the class itself.
 *
 * @example <caption>Example usage of extending one method.</caption>
 * extend(Discussion.prototype, 'badges', function(badges) {
 *   // do something with `badges`
 * });
 *
 * @example <caption>Example usage of extending multiple methods.</caption>
 * extend(IndexPage.prototype, ['oncreate', 'onupdate'], function(vnode) {
 *   // something that needs to be run on creation and update
 * });
 *
 * @param object The object that owns the method
 * @param methods The name or names of the method(s) to extend
 * @param callback A callback which mutates the method's output
 */
function extend(object, methods, callback) {
  var allMethods = Array.isArray(methods) ? methods : [methods];
  allMethods.forEach(function (method) {
    var original = object[method];

    object[method] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var value = original ? original.apply(this, args) : undefined;
      callback.apply(this, [value].concat(args));
      return value;
    };

    Object.assign(object[method], original);
  });
}
/**
 * Override an object's method by replacing it with a new function, so that the
 * new function will be run every time the object's method is called.
 *
 * The replacement function accepts the original method as its first argument,
 * which is like a call to `super`. Any arguments passed to the original method
 * are also passed to the replacement.
 *
 * Care should be taken to extend the correct object – in most cases, a class'
 * prototype will be the desired target of extension, not the class itself.
 *
 * @example <caption>Example usage of overriding one method.</caption>
 * override(Discussion.prototype, 'badges', function(original) {
 *   const badges = original();
 *   // do something with badges
 *   return badges;
 * });
 *
 * @example <caption>Example usage of overriding multiple methods.</caption>
 * extend(Discussion.prototype, ['oncreate', 'onupdate'], function(original, vnode) {
 *   // something that needs to be run on creation and update
 * });
 *
 * @param object The object that owns the method
 * @param methods The name or names of the method(s) to override
 * @param newMethod The method to replace it with
 */

function override(object, methods, newMethod) {
  var allMethods = Array.isArray(methods) ? methods : [methods];
  allMethods.forEach(function (method) {
    var original = object[method];

    object[method] = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return newMethod.apply(this, [original.bind(this)].concat(args));
    };

    Object.assign(object[method], original);
  });
}

/***/ }),

/***/ "./src/common/extend/Model.js":
/*!************************************!*\
  !*** ./src/common/extend/Model.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Model)
/* harmony export */ });
var Model = /*#__PURE__*/function () {
  function Model(type, model) {
    if (model === void 0) {
      model = null;
    }

    this.type = void 0;
    this.attributes = [];
    this.hasOnes = [];
    this.hasManys = [];
    this.type = type;
    this.model = model;
  }

  var _proto = Model.prototype;

  _proto.attribute = function attribute(name) {
    this.attributes.push(name);
    return this;
  };

  _proto.hasOne = function hasOne(type) {
    this.hasOnes.push(type);
    return this;
  };

  _proto.hasMany = function hasMany(type) {
    this.hasManys.push(type);
    return this;
  };

  _proto.extend = function extend(app, extension) {
    if (this.model) {
      app.store.models[this.type] = this.model;
    }

    var model = app.store.models[this.type];
    this.attributes.forEach(function (name) {
      return model.prototype[name] = model.attribute(name);
    });
    this.hasOnes.forEach(function (name) {
      return model.prototype[name] = model.hasOne(name);
    });
    this.hasManys.forEach(function (name) {
      return model.prototype[name] = model.hasMany(name);
    });
  };

  return Model;
}();



/***/ }),

/***/ "./src/common/extend/PostTypes.js":
/*!****************************************!*\
  !*** ./src/common/extend/PostTypes.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostTypes)
/* harmony export */ });
var PostTypes = /*#__PURE__*/function () {
  function PostTypes() {
    this.postComponents = {};
  }

  var _proto = PostTypes.prototype;

  _proto.add = function add(name, component) {
    this.postComponents[name] = component;
    return this;
  };

  _proto.extend = function extend(app, extension) {
    Object.assign(app.postComponents, this.postComponents);
  };

  return PostTypes;
}();



/***/ }),

/***/ "./src/common/extend/Routes.js":
/*!*************************************!*\
  !*** ./src/common/extend/Routes.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Routes)
/* harmony export */ });
var Routes = /*#__PURE__*/function () {
  function Routes() {
    this.routes = {};
  }

  var _proto = Routes.prototype;

  _proto.add = function add(name, path, component) {
    this.routes[name] = {
      path: path,
      component: component
    };
    return this;
  };

  _proto.extend = function extend(app, extension) {
    Object.assign(app.routes, this.routes);
  };

  return Routes;
}();



/***/ }),

/***/ "./src/common/extend/index.js":
/*!************************************!*\
  !*** ./src/common/extend/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Model": () => (/* reexport safe */ _Model__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "PostTypes": () => (/* reexport safe */ _PostTypes__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "Routes": () => (/* reexport safe */ _Routes__WEBPACK_IMPORTED_MODULE_2__["default"])
/* harmony export */ });
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Model */ "./src/common/extend/Model.js");
/* harmony import */ var _PostTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PostTypes */ "./src/common/extend/PostTypes.js");
/* harmony import */ var _Routes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Routes */ "./src/common/extend/Routes.js");




/***/ }),

/***/ "./src/common/helpers/avatar.tsx":
/*!***************************************!*\
  !*** ./src/common/helpers/avatar.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ avatar)
/* harmony export */ });
/**
 * The `avatar` helper displays a user's avatar.
 *
 * @param user
 * @param attrs Attributes to apply to the avatar element
 */
function avatar(user, attrs) {
  if (attrs === void 0) {
    attrs = {};
  }

  attrs.className = 'Avatar ' + (attrs.className || '');
  var content = ''; // If the `title` attribute is set to null or false, we don't want to give the
  // avatar a title. On the other hand, if it hasn't been given at all, we can
  // safely default it to the user's username.

  var hasTitle = attrs.title === 'undefined' || attrs.title;
  if (!hasTitle) delete attrs.title; // If a user has been passed, then we will set up an avatar using their
  // uploaded image, or the first letter of their username if they haven't
  // uploaded one.

  if (user) {
    var username = user.displayName() || '?';
    var avatarUrl = user.avatarUrl();
    if (hasTitle) attrs.title = attrs.title || username;

    if (avatarUrl) {
      return m("img", Object.assign({}, attrs, {
        src: avatarUrl,
        alt: ""
      }));
    }

    content = username.charAt(0).toUpperCase();
    attrs.style = {
      '--avatar-bg': user.color()
    };
  }

  return m("span", attrs, content);
}

/***/ }),

/***/ "./src/common/helpers/fireDebugWarning.ts":
/*!************************************************!*\
  !*** ./src/common/helpers/fireDebugWarning.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ fireDebugWarning),
/* harmony export */   "fireDeprecationWarning": () => (/* binding */ fireDeprecationWarning)
/* harmony export */ });
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app */ "./src/common/app.ts");

/**
 * Calls `console.warn` with the provided arguments, but only if the forum is in debug mode.
 *
 * This function is intended to provide warnings to extension developers about issues with
 * their extensions that may not be easily noticed when testing, such as accessibility
 * issues.
 *
 * These warnings should be hidden on production forums to ensure webmasters are not
 * inundated with do-gooders telling them they have an issue when it isn't something they
 * can fix.
 */

function fireDebugWarning() {
  var _console;

  if (!_app__WEBPACK_IMPORTED_MODULE_0__["default"].forum.attribute('debug')) return;

  (_console = console).warn.apply(_console, arguments);
}
/**
 * Fire a Flarum deprecation warning which is shown in the JS console.
 *
 * These warnings are only shown when the forum is in debug mode, and the function exists to
 * reduce bundle size caused by multiple warnings across our JavaScript.
 *
 * @param message The message to display. (Short, but sweet, please!)
 * @param githubId The PR or Issue ID with more info in relation to this change.
 * @param [removedFrom] The version in which this feature will be completely removed. (default: 2.0)
 * @param [repo] The repo which the issue or PR is located in. (default: flarum/core)
 *
 * @see {@link fireDebugWarning}
 */

function fireDeprecationWarning(message, githubId, removedFrom, repo) {
  if (removedFrom === void 0) {
    removedFrom = '2.0';
  }

  if (repo === void 0) {
    repo = 'flarum/core';
  }

  // GitHub auto-redirects between `/pull` and `/issues` for us, so using `/pull` saves 2 bytes!
  fireDebugWarning("[Flarum " + removedFrom + " Deprecation] " + message + "\n\nSee: https://github.com/" + repo + "/pull/" + githubId);
}

/***/ }),

/***/ "./src/common/helpers/fullTime.tsx":
/*!*****************************************!*\
  !*** ./src/common/helpers/fullTime.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ fullTime)
/* harmony export */ });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js");
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);


/**
 * The `fullTime` helper displays a formatted time string wrapped in a <time>
 * tag.
 */
function fullTime(time) {
  var d = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time);
  var datetime = d.format();
  var full = d.format('LLLL');
  return m("time", {
    pubdate: true,
    datetime: datetime
  }, full);
}

/***/ }),

/***/ "./src/common/helpers/highlight.tsx":
/*!******************************************!*\
  !*** ./src/common/helpers/highlight.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ highlight)
/* harmony export */ });
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/string */ "./src/common/utils/string.ts");

/**
 * The `highlight` helper searches for a word phrase in a string, and wraps
 * matches with the <mark> tag.
 *
 * @param string The string to highlight.
 * @param phrase The word or words to highlight.
 * @param [length] The number of characters to truncate the string to.
 *     The string will be truncated surrounding the first match.
 */

function highlight(string, phrase, length) {
  if (!phrase && !length) return string; // Convert the word phrase into a global regular expression (if it isn't
  // already) so we can search the string for matched.

  var regexp = phrase instanceof RegExp ? phrase : new RegExp(phrase, 'gi');
  var highlighted = string;
  var start = 0; // If a length was given, the truncate the string surrounding the first match.

  if (length) {
    if (phrase) start = Math.max(0, string.search(regexp) - length / 2);
    highlighted = (0,_utils_string__WEBPACK_IMPORTED_MODULE_0__.truncate)(highlighted, length, start);
  } // Convert the string into HTML entities, then highlight all matches with
  // <mark> tags. Then we will return the result as a trusted HTML string.


  highlighted = $('<div/>').text(highlighted).html();
  if (phrase) highlighted = highlighted.replace(regexp, '<mark>$&</mark>');
  return m.trust(highlighted);
}

/***/ }),

/***/ "./src/common/helpers/humanTime.tsx":
/*!******************************************!*\
  !*** ./src/common/helpers/humanTime.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ humanTime)
/* harmony export */ });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js");
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_humanTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/humanTime */ "./src/common/utils/humanTime.ts");


/**
 * The `humanTime` helper displays a time in a human-friendly time-ago format
 * (e.g. '12 days ago'), wrapped in a <time> tag with other information about
 * the time.
 */

function humanTime(time) {
  var d = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time);
  var datetime = d.format();
  var full = d.format('LLLL');
  var ago = (0,_utils_humanTime__WEBPACK_IMPORTED_MODULE_1__["default"])(time);
  return m("time", {
    pubdate: true,
    datetime: datetime,
    title: full,
    "data-humantime": true
  }, ago);
}

/***/ }),

/***/ "./src/common/helpers/icon.tsx":
/*!*************************************!*\
  !*** ./src/common/helpers/icon.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ icon)
/* harmony export */ });
/**
 * The `icon` helper displays an icon.
 *
 * @param fontClass The full icon class, prefix and the icon’s name.
 * @param attrs Any other attributes to apply.
 */
function icon(fontClass, attrs) {
  if (attrs === void 0) {
    attrs = {};
  }

  attrs.className = 'icon ' + fontClass + ' ' + (attrs.className || '');
  return m("i", Object.assign({
    "aria-hidden": "true"
  }, attrs));
}

/***/ }),

/***/ "./src/common/helpers/listItems.tsx":
/*!******************************************!*\
  !*** ./src/common/helpers/listItems.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ listItems)
/* harmony export */ });
/* harmony import */ var _components_Separator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _utils_classList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/classList */ "./src/common/utils/classList.ts");



function isVnode(item) {
  return typeof item === 'object' && item !== null && 'tag' in item;
}

function isSeparator(item) {
  return isVnode(item) && item.tag === _components_Separator__WEBPACK_IMPORTED_MODULE_0__["default"];
}

function withoutUnnecessarySeparators(items) {
  var newItems = [];
  var prevItem;
  items.filter(Boolean).forEach(function (item, i) {
    if (!isSeparator(item) || prevItem && !isSeparator(prevItem) && i !== items.length - 1) {
      prevItem = item;
      newItems.push(item);
    }
  });
  return newItems;
}
/**
 * The `listItems` helper wraps an array of components in the provided tag,
 * stripping out any unnecessary `Separator` components.
 *
 * By default, this tag is an `<li>` tag, but this is customisable through the
 * second function parameter, `customTag`.
 */


function listItems(rawItems, customTag, attributes) {
  if (customTag === void 0) {
    customTag = 'li';
  }

  if (attributes === void 0) {
    attributes = {};
  }

  var items = rawItems instanceof Array ? rawItems : [rawItems];
  var Tag = customTag;
  return withoutUnnecessarySeparators(items).map(function (item) {
    var _item$attrs2;

    var classes = [item.itemName && "item-" + item.itemName];

    if (isVnode(item) && item.tag.isListItem) {
      item.attrs = item.attrs || {};
      item.attrs.key = item.attrs.key || item.itemName;
      item.key = item.attrs.key;
      return item;
    }

    if (isVnode(item)) {
      var _item$attrs;

      classes.push(((_item$attrs = item.attrs) == null ? void 0 : _item$attrs.itemClassName) || item.itemClassName);

      if (item.tag.isActive != null && item.tag.isActive(item.attrs)) {
        classes.push('active');
      }
    }

    var key = isVnode(item) && (item == null ? void 0 : (_item$attrs2 = item.attrs) == null ? void 0 : _item$attrs2.key) || item.itemName;
    return m(Tag, Object.assign({
      className: (0,_utils_classList__WEBPACK_IMPORTED_MODULE_1__["default"])(classes),
      key: key
    }, attributes), item);
  });
}

/***/ }),

/***/ "./src/common/helpers/punctuateSeries.js":
/*!***********************************************!*\
  !*** ./src/common/helpers/punctuateSeries.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ punctuateSeries)
/* harmony export */ });
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");

/**
 * The `punctuateSeries` helper formats a list of strings (e.g. names) to read
 * fluently in the application's locale.
 *
 * ```js
 * punctuateSeries(['Toby', 'Franz', 'Dominion']) // Toby, Franz, and Dominion
 * ```
 *
 * @param {import('mithril').Children[]} items
 * @return {import('mithril').Children}')}
 */

function punctuateSeries(items) {
  if (items.length === 2) {
    return _common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.series.two_text', {
      first: items[0],
      second: items[1]
    });
  } else if (items.length >= 3) {
    // If there are three or more items, we will join all but the first and
    // last items with the equivalent of a comma, and then we will feed that
    // into the translator along with the first and last item.
    var second = items.slice(1, items.length - 1).reduce(function (list, item) {
      return list.concat([item, _common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.series.glue_text')]);
    }, []).slice(0, -1);
    return _common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.series.three_text', {
      first: items[0],
      second: second,
      third: items[items.length - 1]
    });
  }

  return items;
}

/***/ }),

/***/ "./src/common/helpers/userOnline.tsx":
/*!*******************************************!*\
  !*** ./src/common/helpers/userOnline.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ userOnline)
/* harmony export */ });
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icon */ "./src/common/helpers/icon.tsx");

/**
 * The `useronline` helper displays a green circle if the user is online
 */

function userOnline(user) {
  if (user.lastSeenAt() && user.isOnline()) {
    return m("span", {
      className: "UserOnline"
    }, (0,_icon__WEBPACK_IMPORTED_MODULE_0__["default"])('fas fa-circle'));
  }

  return null;
}

/***/ }),

/***/ "./src/common/helpers/username.tsx":
/*!*****************************************!*\
  !*** ./src/common/helpers/username.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ username)
/* harmony export */ });
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");


/**
 * The `username` helper displays a user's username in a <span class="username">
 * tag. If the user doesn't exist, the username will be displayed as [deleted].
 */
function username(user) {
  var name = user && user.displayName() || _common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.username.deleted_text');
  return m("span", {
    className: "username"
  }, name);
}

/***/ }),

/***/ "./src/common/index.ts":
/*!*****************************!*\
  !*** ./src/common/index.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Extend": () => (/* reexport module object */ _extend_index__WEBPACK_IMPORTED_MODULE_12__),
/* harmony export */   "app": () => (/* reexport safe */ _app__WEBPACK_IMPORTED_MODULE_13__["default"])
/* harmony export */ });
/* harmony import */ var expose_loader_exposes_$_jQuery_jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! expose-loader?exposes=$,jQuery!jquery */ "./node_modules/expose-loader/dist/cjs.js?exposes=$,jQuery!./node_modules/jquery/dist/jquery-exposed.js");
/* harmony import */ var expose_loader_exposes_$_jQuery_jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(expose_loader_exposes_$_jQuery_jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var expose_loader_exposes_m_mithril__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! expose-loader?exposes=m!mithril */ "./node_modules/expose-loader/dist/cjs.js?exposes=m!./node_modules/mithril/index-exposed.js");
/* harmony import */ var expose_loader_exposes_m_mithril__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(expose_loader_exposes_m_mithril__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var expose_loader_exposes_dayjs_dayjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! expose-loader?exposes=dayjs!dayjs */ "./node_modules/expose-loader/dist/cjs.js?exposes=dayjs!./node_modules/dayjs/dayjs.min-exposed.js");
/* harmony import */ var expose_loader_exposes_dayjs_dayjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(expose_loader_exposes_dayjs_dayjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bootstrap_js_affix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap/js/affix */ "./node_modules/bootstrap/js/affix.js");
/* harmony import */ var bootstrap_js_affix__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_affix__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var bootstrap_js_dropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bootstrap/js/dropdown */ "./node_modules/bootstrap/js/dropdown.js");
/* harmony import */ var bootstrap_js_dropdown__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dropdown__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var bootstrap_js_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bootstrap/js/modal */ "./node_modules/bootstrap/js/modal.js");
/* harmony import */ var bootstrap_js_modal__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_modal__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var bootstrap_js_tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bootstrap/js/tooltip */ "./node_modules/bootstrap/js/tooltip.js");
/* harmony import */ var bootstrap_js_tooltip__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_tooltip__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var bootstrap_js_transition__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bootstrap/js/transition */ "./node_modules/bootstrap/js/transition.js");
/* harmony import */ var bootstrap_js_transition__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_transition__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var jquery_hotkeys_jquery_hotkeys__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery.hotkeys/jquery.hotkeys */ "./node_modules/jquery.hotkeys/jquery.hotkeys.js");
/* harmony import */ var jquery_hotkeys_jquery_hotkeys__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery_hotkeys_jquery_hotkeys__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! dayjs/plugin/relativeTime */ "./node_modules/dayjs/plugin/relativeTime.js");
/* harmony import */ var dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var dayjs_plugin_localizedFormat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! dayjs/plugin/localizedFormat */ "./node_modules/dayjs/plugin/localizedFormat.js");
/* harmony import */ var dayjs_plugin_localizedFormat__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_localizedFormat__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _utils_patchMithril__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/patchMithril */ "./src/common/utils/patchMithril.js");
/* harmony import */ var _extend_index__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./extend/index */ "./src/common/extend/index.js");
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./app */ "./src/common/app.ts");
/* harmony import */ var _utils_arrayFlatPolyfill__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/arrayFlatPolyfill */ "./src/common/utils/arrayFlatPolyfill.ts");
/* harmony import */ var _utils_arrayFlatPolyfill__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_utils_arrayFlatPolyfill__WEBPACK_IMPORTED_MODULE_14__);
// Expose jQuery, mithril and dayjs to the window browser object











dayjs.extend((dayjs_plugin_relativeTime__WEBPACK_IMPORTED_MODULE_9___default()));
dayjs.extend((dayjs_plugin_localizedFormat__WEBPACK_IMPORTED_MODULE_10___default()));

(0,_utils_patchMithril__WEBPACK_IMPORTED_MODULE_11__["default"])(window);




var tooltipGen = $.fn.tooltip; // Remove in a future version of Flarum.
// @ts-ignore

$.fn.tooltip = function (options, caller) {
  // Show a warning when `$.tooltip` is used outside of the Tooltip component.
  // This functionality is deprecated and should not be used.
  if (!['DANGEROUS_tooltip_jquery_fn_deprecation_exempt'].includes(caller)) {
    console.warn("Calling `$.tooltip` is now deprecated. Please use the `<Tooltip>` component exposed by flarum/core instead. `$.tooltip` may be removed in a future version of Flarum.\n\nIf this component doesn't meet your requirements, please open an issue: https://github.com/flarum/core/issues/new?assignees=davwheat&labels=type/bug,needs-verification&template=bug-report.md&title=Tooltip%20component%20unsuitable%20for%20use%20case");
  }

  tooltipGen.bind(this)(options);
};

/***/ }),

/***/ "./src/common/models/Discussion.tsx":
/*!******************************************!*\
  !*** ./src/common/models/Discussion.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Discussion)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");
/* harmony import */ var _utils_computed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/computed */ "./src/common/utils/computed.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _components_Badge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Badge */ "./src/common/components/Badge.js");







var Discussion = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Discussion, _Model);

  function Discussion() {
    return _Model.apply(this, arguments) || this;
  }

  var _proto = Discussion.prototype;

  _proto.title = function title() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('title').call(this);
  };

  _proto.slug = function slug() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('slug').call(this);
  };

  _proto.createdAt = function createdAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('createdAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.user = function user() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('user').call(this);
  };

  _proto.firstPost = function firstPost() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('firstPost').call(this);
  };

  _proto.lastPostedAt = function lastPostedAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('lastPostedAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.lastPostedUser = function lastPostedUser() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('lastPostedUser').call(this);
  };

  _proto.lastPost = function lastPost() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('lastPost').call(this);
  };

  _proto.lastPostNumber = function lastPostNumber() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('lastPostNumber').call(this);
  };

  _proto.commentCount = function commentCount() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('commentCount').call(this);
  };

  _proto.replyCount = function replyCount() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_3__["default"])('commentCount', function (commentCount) {
      var _ref;

      return Math.max(0, ((_ref = commentCount) != null ? _ref : 0) - 1);
    }).call(this);
  };

  _proto.posts = function posts() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasMany('posts').call(this);
  };

  _proto.mostRelevantPost = function mostRelevantPost() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('mostRelevantPost').call(this);
  };

  _proto.lastReadAt = function lastReadAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('lastReadAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.lastReadPostNumber = function lastReadPostNumber() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('lastReadPostNumber').call(this);
  };

  _proto.isUnread = function isUnread() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_3__["default"])('unreadCount', function (unreadCount) {
      return !!unreadCount;
    }).call(this);
  };

  _proto.isRead = function isRead() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_3__["default"])('unreadCount', function (unreadCount) {
      return !!(_common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user && !unreadCount);
    }).call(this);
  };

  _proto.hiddenAt = function hiddenAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('hiddenAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.hiddenUser = function hiddenUser() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasOne('hiddenUser').call(this);
  };

  _proto.isHidden = function isHidden() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_3__["default"])('hiddenAt', function (hiddenAt) {
      return !!hiddenAt;
    }).call(this);
  };

  _proto.canReply = function canReply() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canReply').call(this);
  };

  _proto.canRename = function canRename() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canRename').call(this);
  };

  _proto.canHide = function canHide() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canHide').call(this);
  };

  _proto.canDelete = function canDelete() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canDelete').call(this);
  }
  /**
   * Remove a post from the discussion's posts relationship.
   */
  ;

  _proto.removePost = function removePost(id) {
    var posts = this.rawRelationship('posts');

    if (!posts) {
      return;
    }

    posts.some(function (data, i) {
      if (id === data.id) {
        posts.splice(i, 1);
        return true;
      }

      return false;
    });
  }
  /**
   * Get the estimated number of unread posts in this discussion for the current
   * user.
   */
  ;

  _proto.unreadCount = function unreadCount() {
    var _user$markedAllAsRead, _user$markedAllAsRead2, _this$lastPostedAt;

    var user = _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user;

    if (user && ((_user$markedAllAsRead = (_user$markedAllAsRead2 = user.markedAllAsReadAt()) == null ? void 0 : _user$markedAllAsRead2.getTime()) != null ? _user$markedAllAsRead : 0) < ((_this$lastPostedAt = this.lastPostedAt()) == null ? void 0 : _this$lastPostedAt.getTime())) {
      var _this$lastPostNumber, _this$commentCount;

      var unreadCount = Math.max(0, ((_this$lastPostNumber = this.lastPostNumber()) != null ? _this$lastPostNumber : 0) - (this.lastReadPostNumber() || 0)); // If posts have been deleted, it's possible that the unread count could exceed the
      // actual post count. As such, we take the min of the two to ensure this isn't an issue.

      return Math.min(unreadCount, (_this$commentCount = this.commentCount()) != null ? _this$commentCount : 0);
    }

    return 0;
  }
  /**
   * Get the Badge components that apply to this discussion.
   */
  ;

  _proto.badges = function badges() {
    var items = new _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();

    if (this.isHidden()) {
      items.add('hidden', m(_components_Badge__WEBPACK_IMPORTED_MODULE_5__["default"], {
        type: "hidden",
        icon: "fas fa-trash",
        label: _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.lib.badge.hidden_tooltip')
      }));
    }

    return items;
  }
  /**
   * Get a list of all of the post IDs in this discussion.
   */
  ;

  _proto.postIds = function postIds() {
    var _this$rawRelationship, _this$rawRelationship2;

    return (_this$rawRelationship = (_this$rawRelationship2 = this.rawRelationship('posts')) == null ? void 0 : _this$rawRelationship2.map(function (link) {
      return link.id;
    })) != null ? _this$rawRelationship : [];
  };

  return Discussion;
}(_Model__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/models/Forum.ts":
/*!************************************!*\
  !*** ./src/common/models/Forum.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Forum)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");



var Forum = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Forum, _Model);

  function Forum() {
    return _Model.apply(this, arguments) || this;
  }

  var _proto = Forum.prototype;

  _proto.apiEndpoint = function apiEndpoint() {
    return '/';
  };

  return Forum;
}(_Model__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/models/Group.ts":
/*!************************************!*\
  !*** ./src/common/models/Group.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Group)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");



var Group = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Group, _Model);

  function Group() {
    return _Model.apply(this, arguments) || this;
  }

  var _proto = Group.prototype;

  _proto.nameSingular = function nameSingular() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('nameSingular').call(this);
  };

  _proto.namePlural = function namePlural() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('namePlural').call(this);
  };

  _proto.color = function color() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('color').call(this);
  };

  _proto.icon = function icon() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('icon').call(this);
  };

  _proto.isHidden = function isHidden() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('isHidden').call(this);
  };

  return Group;
}(_Model__WEBPACK_IMPORTED_MODULE_1__["default"]);

Group.ADMINISTRATOR_ID = '1';
Group.GUEST_ID = '2';
Group.MEMBER_ID = '3';


/***/ }),

/***/ "./src/common/models/Notification.ts":
/*!*******************************************!*\
  !*** ./src/common/models/Notification.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Notification)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");



var Notification = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Notification, _Model);

  function Notification() {
    return _Model.apply(this, arguments) || this;
  }

  var _proto = Notification.prototype;

  _proto.contentType = function contentType() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('contentType').call(this);
  };

  _proto.content = function content() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('content').call(this);
  };

  _proto.createdAt = function createdAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('createdAt', _Model__WEBPACK_IMPORTED_MODULE_1__["default"].transformDate).call(this);
  };

  _proto.isRead = function isRead() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('isRead').call(this);
  };

  _proto.user = function user() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('user').call(this);
  };

  _proto.fromUser = function fromUser() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('fromUser').call(this);
  };

  _proto.subject = function subject() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('subject').call(this);
  };

  return Notification;
}(_Model__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/models/Post.ts":
/*!***********************************!*\
  !*** ./src/common/models/Post.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Post)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");
/* harmony import */ var _utils_computed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/computed */ "./src/common/utils/computed.ts");
/* harmony import */ var _utils_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/string */ "./src/common/utils/string.ts");





var Post = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Post, _Model);

  function Post() {
    return _Model.apply(this, arguments) || this;
  }

  var _proto = Post.prototype;

  _proto.number = function number() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('number').call(this);
  };

  _proto.discussion = function discussion() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('discussion').call(this);
  };

  _proto.createdAt = function createdAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('createdAt', _Model__WEBPACK_IMPORTED_MODULE_1__["default"].transformDate).call(this);
  };

  _proto.user = function user() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('user').call(this);
  };

  _proto.contentType = function contentType() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('contentType').call(this);
  };

  _proto.content = function content() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('content').call(this);
  };

  _proto.contentHtml = function contentHtml() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('contentHtml').call(this);
  };

  _proto.renderFailed = function renderFailed() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('renderFailed').call(this);
  };

  _proto.contentPlain = function contentPlain() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_2__["default"])('contentHtml', function (content) {
      if (typeof content === 'string') {
        return (0,_utils_string__WEBPACK_IMPORTED_MODULE_3__.getPlainContent)(content);
      }

      return content;
    }).call(this);
  };

  _proto.editedAt = function editedAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('editedAt', _Model__WEBPACK_IMPORTED_MODULE_1__["default"].transformDate).call(this);
  };

  _proto.editedUser = function editedUser() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('editedUser').call(this);
  };

  _proto.isEdited = function isEdited() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_2__["default"])('editedAt', function (editedAt) {
      return !!editedAt;
    }).call(this);
  };

  _proto.hiddenAt = function hiddenAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('hiddenAt', _Model__WEBPACK_IMPORTED_MODULE_1__["default"].transformDate).call(this);
  };

  _proto.hiddenUser = function hiddenUser() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].hasOne('hiddenUser').call(this);
  };

  _proto.isHidden = function isHidden() {
    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_2__["default"])('hiddenAt', function (hiddenAt) {
      return !!hiddenAt;
    }).call(this);
  };

  _proto.canEdit = function canEdit() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('canEdit').call(this);
  };

  _proto.canHide = function canHide() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('canHide').call(this);
  };

  _proto.canDelete = function canDelete() {
    return _Model__WEBPACK_IMPORTED_MODULE_1__["default"].attribute('canDelete').call(this);
  };

  return Post;
}(_Model__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/common/models/User.tsx":
/*!************************************!*\
  !*** ./src/common/models/User.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ User)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var color_thief_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! color-thief-browser */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/color-thief-browser/dist/color-thief.min.js");
/* harmony import */ var color_thief_browser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(color_thief_browser__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Model */ "./src/common/Model.ts");
/* harmony import */ var _utils_stringToColor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/stringToColor */ "./src/common/utils/stringToColor.ts");
/* harmony import */ var _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _utils_computed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/computed */ "./src/common/utils/computed.ts");
/* harmony import */ var _components_GroupBadge__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/GroupBadge */ "./src/common/components/GroupBadge.js");








var User = /*#__PURE__*/function (_Model) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(User, _Model);

  function User() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Model.call.apply(_Model, [this].concat(args)) || this;
    _this.avatarColor = null;
    return _this;
  }

  var _proto = User.prototype;

  _proto.username = function username() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('username').call(this);
  };

  _proto.slug = function slug() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('slug').call(this);
  };

  _proto.displayName = function displayName() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('displayName').call(this);
  };

  _proto.email = function email() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('email').call(this);
  };

  _proto.isEmailConfirmed = function isEmailConfirmed() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('isEmailConfirmed').call(this);
  };

  _proto.password = function password() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('password').call(this);
  };

  _proto.avatarUrl = function avatarUrl() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('avatarUrl').call(this);
  };

  _proto.preferences = function preferences() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('preferences').call(this);
  };

  _proto.groups = function groups() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].hasMany('groups').call(this);
  };

  _proto.joinTime = function joinTime() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('joinTime', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.lastSeenAt = function lastSeenAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('lastSeenAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.markedAllAsReadAt = function markedAllAsReadAt() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('markedAllAsReadAt', _Model__WEBPACK_IMPORTED_MODULE_2__["default"].transformDate).call(this);
  };

  _proto.unreadNotificationCount = function unreadNotificationCount() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('unreadNotificationCount').call(this);
  };

  _proto.newNotificationCount = function newNotificationCount() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('newNotificationCount').call(this);
  };

  _proto.discussionCount = function discussionCount() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('discussionCount').call(this);
  };

  _proto.commentCount = function commentCount() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('commentCount').call(this);
  };

  _proto.canEdit = function canEdit() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canEdit').call(this);
  };

  _proto.canEditCredentials = function canEditCredentials() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canEditCredentials').call(this);
  };

  _proto.canEditGroups = function canEditGroups() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canEditGroups').call(this);
  };

  _proto.canDelete = function canDelete() {
    return _Model__WEBPACK_IMPORTED_MODULE_2__["default"].attribute('canDelete').call(this);
  };

  _proto.color = function color() {
    var _this2 = this;

    return (0,_utils_computed__WEBPACK_IMPORTED_MODULE_5__["default"])('displayName', 'avatarUrl', 'avatarColor', function (displayName, avatarUrl, avatarColor) {
      // If we've already calculated and cached the dominant color of the user's
      // avatar, then we can return that in RGB format. If we haven't, we'll want
      // to calculate it. Unless the user doesn't have an avatar, in which case
      // we generate a color from their display name.
      if (avatarColor) {
        return "rgb(" + avatarColor.join(', ') + ")";
      } else if (avatarUrl) {
        _this2.calculateAvatarColor();

        return '';
      }

      return '#' + (0,_utils_stringToColor__WEBPACK_IMPORTED_MODULE_3__["default"])(displayName);
    }).call(this);
  };

  /**
   * Check whether or not the user has been seen in the last 5 minutes.
   */
  _proto.isOnline = function isOnline() {
    return dayjs().subtract(5, 'minutes').isBefore(this.lastSeenAt());
  }
  /**
   * Get the Badge components that apply to this user.
   */
  ;

  _proto.badges = function badges() {
    var items = new _utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();
    var groups = this.groups();

    if (groups) {
      groups.forEach(function (group) {
        items.add("group" + (group == null ? void 0 : group.id()), m(_components_GroupBadge__WEBPACK_IMPORTED_MODULE_6__["default"], {
          group: group
        }));
      });
    }

    return items;
  }
  /**
   * Calculate the dominant color of the user's avatar. The dominant color will
   * be set to the `avatarColor` property once it has been calculated.
   */
  ;

  _proto.calculateAvatarColor = function calculateAvatarColor() {
    var _this$avatarUrl;

    var image = new Image();
    var user = this;
    image.addEventListener('load', function () {
      try {
        var colorThief = new (color_thief_browser__WEBPACK_IMPORTED_MODULE_1___default())();
        user.avatarColor = colorThief.getColor(this);
      } catch (e) {
        // Completely white avatars throw errors due to a glitch in color thief
        // See https://github.com/lokesh/color-thief/issues/40
        if (e instanceof TypeError) {
          user.avatarColor = [255, 255, 255];
        } else {
          throw e;
        }
      }

      user.freshness = new Date();
      m.redraw();
    });
    image.crossOrigin = 'anonymous';
    image.src = (_this$avatarUrl = this.avatarUrl()) != null ? _this$avatarUrl : '';
  }
  /**
   * Update the user's preferences.
   */
  ;

  _proto.savePreferences = function savePreferences(newPreferences) {
    var preferences = this.preferences();
    Object.assign(preferences, newPreferences);
    return this.save({
      preferences: preferences
    });
  };

  return User;
}(_Model__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/common/resolvers/DefaultResolver.ts":
/*!*************************************************!*\
  !*** ./src/common/resolvers/DefaultResolver.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DefaultResolver)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");


/**
 * Generates a route resolver for a given component.
 *
 * In addition to regular route resolver functionality:
 * - It provide the current route name as an attr
 * - It sets a key on the component so a rerender will be triggered on route change.
 */
var DefaultResolver = /*#__PURE__*/function () {
  function DefaultResolver(component, routeName) {
    this.component = void 0;
    this.routeName = void 0;
    this.component = component;
    this.routeName = routeName;
  }
  /**
   * When a route change results in a changed key, a full page
   * rerender occurs. This method can be overriden in subclasses
   * to prevent rerenders on some route changes.
   */


  var _proto = DefaultResolver.prototype;

  _proto.makeKey = function makeKey() {
    return this.routeName + JSON.stringify(m.route.param());
  };

  _proto.makeAttrs = function makeAttrs(vnode) {
    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, vnode.attrs, {
      routeName: this.routeName
    });
  };

  _proto.onmatch = function onmatch(args, requestedPath, route) {
    return this.component;
  };

  _proto.render = function render(vnode) {
    return [(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, vnode, {
      attrs: this.makeAttrs(vnode),
      key: this.makeKey()
    })];
  };

  return DefaultResolver;
}();



/***/ }),

/***/ "./src/common/states/AlertManagerState.ts":
/*!************************************************!*\
  !*** ./src/common/states/AlertManagerState.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AlertManagerState)
/* harmony export */ });
/* harmony import */ var _components_Alert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Alert */ "./src/common/components/Alert.tsx");

/**
 * Returned by `AlertManagerState.show`. Used to dismiss alerts.
 */

var AlertManagerState = /*#__PURE__*/function () {
  function AlertManagerState() {
    this.activeAlerts = {};
    this.alertId = 0;
  }

  var _proto = AlertManagerState.prototype;

  _proto.getActiveAlerts = function getActiveAlerts() {
    return this.activeAlerts;
  }
  /**
   * Show an Alert in the alerts area.
   *
   * @return The alert's ID, which can be used to dismiss the alert.
   */
  ;

  _proto.show = function show(arg1, arg2, arg3) {
    // Assigns variables as per the above signatures
    var componentClass = _components_Alert__WEBPACK_IMPORTED_MODULE_0__["default"];
    var attrs = {};
    var children;

    if (arguments.length == 1) {
      children = arg1;
    } else if (arguments.length == 2) {
      attrs = arg1;
      children = arg2;
    } else if (arguments.length == 3) {
      componentClass = arg1;
      attrs = arg2;
      children = arg3;
    }

    this.activeAlerts[++this.alertId] = {
      children: children,
      attrs: attrs,
      componentClass: componentClass
    };
    m.redraw();
    return this.alertId;
  }
  /**
   * Dismiss an alert.
   */
  ;

  _proto.dismiss = function dismiss(key) {
    if (!key || !(key in this.activeAlerts)) return;
    delete this.activeAlerts[key];
    m.redraw();
  }
  /**
   * Clear all alerts.
   */
  ;

  _proto.clear = function clear() {
    this.activeAlerts = {};
    m.redraw();
  };

  return AlertManagerState;
}();



/***/ }),

/***/ "./src/common/states/ModalManagerState.ts":
/*!************************************************!*\
  !*** ./src/common/states/ModalManagerState.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ModalManagerState)
/* harmony export */ });
/* harmony import */ var _components_Modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Modal */ "./src/common/components/Modal.tsx");

/**
 * Ideally, `show` would take a higher-kinded generic, ala:
 *  `show<Attrs, C>(componentClass: C<Attrs>, attrs: Attrs): void`
 * Unfortunately, TypeScript does not support this:
 * https://github.com/Microsoft/TypeScript/issues/1213
 * Therefore, we have to use this ugly, messy workaround.
 */

/**
 * Class used to manage modal state.
 *
 * Accessible on the `app` object via `app.modal` property.
 */
var ModalManagerState = /*#__PURE__*/function () {
  function ModalManagerState() {
    this.modal = null;
    this.key = 0;
    this.closeTimeout = void 0;
  }

  var _proto = ModalManagerState.prototype;

  /**
   * Shows a modal dialog.
   *
   * If a modal is already open, the existing one will close and the new modal will replace it.
   *
   * @example <caption>Show a modal</caption>
   * app.modal.show(MyCoolModal, { attr: 'value' });
   *
   * @example <caption>Show a modal from a lifecycle method (`oncreate`, `view`, etc.)</caption>
   * // This "hack" is needed due to quirks with nested redraws in Mithril.
   * setTimeout(() => app.modal.show(MyCoolModal, { attr: 'value' }), 0);
   */
  _proto.show = function show(componentClass, attrs) {
    if (attrs === void 0) {
      attrs = {};
    }

    if (!(componentClass.prototype instanceof _components_Modal__WEBPACK_IMPORTED_MODULE_0__["default"])) {
      // This is duplicated so that if the error is caught, an error message still shows up in the debug console.
      var invalidModalWarning = 'The ModalManager can only show Modals.';
      console.error(invalidModalWarning);
      throw new Error(invalidModalWarning);
    }

    if (this.closeTimeout) clearTimeout(this.closeTimeout);
    this.modal = {
      componentClass: componentClass,
      attrs: attrs,
      key: this.key++
    };
    m.redraw.sync();
  }
  /**
   * Closes the currently open dialog, if one is open.
   */
  ;

  _proto.close = function close() {
    var _this = this;

    if (!this.modal) return; // Don't hide the modal immediately, because if the consumer happens to call
    // the `show` method straight after to show another modal dialog, it will
    // cause Bootstrap's modal JS to misbehave. Instead we will wait for a tiny
    // bit to give the `show` method the opportunity to prevent this from going
    // ahead.

    this.closeTimeout = setTimeout(function () {
      _this.modal = null;
      m.redraw();
    });
  }
  /**
   * Checks if a modal is currently open.
   *
   * @return `true` if a modal dialog is currently open, otherwise `false`.
   */
  ;

  _proto.isModalOpen = function isModalOpen() {
    return !!this.modal;
  };

  return ModalManagerState;
}();



/***/ }),

/***/ "./src/common/states/PageState.js":
/*!****************************************!*\
  !*** ./src/common/states/PageState.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PageState)
/* harmony export */ });
/* harmony import */ var _common_utils_subclassOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils/subclassOf */ "./src/common/utils/subclassOf.js");


var PageState = /*#__PURE__*/function () {
  function PageState(type, data) {
    if (data === void 0) {
      data = {};
    }

    this.type = type;
    this.data = data;
  }
  /**
   * Determine whether the page matches the given class and data.
   *
   * @param {object} type The page class to check against. Subclasses are accepted as well.
   * @param {Record<string, unknown>} data
   * @return {boolean}
   */


  var _proto = PageState.prototype;

  _proto.matches = function matches(type, data) {
    var _this = this;

    if (data === void 0) {
      data = {};
    }

    // Fail early when the page is of a different type
    if (!(0,_common_utils_subclassOf__WEBPACK_IMPORTED_MODULE_0__["default"])(this.type, type)) return false; // Now that the type is known to be correct, we loop through the provided
    // data to see whether it matches the data in our state.

    return Object.keys(data).every(function (key) {
      return _this.data[key] === data[key];
    });
  };

  _proto.get = function get(key) {
    return this.data[key];
  };

  _proto.set = function set(key, value) {
    this.data[key] = value;
  };

  return PageState;
}();



/***/ }),

/***/ "./src/common/states/PaginatedListState.ts":
/*!*************************************************!*\
  !*** ./src/common/states/PaginatedListState.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PaginatedListState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");



var PaginatedListState = /*#__PURE__*/function () {
  function PaginatedListState(params, page, pageSize) {
    if (params === void 0) {
      params = {};
    }

    if (page === void 0) {
      page = 1;
    }

    if (pageSize === void 0) {
      pageSize = 20;
    }

    this.location = void 0;
    this.pageSize = void 0;
    this.pages = [];
    this.params = {};
    this.initialLoading = false;
    this.loadingPrev = false;
    this.loadingNext = false;
    this.params = params;
    this.location = {
      page: page
    };
    this.pageSize = pageSize;
  }

  var _proto = PaginatedListState.prototype;

  _proto.clear = function clear() {
    this.pages = [];
    m.redraw();
  };

  _proto.loadPrev = function loadPrev() {
    var _this = this;

    if (this.loadingPrev || this.getLocation().page === 1) return Promise.resolve();
    this.loadingPrev = true;
    var page = this.getPrevPageNumber();
    return this.loadPage(page).then(this.parseResults.bind(this, page))["finally"](function () {
      return _this.loadingPrev = false;
    });
  };

  _proto.loadNext = function loadNext() {
    var _this2 = this;

    if (this.loadingNext) return Promise.resolve();
    this.loadingNext = true;
    var page = this.getNextPageNumber();
    return this.loadPage(page).then(this.parseResults.bind(this, page))["finally"](function () {
      return _this2.loadingNext = false;
    });
  };

  _proto.parseResults = function parseResults(pg, results) {
    var _results$payload;

    var pageNum = Number(pg);
    var links = (_results$payload = results.payload) == null ? void 0 : _results$payload.links;
    var page = {
      number: pageNum,
      items: results,
      hasNext: !!(links != null && links.next),
      hasPrev: !!(links != null && links.prev)
    };

    if (this.isEmpty() || pageNum > this.getNextPageNumber() - 1) {
      this.pages.push(page);
    } else {
      this.pages.unshift(page);
    }

    this.location = {
      page: pageNum
    };
    m.redraw();
  }
  /**
   * Load a new page of results.
   */
  ;

  _proto.loadPage = function loadPage(page) {
    if (page === void 0) {
      page = 1;
    }

    var reqParams = this.requestParams();
    var include = Array.isArray(reqParams.include) ? reqParams.include.join(',') : reqParams.include;

    var params = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, reqParams, {
      page: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, reqParams.page, {
        offset: this.pageSize * (page - 1)
      }),
      include: include
    });

    return _common_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.find(this.type, params);
  }
  /**
   * Get the parameters that should be passed in the API request.
   * Do not include page offset unless subclass overrides loadPage.
   *
   * @abstract
   * @see loadPage
   */
  ;

  _proto.requestParams = function requestParams() {
    return this.params;
  }
  /**
   * Update the `this.params` object, calling `refresh` if they have changed.
   * Use `requestParams` for converting `this.params` into API parameters
   *
   * @param newParams
   * @param page
   * @see requestParams
   */
  ;

  _proto.refreshParams = function refreshParams(newParams, page) {
    if (this.isEmpty() || this.paramsChanged(newParams)) {
      this.params = newParams;
      return this.refresh(page);
    }

    return Promise.resolve();
  };

  _proto.refresh = function refresh(page) {
    var _this3 = this;

    if (page === void 0) {
      page = 1;
    }

    this.initialLoading = true;
    this.loadingPrev = false;
    this.loadingNext = false;
    this.clear();
    this.location = {
      page: page
    };
    return this.loadPage().then(function (results) {
      _this3.pages = [];

      _this3.parseResults(_this3.location.page, results);
    })["finally"](function () {
      return _this3.initialLoading = false;
    });
  };

  _proto.getPages = function getPages() {
    return this.pages;
  };

  _proto.getLocation = function getLocation() {
    return this.location;
  };

  _proto.isLoading = function isLoading() {
    return this.initialLoading || this.loadingNext || this.loadingPrev;
  };

  _proto.isInitialLoading = function isInitialLoading() {
    return this.initialLoading;
  };

  _proto.isLoadingPrev = function isLoadingPrev() {
    return this.loadingPrev;
  };

  _proto.isLoadingNext = function isLoadingNext() {
    return this.loadingNext;
  }
  /**
   * Returns true when the number of items across all loaded pages is not 0.
   *
   * @see isEmpty
   */
  ;

  _proto.hasItems = function hasItems() {
    return !!this.getAllItems().length;
  }
  /**
   * Returns true when there aren't any items *and* the state has already done its initial loading.
   * If you want to know whether there are items regardless of load state, use `hasItems()` instead
   *
   * @see hasItems
   */
  ;

  _proto.isEmpty = function isEmpty() {
    return !this.isInitialLoading() && !this.hasItems();
  };

  _proto.hasPrev = function hasPrev() {
    var _this$pages$;

    return !!((_this$pages$ = this.pages[0]) != null && _this$pages$.hasPrev);
  };

  _proto.hasNext = function hasNext() {
    var _this$pages;

    return !!((_this$pages = this.pages[this.pages.length - 1]) != null && _this$pages.hasNext);
  }
  /**
   * Stored state parameters.
   */
  ;

  _proto.getParams = function getParams() {
    return this.params;
  };

  _proto.getNextPageNumber = function getNextPageNumber() {
    var _this$pages2;

    var pg = (_this$pages2 = this.pages[this.pages.length - 1]) == null ? void 0 : _this$pages2.number;

    if (pg && !isNaN(pg)) {
      return pg + 1;
    } else {
      return this.location.page;
    }
  };

  _proto.getPrevPageNumber = function getPrevPageNumber() {
    var _this$pages$2;

    var pg = (_this$pages$2 = this.pages[0]) == null ? void 0 : _this$pages$2.number;

    if (pg && !isNaN(pg)) {
      // If the calculated page number is less than 1,
      // return 1 as the prev page (first possible page number)
      return Math.max(pg - 1, 1);
    } else {
      return this.location.page;
    }
  };

  _proto.paramsChanged = function paramsChanged(newParams) {
    var _this4 = this;

    return Object.keys(newParams).some(function (key) {
      return _this4.getParams()[key] !== newParams[key];
    });
  };

  _proto.getAllItems = function getAllItems() {
    return this.getPages().map(function (pg) {
      return pg.items;
    }).flat();
  };

  return PaginatedListState;
}();



/***/ }),

/***/ "./src/common/utils/BasicEditorDriver.ts":
/*!***********************************************!*\
  !*** ./src/common/utils/BasicEditorDriver.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ BasicEditorDriver)
/* harmony export */ });
/* harmony import */ var textarea_caret__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! textarea-caret */ "./node_modules/textarea-caret/index.js");
/* harmony import */ var textarea_caret__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(textarea_caret__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _insertText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./insertText */ "./src/common/utils/insertText.ts");
/* harmony import */ var _ItemList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ItemList */ "./src/common/utils/ItemList.ts");




var BasicEditorDriver = /*#__PURE__*/function () {
  function BasicEditorDriver(dom, params) {
    this.el = void 0;
    this.el = document.createElement('textarea');
    this.build(dom, params);
  }

  var _proto = BasicEditorDriver.prototype;

  _proto.build = function build(dom, params) {
    var _this = this;

    this.el.className = params.classNames.join(' ');
    this.el.disabled = params.disabled;
    this.el.placeholder = params.placeholder;
    this.el.value = params.value;

    var callInputListeners = function callInputListeners(e) {
      params.inputListeners.forEach(function (listener) {
        listener();
      });
      e.redraw = false;
    };

    this.el.oninput = function (e) {
      params.oninput(_this.el.value);
      callInputListeners(e);
    };

    this.el.onclick = callInputListeners;
    this.el.onkeyup = callInputListeners;
    this.el.addEventListener('keydown', function (e) {
      _this.keyHandlers(params).toArray().forEach(function (handler) {
        return handler(e);
      });
    });
    dom.append(this.el);
  };

  _proto.keyHandlers = function keyHandlers(params) {
    var items = new _ItemList__WEBPACK_IMPORTED_MODULE_2__["default"]();
    items.add('submit', function (e) {
      if ((e.metaKey || e.ctrlKey) && e.key === 'Enter') {
        params.onsubmit();
      }
    });
    return items;
  };

  _proto.moveCursorTo = function moveCursorTo(position) {
    this.setSelectionRange(position, position);
  };

  _proto.getSelectionRange = function getSelectionRange() {
    return [this.el.selectionStart, this.el.selectionEnd];
  };

  _proto.getLastNChars = function getLastNChars(n) {
    var value = this.el.value;
    return value.slice(Math.max(0, this.el.selectionStart - n), this.el.selectionStart);
  };

  _proto.insertAtCursor = function insertAtCursor(text) {
    this.insertAt(this.el.selectionStart, text);
  };

  _proto.insertAt = function insertAt(pos, text) {
    this.insertBetween(pos, pos, text);
  };

  _proto.insertBetween = function insertBetween(selectionStart, selectionEnd, text) {
    this.setSelectionRange(selectionStart, selectionEnd);
    var cursorPos = selectionStart + text.length;
    (0,_insertText__WEBPACK_IMPORTED_MODULE_1__["default"])(this.el, {
      text: text,
      selectionStart: cursorPos,
      selectionEnd: cursorPos
    });
  };

  _proto.replaceBeforeCursor = function replaceBeforeCursor(start, text) {
    this.insertBetween(start, this.el.selectionStart, text);
  };

  _proto.setSelectionRange = function setSelectionRange(start, end) {
    this.el.setSelectionRange(start, end);
    this.focus();
  };

  _proto.getCaretCoordinates = function getCaretCoordinates(position) {
    var relCoords = textarea_caret__WEBPACK_IMPORTED_MODULE_0___default()(this.el, position);

    return {
      top: relCoords.top - this.el.scrollTop,
      left: relCoords.left
    };
  } // DOM Interactions

  /**
   * Set the disabled status of the editor.
   */
  ;

  _proto.disabled = function disabled(_disabled) {
    this.el.disabled = _disabled;
  }
  /**
   * Focus on the editor.
   */
  ;

  _proto.focus = function focus() {
    this.el.focus();
  }
  /**
   * Destroy the editor
   */
  ;

  _proto.destroy = function destroy() {
    this.el.remove();
  };

  return BasicEditorDriver;
}();



/***/ }),

/***/ "./src/common/utils/Drawer.js":
/*!************************************!*\
  !*** ./src/common/utils/Drawer.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Drawer)
/* harmony export */ });
/* harmony import */ var _focusTrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focusTrap */ "./src/common/utils/focusTrap.ts");

/**
 * The `Drawer` class controls the page's drawer. The drawer is the area the
 * slides out from the left on mobile devices; it contains the header and the
 * footer.
 */

var Drawer = /*#__PURE__*/function () {
  /**
   * @type {import('./focusTrap').FocusTrap}
   */

  /**
   * @type {HTMLDivElement}
   */
  function Drawer() {
    var _this = this;

    this.focusTrap = void 0;
    this.appElement = void 0;

    this.resizeHandler = function (e) {
      console.log(_this, e);

      if (!e.matches && _this.isOpen()) {
        // Drawer is open but we've made window bigger, so hide it.
        _this.hide();
      }
    }.bind(this);

    this.drawerAvailableMediaQuery = void 0;
    // Set up an event handler so that whenever the content area is tapped,
    // the drawer will close.
    document.getElementById('content').addEventListener('click', function (e) {
      if (_this.isOpen()) {
        e.preventDefault();

        _this.hide();
      }
    });
    this.appElement = document.getElementById('app'); // Despite the `focus-trap` documentation, both `clickOutsideDeactivates`
    // and `allowOutsideClick` are necessary so that inputs in modals triggered
    // from the drawer's nav components can be interacted with.

    this.focusTrap = (0,_focusTrap__WEBPACK_IMPORTED_MODULE_0__.createFocusTrap)('#drawer', {
      allowOutsideClick: true,
      clickOutsideDeactivates: true
    });
    this.drawerAvailableMediaQuery = window.matchMedia("(max-width: " + getComputedStyle(document.documentElement).getPropertyValue('--screen-phone-max') + ")");
  }
  /**
   * Handler for the `resize` event on `window`.
   *
   * This is used to close the drawer when the viewport is widened past the `phone` size.
   * At this point, the drawer turns into the standard header that we see on desktop, but
   * the drawer is still registered as 'open' internally.
   *
   * This causes issues with the focus trap, resulting in focus becoming trapped within
   * the header on desktop viewports.
   *
   * @internal
   */


  var _proto = Drawer.prototype;

  /**
   * Check whether or not the drawer is currently open.
   *
   * @return {boolean}
   */
  _proto.isOpen = function isOpen() {
    return this.appElement.classList.contains('drawerOpen');
  }
  /**
   * Hide the drawer.
   */
  ;

  _proto.hide = function hide() {
    var _this$$backdrop;

    /**
     * As part of hiding the drawer, this function also ensures that the drawer
     * correctly animates out, while ensuring it is not part of the navigation
     * tree while off-screen.
     *
     * More info: https://github.com/flarum/core/pull/2666#discussion_r595381014
     */
    this.focusTrap.deactivate();
    this.drawerAvailableMediaQuery.removeListener(this.resizeHandler);
    if (!this.isOpen()) return;
    var $drawer = $('#drawer'); // Used to prevent `visibility: hidden` from breaking the exit animation

    $drawer.css('visibility', 'visible').one('transitionend', function () {
      return $drawer.css('visibility', '');
    });
    this.appElement.classList.remove('drawerOpen');
    (_this$$backdrop = this.$backdrop) == null ? void 0 : _this$$backdrop.remove == null ? void 0 : _this$$backdrop.remove();
  }
  /**
   * Show the drawer.
   */
  ;

  _proto.show = function show() {
    var _this2 = this;

    this.appElement.classList.add('drawerOpen');
    this.drawerAvailableMediaQuery.addListener(this.resizeHandler);
    this.$backdrop = $('<div/>').addClass('drawer-backdrop fade').appendTo('body').on('click', this.hide.bind(this));
    requestAnimationFrame(function () {
      _this2.$backdrop.addClass('in');

      _this2.focusTrap.activate();
    });
  };

  return Drawer;
}();



/***/ }),

/***/ "./src/common/utils/EditorDriverInterface.ts":
/*!***************************************************!*\
  !*** ./src/common/utils/EditorDriverInterface.ts ***!
  \***************************************************/
/***/ (() => {



/***/ }),

/***/ "./src/common/utils/ItemList.ts":
/*!**************************************!*\
  !*** ./src/common/utils/ItemList.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ItemList)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isObject */ "./src/common/utils/isObject.ts");




var Item = function Item(content, priority) {
  this.content = void 0;
  this.priority = void 0;
  this.content = content;
  this.priority = priority;
};
/**
 * The `ItemList` class collects items and then arranges them into an array
 * by priority.
 */


var ItemList = /*#__PURE__*/function () {
  function ItemList() {
    this._items = {};
  }

  var _proto = ItemList.prototype;

  /**
   * Check whether the list is empty.
   */
  _proto.isEmpty = function isEmpty() {
    return Object.keys(this._items).length === 0;
  }
  /**
   * Check whether an item is present in the list.
   */
  ;

  _proto.has = function has(key) {
    return Object.keys(this._items).includes(key);
  }
  /**
   * Get the content of an item.
   */
  ;

  _proto.get = function get(key) {
    return this._items[key].content;
  }
  /**
   * Get the priority of an item.
   */
  ;

  _proto.getPriority = function getPriority(key) {
    return this._items[key].priority;
  }
  /**
   * Add an item to the list.
   *
   * @param key A unique key for the item.
   * @param content The item's content.
   * @param priority The priority of the item. Items with a higher priority
   * will be positioned before items with a lower priority.
   */
  ;

  _proto.add = function add(key, content, priority) {
    if (priority === void 0) {
      priority = 0;
    }

    this._items[key] = new Item(content, priority);
    return this;
  } // TODO: [Flarum 2.0] Remove deprecated `.replace()` method.

  /**
   * Replace an item and/or priority in the list, only if it is already present.
   *
   * If `content` or `priority` are `null`, these values will not be replaced.
   *
   * If the provided `key` is not present, nothing will happen.
   *
   * @deprecated Please use the {@link ItemList.setContent} and {@link ItemList.setPriority}
   * methods to replace items and their priorities. This method will be removed in Flarum 2.0.
   *
   * @param key The key of the item in the list
   * @param content The item's new content
   * @param priority The item's new priority
   *
   * @example <caption>Replace priority and not content.</caption>
   * items.replace('myItem', null, 10);
   *
   * @example <caption>Replace content and not priority.</caption>
   * items.replace('myItem', <p>My new value.</p>);
   *
   * @example <caption>Replace content and priority.</caption>
   * items.replace('myItem', <p>My new value.</p>, 10);
   */
  ;

  _proto.replace = function replace(key, content, priority) {
    if (content === void 0) {
      content = null;
    }

    if (priority === void 0) {
      priority = null;
    }

    if (!this.has(key)) return this;

    if (content !== null) {
      this._items[key].content = content;
    }

    if (priority !== null) {
      this._items[key].priority = priority;
    }

    return this;
  }
  /**
   * Replaces an item's content, if the provided item key exists.
   *
   * If the provided `key` is not present, nothing will happen.
   *
   * @param key The key of the item in the list
   * @param content The item's new content
   *
   * @example <caption>Replace item content.</caption>
   * items.setContent('myItem', <p>My new value.</p>);
   *
   * @example <caption>Replace item content and priority.</caption>
   *          items
   *            .setContent('myItem', <p>My new value.</p>)
   *            .setPriority('myItem', 10);
   *
   * @throws If the provided `key` is not present in the ItemList.
   */
  ;

  _proto.setContent = function setContent(key, content) {
    if (!this.has(key)) {
      throw new Error("[ItemList] Cannot set content of Item. Key `" + key + "` is not present.");
    } // Saves on bundle size to call the deprecated method internally


    return this.replace(key, content);
  }
  /**
   * Replaces an item's priority, if the provided item key exists.
   *
   * If the provided `key` is not present, nothing will happen.
   *
   * @param key The key of the item in the list
   * @param priority The item's new priority
   *
   * @example <caption>Replace item priority.</caption>
   * items.setPriority('myItem', 10);
   *
   * @example <caption>Replace item priority and content.</caption>
   *          items
   *            .setPriority('myItem', 10)
   *            .setContent('myItem', <p>My new value.</p>);
   *
   * @throws If the provided `key` is not present in the ItemList.
   */
  ;

  _proto.setPriority = function setPriority(key, priority) {
    if (!this.has(key)) {
      throw new Error("[ItemList] Cannot set priority of Item. Key `" + key + "` is not present.");
    }

    this._items[key].priority = priority;
    return this;
  }
  /**
   * Remove an item from the list.
   */
  ;

  _proto.remove = function remove(key) {
    delete this._items[key];
    return this;
  }
  /**
   * Merge another list's items into this one.
   *
   * The list passed to this function will overwrite items which already exist
   * with the same key.
   */
  ;

  _proto.merge = function merge(otherList) {
    var _this = this;

    Object.keys(otherList._items).forEach(function (key) {
      var val = otherList._items[key];

      if (val instanceof Item) {
        _this._items[key] = val;
      }
    });
    return this;
  }
  /**
   * Convert the list into an array of item content arranged by priority.
   *
   * This **does not** preserve the original types of primitives and proxies
   * all content values to make `itemName` accessible on them.
   *
   * **NOTE:** If your ItemList holds primitive types (such as numbers, booleans
   * or strings), these will be converted to their object counterparts if you do
   * not provide `true` to this function.
   *
   * **NOTE:** Modifying any objects in the final array may also update the
   * content of the original ItemList.
   *
   * @param keepPrimitives Converts item content to objects and sets the
   * `itemName` property on them.
   *
   * @see https://github.com/flarum/core/issues/3030
   */
  ;

  _proto.toArray = function toArray(keepPrimitives) {
    var _this2 = this;

    if (keepPrimitives === void 0) {
      keepPrimitives = false;
    }

    var items = Object.keys(this._items).map(function (key, i) {
      var item = _this2._items[key];

      if (!keepPrimitives || (0,_isObject__WEBPACK_IMPORTED_MODULE_2__["default"])(item.content)) {
        // Convert content to object, then proxy it
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item, {
          content: _this2.createItemContentProxy((0,_isObject__WEBPACK_IMPORTED_MODULE_2__["default"])(item.content) ? item.content : Object(item.content), key)
        });
      } else {
        // ...otherwise just return a clone of the item.
        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, item);
      }
    });
    return items.sort(function (a, b) {
      return b.priority - a.priority;
    }).map(function (item) {
      return item.content;
    });
  }
  /**
   * A read-only map of all keys to their respective items in no particular order.
   *
   * We don't allow adding new items to the ItemList via setting new properties,
   * nor do we allow modifying existing items directly. You should use the
   * {@link ItemList.add}, {@link ItemList.setContent} and
   * {@link ItemList.setPriority} methods instead.
   *
   * To match the old behaviour of the `ItemList.items` property, call
   * `Object.values(ItemList.toObject())`.
   *
   * @example
   * const items = new ItemList();
   * items.add('b', 'My cool value', 20);
   * items.add('a', 'My value', 10);
   * items.toObject();
   * // {
   * //   a: { content: 'My value', priority: 10, itemName: 'a' },
   * //   b: { content: 'My cool value', priority: 20, itemName: 'b' },
   * // }
   */
  ;

  _proto.toObject = function toObject() {
    var _this3 = this;

    return Object.keys(this._items).reduce(function (map, key) {
      var obj = {
        content: _this3.get(key),
        itemName: key,
        priority: _this3.getPriority(key)
      };
      map[key] = obj;
      return map;
    }, {});
  }
  /**
   * Proxies an item's content, adding the `itemName` readonly property to it.
   *
   * @example
   * createItemContentProxy({ foo: 'bar' }, 'myItem');
   * // { foo: 'bar', itemName: 'myItem' }
   *
   * @param content The item's content (objects only)
   * @param key The item's key
   * @return Proxied content
   *
   * @internal
   */
  ;

  _proto.createItemContentProxy = function createItemContentProxy(content, key) {
    return new Proxy(content, {
      get: function get(target, property, receiver) {
        if (property === 'itemName') return key;
        return Reflect.get(target, property, receiver);
      },
      set: function set(target, property, value, receiver) {
        if (key !== null && property === 'itemName') {
          throw new Error('`itemName` property is read-only');
        }

        return Reflect.set(target, property, value, receiver);
      }
    });
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ItemList, [{
    key: "items",
    get: // TODO: [Flarum 2.0] Remove `.items` getter.

    /**
     * A **read-only copy** of items in the list.
     *
     * We don't allow adding new items to the ItemList via setting new properties,
     * nor do we allow modifying existing items directly.
     *
     * @deprecated Use {@link ItemList.toObject} instead.
     */
    function get() {
      return new Proxy(this._items, {
        set: function set() {
          console.warn('Modifying `ItemList.items` is not allowed.');
          return false;
        }
      });
    }
  }]);

  return ItemList;
}();



/***/ }),

/***/ "./src/common/utils/RequestError.ts":
/*!******************************************!*\
  !*** ./src/common/utils/RequestError.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ RequestError)
/* harmony export */ });
var RequestError = function RequestError(status, responseText, options, xhr) {
  this.status = void 0;
  this.options = void 0;
  this.xhr = void 0;
  this.responseText = void 0;
  this.response = void 0;
  this.alert = void 0;
  this.status = status;
  this.responseText = responseText;
  this.options = options;
  this.xhr = xhr;

  try {
    this.response = JSON.parse(responseText != null ? responseText : 'null');
  } catch (e) {
    this.response = null;
  }

  this.alert = null;
};



/***/ }),

/***/ "./src/common/utils/ScrollListener.js":
/*!********************************************!*\
  !*** ./src/common/utils/ScrollListener.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ScrollListener)
/* harmony export */ });
/**
 * The `ScrollListener` class sets up a listener that handles window scroll
 * events.
 */
var ScrollListener = /*#__PURE__*/function () {
  /**
   * @param {(top: number) => void} callback The callback to run when the scroll position
   *     changes.
   */
  function ScrollListener(callback) {
    this.callback = callback;
    this.ticking = false;
  }
  /**
   * On each animation frame, as long as the listener is active, run the
   * `update` method.
   *
   * @protected
   */


  var _proto = ScrollListener.prototype;

  _proto.loop = function loop() {
    var _this = this;

    // THROTTLE: If the callback is still running (or hasn't yet run), we ignore
    // further scroll events.
    if (this.ticking) return; // Schedule the callback to be executed soon (TM), and stop throttling once
    // the callback is done.

    requestAnimationFrame(function () {
      _this.update();

      _this.ticking = false;
    });
    this.ticking = true;
  }
  /**
   * Run the callback, whether there was a scroll event or not.
   */
  ;

  _proto.update = function update() {
    this.callback(window.pageYOffset);
  }
  /**
   * Start listening to and handling the window's scroll position.
   */
  ;

  _proto.start = function start() {
    if (!this.active) {
      window.addEventListener('scroll', this.active = this.loop.bind(this), {
        passive: true
      });
    }
  }
  /**
   * Stop listening to and handling the window's scroll position.
   */
  ;

  _proto.stop = function stop() {
    window.removeEventListener('scroll', this.active);
    this.active = null;
  };

  return ScrollListener;
}();



/***/ }),

/***/ "./src/common/utils/Stream.ts":
/*!************************************!*\
  !*** ./src/common/utils/Stream.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var mithril_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mithril/stream */ "./node_modules/mithril/stream.js");
/* harmony import */ var mithril_stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mithril_stream__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mithril_stream__WEBPACK_IMPORTED_MODULE_0___default()));

/***/ }),

/***/ "./src/common/utils/SubtreeRetainer.ts":
/*!*********************************************!*\
  !*** ./src/common/utils/SubtreeRetainer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SubtreeRetainer)
/* harmony export */ });
/**
 * The `SubtreeRetainer` class keeps track of a number of pieces of data,
 * comparing the values of these pieces at every iteration.
 *
 * This is useful for preventing redraws to relatively static (or huge)
 * components whose VDOM only depends on very few values, when none of them
 * have changed.
 *
 * @example
 * // Check two callbacks for changes on each update
 * this.subtree = new SubtreeRetainer(
 *   () => this.attrs.post.freshness,
 *   () => this.showing
 * );
 *
 * // Add more callbacks to be checked for updates
 * this.subtree.check(() => this.attrs.user.freshness);
 *
 * // In a component's onbeforeupdate() method:
 * return this.subtree.needsRebuild()
 *
 * @see https://mithril.js.org/lifecycle-methods.html#onbeforeupdate
 */
var SubtreeRetainer = /*#__PURE__*/function () {
  /**
   * @param callbacks Functions returning data to keep track of.
   */
  function SubtreeRetainer() {
    this.callbacks = void 0;
    this.data = void 0;

    for (var _len = arguments.length, callbacks = new Array(_len), _key = 0; _key < _len; _key++) {
      callbacks[_key] = arguments[_key];
    }

    this.callbacks = callbacks;
    this.data = {}; // Build the initial data, so it is available when calling
    // needsRebuild from the onbeforeupdate hook.

    this.needsRebuild();
  }
  /**
   * Return whether any data has changed since the last check.
   * If so, Mithril needs to re-diff the vnode and its children.
   */


  var _proto = SubtreeRetainer.prototype;

  _proto.needsRebuild = function needsRebuild() {
    var _this = this;

    var needsRebuild = false;
    this.callbacks.forEach(function (callback, i) {
      var result = callback();

      if (result !== _this.data[i]) {
        _this.data[i] = result;
        needsRebuild = true;
      }
    });
    return needsRebuild;
  }
  /**
   * Add another callback to be checked.
   */
  ;

  _proto.check = function check() {
    for (var _len2 = arguments.length, callbacks = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      callbacks[_key2] = arguments[_key2];
    }

    this.callbacks = this.callbacks.concat(callbacks); // Update the data cache when new checks are added.

    this.needsRebuild();
  }
  /**
   * Invalidate the subtree, forcing it to be redrawn.
   */
  ;

  _proto.invalidate = function invalidate() {
    this.data = {};
  };

  return SubtreeRetainer;
}();



/***/ }),

/***/ "./src/common/utils/abbreviateNumber.ts":
/*!**********************************************!*\
  !*** ./src/common/utils/abbreviateNumber.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ abbreviateNumber)
/* harmony export */ });
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");
/* harmony import */ var _extractText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extractText */ "./src/common/utils/extractText.ts");


/**
 * The `abbreviateNumber` utility converts a number to a shorter localized form.
 *
 * @example
 * abbreviateNumber(1234);
 * // "1.2K"
 */

function abbreviateNumber(number) {
  // TODO: translation
  if (number >= 1000000) {
    return Math.floor(number / 1000000) + (0,_extractText__WEBPACK_IMPORTED_MODULE_1__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.number_suffix.mega_text'));
  } else if (number >= 1000) {
    return (number / 1000).toFixed(1) + (0,_extractText__WEBPACK_IMPORTED_MODULE_1__["default"])(_common_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.lib.number_suffix.kilo_text'));
  } else {
    return number.toString();
  }
}

/***/ }),

/***/ "./src/common/utils/anchorScroll.js":
/*!******************************************!*\
  !*** ./src/common/utils/anchorScroll.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ anchorScroll)
/* harmony export */ });
/**
 * The `anchorScroll` utility saves the scroll position relative to an element,
 * and then restores it after a callback has been run.
 *
 * This is useful if a redraw will change the page's content above the viewport.
 * Normally doing this will result in the content in the viewport being pushed
 * down or pulled up. By wrapping the redraw with this utility, the scroll
 * position can be anchor to an element that is in or below the viewport, so
 * the content in the viewport will stay the same.
 *
 * @param {HTMLElement | SVGElement | Element} element The element to anchor the scroll position to.
 * @param {() => void} callback The callback to run that will change page content.
 */
function anchorScroll(element, callback) {
  var $window = $(window);
  var relativeScroll = $(element).offset().top - $window.scrollTop();
  callback();
  $window.scrollTop($(element).offset().top - relativeScroll);
}

/***/ }),

/***/ "./src/common/utils/arrayFlatPolyfill.ts":
/*!***********************************************!*\
  !*** ./src/common/utils/arrayFlatPolyfill.ts ***!
  \***********************************************/
/***/ (() => {

// Based off of the polyfill on MDN
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#reduce_concat_isarray_recursivity
//
// Needed to provide support for Safari on iOS < 12
// ts-ignored because we can afford to encapsulate some messy logic behind the clean typings.
if (!Array.prototype['flat']) {
  Array.prototype['flat'] = function flat(depth) {
    // @ts-ignore
    return (depth != null ? depth : 1) > 0 ? // @ts-ignore
    Array.prototype.reduce.call(this, function (acc, val) {
      return acc.concat(Array.isArray(val) ? flat.call(val, depth - 1) : val);
    }, []) : // If no depth is provided, or depth is 0, just return a copy of
    // the array. Spread is supported in all major browsers (iOS 8+)
    // @ts-ignore
    [].concat(this);
  };
}

/***/ }),

/***/ "./src/common/utils/bidi.js":
/*!**********************************!*\
  !*** ./src/common/utils/bidi.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function bidi(node, prop) {
  var type = node.tag === 'select' ? node.attrs.multi ? 'multi' : 'select' : node.attrs.type; // Setup: bind listeners

  if (type === 'multi') {
    node.attrs.onchange = function () {
      prop([].slice.call(this.selectedOptions, function (x) {
        return x.value;
      }));
    };
  } else if (type === 'select') {
    node.attrs.onchange = function (e) {
      prop(this.selectedOptions[0].value);
    };
  } else if (type === 'checkbox') {
    node.attrs.onchange = function (e) {
      prop(this.checked);
    };
  } else {
    node.attrs.onchange = node.attrs.oninput = function (e) {
      prop(this.value);
    };
  }

  if (node.tag === 'select') {
    node.children.forEach(function (option) {
      if (option.attrs.value === prop() || option.children[0] === prop()) {
        option.attrs.selected = true;
      }
    });
  } else if (type === 'checkbox') {
    node.attrs.checked = prop();
  } else if (type === 'radio') {
    node.attrs.checked = prop() === node.attrs.value;
  } else {
    node.attrs.value = prop();
  }

  node.attrs.bidi = null;
  return node;
}

bidi.view = function (ctrl, node, prop) {
  return bidi(node, node.attrs.bidi);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bidi);

/***/ }),

/***/ "./src/common/utils/classList.ts":
/*!***************************************!*\
  !*** ./src/common/utils/classList.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.m.js");

/**
 * This util exposes `clsx` to core and extensions as a re-usable utility.
 *
 * For full documentation, see `clsx` on GitHub.
 *
 * @see https://github.com/lukeed/clsx
 */

var classList = clsx__WEBPACK_IMPORTED_MODULE_0__["default"];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (classList);

/***/ }),

/***/ "./src/common/utils/computed.ts":
/*!**************************************!*\
  !*** ./src/common/utils/computed.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ computed)
/* harmony export */ });
/**
 * The `computed` utility creates a function that will cache its output until
 * any of the dependent values are dirty.
 *
 * @param dependentKeys The keys of the dependent values.
 * @param compute The function which computes the value using the
 *     dependent values.
 */
function computed() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var keys = args.slice(0, -1);
  var compute = args.slice(-1)[0];
  var dependentValues = {};
  var computedValue;
  return function () {
    var _this = this;

    var recompute = false; // Read all of the dependent values. If any of them have changed since last
    // time, then we'll want to recompute our output.

    keys.forEach(function (key) {
      var attr = _this[key];
      var value = typeof attr === 'function' ? attr.call(_this) : attr;

      if (dependentValues[key] !== value) {
        recompute = true;
        dependentValues[key] = value;
      }
    });

    if (recompute) {
      computedValue = compute.apply(this, keys.map(function (key) {
        return dependentValues[key];
      }));
    }

    return computedValue;
  };
}

/***/ }),

/***/ "./src/common/utils/escapeRegExp.ts":
/*!******************************************!*\
  !*** ./src/common/utils/escapeRegExp.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ escapeRegExp)
/* harmony export */ });
var specialChars = /[.*+?^${}()|[\]\\]/g;
/**
 * Escapes the `RegExp` special characters in `input`.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping
 */

function escapeRegExp(input) {
  return input.replace(specialChars, '\\$&');
}

/***/ }),

/***/ "./src/common/utils/evented.js":
/*!*************************************!*\
  !*** ./src/common/utils/evented.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");

var deprecatedNotice = 'The `evented` util is deprecated and no longer supported.';
var deprecationIssueId = '2547';
/**
 * The `evented` mixin provides methods allowing an object to trigger events,
 * running externally registered event handlers.
 *
 * @deprecated v1.2, to be removed in v2.0
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  /**
   * Arrays of registered event handlers, grouped by the event name.
   *
   * @type {Record<string, unknown>}
   * @protected
   *
   * @deprecated
   */
  handlers: null,

  /**
   * Get all of the registered handlers for an event.
   *
   * @param {string} event The name of the event.
   * @return {Function[]}
   * @protected
   *
   * @deprecated
   */
  getHandlers: function getHandlers(event) {
    (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__.fireDeprecationWarning)(deprecatedNotice, deprecationIssueId);
    this.handlers = this.handlers || {};
    this.handlers[event] = this.handlers[event] || [];
    return this.handlers[event];
  },

  /**
   * Trigger an event.
   *
   * @param {string} event The name of the event.
   * @param {any[]} args Arguments to pass to event handlers.
   *
   * @deprecated
   */
  trigger: function trigger(event) {
    var _this = this;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__.fireDeprecationWarning)(deprecatedNotice, deprecationIssueId);
    this.getHandlers(event).forEach(function (handler) {
      return handler.apply(_this, args);
    });
  },

  /**
   * Register an event handler.
   *
   * @param {string} event The name of the event.
   * @param {Function} handler The function to handle the event.
   *
   * @deprecated
   */
  on: function on(event, handler) {
    (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__.fireDeprecationWarning)(deprecatedNotice, deprecationIssueId);
    this.getHandlers(event).push(handler);
  },

  /**
   * Register an event handler so that it will run only once, and then
   * unregister itself.
   *
   * @param {string} event The name of the event.
   * @param {Function} handler The function to handle the event.
   *
   * @deprecated
   */
  one: function one(event, handler) {
    (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__.fireDeprecationWarning)(deprecatedNotice, deprecationIssueId);

    var wrapper = function wrapper() {
      handler.apply(this, arguments);
      this.off(event, wrapper);
    };

    this.getHandlers(event).push(wrapper);
  },

  /**
   * Unregister an event handler.
   *
   * @param {string} event The name of the event.
   * @param {Function} handler The function that handles the event.
   *
   * @deprecated
   */
  off: function off(event, handler) {
    (0,_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_0__.fireDeprecationWarning)(deprecatedNotice, deprecationIssueId);
    var handlers = this.getHandlers(event);
    var index = handlers.indexOf(handler);

    if (index !== -1) {
      handlers.splice(index, 1);
    }
  }
});

/***/ }),

/***/ "./src/common/utils/extract.ts":
/*!*************************************!*\
  !*** ./src/common/utils/extract.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ extract)
/* harmony export */ });
/**
 * The `extract` utility deletes a property from an object and returns its
 * value.
 *
 * @param object The object that owns the property
 * @param property The name of the property to extract
 * @return The value of the property
 */
function extract(object, property) {
  var value = object[property];
  delete object[property];
  return value;
}

/***/ }),

/***/ "./src/common/utils/extractText.ts":
/*!*****************************************!*\
  !*** ./src/common/utils/extractText.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ extractText)
/* harmony export */ });
/**
 * Extract the text nodes from a virtual element.
 */
function extractText(vdom) {
  if (vdom instanceof Array) {
    return vdom.map(function (element) {
      return extractText(element);
    }).join('');
  } else if (typeof vdom === 'object' && vdom !== null) {
    return vdom.children ? extractText(vdom.children) : String(vdom.text);
  } else {
    return String(vdom);
  }
}

/***/ }),

/***/ "./src/common/utils/focusTrap.ts":
/*!***************************************!*\
  !*** ./src/common/utils/focusTrap.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFocusTrap": () => (/* binding */ createFocusTrap)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var focus_trap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! focus-trap */ "./node_modules/focus-trap/dist/focus-trap.esm.js");


/**
 * Creates a focus trap for the given element with the given options.
 * 
 * This function applies some default options that are different to the library.
 * Your own options still override these custom defaults:
 * 
 * ```json
 * {
     escapeDeactivates: false,
 * }
 * ```
 * 
 * @param element The element to be the focus trap, or a selector that will be used to find the element.
 * 
 * @see https://github.com/focus-trap/focus-trap#readme - Library documentation
 */

function createFocusTrap() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  args[1] = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    escapeDeactivates: false
  }, args[1]);
  return focus_trap__WEBPACK_IMPORTED_MODULE_1__.createFocusTrap.apply(void 0, args);
}




/***/ }),

/***/ "./src/common/utils/formatNumber.ts":
/*!******************************************!*\
  !*** ./src/common/utils/formatNumber.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ formatNumber)
/* harmony export */ });
/* harmony import */ var _common_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/app */ "./src/common/app.ts");

/**
 * The `formatNumber` utility localizes a number into a string with the
 * appropriate punctuation based on the provided locale otherwise will default to the users locale.
 *
 * @example
 * formatNumber(1234);
 * // 1,234
 */

function formatNumber(number, locale) {
  if (locale === void 0) {
    locale = _common_app__WEBPACK_IMPORTED_MODULE_0__["default"].data.locale;
  }

  return new Intl.NumberFormat(locale).format(number);
}

/***/ }),

/***/ "./src/common/utils/humanTime.ts":
/*!***************************************!*\
  !*** ./src/common/utils/humanTime.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ humanTime)
/* harmony export */ });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js");
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);

/**
 * The `humanTime` utility converts a date to a localized, human-readable time-
 * ago string.
 */

function humanTime(time) {
  var d = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time);
  var now = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(); // To prevent showing things like "in a few seconds" due to small offsets
  // between client and server time, we always reset future dates to the
  // current time. This will result in "just now" being shown instead.

  if (d.isAfter(now)) {
    d = now;
  }

  var day = 864e5;
  var diff = d.diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()());
  var ago; // If this date was more than a month ago, we'll show the name of the month
  // in the string. If it wasn't this year, we'll show the year as well.

  if (diff < -30 * day) {
    if (d.year() === dayjs__WEBPACK_IMPORTED_MODULE_0___default()().year()) {
      ago = d.format('D MMM');
    } else {
      ago = d.format('ll');
    }
  } else {
    ago = d.fromNow();
  }

  return ago;
}

/***/ }),

/***/ "./src/common/utils/insertText.ts":
/*!****************************************!*\
  !*** ./src/common/utils/insertText.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ insertText)
/* harmony export */ });
/*
 * Original Copyright GitHub, Inc. Licensed under the MIT License.
 * See license text at https://github.com/github/markdown-toolbar-element/blob/master/LICENSE.
 */
var canInsertText = null;
function insertText(textarea, _ref) {
  var text = _ref.text,
      selectionStart = _ref.selectionStart,
      selectionEnd = _ref.selectionEnd;
  var originalSelectionStart = textarea.selectionStart;
  var before = textarea.value.slice(0, originalSelectionStart);
  var after = textarea.value.slice(textarea.selectionEnd);

  if (canInsertText === null || canInsertText === true) {
    textarea.contentEditable = 'true';

    try {
      canInsertText = document.execCommand('insertText', false, text);
    } catch (error) {
      canInsertText = false;
    }

    textarea.contentEditable = 'false';
  }

  if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {
    canInsertText = false;
  }

  if (!canInsertText) {
    textarea.value = before + text + after;
    textarea.dispatchEvent(new CustomEvent('input', {
      bubbles: true,
      cancelable: true
    }));
  }

  if (selectionStart != null && selectionEnd != null) {
    textarea.setSelectionRange(selectionStart, selectionEnd);
  } else {
    textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);
  }
}

/***/ }),

/***/ "./src/common/utils/isObject.ts":
/*!**************************************!*\
  !*** ./src/common/utils/isObject.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isObject)
/* harmony export */ });
/**
 * Returns if the passed value is an object.
 *
 * In this context, "object" refers to **any non-primitive value**, including
 * arrays, function, maps, dates, and more.
 *
 * @example
 * isObject({}); // true
 * @example
 * isObject([]); // true
 * @example
 * isObject(function () {}); // true
 * @example
 * isObject(Object(1)); // true
 * @example
 * isObject(null); // false
 * @example
 * isObject(1); // false
 * @example
 * isObject("hello world"); // false
 *
 * @see https://github.com/jashkenas/underscore/blob/943977e34e2279503528a71ddcc2dd5f96483945/underscore.js#L87-L91
 */
function isObject(obj) {
  var type = typeof obj;
  return type === 'function' || type === 'object' && !!obj;
}

/***/ }),

/***/ "./src/common/utils/liveHumanTimes.ts":
/*!********************************************!*\
  !*** ./src/common/utils/liveHumanTimes.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ liveHumanTimes)
/* harmony export */ });
/* harmony import */ var _humanTime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./humanTime */ "./src/common/utils/humanTime.ts");


function updateHumanTimes() {
  $('[data-humantime]').each(function () {
    var $this = $(this);
    var ago = (0,_humanTime__WEBPACK_IMPORTED_MODULE_0__["default"])($this.attr('datetime'));
    $this.html(ago);
  });
}
/**
 * The `liveHumanTimes` initializer sets up a loop every 1 second to update
 * timestamps rendered with the `humanTime` helper.
 */


function liveHumanTimes() {
  setInterval(updateHumanTimes, 10000);
}

/***/ }),

/***/ "./src/common/utils/mapRoutes.ts":
/*!***************************************!*\
  !*** ./src/common/utils/mapRoutes.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mapRoutes)
/* harmony export */ });
/* harmony import */ var _resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../resolvers/DefaultResolver */ "./src/common/resolvers/DefaultResolver.ts");

/**
 * The `mapRoutes` utility converts a map of named application routes into a
 * format that can be understood by Mithril, and wraps them in route resolvers
 * to provide each route with the current route name.
 *
 * @see https://mithril.js.org/route.html#signature
 */

function mapRoutes(routes, basePath) {
  if (basePath === void 0) {
    basePath = '';
  }

  var map = {};

  for (var routeName in routes) {
    var route = routes[routeName];

    if ('resolver' in route) {
      map[basePath + route.path] = route.resolver;
    } else if ('component' in route) {
      var resolverClass = 'resolverClass' in route ? route.resolverClass : _resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_0__["default"];
      map[basePath + route.path] = new resolverClass(route.component, routeName);
    } else {
      throw new Error("Either a resolver or a component must be provided for the route [" + routeName + "]");
    }
  }

  return map;
}

/***/ }),

/***/ "./src/common/utils/mixin.js":
/*!***********************************!*\
  !*** ./src/common/utils/mixin.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mixin)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");


/**
 * The `mixin` utility assigns the properties of a set of 'mixin' objects to
 * the prototype of a parent object.
 *
 * @example
 * class MyClass extends mixin(ExistingClass, evented, etc) {}
 *
 * @param {object} Parent The class to extend the new class from.
 * @param {Record<string, any>[]} mixins The objects to mix in.
 * @return {object} A new class that extends Parent and contains the mixins.
 */
function mixin(Parent) {
  var Mixed = /*#__PURE__*/function (_Parent) {
    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Mixed, _Parent);

    function Mixed() {
      return _Parent.apply(this, arguments) || this;
    }

    return Mixed;
  }(Parent);

  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    mixins[_key - 1] = arguments[_key];
  }

  mixins.forEach(function (object) {
    Object.assign(Mixed.prototype, object);
  });
  return Mixed;
}

/***/ }),

/***/ "./src/common/utils/patchMithril.js":
/*!******************************************!*\
  !*** ./src/common/utils/patchMithril.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ patchMithril)
/* harmony export */ });
/* harmony import */ var _bidi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bidi */ "./src/common/utils/bidi.js");

function patchMithril(global) {
  var defaultMithril = global.m;

  var modifiedMithril = function modifiedMithril(comp) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var node = defaultMithril.apply(this, arguments);
    if (!node.attrs) node.attrs = {}; // Allows the use of the bidi attr.

    if (node.attrs.bidi) {
      (0,_bidi__WEBPACK_IMPORTED_MODULE_0__["default"])(node, node.attrs.bidi);
    }

    return node;
  };

  Object.keys(defaultMithril).forEach(function (key) {
    return modifiedMithril[key] = defaultMithril[key];
  });
  global.m = modifiedMithril;
}

/***/ }),

/***/ "./src/common/utils/proxifyCompat.ts":
/*!*******************************************!*\
  !*** ./src/common/utils/proxifyCompat.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ proxifyCompat)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_taggedTemplateLiteralLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/taggedTemplateLiteralLoose */ "./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js");


var _templateObject;

function proxifyCompat(compat, namespace) {
  // regex to replace common/ and NAMESPACE/ for core & core extensions
  // and remove .js, .ts and .tsx extensions
  // e.g. admin/utils/extract --> utils/extract
  // e.g. tags/common/utils/sortTags --> tags/utils/sortTags
  var regex = new RegExp(String.raw(_templateObject || (_templateObject = (0,_babel_runtime_helpers_esm_taggedTemplateLiteralLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(["(w+/)?(", "|common)/"], ["(\\w+\\/)?(", "|common)\\/"])), namespace));
  var fileExt = /(\.js|\.tsx?)$/;
  return new Proxy(compat, {
    get: function get(obj, prop) {
      return obj[prop] || obj[prop.replace(regex, '$1').replace(fileExt, '')];
    }
  });
}

/***/ }),

/***/ "./src/common/utils/setRouteWithForcedRefresh.ts":
/*!*******************************************************!*\
  !*** ./src/common/utils/setRouteWithForcedRefresh.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setRouteWithForcedRefresh)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");


/**
 * Mithril 2 does not completely rerender the page if a route change leads to the same route
 * (or the same component handling a different route). This util calls m.route.set, forcing a reonit.
 *
 * @see https://mithril.js.org/route.html#key-parameter
 */
function setRouteWithForcedRefresh(route, params, options) {
  if (params === void 0) {
    params = null;
  }

  if (options === void 0) {
    options = {};
  }

  var newOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options);

  newOptions.state = newOptions.state || {};
  newOptions.state.key = Date.now();
  m.route.set(route, params, newOptions);
}

/***/ }),

/***/ "./src/common/utils/string.ts":
/*!************************************!*\
  !*** ./src/common/utils/string.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "truncate": () => (/* binding */ truncate),
/* harmony export */   "slug": () => (/* binding */ slug),
/* harmony export */   "getPlainContent": () => (/* binding */ getPlainContent),
/* harmony export */   "ucfirst": () => (/* binding */ ucfirst)
/* harmony export */ });
/**
 * Truncate a string to the given length, appending ellipses if necessary.
 */
function truncate(string, length, start) {
  if (start === void 0) {
    start = 0;
  }

  return (start > 0 ? '...' : '') + string.substring(start, start + length) + (string.length > start + length ? '...' : '');
}
/**
 * Create a slug out of the given string. Non-alphanumeric characters are
 * converted to hyphens.
 *
 * NOTE: This method does not use the comparably sophisticated transliteration
 * mechanism that is employed in the backend. Therefore, it should only be used
 * to *suggest* slugs that can be overridden by the user.
 */

function slug(string) {
  return string.toLowerCase().replace(/[^a-z0-9]/gi, '-').replace(/-+/g, '-').replace(/-$|^-/g, '');
}
/**
 * Strip HTML tags and quotes out of the given string, replacing them with
 * meaningful punctuation.
 */

function getPlainContent(string) {
  var html = string.replace(/(<\/p>|<br>)/g, '$1 &nbsp;').replace(/<img\b[^>]*>/gi, ' ');
  var element = new DOMParser().parseFromString(html, 'text/html').documentElement;
  getPlainContent.removeSelectors.forEach(function (selector) {
    var el = element.querySelectorAll(selector);
    el.forEach(function (e) {
      e.remove();
    });
  });
  return element.innerText.replace(/\s+/g, ' ').trim();
}
/**
 * An array of DOM selectors to remove when getting plain content.
 *
 * @type {Array}
 */

getPlainContent.removeSelectors = ['blockquote', 'script'];
/**
 * Make a string's first character uppercase.
 */

function ucfirst(string) {
  return string.substr(0, 1).toUpperCase() + string.substr(1);
}

/***/ }),

/***/ "./src/common/utils/stringToColor.ts":
/*!*******************************************!*\
  !*** ./src/common/utils/stringToColor.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ stringToColor)
/* harmony export */ });
function hsvToRgb(h, s, v) {
  var r;
  var g;
  var b;
  var i = Math.floor(h * 6);
  var f = h * 6 - i;
  var p = v * (1 - s);
  var q = v * (1 - f * s);
  var t = v * (1 - (1 - f) * s);

  switch (i % 6) {
    case 0:
      r = v;
      g = t;
      b = p;
      break;

    case 1:
      r = q;
      g = v;
      b = p;
      break;

    case 2:
      r = p;
      g = v;
      b = t;
      break;

    case 3:
      r = p;
      g = q;
      b = v;
      break;

    case 4:
      r = t;
      g = p;
      b = v;
      break;

    case 5:
      r = v;
      g = p;
      b = q;
      break;
  }

  return {
    r: Math.floor(r * 255),
    g: Math.floor(g * 255),
    b: Math.floor(b * 255)
  };
}
/**
 * Convert the given string to a unique color.
 */


function stringToColor(string) {
  var num = 0; // Convert the username into a number based on the ASCII value of each
  // character.

  for (var i = 0; i < string.length; i++) {
    num += string.charCodeAt(i);
  } // Construct a color using the remainder of that number divided by 360, and
  // some predefined saturation and value values.


  var hue = num % 360;
  var rgb = hsvToRgb(hue / 360, 0.3, 0.9);
  return '' + rgb.r.toString(16) + rgb.g.toString(16) + rgb.b.toString(16);
}

/***/ }),

/***/ "./src/common/utils/styleSelectedText.ts":
/*!***********************************************!*\
  !*** ./src/common/utils/styleSelectedText.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ styleSelectedText)
/* harmony export */ });
/* harmony import */ var _insertText__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./insertText */ "./src/common/utils/insertText.ts");
/*
 * Original Copyright GitHub, Inc. Licensed under the MIT License.
 * See license text at https://github.com/github/markdown-toolbar-element/blob/master/LICENSE.
 */

var defaults = {
  prefix: '',
  suffix: '',
  blockPrefix: '',
  blockSuffix: '',
  multiline: false,
  replaceNext: '',
  prefixSpace: false,
  scanFor: '',
  surroundWithNewlines: false,
  orderedList: false,
  unorderedList: false,
  trimFirst: false
};
function styleSelectedText(textarea, styleArgs) {
  // Next 2 lines are added
  textarea.focus();
  styleArgs = Object.assign({}, defaults, styleArgs); // Prev 2 lines are added

  var text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);
  var result;

  if (styleArgs.orderedList || styleArgs.unorderedList) {
    result = listStyle(textarea, styleArgs);
  } else if (styleArgs.multiline && isMultipleLines(text)) {
    result = multilineStyle(textarea, styleArgs);
  } else {
    result = blockStyle(textarea, styleArgs);
  }

  (0,_insertText__WEBPACK_IMPORTED_MODULE_0__["default"])(textarea, result);
}

function isMultipleLines(string) {
  return string.trim().split('\n').length > 1;
}

function repeat(string, n) {
  return Array(n + 1).join(string);
}

function wordSelectionStart(text, i) {
  var index = i;

  while (text[index] && text[index - 1] != null && !text[index - 1].match(/\s/)) {
    index--;
  }

  return index;
}

function wordSelectionEnd(text, i, multiline) {
  var index = i;
  var breakpoint = multiline ? /\n/ : /\s/;

  while (text[index] && !text[index].match(breakpoint)) {
    index++;
  }

  return index;
}

function expandSelectionToLine(textarea) {
  var lines = textarea.value.split('\n');
  var counter = 0;

  for (var index = 0; index < lines.length; index++) {
    var lineLength = lines[index].length + 1;

    if (textarea.selectionStart >= counter && textarea.selectionStart < counter + lineLength) {
      textarea.selectionStart = counter;
    }

    if (textarea.selectionEnd >= counter && textarea.selectionEnd < counter + lineLength) {
      textarea.selectionEnd = counter + lineLength - 1;
    }

    counter += lineLength;
  }
}

function expandSelectedText(textarea, prefixToUse, suffixToUse, multiline) {
  if (multiline === void 0) {
    multiline = false;
  }

  if (textarea.selectionStart === textarea.selectionEnd) {
    textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);
    textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);
  } else {
    var expandedSelectionStart = textarea.selectionStart - prefixToUse.length;
    var expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;
    var beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;
    var endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;

    if (beginsWithPrefix && endsWithSuffix) {
      textarea.selectionStart = expandedSelectionStart;
      textarea.selectionEnd = expandedSelectionEnd;
    }
  }

  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);
}

function newlinesToSurroundSelectedText(textarea) {
  var beforeSelection = textarea.value.slice(0, textarea.selectionStart);
  var afterSelection = textarea.value.slice(textarea.selectionEnd);
  var breaksBefore = beforeSelection.match(/\n*$/);
  var breaksAfter = afterSelection.match(/^\n*/);
  var newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;
  var newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;
  var newlinesToAppend;
  var newlinesToPrepend;

  if (beforeSelection.match(/\S/) && newlinesBeforeSelection < 2) {
    newlinesToAppend = repeat('\n', 2 - newlinesBeforeSelection);
  }

  if (afterSelection.match(/\S/) && newlinesAfterSelection < 2) {
    newlinesToPrepend = repeat('\n', 2 - newlinesAfterSelection);
  }

  if (newlinesToAppend == null) {
    newlinesToAppend = '';
  }

  if (newlinesToPrepend == null) {
    newlinesToPrepend = '';
  }

  return {
    newlinesToAppend: newlinesToAppend,
    newlinesToPrepend: newlinesToPrepend
  };
}

function blockStyle(textarea, arg) {
  var newlinesToAppend;
  var newlinesToPrepend;
  var prefix = arg.prefix,
      suffix = arg.suffix,
      blockPrefix = arg.blockPrefix,
      blockSuffix = arg.blockSuffix,
      replaceNext = arg.replaceNext,
      prefixSpace = arg.prefixSpace,
      scanFor = arg.scanFor,
      surroundWithNewlines = arg.surroundWithNewlines;
  var originalSelectionStart = textarea.selectionStart;
  var originalSelectionEnd = textarea.selectionEnd;
  var selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);
  var prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? blockPrefix + "\n" : prefix; // CHANGED

  var suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? "\n" + blockSuffix : prefixToUse === prefix ? suffix : ''; // END CHANGED

  if (prefixSpace) {
    var beforeSelection = textarea.value[textarea.selectionStart - 1];

    if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\s/)) {
      prefixToUse = " " + prefixToUse;
    }
  }

  selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);
  var selectionStart = textarea.selectionStart;
  var selectionEnd = textarea.selectionEnd;
  var hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;

  if (surroundWithNewlines) {
    var ref = newlinesToSurroundSelectedText(textarea);
    newlinesToAppend = ref.newlinesToAppend;
    newlinesToPrepend = ref.newlinesToPrepend;
    prefixToUse = newlinesToAppend + prefix;
    suffixToUse += newlinesToPrepend;
  }

  if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {
    var replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);

    if (originalSelectionStart === originalSelectionEnd) {
      var position = originalSelectionStart - prefixToUse.length;
      position = Math.max(position, selectionStart);
      position = Math.min(position, selectionStart + replacementText.length);
      selectionStart = selectionEnd = position;
    } else {
      selectionEnd = selectionStart + replacementText.length;
    }

    return {
      text: replacementText,
      selectionStart: selectionStart,
      selectionEnd: selectionEnd
    };
  } else if (!hasReplaceNext) {
    var _replacementText = prefixToUse + selectedText + suffixToUse;

    selectionStart = originalSelectionStart + prefixToUse.length;
    selectionEnd = originalSelectionEnd + prefixToUse.length;
    var whitespaceEdges = selectedText.match(/^\s*|\s*$/g);

    if (arg.trimFirst && whitespaceEdges) {
      var leadingWhitespace = whitespaceEdges[0] || '';
      var trailingWhitespace = whitespaceEdges[1] || '';
      _replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;
      selectionStart += leadingWhitespace.length;
      selectionEnd -= trailingWhitespace.length;
    }

    return {
      text: _replacementText,
      selectionStart: selectionStart,
      selectionEnd: selectionEnd
    };
  } else if (scanFor.length > 0 && selectedText.match(scanFor)) {
    suffixToUse = suffixToUse.replace(replaceNext, selectedText);

    var _replacementText2 = prefixToUse + suffixToUse;

    selectionStart = selectionEnd = selectionStart + prefixToUse.length;
    return {
      text: _replacementText2,
      selectionStart: selectionStart,
      selectionEnd: selectionEnd
    };
  } else {
    var _replacementText3 = prefixToUse + selectedText + suffixToUse;

    selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);
    selectionEnd = selectionStart + replaceNext.length;
    return {
      text: _replacementText3,
      selectionStart: selectionStart,
      selectionEnd: selectionEnd
    };
  }
}

function multilineStyle(textarea, arg) {
  var prefix = arg.prefix,
      suffix = arg.suffix,
      blockPrefix = arg.blockPrefix,
      blockSuffix = arg.blockSuffix,
      surroundWithNewlines = arg.surroundWithNewlines;
  var text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);
  var selectionStart = textarea.selectionStart;
  var selectionEnd = textarea.selectionEnd;
  var lines = text.split('\n'); // CHANGED

  var prefixToUse = blockPrefix.length > 0 ? blockPrefix : prefix;
  var suffixToUse = blockSuffix.length > 0 ? blockSuffix : prefixToUse == prefix ? suffix : '';
  var undoStyle = lines.every(function (line) {
    return line.startsWith(prefixToUse) && line.endsWith(suffixToUse);
  }); // END CHANGED

  if (undoStyle) {
    text = lines.map(function (line) {
      return line.slice(prefixToUse.length, line.length - suffixToUse.length);
    }).join('\n');
    selectionEnd = selectionStart + text.length;
  } else {
    // CHANGED
    text = lines.map(function (line) {
      return prefixToUse + line + suffixToUse;
    }).join('\n');

    if (surroundWithNewlines || suffixToUse === '') {
      // END CHANGED
      var _newlinesToSurroundSe = newlinesToSurroundSelectedText(textarea),
          newlinesToAppend = _newlinesToSurroundSe.newlinesToAppend,
          newlinesToPrepend = _newlinesToSurroundSe.newlinesToPrepend;

      selectionStart += newlinesToAppend.length;
      selectionEnd = selectionStart + text.length;
      text = newlinesToAppend + text + newlinesToPrepend;
    }
  }

  return {
    text: text,
    selectionStart: selectionStart,
    selectionEnd: selectionEnd
  };
}

function undoOrderedListStyle(text) {
  var lines = text.split('\n');
  var orderedListRegex = /^\d+\.\s+/;
  var shouldUndoOrderedList = lines.every(function (line) {
    return orderedListRegex.test(line);
  });
  var result = lines;

  if (shouldUndoOrderedList) {
    result = lines.map(function (line) {
      return line.replace(orderedListRegex, '');
    });
  }

  return {
    text: result.join('\n'),
    processed: shouldUndoOrderedList
  };
}

function undoUnorderedListStyle(text) {
  var lines = text.split('\n');
  var unorderedListPrefix = '- ';
  var shouldUndoUnorderedList = lines.every(function (line) {
    return line.startsWith(unorderedListPrefix);
  });
  var result = lines;

  if (shouldUndoUnorderedList) {
    result = lines.map(function (line) {
      return line.slice(unorderedListPrefix.length, line.length);
    });
  }

  return {
    text: result.join('\n'),
    processed: shouldUndoUnorderedList
  };
}

function makePrefix(index, unorderedList) {
  if (unorderedList) {
    return '- ';
  } else {
    return index + 1 + ". ";
  }
}

function clearExistingListStyle(style, selectedText) {
  var undoResultOpositeList;
  var undoResult;
  var pristineText;

  if (style.orderedList) {
    undoResult = undoOrderedListStyle(selectedText);
    undoResultOpositeList = undoUnorderedListStyle(undoResult.text);
    pristineText = undoResultOpositeList.text;
  } else {
    undoResult = undoUnorderedListStyle(selectedText);
    undoResultOpositeList = undoOrderedListStyle(undoResult.text);
    pristineText = undoResultOpositeList.text;
  }

  return [undoResult, undoResultOpositeList, pristineText];
}

function listStyle(textarea, style) {
  var noInitialSelection = textarea.selectionStart === textarea.selectionEnd;
  var selectionStart = textarea.selectionStart;
  var selectionEnd = textarea.selectionEnd; // Select whole line

  expandSelectionToLine(textarea);
  var selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd); // If the user intent was to do an undo, we will stop after this.
  // Otherwise, we will still undo to other list type to prevent list stacking

  var _clearExistingListSty = clearExistingListStyle(style, selectedText),
      undoResult = _clearExistingListSty[0],
      undoResultOpositeList = _clearExistingListSty[1],
      pristineText = _clearExistingListSty[2];

  var prefixedLines = pristineText.split('\n').map(function (value, index) {
    return "" + makePrefix(index, style.unorderedList) + value;
  });
  var totalPrefixLength = prefixedLines.reduce(function (previousValue, _currentValue, currentIndex) {
    return previousValue + makePrefix(currentIndex, style.unorderedList).length;
  }, 0);
  var totalPrefixLengthOpositeList = prefixedLines.reduce(function (previousValue, _currentValue, currentIndex) {
    return previousValue + makePrefix(currentIndex, !style.unorderedList).length;
  }, 0);

  if (undoResult.processed) {
    if (noInitialSelection) {
      selectionStart = Math.max(selectionStart - makePrefix(0, style.unorderedList).length, 0);
      selectionEnd = selectionStart;
    } else {
      selectionStart = textarea.selectionStart;
      selectionEnd = textarea.selectionEnd - totalPrefixLength;
    }

    return {
      text: pristineText,
      selectionStart: selectionStart,
      selectionEnd: selectionEnd
    };
  }

  var _newlinesToSurroundSe2 = newlinesToSurroundSelectedText(textarea),
      newlinesToAppend = _newlinesToSurroundSe2.newlinesToAppend,
      newlinesToPrepend = _newlinesToSurroundSe2.newlinesToPrepend;

  var text = newlinesToAppend + prefixedLines.join('\n') + newlinesToPrepend;

  if (noInitialSelection) {
    selectionStart = Math.max(selectionStart + makePrefix(0, style.unorderedList).length + newlinesToAppend.length, 0);
    selectionEnd = selectionStart;
  } else {
    if (undoResultOpositeList.processed) {
      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);
      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength - totalPrefixLengthOpositeList;
    } else {
      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);
      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength;
    }
  }

  return {
    text: text,
    selectionStart: selectionStart,
    selectionEnd: selectionEnd
  };
}

/***/ }),

/***/ "./src/common/utils/subclassOf.js":
/*!****************************************!*\
  !*** ./src/common/utils/subclassOf.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ subclassOf)
/* harmony export */ });
/**
 * Check if class A is the same as or a subclass of class B.
 */
function subclassOf(A, B) {
  return A && (A === B || A.prototype instanceof B);
}

/***/ }),

/***/ "./src/common/utils/throttleDebounce.ts":
/*!**********************************************!*\
  !*** ./src/common/utils/throttleDebounce.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "throttle": () => (/* reexport safe */ throttle_debounce__WEBPACK_IMPORTED_MODULE_0__.throttle),
/* harmony export */   "debounce": () => (/* reexport safe */ throttle_debounce__WEBPACK_IMPORTED_MODULE_0__.debounce)
/* harmony export */ });
/* harmony import */ var throttle_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! throttle-debounce */ "./node_modules/throttle-debounce/esm/index.js");
// Re-exports `throttle-debounce` to be used in `compat.js`.


/***/ }),

/***/ "./src/common/utils/withAttr.ts":
/*!**************************************!*\
  !*** ./src/common/utils/withAttr.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * An event handler factory that makes it simpler to implement data binding
 * for component event listeners.
 *
 * The handler created by this factory passes the DOM element's attribute
 * identified by the first argument to the callback (usually a bidirectional
 * Mithril stream: https://mithril.js.org/stream.html#bidirectional-bindings).
 *
 * Replaces m.withAttr for Mithril 2.0.
 * @see https://mithril.js.org/archive/v0.2.5/mithril.withAttr.html
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (key, cb) {
  return function () {
    cb(this.getAttribute(key) || this[key]);
  };
});

/***/ }),

/***/ "./src/forum/ForumApplication.ts":
/*!***************************************!*\
  !*** ./src/forum/ForumApplication.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ForumApplication)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _utils_History__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/History */ "./src/forum/utils/History.ts");
/* harmony import */ var _utils_Pane__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/Pane */ "./src/forum/utils/Pane.js");
/* harmony import */ var _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _components_SignUpModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/SignUpModal */ "./src/forum/components/SignUpModal.tsx");
/* harmony import */ var _components_HeaderPrimary__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/HeaderPrimary */ "./src/forum/components/HeaderPrimary.js");
/* harmony import */ var _components_HeaderSecondary__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/HeaderSecondary */ "./src/forum/components/HeaderSecondary.js");
/* harmony import */ var _components_Composer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/Composer */ "./src/forum/components/Composer.js");
/* harmony import */ var _components_DiscussionRenamedNotification__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/DiscussionRenamedNotification */ "./src/forum/components/DiscussionRenamedNotification.js");
/* harmony import */ var _components_CommentPost__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/CommentPost */ "./src/forum/components/CommentPost.js");
/* harmony import */ var _components_DiscussionRenamedPost__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/DiscussionRenamedPost */ "./src/forum/components/DiscussionRenamedPost.js");
/* harmony import */ var _routes__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./routes */ "./src/forum/routes.ts");
/* harmony import */ var _utils_alertEmailConfirmation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/alertEmailConfirmation */ "./src/forum/utils/alertEmailConfirmation.js");
/* harmony import */ var _common_Application__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../common/Application */ "./src/common/Application.tsx");
/* harmony import */ var _common_components_Navigation__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/components/Navigation */ "./src/common/components/Navigation.js");
/* harmony import */ var _states_NotificationListState__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./states/NotificationListState */ "./src/forum/states/NotificationListState.ts");
/* harmony import */ var _states_GlobalSearchState__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./states/GlobalSearchState */ "./src/forum/states/GlobalSearchState.ts");
/* harmony import */ var _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./states/DiscussionListState */ "./src/forum/states/DiscussionListState.ts");
/* harmony import */ var _states_ComposerState__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./states/ComposerState */ "./src/forum/states/ComposerState.js");
/* harmony import */ var _utils_isSafariMobile__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/isSafariMobile */ "./src/forum/utils/isSafariMobile.ts");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../common/utils/extractText */ "./src/common/utils/extractText.ts");
























var ForumApplication = /*#__PURE__*/function (_Application) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ForumApplication, _Application);

  /**
   * A map of notification types to their components.
   */

  /**
   * A map of post types to their components.
   */

  /**
   * An object which controls the state of the page's side pane.
   */

  /**
   * The app's history stack, which keeps track of which routes the user visits
   * so that they can easily navigate back to the previous route.
   */

  /**
   * An object which controls the state of the user's notifications.
   */

  /**
   * An object which stores previously searched queries and provides convenient
   * tools for retrieving and managing search values.
   */

  /**
   * An object which controls the state of the composer.
   */

  /**
   * An object which controls the state of the cached discussion list, which
   * is used in the index page and the slideout pane.
   */
  function ForumApplication() {
    var _this;

    _this = _Application.call(this) || this;
    _this.notificationComponents = {
      discussionRenamed: _components_DiscussionRenamedNotification__WEBPACK_IMPORTED_MODULE_10__["default"]
    };
    _this.postComponents = {
      comment: _components_CommentPost__WEBPACK_IMPORTED_MODULE_11__["default"],
      discussionRenamed: _components_DiscussionRenamedPost__WEBPACK_IMPORTED_MODULE_12__["default"]
    };
    _this.pane = null;
    _this.history = new _utils_History__WEBPACK_IMPORTED_MODULE_3__["default"]();
    _this.notifications = new _states_NotificationListState__WEBPACK_IMPORTED_MODULE_17__["default"]();
    _this.search = new _states_GlobalSearchState__WEBPACK_IMPORTED_MODULE_18__["default"]();
    _this.composer = new _states_ComposerState__WEBPACK_IMPORTED_MODULE_20__["default"]();
    _this.discussions = new _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_19__["default"]({});
    _this.route = void 0;
    (0,_routes__WEBPACK_IMPORTED_MODULE_13__["default"])((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this));
    _this.route = Object.assign(Object.getPrototypeOf(Object.getPrototypeOf((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this))).route.bind((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this)), (0,_routes__WEBPACK_IMPORTED_MODULE_13__.makeRouteHelpers)((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this)));
    return _this;
  }
  /**
   * @inheritdoc
   */


  var _proto = ForumApplication.prototype;

  _proto.mount = function mount() {
    var _this2 = this;

    // Get the configured default route and update that route's path to be '/'.
    // Push the homepage as the first route, so that the user will always be
    // able to click on the 'back' button to go home, regardless of which page
    // they started on.
    var defaultRoute = this.forum.attribute('defaultRoute');
    var defaultAction = 'index';

    for (var i in this.routes) {
      if (this.routes[i].path === defaultRoute) defaultAction = i;
    }

    this.routes[defaultAction].path = '/';
    this.history.push(defaultAction, (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_22__["default"])(this.translator.trans('core.forum.header.back_to_index_tooltip')), '/');
    this.pane = new _utils_Pane__WEBPACK_IMPORTED_MODULE_4__["default"](document.getElementById('app'));
    m.route.prefix = '';

    _Application.prototype.mount.call(this, this.forum.attribute('basePath')); // We mount navigation and header components after the page, so components
    // like the back button can access the updated state when rendering.


    m.mount(document.getElementById('app-navigation'), {
      view: function view() {
        return _common_components_Navigation__WEBPACK_IMPORTED_MODULE_16__["default"].component({
          className: 'App-backControl',
          drawer: true
        });
      }
    });
    m.mount(document.getElementById('header-navigation'), _common_components_Navigation__WEBPACK_IMPORTED_MODULE_16__["default"]);
    m.mount(document.getElementById('header-primary'), _components_HeaderPrimary__WEBPACK_IMPORTED_MODULE_7__["default"]);
    m.mount(document.getElementById('header-secondary'), _components_HeaderSecondary__WEBPACK_IMPORTED_MODULE_8__["default"]);
    m.mount(document.getElementById('composer'), {
      view: function view() {
        return _components_Composer__WEBPACK_IMPORTED_MODULE_9__["default"].component({
          state: _this2.composer
        });
      }
    });
    (0,_utils_alertEmailConfirmation__WEBPACK_IMPORTED_MODULE_14__["default"])(this); // Route the home link back home when clicked. We do not want it to register
    // if the user is opening it in a new tab, however.

    document.getElementById('home-link').addEventListener('click', function (e) {
      var _app$session$user;

      if (e.ctrlKey || e.metaKey || e.which === 2) return;
      e.preventDefault();
      _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].history.home(); // Reload the current user so that their unread notification count is refreshed.

      var userId = (_app$session$user = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user) == null ? void 0 : _app$session$user.id();

      if (userId) {
        _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].store.find('users', userId);
        m.redraw();
      }
    });

    if ((0,_utils_isSafariMobile__WEBPACK_IMPORTED_MODULE_21__["default"])()) {
      $(function () {
        $('.App').addClass('mobile-safari');
      });
    }
  }
  /**
   * Check whether or not the user is currently viewing a discussion.
   */
  ;

  _proto.viewingDiscussion = function viewingDiscussion(discussion) {
    return this.current.matches(_components_DiscussionPage__WEBPACK_IMPORTED_MODULE_5__["default"], {
      discussion: discussion
    });
  }
  /**
   * Callback for when an external authenticator (social login) action has
   * completed.
   *
   * If the payload indicates that the user has been logged in, then the page
   * will be reloaded. Otherwise, a SignUpModal will be opened, prefilled
   * with the provided details.
   */
  ;

  _proto.authenticationComplete = function authenticationComplete(payload) {
    if (payload.loggedIn) {
      window.location.reload();
    } else {
      this.modal.show(_components_SignUpModal__WEBPACK_IMPORTED_MODULE_6__["default"], payload);
    }
  };

  return ForumApplication;
}(_common_Application__WEBPACK_IMPORTED_MODULE_15__["default"]);



/***/ }),

/***/ "./src/forum/app.ts":
/*!**************************!*\
  !*** ./src/forum/app.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _ForumApplication__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ForumApplication */ "./src/forum/ForumApplication.ts");

var app = new _ForumApplication__WEBPACK_IMPORTED_MODULE_0__["default"](); // @ts-expect-error We need to do this for backwards compatibility purposes.

window.app = app;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);

/***/ }),

/***/ "./src/forum/compat.js":
/*!*****************************!*\
  !*** ./src/forum/compat.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _common_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/compat */ "./src/common/compat.js");
/* harmony import */ var _utils_PostControls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/PostControls */ "./src/forum/utils/PostControls.js");
/* harmony import */ var _utils_KeyboardNavigatable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/KeyboardNavigatable */ "./src/forum/utils/KeyboardNavigatable.ts");
/* harmony import */ var _utils_slidable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/slidable */ "./src/forum/utils/slidable.js");
/* harmony import */ var _utils_History__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/History */ "./src/forum/utils/History.ts");
/* harmony import */ var _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/DiscussionControls */ "./src/forum/utils/DiscussionControls.js");
/* harmony import */ var _utils_alertEmailConfirmation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/alertEmailConfirmation */ "./src/forum/utils/alertEmailConfirmation.js");
/* harmony import */ var _utils_UserControls__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/UserControls */ "./src/forum/utils/UserControls.js");
/* harmony import */ var _utils_Pane__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/Pane */ "./src/forum/utils/Pane.js");
/* harmony import */ var _states_ComposerState__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./states/ComposerState */ "./src/forum/states/ComposerState.js");
/* harmony import */ var _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./states/DiscussionListState */ "./src/forum/states/DiscussionListState.ts");
/* harmony import */ var _states_GlobalSearchState__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./states/GlobalSearchState */ "./src/forum/states/GlobalSearchState.ts");
/* harmony import */ var _states_NotificationListState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./states/NotificationListState */ "./src/forum/states/NotificationListState.ts");
/* harmony import */ var _states_PostStreamState__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./states/PostStreamState */ "./src/forum/states/PostStreamState.js");
/* harmony import */ var _states_SearchState__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./states/SearchState */ "./src/forum/states/SearchState.ts");
/* harmony import */ var _components_AffixedSidebar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/AffixedSidebar */ "./src/forum/components/AffixedSidebar.js");
/* harmony import */ var _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _components_DiscussionListPane__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/DiscussionListPane */ "./src/forum/components/DiscussionListPane.js");
/* harmony import */ var _components_LogInModal__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/LogInModal */ "./src/forum/components/LogInModal.tsx");
/* harmony import */ var _components_ComposerBody__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/ComposerBody */ "./src/forum/components/ComposerBody.js");
/* harmony import */ var _components_ForgotPasswordModal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/ForgotPasswordModal */ "./src/forum/components/ForgotPasswordModal.tsx");
/* harmony import */ var _components_Notification__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/Notification */ "./src/forum/components/Notification.js");
/* harmony import */ var _components_LogInButton__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/LogInButton */ "./src/forum/components/LogInButton.js");
/* harmony import */ var _components_DiscussionsUserPage__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/DiscussionsUserPage */ "./src/forum/components/DiscussionsUserPage.js");
/* harmony import */ var _components_Composer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/Composer */ "./src/forum/components/Composer.js");
/* harmony import */ var _components_SessionDropdown__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/SessionDropdown */ "./src/forum/components/SessionDropdown.js");
/* harmony import */ var _components_HeaderPrimary__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/HeaderPrimary */ "./src/forum/components/HeaderPrimary.js");
/* harmony import */ var _components_PostEdited__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/PostEdited */ "./src/forum/components/PostEdited.js");
/* harmony import */ var _components_PostStream__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/PostStream */ "./src/forum/components/PostStream.js");
/* harmony import */ var _components_ChangePasswordModal__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/ChangePasswordModal */ "./src/forum/components/ChangePasswordModal.js");
/* harmony import */ var _components_IndexPage__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/IndexPage */ "./src/forum/components/IndexPage.js");
/* harmony import */ var _components_DiscussionRenamedNotification__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/DiscussionRenamedNotification */ "./src/forum/components/DiscussionRenamedNotification.js");
/* harmony import */ var _components_DiscussionsSearchSource__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/DiscussionsSearchSource */ "./src/forum/components/DiscussionsSearchSource.tsx");
/* harmony import */ var _components_HeaderSecondary__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./components/HeaderSecondary */ "./src/forum/components/HeaderSecondary.js");
/* harmony import */ var _components_ComposerButton__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./components/ComposerButton */ "./src/forum/components/ComposerButton.js");
/* harmony import */ var _components_DiscussionList__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/DiscussionList */ "./src/forum/components/DiscussionList.js");
/* harmony import */ var _components_ReplyPlaceholder__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./components/ReplyPlaceholder */ "./src/forum/components/ReplyPlaceholder.js");
/* harmony import */ var _components_AvatarEditor__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./components/AvatarEditor */ "./src/forum/components/AvatarEditor.js");
/* harmony import */ var _components_Post__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./components/Post */ "./src/forum/components/Post.js");
/* harmony import */ var _components_SettingsPage__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./components/SettingsPage */ "./src/forum/components/SettingsPage.js");
/* harmony import */ var _components_TerminalPost__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./components/TerminalPost */ "./src/forum/components/TerminalPost.js");
/* harmony import */ var _components_ChangeEmailModal__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./components/ChangeEmailModal */ "./src/forum/components/ChangeEmailModal.js");
/* harmony import */ var _components_NotificationsDropdown__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./components/NotificationsDropdown */ "./src/forum/components/NotificationsDropdown.js");
/* harmony import */ var _components_UserPage__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./components/UserPage */ "./src/forum/components/UserPage.js");
/* harmony import */ var _components_PostUser__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./components/PostUser */ "./src/forum/components/PostUser.js");
/* harmony import */ var _components_UserCard__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./components/UserCard */ "./src/forum/components/UserCard.js");
/* harmony import */ var _components_UsersSearchSource__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./components/UsersSearchSource */ "./src/forum/components/UsersSearchSource.tsx");
/* harmony import */ var _components_NotificationGrid__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./components/NotificationGrid */ "./src/forum/components/NotificationGrid.js");
/* harmony import */ var _components_PostPreview__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./components/PostPreview */ "./src/forum/components/PostPreview.js");
/* harmony import */ var _components_EventPost__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./components/EventPost */ "./src/forum/components/EventPost.js");
/* harmony import */ var _components_DiscussionHero__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./components/DiscussionHero */ "./src/forum/components/DiscussionHero.js");
/* harmony import */ var _components_PostMeta__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./components/PostMeta */ "./src/forum/components/PostMeta.js");
/* harmony import */ var _components_DiscussionRenamedPost__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./components/DiscussionRenamedPost */ "./src/forum/components/DiscussionRenamedPost.js");
/* harmony import */ var _components_DiscussionComposer__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./components/DiscussionComposer */ "./src/forum/components/DiscussionComposer.js");
/* harmony import */ var _components_LogInButtons__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./components/LogInButtons */ "./src/forum/components/LogInButtons.js");
/* harmony import */ var _components_NotificationList__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./components/NotificationList */ "./src/forum/components/NotificationList.js");
/* harmony import */ var _components_WelcomeHero__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./components/WelcomeHero */ "./src/forum/components/WelcomeHero.tsx");
/* harmony import */ var _components_SignUpModal__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./components/SignUpModal */ "./src/forum/components/SignUpModal.tsx");
/* harmony import */ var _components_CommentPost__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./components/CommentPost */ "./src/forum/components/CommentPost.js");
/* harmony import */ var _components_ComposerPostPreview__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./components/ComposerPostPreview */ "./src/forum/components/ComposerPostPreview.js");
/* harmony import */ var _components_ReplyComposer__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./components/ReplyComposer */ "./src/forum/components/ReplyComposer.js");
/* harmony import */ var _components_NotificationsPage__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./components/NotificationsPage */ "./src/forum/components/NotificationsPage.js");
/* harmony import */ var _components_PostStreamScrubber__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./components/PostStreamScrubber */ "./src/forum/components/PostStreamScrubber.js");
/* harmony import */ var _components_EditPostComposer__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./components/EditPostComposer */ "./src/forum/components/EditPostComposer.js");
/* harmony import */ var _components_RenameDiscussionModal__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./components/RenameDiscussionModal */ "./src/forum/components/RenameDiscussionModal.js");
/* harmony import */ var _components_Search__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./components/Search */ "./src/forum/components/Search.tsx");
/* harmony import */ var _components_DiscussionListItem__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./components/DiscussionListItem */ "./src/forum/components/DiscussionListItem.js");
/* harmony import */ var _components_LoadingPost__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./components/LoadingPost */ "./src/forum/components/LoadingPost.js");
/* harmony import */ var _components_PostsUserPage__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./components/PostsUserPage */ "./src/forum/components/PostsUserPage.js");
/* harmony import */ var _resolvers_DiscussionPageResolver__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./resolvers/DiscussionPageResolver */ "./src/forum/resolvers/DiscussionPageResolver.ts");
/* harmony import */ var _common_utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../common/utils/BasicEditorDriver */ "./src/common/utils/BasicEditorDriver.ts");
/* harmony import */ var _routes__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./routes */ "./src/forum/routes.ts");
/* harmony import */ var _ForumApplication__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./ForumApplication */ "./src/forum/ForumApplication.ts");









































































/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Object.assign(_common_compat__WEBPACK_IMPORTED_MODULE_0__["default"], {
  'utils/PostControls': _utils_PostControls__WEBPACK_IMPORTED_MODULE_1__["default"],
  'utils/KeyboardNavigatable': _utils_KeyboardNavigatable__WEBPACK_IMPORTED_MODULE_2__["default"],
  'utils/slidable': _utils_slidable__WEBPACK_IMPORTED_MODULE_3__["default"],
  'utils/History': _utils_History__WEBPACK_IMPORTED_MODULE_4__["default"],
  'utils/DiscussionControls': _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_5__["default"],
  'utils/alertEmailConfirmation': _utils_alertEmailConfirmation__WEBPACK_IMPORTED_MODULE_6__["default"],
  'utils/UserControls': _utils_UserControls__WEBPACK_IMPORTED_MODULE_7__["default"],
  'utils/Pane': _utils_Pane__WEBPACK_IMPORTED_MODULE_8__["default"],
  'utils/BasicEditorDriver': _common_utils_BasicEditorDriver__WEBPACK_IMPORTED_MODULE_70__["default"],
  'states/ComposerState': _states_ComposerState__WEBPACK_IMPORTED_MODULE_9__["default"],
  'states/DiscussionListState': _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_10__["default"],
  'states/GlobalSearchState': _states_GlobalSearchState__WEBPACK_IMPORTED_MODULE_11__["default"],
  'states/NotificationListState': _states_NotificationListState__WEBPACK_IMPORTED_MODULE_12__["default"],
  'states/PostStreamState': _states_PostStreamState__WEBPACK_IMPORTED_MODULE_13__["default"],
  'states/SearchState': _states_SearchState__WEBPACK_IMPORTED_MODULE_14__["default"],
  'components/AffixedSidebar': _components_AffixedSidebar__WEBPACK_IMPORTED_MODULE_15__["default"],
  'components/DiscussionPage': _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_16__["default"],
  'components/DiscussionListPane': _components_DiscussionListPane__WEBPACK_IMPORTED_MODULE_17__["default"],
  'components/LogInModal': _components_LogInModal__WEBPACK_IMPORTED_MODULE_18__["default"],
  'components/ComposerBody': _components_ComposerBody__WEBPACK_IMPORTED_MODULE_19__["default"],
  'components/ForgotPasswordModal': _components_ForgotPasswordModal__WEBPACK_IMPORTED_MODULE_20__["default"],
  'components/Notification': _components_Notification__WEBPACK_IMPORTED_MODULE_21__["default"],
  'components/LogInButton': _components_LogInButton__WEBPACK_IMPORTED_MODULE_22__["default"],
  'components/DiscussionsUserPage': _components_DiscussionsUserPage__WEBPACK_IMPORTED_MODULE_23__["default"],
  'components/Composer': _components_Composer__WEBPACK_IMPORTED_MODULE_24__["default"],
  'components/SessionDropdown': _components_SessionDropdown__WEBPACK_IMPORTED_MODULE_25__["default"],
  'components/HeaderPrimary': _components_HeaderPrimary__WEBPACK_IMPORTED_MODULE_26__["default"],
  'components/PostEdited': _components_PostEdited__WEBPACK_IMPORTED_MODULE_27__["default"],
  'components/PostStream': _components_PostStream__WEBPACK_IMPORTED_MODULE_28__["default"],
  'components/ChangePasswordModal': _components_ChangePasswordModal__WEBPACK_IMPORTED_MODULE_29__["default"],
  'components/IndexPage': _components_IndexPage__WEBPACK_IMPORTED_MODULE_30__["default"],
  'components/DiscussionRenamedNotification': _components_DiscussionRenamedNotification__WEBPACK_IMPORTED_MODULE_31__["default"],
  'components/DiscussionsSearchSource': _components_DiscussionsSearchSource__WEBPACK_IMPORTED_MODULE_32__["default"],
  'components/HeaderSecondary': _components_HeaderSecondary__WEBPACK_IMPORTED_MODULE_33__["default"],
  'components/ComposerButton': _components_ComposerButton__WEBPACK_IMPORTED_MODULE_34__["default"],
  'components/DiscussionList': _components_DiscussionList__WEBPACK_IMPORTED_MODULE_35__["default"],
  'components/ReplyPlaceholder': _components_ReplyPlaceholder__WEBPACK_IMPORTED_MODULE_36__["default"],
  'components/AvatarEditor': _components_AvatarEditor__WEBPACK_IMPORTED_MODULE_37__["default"],
  'components/Post': _components_Post__WEBPACK_IMPORTED_MODULE_38__["default"],
  'components/SettingsPage': _components_SettingsPage__WEBPACK_IMPORTED_MODULE_39__["default"],
  'components/TerminalPost': _components_TerminalPost__WEBPACK_IMPORTED_MODULE_40__["default"],
  'components/ChangeEmailModal': _components_ChangeEmailModal__WEBPACK_IMPORTED_MODULE_41__["default"],
  'components/NotificationsDropdown': _components_NotificationsDropdown__WEBPACK_IMPORTED_MODULE_42__["default"],
  'components/UserPage': _components_UserPage__WEBPACK_IMPORTED_MODULE_43__["default"],
  'components/PostUser': _components_PostUser__WEBPACK_IMPORTED_MODULE_44__["default"],
  'components/UserCard': _components_UserCard__WEBPACK_IMPORTED_MODULE_45__["default"],
  'components/UsersSearchSource': _components_UsersSearchSource__WEBPACK_IMPORTED_MODULE_46__["default"],
  'components/NotificationGrid': _components_NotificationGrid__WEBPACK_IMPORTED_MODULE_47__["default"],
  'components/PostPreview': _components_PostPreview__WEBPACK_IMPORTED_MODULE_48__["default"],
  'components/EventPost': _components_EventPost__WEBPACK_IMPORTED_MODULE_49__["default"],
  'components/DiscussionHero': _components_DiscussionHero__WEBPACK_IMPORTED_MODULE_50__["default"],
  'components/PostMeta': _components_PostMeta__WEBPACK_IMPORTED_MODULE_51__["default"],
  'components/DiscussionRenamedPost': _components_DiscussionRenamedPost__WEBPACK_IMPORTED_MODULE_52__["default"],
  'components/DiscussionComposer': _components_DiscussionComposer__WEBPACK_IMPORTED_MODULE_53__["default"],
  'components/LogInButtons': _components_LogInButtons__WEBPACK_IMPORTED_MODULE_54__["default"],
  'components/NotificationList': _components_NotificationList__WEBPACK_IMPORTED_MODULE_55__["default"],
  'components/WelcomeHero': _components_WelcomeHero__WEBPACK_IMPORTED_MODULE_56__["default"],
  'components/SignUpModal': _components_SignUpModal__WEBPACK_IMPORTED_MODULE_57__["default"],
  'components/CommentPost': _components_CommentPost__WEBPACK_IMPORTED_MODULE_58__["default"],
  'components/ComposerPostPreview': _components_ComposerPostPreview__WEBPACK_IMPORTED_MODULE_59__["default"],
  'components/ReplyComposer': _components_ReplyComposer__WEBPACK_IMPORTED_MODULE_60__["default"],
  'components/NotificationsPage': _components_NotificationsPage__WEBPACK_IMPORTED_MODULE_61__["default"],
  'components/PostStreamScrubber': _components_PostStreamScrubber__WEBPACK_IMPORTED_MODULE_62__["default"],
  'components/EditPostComposer': _components_EditPostComposer__WEBPACK_IMPORTED_MODULE_63__["default"],
  'components/RenameDiscussionModal': _components_RenameDiscussionModal__WEBPACK_IMPORTED_MODULE_64__["default"],
  'components/Search': _components_Search__WEBPACK_IMPORTED_MODULE_65__["default"],
  'components/DiscussionListItem': _components_DiscussionListItem__WEBPACK_IMPORTED_MODULE_66__["default"],
  'components/LoadingPost': _components_LoadingPost__WEBPACK_IMPORTED_MODULE_67__["default"],
  'components/PostsUserPage': _components_PostsUserPage__WEBPACK_IMPORTED_MODULE_68__["default"],
  'resolvers/DiscussionPageResolver': _resolvers_DiscussionPageResolver__WEBPACK_IMPORTED_MODULE_69__["default"],
  routes: _routes__WEBPACK_IMPORTED_MODULE_71__["default"],
  ForumApplication: _ForumApplication__WEBPACK_IMPORTED_MODULE_72__["default"]
}));

/***/ }),

/***/ "./src/forum/components/AffixedSidebar.js":
/*!************************************************!*\
  !*** ./src/forum/components/AffixedSidebar.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AffixedSidebar)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");


/**
 * The `AffixedSidebar` component uses Bootstrap's "affix" plugin to keep a
 * sidebar navigation at the top of the viewport when scrolling.
 *
 * ### Children
 *
 * The component must wrap an element that itself wraps an <ul> element, which
 * will be "affixed".
 *
 * @see https://getbootstrap.com/docs/3.4/javascript/#affix
 */

var AffixedSidebar = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(AffixedSidebar, _Component);

  function AffixedSidebar() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = AffixedSidebar.prototype;

  _proto.view = function view(vnode) {
    return vnode.children[0];
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode); // Register the affix plugin to execute on every window resize (and trigger)


    this.boundOnresize = this.onresize.bind(this);
    $(window).on('resize', this.boundOnresize).resize();
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    $(window).off('resize', this.boundOnresize);
  };

  _proto.onresize = function onresize() {
    var _this = this;

    var $sidebar = this.$();
    var $header = $('#header');
    var $footer = $('#footer');
    var $affixElement = $sidebar.find('> ul');
    $(window).off('.affix');
    $affixElement.removeClass('affix affix-top affix-bottom').removeData('bs.affix'); // Don't affix the sidebar if it is taller than the viewport (otherwise
    // there would be no way to scroll through its content).

    if ($sidebar.outerHeight(true) > $(window).height() - $header.outerHeight(true)) return;
    $affixElement.affix({
      offset: {
        top: function top() {
          return $sidebar.offset().top - $header.outerHeight(true) - parseInt($sidebar.css('margin-top'), 10);
        },
        bottom: function bottom() {
          return _this.bottom = $footer.outerHeight(true);
        }
      }
    });
  };

  return AffixedSidebar;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/AvatarEditor.js":
/*!**********************************************!*\
  !*** ./src/forum/components/AvatarEditor.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AvatarEditor)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");










/**
 * The `AvatarEditor` component displays a user's avatar along with a dropdown
 * menu which allows the user to upload/remove the avatar.
 *
 * ### Attrs
 *
 * - `className`
 * - `user`
 */

var AvatarEditor = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(AvatarEditor, _Component);

  function AvatarEditor() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = AvatarEditor.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
    /**
     * Whether or not an avatar upload is in progress.
     *
     * @type {Boolean}
     */


    this.loading = false;
    /**
     * Whether or not an image has been dragged over the dropzone.
     *
     * @type {Boolean}
     */

    this.isDraggedOver = false;
  };

  _proto.view = function view() {
    var user = this.attrs.user;
    return m("div", {
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_7__["default"])(['AvatarEditor', 'Dropdown', this.attrs.className, this.loading && 'loading', this.isDraggedOver && 'dragover'])
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__["default"])(user), m("a", {
      className: user.avatarUrl() ? 'Dropdown-toggle' : 'Dropdown-toggle AvatarEditor--noAvatar',
      title: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.avatar_upload_tooltip'),
      "data-toggle": "dropdown",
      onclick: this.quickUpload.bind(this),
      ondragover: this.enableDragover.bind(this),
      ondragenter: this.enableDragover.bind(this),
      ondragleave: this.disableDragover.bind(this),
      ondragend: this.disableDragover.bind(this),
      ondrop: this.dropUpload.bind(this)
    }, this.loading ? m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_9__["default"], {
      display: "unset",
      size: "large"
    }) : user.avatarUrl() ? (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])('fas fa-pencil-alt') : (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])('fas fa-plus-circle')), m("ul", {
      className: "Dropdown-menu Menu"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_5__["default"])(this.controlItems().toArray())));
  }
  /**
   * Get the items in the edit avatar dropdown menu.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.controlItems = function controlItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_6__["default"]();
    items.add('upload', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
      icon: "fas fa-upload",
      onclick: this.openPicker.bind(this)
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.avatar_upload_button')));
    items.add('remove', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
      icon: "fas fa-times",
      onclick: this.remove.bind(this)
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.avatar_remove_button')));
    return items;
  }
  /**
   * Enable dragover style
   *
   * @param {DragEvent} e
   */
  ;

  _proto.enableDragover = function enableDragover(e) {
    e.preventDefault();
    e.stopPropagation();
    this.isDraggedOver = true;
  }
  /**
   * Disable dragover style
   *
   * @param {DragEvent} e
   */
  ;

  _proto.disableDragover = function disableDragover(e) {
    e.preventDefault();
    e.stopPropagation();
    this.isDraggedOver = false;
  }
  /**
   * Upload avatar when file is dropped into dropzone.
   *
   * @param {DragEvent} e
   */
  ;

  _proto.dropUpload = function dropUpload(e) {
    e.preventDefault();
    e.stopPropagation();
    this.isDraggedOver = false;
    this.upload(e.dataTransfer.files[0]);
  }
  /**
   * If the user doesn't have an avatar, there's no point in showing the
   * controls dropdown, because only one option would be viable: uploading.
   * Thus, when the avatar editor's dropdown toggle button is clicked, we prompt
   * the user to upload an avatar immediately.
   *
   * @param {MouseEvent} e
   */
  ;

  _proto.quickUpload = function quickUpload(e) {
    if (!this.attrs.user.avatarUrl()) {
      e.preventDefault();
      e.stopPropagation();
      this.openPicker();
    }
  }
  /**
   * Upload avatar using file picker
   */
  ;

  _proto.openPicker = function openPicker() {
    var _this = this;

    if (this.loading) return; // Create a hidden HTML input element and click on it so the user can select
    // an avatar file. Once they have, we will upload it via the API.

    var $input = $('<input type="file" accept=".jpg, .jpeg, .png, .bmp, .gif">');
    $input.appendTo('body').hide().click().on('input', function (e) {
      _this.upload($(e.target)[0].files[0]);
    });
  }
  /**
   * Upload avatar
   *
   * @param {File} file
   */
  ;

  _proto.upload = function upload(file) {
    if (this.loading) return;
    var user = this.attrs.user;
    var data = new FormData();
    data.append('avatar', file);
    this.loading = true;
    m.redraw();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].request({
      method: 'POST',
      url: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + "/users/" + user.id() + "/avatar",
      serialize: function serialize(raw) {
        return raw;
      },
      body: data
    }).then(this.success.bind(this), this.failure.bind(this));
  }
  /**
   * Remove the user's avatar.
   */
  ;

  _proto.remove = function remove() {
    var user = this.attrs.user;
    this.loading = true;
    m.redraw();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].request({
      method: 'DELETE',
      url: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + "/users/" + user.id() + "/avatar"
    }).then(this.success.bind(this), this.failure.bind(this));
  }
  /**
   * After a successful upload/removal, push the updated user data into the
   * store, and force a recomputation of the user's avatar color.
   *
   * @param {object} response
   * @protected
   */
  ;

  _proto.success = function success(response) {
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.pushPayload(response);
    delete this.attrs.user.avatarColor;
    this.loading = false;
    m.redraw();
  }
  /**
   * If avatar upload/removal fails, stop loading.
   *
   * @param {object} response
   * @protected
   */
  ;

  _proto.failure = function failure(response) {
    this.loading = false;
    m.redraw();
  };

  return AvatarEditor;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/ChangeEmailModal.js":
/*!**************************************************!*\
  !*** ./src/forum/components/ChangeEmailModal.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ChangeEmailModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");





/**
 * The `ChangeEmailModal` component shows a modal dialog which allows the user
 * to change their email address.
 */

var ChangeEmailModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ChangeEmailModal, _Modal);

  function ChangeEmailModal() {
    return _Modal.apply(this, arguments) || this;
  }

  var _proto = ChangeEmailModal.prototype;

  _proto.oninit = function oninit(vnode) {
    _Modal.prototype.oninit.call(this, vnode);
    /**
     * Whether or not the email has been changed successfully.
     *
     * @type {Boolean}
     */


    this.success = false;
    /**
     * The value of the email input.
     *
     * @type {function}
     */

    this.email = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.email());
    /**
     * The value of the password input.
     *
     * @type {function}
     */

    this.password = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__["default"])('');
  };

  _proto.className = function className() {
    return 'ChangeEmailModal Modal--small';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.title');
  };

  _proto.content = function content() {
    if (this.success) {
      return m("div", {
        className: "Modal-body"
      }, m("div", {
        className: "Form Form--centered"
      }, m("p", {
        className: "helpText"
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.confirmation_message', {
        email: m("strong", null, this.email())
      })), m("div", {
        className: "Form-group"
      }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"], {
        className: "Button Button--primary Button--block",
        onclick: this.hide.bind(this)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.dismiss_button')))));
    }

    return m("div", {
      className: "Modal-body"
    }, m("div", {
      className: "Form Form--centered"
    }, m("div", {
      className: "Form-group"
    }, m("input", {
      type: "email",
      name: "email",
      className: "FormControl",
      placeholder: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.email(),
      bidi: this.email,
      disabled: this.loading
    })), m("div", {
      className: "Form-group"
    }, m("input", {
      type: "password",
      name: "password",
      className: "FormControl",
      autocomplete: "current-password",
      placeholder: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.confirm_password_placeholder'),
      bidi: this.password,
      disabled: this.loading
    })), m("div", {
      className: "Form-group"
    }, _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--primary Button--block',
      type: 'submit',
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.submit_button')))));
  };

  _proto.onsubmit = function onsubmit(e) {
    var _this = this;

    e.preventDefault(); // If the user hasn't actually entered a different email address, we don't
    // need to do anything. Woot!

    if (this.email() === _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.email()) {
      this.hide();
      return;
    }

    this.loading = true;
    this.alertAttrs = null;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.save({
      email: this.email()
    }, {
      errorHandler: this.onerror.bind(this),
      meta: {
        password: this.password()
      }
    }).then(function () {
      _this.success = true;
    })["catch"](function () {}).then(this.loaded.bind(this));
  };

  _proto.onerror = function onerror(error) {
    if (error.status === 401) {
      error.alert.content = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_email.incorrect_password_message');
    }

    _Modal.prototype.onerror.call(this, error);
  };

  return ChangeEmailModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/ChangePasswordModal.js":
/*!*****************************************************!*\
  !*** ./src/forum/components/ChangePasswordModal.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ChangePasswordModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");




/**
 * The `ChangePasswordModal` component shows a modal dialog which allows the
 * user to send themself a password reset email.
 */

var ChangePasswordModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ChangePasswordModal, _Modal);

  function ChangePasswordModal() {
    return _Modal.apply(this, arguments) || this;
  }

  var _proto = ChangePasswordModal.prototype;

  _proto.className = function className() {
    return 'ChangePasswordModal Modal--small';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_password.title');
  };

  _proto.content = function content() {
    return m("div", {
      className: "Modal-body"
    }, m("div", {
      className: "Form Form--centered"
    }, m("p", {
      className: "helpText"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_password.text')), m("div", {
      className: "Form-group"
    }, _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--primary Button--block',
      type: 'submit',
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.change_password.send_button')))));
  };

  _proto.onsubmit = function onsubmit(e) {
    e.preventDefault();
    this.loading = true;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].request({
      method: 'POST',
      url: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + '/forgot',
      body: {
        email: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.email()
      }
    }).then(this.hide.bind(this), this.loaded.bind(this));
  };

  return ChangePasswordModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/CommentPost.js":
/*!*********************************************!*\
  !*** ./src/forum/components/CommentPost.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CommentPost)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _Post__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Post */ "./src/forum/components/Post.js");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _PostUser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PostUser */ "./src/forum/components/PostUser.js");
/* harmony import */ var _PostMeta__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./PostMeta */ "./src/forum/components/PostMeta.js");
/* harmony import */ var _PostEdited__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PostEdited */ "./src/forum/components/PostEdited.js");
/* harmony import */ var _EditPostComposer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EditPostComposer */ "./src/forum/components/EditPostComposer.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _ComposerPostPreview__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ComposerPostPreview */ "./src/forum/components/ComposerPostPreview.js");












/**
 * The `CommentPost` component displays a standard `comment`-typed post. This
 * includes a number of item lists (controls, header, and footer) surrounding
 * the post's HTML content.
 *
 * ### Attrs
 *
 * - `post`
 */

var CommentPost = /*#__PURE__*/function (_Post) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(CommentPost, _Post);

  function CommentPost() {
    return _Post.apply(this, arguments) || this;
  }

  var _proto = CommentPost.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this = this;

    _Post.prototype.oninit.call(this, vnode);
    /**
     * If the post has been hidden, then this flag determines whether or not its
     * content has been expanded.
     *
     * @type {Boolean}
     */


    this.revealContent = false;
    /**
     * Whether or not the user hover card inside of PostUser is visible.
     * The property must be managed in CommentPost to be able to use it in the subtree check
     *
     * @type {Boolean}
     */

    this.cardVisible = false;
    this.subtree.check(function () {
      return _this.cardVisible;
    }, function () {
      return _this.isEditing();
    }, function () {
      return _this.revealContent;
    });
  };

  _proto.content = function content() {
    return _Post.prototype.content.call(this).concat([m("header", {
      className: "Post-header"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_9__["default"])(this.headerItems().toArray()))), m("div", {
      className: "Post-body"
    }, this.isEditing() ? m(_ComposerPostPreview__WEBPACK_IMPORTED_MODULE_11__["default"], {
      className: "Post-preview",
      composer: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer
    }) : m.trust(this.attrs.post.contentHtml()))]);
  };

  _proto.refreshContent = function refreshContent() {
    var contentHtml = this.isEditing() ? '' : this.attrs.post.contentHtml(); // If the post content has changed since the last render, we'll run through
    // all of the <script> tags in the content and evaluate them. This is
    // necessary because TextFormatter outputs them for e.g. syntax highlighting.

    if (this.contentHtml !== contentHtml) {
      this.$('.Post-body script').each(function () {
        var script = document.createElement('script');
        script.textContent = this.textContent;
        Array.from(this.attributes).forEach(function (attr) {
          return script.setAttribute(attr.name, attr.value);
        });
        this.parentNode.replaceChild(script, this);
      });
    }

    this.contentHtml = contentHtml;
  };

  _proto.oncreate = function oncreate(vnode) {
    _Post.prototype.oncreate.call(this, vnode);

    this.refreshContent();
  };

  _proto.onupdate = function onupdate(vnode) {
    _Post.prototype.onupdate.call(this, vnode);

    this.refreshContent();
  };

  _proto.isEditing = function isEditing() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.bodyMatches(_EditPostComposer__WEBPACK_IMPORTED_MODULE_7__["default"], {
      post: this.attrs.post
    });
  };

  _proto.elementAttrs = function elementAttrs() {
    var post = this.attrs.post;

    var attrs = _Post.prototype.elementAttrs.call(this);

    attrs.className = (attrs.className || '') + ' ' + (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_3__["default"])({
      CommentPost: true,
      'Post--renderFailed': post.renderFailed(),
      'Post--hidden': post.isHidden(),
      'Post--edited': post.isEdited(),
      revealContent: this.revealContent,
      editing: this.isEditing()
    });
    return attrs;
  }
  /**
   * Toggle the visibility of a hidden post's content.
   */
  ;

  _proto.toggleContent = function toggleContent() {
    this.revealContent = !this.revealContent;
  }
  /**
   * Build an item list for the post's header.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.headerItems = function headerItems() {
    var _this2 = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__["default"]();
    var post = this.attrs.post;
    items.add('user', _PostUser__WEBPACK_IMPORTED_MODULE_4__["default"].component({
      post: post,
      cardVisible: this.cardVisible,
      oncardshow: function oncardshow() {
        _this2.cardVisible = true;
        m.redraw();
      },
      oncardhide: function oncardhide() {
        _this2.cardVisible = false;
        m.redraw();
      }
    }), 100);
    items.add('meta', _PostMeta__WEBPACK_IMPORTED_MODULE_5__["default"].component({
      post: post
    }));

    if (post.isEdited() && !post.isHidden()) {
      items.add('edited', _PostEdited__WEBPACK_IMPORTED_MODULE_6__["default"].component({
        post: post
      }));
    } // If the post is hidden, add a button that allows toggling the visibility
    // of the post's content.


    if (post.isHidden()) {
      items.add('toggle', _common_components_Button__WEBPACK_IMPORTED_MODULE_10__["default"].component({
        className: 'Button Button--default Button--more',
        icon: 'fas fa-ellipsis-h',
        onclick: this.toggleContent.bind(this)
      }));
    }

    return items;
  };

  return CommentPost;
}(_Post__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/Composer.js":
/*!******************************************!*\
  !*** ./src/forum/components/Composer.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Composer)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _ComposerButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ComposerButton */ "./src/forum/components/ComposerButton.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../states/ComposerState */ "./src/forum/states/ComposerState.js");









/**
 * The `Composer` component displays the composer. It can be loaded with a
 * content component with `load` and then its position/state can be altered with
 * `show`, `hide`, `close`, `minimize`, `fullScreen`, and `exitFullScreen`.
 */

var Composer = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Composer, _Component);

  function Composer() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Composer.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
    /**
     * The composer's "state".
     *
     * @type {ComposerState}
     */


    this.state = this.attrs.state;
    /**
     * Whether or not the composer currently has focus.
     *
     * @type {Boolean}
     */

    this.active = false; // Store the initial position so that we can trigger animations correctly.

    this.prevPosition = this.state.position;
  };

  _proto.view = function view() {
    var body = this.state.body;
    var classes = {
      normal: this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.NORMAL,
      minimized: this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.MINIMIZED,
      fullScreen: this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.FULLSCREEN,
      active: this.active,
      visible: this.state.isVisible()
    }; // Set up a handler so that clicks on the content will show the composer.

    var showIfMinimized = this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.MINIMIZED ? this.state.show.bind(this.state) : undefined;
    return m("div", {
      className: 'Composer ' + (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_7__["default"])(classes)
    }, m("div", {
      className: "Composer-handle",
      oncreate: this.configHandle.bind(this)
    }), m("ul", {
      className: "Composer-controls"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__["default"])(this.controlItems().toArray())), m("div", {
      className: "Composer-content",
      onclick: showIfMinimized
    }, body.componentClass ? body.componentClass.component((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, body.attrs, {
      composer: this.state,
      disabled: classes.minimized
    })) : ''));
  };

  _proto.onupdate = function onupdate(vnode) {
    _Component.prototype.onupdate.call(this, vnode);

    if (this.state.position === this.prevPosition) {
      // Set the height of the Composer element and its contents on each redraw,
      // so that they do not lose it if their DOM elements are recreated.
      this.updateHeight();
    } else {
      this.animatePositionChange();
      this.prevPosition = this.state.position;
    }
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this = this;

    _Component.prototype.oncreate.call(this, vnode);

    this.initializeHeight();
    this.$().hide().css('bottom', -this.state.computedHeight()); // Whenever any of the inputs inside the composer are have focus, we want to
    // add a class to the composer to draw attention to it.

    this.$().on('focus blur', ':input,.TextEditor-editorContainer', function (e) {
      _this.active = e.type === 'focusin';
      m.redraw();
    }); // When the escape key is pressed on any inputs, close the composer.

    this.$().on('keydown', ':input,.TextEditor-editorContainer', 'esc', function () {
      return _this.state.close();
    });
    this.handlers = {};
    $(window).on('resize', this.handlers.onresize = this.updateHeight.bind(this)).resize();
    $(document).on('mousemove', this.handlers.onmousemove = this.onmousemove.bind(this)).on('mouseup', this.handlers.onmouseup = this.onmouseup.bind(this));
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    $(window).off('resize', this.handlers.onresize);
    $(document).off('mousemove', this.handlers.onmousemove).off('mouseup', this.handlers.onmouseup);
  }
  /**
   * Add the necessary event handlers to the composer's handle so that it can
   * be used to resize the composer.
   */
  ;

  _proto.configHandle = function configHandle(vnode) {
    var composer = this;
    $(vnode.dom).css('cursor', 'row-resize').bind('dragstart mousedown', function (e) {
      return e.preventDefault();
    }).mousedown(function (e) {
      composer.mouseStart = e.clientY;
      composer.heightStart = composer.$().height();
      composer.handle = $(this);
      $('body').css('cursor', 'row-resize');
    });
  }
  /**
   * Resize the composer according to mouse movement.
   *
   * @param {MouseEvent} e
   */
  ;

  _proto.onmousemove = function onmousemove(e) {
    if (!this.handle) return; // Work out how much the mouse has been moved, and set the height
    // relative to the old one based on that. Then update the content's
    // height so that it fills the height of the composer, and update the
    // body's padding.

    var deltaPixels = this.mouseStart - e.clientY;
    this.changeHeight(this.heightStart + deltaPixels); // Update the body's padding-bottom so that no content on the page will ever
    // get permanently hidden behind the composer. If the user is already
    // scrolled to the bottom of the page, then we will keep them scrolled to
    // the bottom after the padding has been updated.

    var scrollTop = $(window).scrollTop();
    var anchorToBottom = scrollTop > 0 && scrollTop + $(window).height() >= $(document).height();
    this.updateBodyPadding(anchorToBottom);
  }
  /**
   * Finish resizing the composer when the mouse is released.
   */
  ;

  _proto.onmouseup = function onmouseup() {
    if (!this.handle) return;
    this.handle = null;
    $('body').css('cursor', '');
  }
  /**
   * Draw focus to the first focusable content element (the text editor).
   */
  ;

  _proto.focus = function focus() {
    this.$('.Composer-content :input:enabled:visible, .TextEditor-editor').first().focus();
  }
  /**
   * Update the DOM to reflect the composer's current height. This involves
   * setting the height of the composer's root element, and adjusting the height
   * of any flexible elements inside the composer's body.
   */
  ;

  _proto.updateHeight = function updateHeight() {
    var height = this.state.computedHeight();
    var $flexible = this.$('.Composer-flexible');
    this.$().height(height);

    if ($flexible.length) {
      var headerHeight = $flexible.offset().top - this.$().offset().top;
      var paddingBottom = parseInt($flexible.css('padding-bottom'), 10);
      var footerHeight = this.$('.Composer-footer').outerHeight(true);
      $flexible.height(this.$().outerHeight() - headerHeight - paddingBottom - footerHeight);
    }
  }
  /**
   * Update the amount of padding-bottom on the body so that the page's
   * content will still be visible above the composer when the page is
   * scrolled right to the bottom.
   */
  ;

  _proto.updateBodyPadding = function updateBodyPadding() {
    var visible = this.state.position !== _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.HIDDEN && this.state.position !== _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.MINIMIZED && _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].screen() !== 'phone';
    var paddingBottom = visible ? this.state.computedHeight() - parseInt($('#app').css('padding-bottom'), 10) : 0;
    $('#content').css({
      paddingBottom: paddingBottom
    });
  }
  /**
   * Trigger the right animation depending on the desired new position.
   */
  ;

  _proto.animatePositionChange = function animatePositionChange() {
    // When exiting full-screen mode: focus content
    if (this.prevPosition === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.FULLSCREEN && this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.NORMAL) {
      this.focus();
      return;
    }

    switch (this.state.position) {
      case _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.HIDDEN:
        return this.hide();

      case _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.MINIMIZED:
        return this.minimize();

      case _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.FULLSCREEN:
        return this.focus();

      case _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.NORMAL:
        return this.show();
    }
  }
  /**
   * Animate the Composer into the new position by changing the height.
   */
  ;

  _proto.animateHeightChange = function animateHeightChange() {
    var $composer = this.$().stop(true);
    var oldHeight = $composer.outerHeight();
    var scrollTop = $(window).scrollTop();
    $composer.show();
    this.updateHeight();
    var newHeight = $composer.outerHeight();

    if (this.prevPosition === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.HIDDEN) {
      $composer.css({
        bottom: -newHeight,
        height: newHeight
      });
    } else {
      $composer.css({
        height: oldHeight
      });
    }

    var animation = $composer.animate({
      bottom: 0,
      height: newHeight
    }, 'fast').promise();
    this.updateBodyPadding();
    $(window).scrollTop(scrollTop);
    return animation;
  }
  /**
   * Show the Composer backdrop.
   */
  ;

  _proto.showBackdrop = function showBackdrop() {
    this.$backdrop = $('<div/>').addClass('composer-backdrop').appendTo('body');
  }
  /**
   * Hide the Composer backdrop.
   */
  ;

  _proto.hideBackdrop = function hideBackdrop() {
    if (this.$backdrop) this.$backdrop.remove();
  }
  /**
   * Animate the composer sliding up from the bottom to take its normal height.
   *
   * @private
   */
  ;

  _proto.show = function show() {
    var _this2 = this;

    this.animateHeightChange().then(function () {
      return _this2.focus();
    });

    if (_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].screen() === 'phone') {
      // On safari fixed position doesn't properly work on mobile,
      // So we use absolute and set the top value.
      // https://github.com/flarum/core/issues/2652
      // Due to another safari bug, `scrollTop` is unreliable when
      // at the very bottom of the page AND opening the composer.
      // So we fallback to a calculated version of scrollTop.
      // https://github.com/flarum/core/issues/2683
      var scrollElement = document.documentElement;
      var topOfViewport = Math.min(scrollElement.scrollTop, scrollElement.scrollHeight - scrollElement.clientHeight);
      this.$().css('top', $('.App').is('.mobile-safari') ? topOfViewport : 0);
      this.showBackdrop();
    }
  }
  /**
   * Animate closing the composer.
   *
   * @private
   */
  ;

  _proto.hide = function hide() {
    var _this3 = this;

    var $composer = this.$(); // Animate the composer sliding down off the bottom edge of the viewport.
    // Only when the animation is completed, update other elements on the page.

    $composer.stop(true).animate({
      bottom: -$composer.height()
    }, 'fast', function () {
      $composer.hide();

      _this3.hideBackdrop();

      _this3.updateBodyPadding();
    });
  }
  /**
   * Shrink the composer until only its title is visible.
   *
   * @private
   */
  ;

  _proto.minimize = function minimize() {
    this.animateHeightChange();
    this.$().css('top', 'auto');
    this.hideBackdrop();
  }
  /**
   * Build an item list for the composer's controls.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.controlItems = function controlItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();

    if (this.state.position === _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.FULLSCREEN) {
      items.add('exitFullScreen', _ComposerButton__WEBPACK_IMPORTED_MODULE_5__["default"].component({
        icon: 'fas fa-compress',
        title: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.composer.exit_full_screen_tooltip'),
        onclick: this.state.exitFullScreen.bind(this.state)
      }));
    } else {
      if (this.state.position !== _states_ComposerState__WEBPACK_IMPORTED_MODULE_8__["default"].Position.MINIMIZED) {
        items.add('minimize', _ComposerButton__WEBPACK_IMPORTED_MODULE_5__["default"].component({
          icon: 'fas fa-minus minimize',
          title: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.composer.minimize_tooltip'),
          onclick: this.state.minimize.bind(this.state),
          itemClassName: 'App-backControl'
        }));
        items.add('fullScreen', _ComposerButton__WEBPACK_IMPORTED_MODULE_5__["default"].component({
          icon: 'fas fa-expand',
          title: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.composer.full_screen_tooltip'),
          onclick: this.state.fullScreen.bind(this.state)
        }));
      }

      items.add('close', _ComposerButton__WEBPACK_IMPORTED_MODULE_5__["default"].component({
        icon: 'fas fa-times',
        title: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.composer.close_tooltip'),
        onclick: this.state.close.bind(this.state)
      }));
    }

    return items;
  }
  /**
   * Initialize default Composer height.
   */
  ;

  _proto.initializeHeight = function initializeHeight() {
    this.state.height = localStorage.getItem('composerHeight');

    if (!this.state.height) {
      this.state.height = this.defaultHeight();
    }
  }
  /**
   * Default height of the Composer in case none is saved.
   * @returns {number}
   */
  ;

  _proto.defaultHeight = function defaultHeight() {
    return this.$().height();
  }
  /**
   * Save a new Composer height and update the DOM.
   * @param {number} height
   */
  ;

  _proto.changeHeight = function changeHeight(height) {
    this.state.height = height;
    this.updateHeight();
    localStorage.setItem('composerHeight', this.state.height);
  };

  return Composer;
}(_common_Component__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/forum/components/ComposerBody.js":
/*!**********************************************!*\
  !*** ./src/forum/components/ComposerBody.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ComposerBody)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_components_ConfirmDocumentUnload__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/ConfirmDocumentUnload */ "./src/common/components/ConfirmDocumentUnload.js");
/* harmony import */ var _common_components_TextEditor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/TextEditor */ "./src/common/components/TextEditor.js");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");









/**
 * The `ComposerBody` component handles the body, or the content, of the
 * composer. Subclasses should implement the `onsubmit` method and override
 * `headerTimes`.
 *
 * ### Attrs
 *
 * - `composer`
 * - `originalContent`
 * - `submitLabel`
 * - `placeholder`
 * - `user`
 * - `confirmExit`
 * - `disabled`
 *
 * @abstract
 */

var ComposerBody = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ComposerBody, _Component);

  function ComposerBody() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ComposerBody.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this = this;

    _Component.prototype.oninit.call(this, vnode);

    this.composer = this.attrs.composer;
    /**
     * Whether or not the component is loading.
     *
     * @type {Boolean}
     */

    this.loading = false; // Let the composer state know to ask for confirmation under certain
    // circumstances, if the body supports / requires it and has a corresponding
    // confirmation question to ask.

    if (this.attrs.confirmExit) {
      this.composer.preventClosingWhen(function () {
        return _this.hasChanges();
      }, this.attrs.confirmExit);
    }

    this.composer.fields.content(this.attrs.originalContent || '');
  };

  _proto.view = function view() {
    return m(_common_components_ConfirmDocumentUnload__WEBPACK_IMPORTED_MODULE_3__["default"], {
      when: this.hasChanges.bind(this)
    }, m("div", {
      className: 'ComposerBody ' + (this.attrs.className || '')
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__["default"])(this.attrs.user, {
      className: 'ComposerBody-avatar'
    }), m("div", {
      className: "ComposerBody-content"
    }, m("ul", {
      className: "ComposerBody-header"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__["default"])(this.headerItems().toArray())), m("div", {
      className: "ComposerBody-editor"
    }, _common_components_TextEditor__WEBPACK_IMPORTED_MODULE_4__["default"].component({
      submitLabel: this.attrs.submitLabel,
      placeholder: this.attrs.placeholder,
      disabled: this.loading || this.attrs.disabled,
      composer: this.composer,
      preview: this.jumpToPreview && this.jumpToPreview.bind(this),
      onchange: this.composer.fields.content,
      onsubmit: this.onsubmit.bind(this),
      value: this.composer.fields.content()
    }))), m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_2__["default"], {
      display: "unset",
      containerClassName: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_8__["default"])('ComposerBody-loading', this.loading && 'active'),
      size: "large"
    })));
  }
  /**
   * Check if there is any unsaved data.
   *
   * @return {boolean}
   */
  ;

  _proto.hasChanges = function hasChanges() {
    var content = this.composer.fields.content();
    return content && content !== this.attrs.originalContent;
  }
  /**
   * Build an item list for the composer's header.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.headerItems = function headerItems() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();
  }
  /**
   * Handle the submit event of the text editor.
   *
   * @abstract
   */
  ;

  _proto.onsubmit = function onsubmit() {}
  /**
   * Stop loading.
   */
  ;

  _proto.loaded = function loaded() {
    this.loading = false;
    m.redraw();
  };

  return ComposerBody;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/ComposerButton.js":
/*!************************************************!*\
  !*** ./src/forum/components/ComposerButton.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ComposerButton)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");


/**
 * The `ComposerButton` component displays a button suitable for the composer
 * controls.
 */

var ComposerButton = /*#__PURE__*/function (_Button) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ComposerButton, _Button);

  function ComposerButton() {
    return _Button.apply(this, arguments) || this;
  }

  ComposerButton.initAttrs = function initAttrs(attrs) {
    _Button.initAttrs.call(this, attrs);

    attrs.className = attrs.className || 'Button Button--icon Button--link';
  };

  return ComposerButton;
}(_common_components_Button__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/ComposerPostPreview.js":
/*!*****************************************************!*\
  !*** ./src/forum/components/ComposerPostPreview.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ComposerPostPreview)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");


/*global s9e*/

/**
 * The `ComposerPostPreview` component renders Markdown as HTML using the
 * TextFormatter library, polling a data source for changes every 50ms. This is
 * done to prevent expensive redraws on e.g. every single keystroke, while
 * still retaining the perception of live updates for the user.
 *
 * ### Attrs
 *
 * - `composer` The state of the composer controlling this preview.
 * - `className` A CSS class for the element surrounding the preview.
 * - `surround` A callback that can execute code before and after re-render, e.g. for scroll anchoring.
 */

var ComposerPostPreview = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ComposerPostPreview, _Component);

  function ComposerPostPreview() {
    return _Component.apply(this, arguments) || this;
  }

  ComposerPostPreview.initAttrs = function initAttrs(attrs) {
    attrs.className = attrs.className || '';

    attrs.surround = attrs.surround || function (preview) {
      return preview();
    };
  };

  var _proto = ComposerPostPreview.prototype;

  _proto.view = function view() {
    return m("div", {
      className: this.attrs.className
    });
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this = this;

    _Component.prototype.oncreate.call(this, vnode); // Every 50ms, if the composer content has changed, then update the post's
    // body with a preview.


    var preview;

    var updatePreview = function updatePreview() {
      // Since we're polling, the composer may have been closed in the meantime,
      // so we bail in that case.
      if (!_this.attrs.composer.isVisible()) return;

      var content = _this.attrs.composer.fields.content();

      if (preview === content) return;
      preview = content;

      _this.attrs.surround(function () {
        return s9e.TextFormatter.preview(preview || '', vnode.dom);
      });
    };

    updatePreview();
    this.updateInterval = setInterval(updatePreview, 50);
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    clearInterval(this.updateInterval);
  };

  return ComposerPostPreview;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionComposer.js":
/*!****************************************************!*\
  !*** ./src/forum/components/DiscussionComposer.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionComposer)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _ComposerBody__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ComposerBody */ "./src/forum/components/ComposerBody.js");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");





/**
 * The `DiscussionComposer` component displays the composer content for starting
 * a new discussion. It adds a text field as a header control so the user can
 * enter the title of their discussion. It also overrides the `submit` and
 * `willExit` actions to account for the title.
 *
 * ### Attrs
 *
 * - All of the attrs for ComposerBody
 * - `titlePlaceholder`
 */

var DiscussionComposer = /*#__PURE__*/function (_ComposerBody) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionComposer, _ComposerBody);

  function DiscussionComposer() {
    return _ComposerBody.apply(this, arguments) || this;
  }

  DiscussionComposer.initAttrs = function initAttrs(attrs) {
    _ComposerBody.initAttrs.call(this, attrs);

    attrs.placeholder = attrs.placeholder || (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_discussion.body_placeholder'));
    attrs.submitLabel = attrs.submitLabel || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_discussion.submit_button');
    attrs.confirmExit = attrs.confirmExit || (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_discussion.discard_confirmation'));
    attrs.titlePlaceholder = attrs.titlePlaceholder || (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_discussion.title_placeholder'));
    attrs.className = 'ComposerBody--discussion';
  };

  var _proto = DiscussionComposer.prototype;

  _proto.oninit = function oninit(vnode) {
    _ComposerBody.prototype.oninit.call(this, vnode);

    this.composer.fields.title = this.composer.fields.title || (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__["default"])('');
    /**
     * The value of the title input.
     *
     * @type {Function}
     */

    this.title = this.composer.fields.title;
  };

  _proto.headerItems = function headerItems() {
    var items = _ComposerBody.prototype.headerItems.call(this);

    items.add('title', m("h3", null, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_discussion.title')), 100);
    items.add('discussionTitle', m("h3", null, m("input", {
      className: "FormControl",
      bidi: this.title,
      placeholder: this.attrs.titlePlaceholder,
      disabled: !!this.attrs.disabled,
      onkeydown: this.onkeydown.bind(this)
    })));
    return items;
  }
  /**
   * Handle the title input's keydown event. When the return key is pressed,
   * move the focus to the start of the text editor.
   *
   * @param {KeyboardEvent} e
   */
  ;

  _proto.onkeydown = function onkeydown(e) {
    if (e.which === 13) {
      // Return
      e.preventDefault();
      this.composer.editor.moveCursorTo(0);
    }

    e.redraw = false;
  };

  _proto.hasChanges = function hasChanges() {
    return this.title() || this.composer.fields.content();
  }
  /**
   * Get the data to submit to the server when the discussion is saved.
   *
   * @return {Record<string, unknown>}
   */
  ;

  _proto.data = function data() {
    return {
      title: this.title(),
      content: this.composer.fields.content()
    };
  };

  _proto.onsubmit = function onsubmit() {
    var _this = this;

    this.loading = true;
    var data = this.data();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.createRecord('discussions').save(data).then(function (discussion) {
      _this.composer.hide();

      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.refresh({
        deferClear: true
      });
      m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(discussion));
    }, this.loaded.bind(this));
  };

  return DiscussionComposer;
}(_ComposerBody__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionHero.js":
/*!************************************************!*\
  !*** ./src/forum/components/DiscussionHero.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionHero)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");




/**
 * The `DiscussionHero` component displays the hero on a discussion page.
 *
 * ### attrs
 *
 * - `discussion`
 */

var DiscussionHero = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionHero, _Component);

  function DiscussionHero() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DiscussionHero.prototype;

  _proto.view = function view() {
    return m("header", {
      className: "Hero DiscussionHero"
    }, m("div", {
      className: "container"
    }, m("ul", {
      className: "DiscussionHero-items"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__["default"])(this.items().toArray()))));
  }
  /**
   * Build an item list for the contents of the discussion hero.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.items = function items() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__["default"]();
    var discussion = this.attrs.discussion;
    var badges = discussion.badges().toArray();

    if (badges.length) {
      items.add('badges', m("ul", {
        className: "DiscussionHero-badges badges"
      }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__["default"])(badges)), 10);
    }

    items.add('title', m("h2", {
      className: "DiscussionHero-title"
    }, discussion.title()));
    return items;
  };

  return DiscussionHero;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionList.js":
/*!************************************************!*\
  !*** ./src/forum/components/DiscussionList.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionList)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _DiscussionListItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DiscussionListItem */ "./src/forum/components/DiscussionListItem.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_components_Placeholder__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/Placeholder */ "./src/common/components/Placeholder.js");







/**
 * The `DiscussionList` component displays a list of discussions.
 *
 * ### Attrs
 *
 * - `state` A DiscussionListState object that represents the discussion lists's state.
 */

var DiscussionList = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionList, _Component);

  function DiscussionList() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DiscussionList.prototype;

  _proto.view = function view() {
    /**
     * @type {import('../states/DiscussionListState').default}
     */
    var state = this.attrs.state;
    var params = state.getParams();
    var loading;

    if (state.isInitialLoading() || state.isLoadingNext()) {
      loading = m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_5__["default"], null);
    } else if (state.hasNext()) {
      loading = _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
        className: 'Button',
        onclick: state.loadNext.bind(state)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.load_more_button'));
    }

    if (state.isEmpty()) {
      var text = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.empty_text');
      return m("div", {
        className: "DiscussionList"
      }, _common_components_Placeholder__WEBPACK_IMPORTED_MODULE_6__["default"].component({
        text: text
      }));
    }

    return m("div", {
      className: 'DiscussionList' + (state.isSearchResults() ? ' DiscussionList--searchResults' : '')
    }, m("ul", {
      className: "DiscussionList-discussions"
    }, state.getPages().map(function (pg) {
      return pg.items.map(function (discussion) {
        return m("li", {
          key: discussion.id(),
          "data-id": discussion.id()
        }, _DiscussionListItem__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          discussion: discussion,
          params: params
        }));
      });
    })), m("div", {
      className: "DiscussionList-loadMore"
    }, loading));
  };

  return DiscussionList;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionListItem.js":
/*!****************************************************!*\
  !*** ./src/forum/components/DiscussionListItem.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionListItem)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_helpers_highlight__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/highlight */ "./src/common/helpers/highlight.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_utils_humanTime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/humanTime */ "./src/common/utils/humanTime.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_abbreviateNumber__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/utils/abbreviateNumber */ "./src/common/utils/abbreviateNumber.ts");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _TerminalPost__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TerminalPost */ "./src/forum/components/TerminalPost.js");
/* harmony import */ var _common_utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../common/utils/SubtreeRetainer */ "./src/common/utils/SubtreeRetainer.ts");
/* harmony import */ var _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/DiscussionControls */ "./src/forum/utils/DiscussionControls.js");
/* harmony import */ var _utils_slidable__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/slidable */ "./src/forum/utils/slidable.js");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _DiscussionPage__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _common_utils_escapeRegExp__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../common/utils/escapeRegExp */ "./src/common/utils/escapeRegExp.ts");
/* harmony import */ var _common_components_Tooltip__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../common/components/Tooltip */ "./src/common/components/Tooltip.tsx");




















/**
 * The `DiscussionListItem` component shows a single discussion in the
 * discussion list.
 *
 * ### Attrs
 *
 * - `discussion`
 * - `params`
 */

var DiscussionListItem = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionListItem, _Component);

  function DiscussionListItem() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DiscussionListItem.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this = this;

    _Component.prototype.oninit.call(this, vnode);
    /**
     * Set up a subtree retainer so that the discussion will not be redrawn
     * unless new data comes in.
     *
     * @type {SubtreeRetainer}
     */


    this.subtree = new _common_utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_13__["default"](function () {
      return _this.attrs.discussion.freshness;
    }, function () {
      var time = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user && _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.markedAllAsReadAt();
      return time && time.getTime();
    }, function () {
      return _this.active();
    });
  };

  _proto.elementAttrs = function elementAttrs() {
    return {
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_16__["default"])('DiscussionListItem', {
        active: this.active(),
        'DiscussionListItem--hidden': this.attrs.discussion.isHidden(),
        Slidable: 'ontouchstart' in window
      })
    };
  };

  _proto.view = function view() {
    var discussion = this.attrs.discussion;
    var user = discussion.user();
    var isUnread = discussion.isUnread();
    var isRead = discussion.isRead();
    var jumpTo = 0;
    var controls = _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_14__["default"].controls(discussion, this).toArray();
    var attrs = this.elementAttrs();

    if (this.attrs.params.q) {
      var post = discussion.mostRelevantPost();

      if (post) {
        jumpTo = post.number();
      }

      var phrase = (0,_common_utils_escapeRegExp__WEBPACK_IMPORTED_MODULE_18__["default"])(this.attrs.params.q);
      this.highlightRegExp = new RegExp(phrase + '|' + phrase.trim().replace(/\s+/g, '|'), 'gi');
    } else {
      jumpTo = Math.min(discussion.lastPostNumber(), (discussion.lastReadPostNumber() || 0) + 1);
    }

    return m("div", attrs, controls.length > 0 && _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_11__["default"].component({
      icon: 'fas fa-ellipsis-v',
      className: 'DiscussionListItem-controls',
      buttonClassName: 'Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right',
      accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label')
    }, controls), m("span", {
      className: 'Slidable-underneath Slidable-underneath--left Slidable-underneath--elastic' + (isUnread ? '' : ' disabled'),
      onclick: this.markAsRead.bind(this)
    }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_7__["default"])('fas fa-check')), m("div", {
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_16__["default"])('DiscussionListItem-content', 'Slidable-content', {
        unread: isUnread,
        read: isRead
      })
    }, m(_common_components_Tooltip__WEBPACK_IMPORTED_MODULE_19__["default"], {
      text: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.started_text', {
        user: user,
        ago: (0,_common_utils_humanTime__WEBPACK_IMPORTED_MODULE_8__["default"])(discussion.createdAt())
      }),
      position: "right"
    }, m(_common_components_Link__WEBPACK_IMPORTED_MODULE_3__["default"], {
      className: "DiscussionListItem-author",
      href: user ? _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.user(user) : '#'
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_4__["default"])(user, {
      title: ''
    }))), m("ul", {
      className: "DiscussionListItem-badges badges"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_5__["default"])(discussion.badges().toArray())), m(_common_components_Link__WEBPACK_IMPORTED_MODULE_3__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(discussion, jumpTo),
      className: "DiscussionListItem-main"
    }, m("h3", {
      className: "DiscussionListItem-title"
    }, (0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_6__["default"])(discussion.title(), this.highlightRegExp)), m("ul", {
      className: "DiscussionListItem-info"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_5__["default"])(this.infoItems().toArray()))), this.replyCountItem()));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode); // If we're on a touch device, set up the discussion row to be slidable.
    // This allows the user to drag the row to either side of the screen to
    // reveal controls.


    if ('ontouchstart' in window) {
      var slidableInstance = (0,_utils_slidable__WEBPACK_IMPORTED_MODULE_15__["default"])(this.$());
      this.$('.DiscussionListItem-controls').on('hidden.bs.dropdown', function () {
        return slidableInstance.reset();
      });
    }
  };

  _proto.onbeforeupdate = function onbeforeupdate(vnode, old) {
    _Component.prototype.onbeforeupdate.call(this, vnode, old);

    return this.subtree.needsRebuild();
  }
  /**
   * Determine whether or not the discussion is currently being viewed.
   *
   * @return {boolean}
   */
  ;

  _proto.active = function active() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.matches(_DiscussionPage__WEBPACK_IMPORTED_MODULE_17__["default"], {
      discussion: this.attrs.discussion
    });
  }
  /**
   * Determine whether or not information about who started the discussion
   * should be displayed instead of information about the most recent reply to
   * the discussion.
   *
   * @return {boolean}
   */
  ;

  _proto.showFirstPost = function showFirstPost() {
    return ['newest', 'oldest'].indexOf(this.attrs.params.sort) !== -1;
  }
  /**
   * Determine whether or not the number of replies should be shown instead of
   * the number of unread posts.
   *
   * @return {boolean}
   */
  ;

  _proto.showRepliesCount = function showRepliesCount() {
    return this.attrs.params.sort === 'replies';
  }
  /**
   * Mark the discussion as read.
   */
  ;

  _proto.markAsRead = function markAsRead() {
    var discussion = this.attrs.discussion;

    if (discussion.isUnread()) {
      discussion.save({
        lastReadPostNumber: discussion.lastPostNumber()
      });
      m.redraw();
    }
  }
  /**
   * Build an item list of info for a discussion listing. By default this is
   * just the first/last post indicator.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.infoItems = function infoItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_9__["default"]();

    if (this.attrs.params.q) {
      var post = this.attrs.discussion.mostRelevantPost() || this.attrs.discussion.firstPost();

      if (post && post.contentType() === 'comment') {
        var excerpt = (0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_6__["default"])(post.contentPlain(), this.highlightRegExp, 175);
        items.add('excerpt', excerpt, -100);
      }
    } else {
      items.add('terminalPost', _TerminalPost__WEBPACK_IMPORTED_MODULE_12__["default"].component({
        discussion: this.attrs.discussion,
        lastPost: !this.showFirstPost()
      }));
    }

    return items;
  };

  _proto.replyCountItem = function replyCountItem() {
    var discussion = this.attrs.discussion;
    var showUnread = !this.showRepliesCount() && discussion.isUnread();

    if (showUnread) {
      return m("button", {
        className: "Button--ua-reset DiscussionListItem-count",
        onclick: this.markAsRead.bind(this)
      }, m("span", {
        "aria-hidden": "true"
      }, (0,_common_utils_abbreviateNumber__WEBPACK_IMPORTED_MODULE_10__["default"])(discussion.unreadCount())), m("span", {
        "class": "visually-hidden"
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.unread_replies_a11y_label', {
        count: discussion.replyCount()
      })));
    }

    return m("span", {
      className: "DiscussionListItem-count"
    }, m("span", {
      "aria-hidden": "true"
    }, (0,_common_utils_abbreviateNumber__WEBPACK_IMPORTED_MODULE_10__["default"])(discussion.replyCount())), m("span", {
      "class": "visually-hidden"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.total_replies_a11y_label', {
      count: discussion.replyCount()
    })));
  };

  return DiscussionListItem;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionListPane.js":
/*!****************************************************!*\
  !*** ./src/forum/components/DiscussionListPane.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionListPane)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _DiscussionList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DiscussionList */ "./src/forum/components/DiscussionList.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _DiscussionPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");






var hotEdge = function hotEdge(e) {
  if (e.pageX < 10) _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane.show();
};
/**
 * The `DiscussionListPane` component displays the list of previously viewed
 * discussions in a panel that can be displayed by moving the mouse to the left
 * edge of the screen, where it can also be pinned in place.
 *
 * ### Attrs
 *
 * - `state` A DiscussionListState object that represents the discussion lists's state.
 */


var DiscussionListPane = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionListPane, _Component);

  function DiscussionListPane() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DiscussionListPane.prototype;

  _proto.view = function view() {
    if (!this.attrs.state.hasItems()) {
      return;
    }

    return m("div", {
      className: "DiscussionPage-list"
    }, this.enoughSpace() && m(_DiscussionList__WEBPACK_IMPORTED_MODULE_2__["default"], {
      state: this.attrs.state
    }));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    var $list = $(vnode.dom); // When the mouse enters and leaves the discussions pane, we want to show
    // and hide the pane respectively. We also create a 10px 'hot edge' on the
    // left of the screen to activate the pane.

    var pane = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane;
    $list.hover(pane.show.bind(pane), pane.onmouseleave.bind(pane));
    $(document).on('mousemove', hotEdge); // When coming from another discussion, scroll to the previous postition
    // to prevent the discussion list jumping around.

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].previous.matches(_DiscussionPage__WEBPACK_IMPORTED_MODULE_4__["default"])) {
      var top = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.discussionListPaneScrollTop || 0;
      $list.scrollTop(top);
    } else {
      // If the discussion we are viewing is listed in the discussion list, then
      // we will make sure it is visible in the viewport – if it is not we will
      // scroll the list down to it.
      var $discussion = $list.find('.DiscussionListItem.active');

      if ($discussion.length) {
        var listTop = $list.offset().top;
        var listBottom = listTop + $list.outerHeight();
        var discussionTop = $discussion.offset().top;
        var discussionBottom = discussionTop + $discussion.outerHeight();

        if (discussionTop < listTop || discussionBottom > listBottom) {
          $list.scrollTop($list.scrollTop() - listTop + discussionTop);
        }
      }
    }
  };

  _proto.onremove = function onremove(vnode) {
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.discussionListPaneScrollTop = $(vnode.dom).scrollTop();
    $(document).off('mousemove', hotEdge);
  }
  /**
   * Are we on a device that's larger than we consider "mobile"?
   *
   * @returns {boolean}
   */
  ;

  _proto.enoughSpace = function enoughSpace() {
    return !$('.App-navigation').is(':visible');
  };

  return DiscussionListPane;
}(_common_Component__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionPage.tsx":
/*!*************************************************!*\
  !*** ./src/forum/components/DiscussionPage.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Page */ "./src/common/components/Page.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _DiscussionHero__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DiscussionHero */ "./src/forum/components/DiscussionHero.js");
/* harmony import */ var _DiscussionListPane__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DiscussionListPane */ "./src/forum/components/DiscussionListPane.js");
/* harmony import */ var _PostStream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PostStream */ "./src/forum/components/PostStream.js");
/* harmony import */ var _PostStreamScrubber__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./PostStreamScrubber */ "./src/forum/components/PostStreamScrubber.js");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_components_SplitDropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/components/SplitDropdown */ "./src/common/components/SplitDropdown.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/DiscussionControls */ "./src/forum/utils/DiscussionControls.js");
/* harmony import */ var _states_PostStreamState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../states/PostStreamState */ "./src/forum/states/PostStreamState.js");














/**
 * The `DiscussionPage` component displays a whole discussion page, including
 * the discussion list pane, the hero, the posts, and the sidebar.
 */
var DiscussionPage = /*#__PURE__*/function (_Page) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionPage, _Page);

  function DiscussionPage() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Page.call.apply(_Page, [this].concat(args)) || this;
    _this.discussion = null;
    _this.stream = null;
    _this.near = 0;
    _this.useBrowserScrollRestoration = true;
    return _this;
  }

  var _proto = DiscussionPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _Page.prototype.oninit.call(this, vnode);

    this.load(); // If the discussion list has been loaded, then we'll enable the pane (and
    // hide it by default). Also, if we've just come from another discussion
    // page, then we don't want Mithril to redraw the whole page – if it did,
    // then the pane would redraw which would be slow and would cause problems with
    // event handlers.

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.hasItems()) {
      var _app$pane, _app$pane2;

      (_app$pane = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane) == null ? void 0 : _app$pane.enable();
      (_app$pane2 = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane) == null ? void 0 : _app$pane2.hide();
    }

    this.bodyClass = 'App--discussion';
  };

  _proto.onremove = function onremove(vnode) {
    var _app$pane3, _app$composer, _app$composer$fields;

    _Page.prototype.onremove.call(this, vnode); // If we are indeed navigating away from this discussion, then disable the
    // discussion list pane. Also, if we're composing a reply to this
    // discussion, minimize the composer – unless it's empty, in which case
    // we'll just close it.


    (_app$pane3 = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].pane) == null ? void 0 : _app$pane3.disable();

    if (this.discussion && _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.composingReplyTo(this.discussion) && !((_app$composer = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer) != null && (_app$composer$fields = _app$composer.fields) != null && _app$composer$fields.content())) {
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.hide();
    } else {
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.minimize();
    }
  };

  _proto.view = function view() {
    return m("div", {
      className: "DiscussionPage"
    }, m(_DiscussionListPane__WEBPACK_IMPORTED_MODULE_5__["default"], {
      state: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions
    }), m("div", {
      className: "DiscussionPage-discussion"
    }, this.discussion ? this.pageContent().toArray() : this.loadingItems().toArray()));
  }
  /**
   * List of components shown while the discussion is loading.
   */
  ;

  _proto.loadingItems = function loadingItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('spinner', m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__["default"], null), 100);
    return items;
  }
  /**
   * Function that renders the `sidebarItems` ItemList.
   */
  ;

  _proto.sidebar = function sidebar() {
    return m("nav", {
      className: "DiscussionPage-nav"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__["default"])(this.sidebarItems().toArray())));
  }
  /**
   * Renders the discussion's hero.
   */
  ;

  _proto.hero = function hero() {
    return m(_DiscussionHero__WEBPACK_IMPORTED_MODULE_4__["default"], {
      discussion: this.discussion
    });
  }
  /**
   * List of items rendered as the main page content.
   */
  ;

  _proto.pageContent = function pageContent() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('hero', this.hero(), 100);
    items.add('main', m("div", {
      className: "container"
    }, this.mainContent().toArray()), 10);
    return items;
  }
  /**
   * List of items rendered inside the main page content container.
   */
  ;

  _proto.mainContent = function mainContent() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('sidebar', this.sidebar(), 100);
    items.add('poststream', m("div", {
      className: "DiscussionPage-stream"
    }, _PostStream__WEBPACK_IMPORTED_MODULE_6__["default"].component({
      discussion: this.discussion,
      stream: this.stream,
      onPositionChange: this.positionChanged.bind(this)
    })), 10);
    return items;
  }
  /**
   * Load the discussion from the API or use the preloaded one.
   */
  ;

  _proto.load = function load() {
    var preloadedDiscussion = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].preloadedApiDocument();

    if (preloadedDiscussion) {
      // We must wrap this in a setTimeout because if we are mounting this
      // component for the first time on page load, then any calls to m.redraw
      // will be ineffective and thus any configs (scroll code) will be run
      // before stuff is drawn to the page.
      setTimeout(this.show.bind(this, preloadedDiscussion), 0);
    } else {
      var params = this.requestParams();
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.find('discussions', m.route.param('id'), params).then(this.show.bind(this));
    }

    m.redraw();
  }
  /**
   * Get the parameters that should be passed in the API request to get the
   * discussion.
   */
  ;

  _proto.requestParams = function requestParams() {
    return {
      bySlug: true,
      page: {
        near: this.near
      }
    };
  }
  /**
   * Initialize the component to display the given discussion.
   */
  ;

  _proto.show = function show(discussion) {
    var _includedPosts$0$numb,
        _includedPosts$,
        _this2 = this;

    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].history.push('discussion', discussion.title());
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitle(discussion.title());
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitleCount(0); // When the API responds with a discussion, it will also include a number of
    // posts. Some of these posts are included because they are on the first
    // page of posts we want to display (determined by the `near` parameter) –
    // others may be included because due to other relationships introduced by
    // extensions. We need to distinguish the two so we don't end up displaying
    // the wrong posts. We do so by filtering out the posts that don't have
    // the 'discussion' relationship linked, then sorting and splicing.

    var includedPosts = [];

    if (discussion.payload && discussion.payload.included) {
      var discussionId = discussion.id();
      includedPosts = discussion.payload.included.filter(function (record) {
        return record.type === 'posts' && record.relationships && record.relationships.discussion && !Array.isArray(record.relationships.discussion.data) && record.relationships.discussion.data.id === discussionId;
      }).map(function (record) {
        return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.getById('posts', record.id);
      }).sort(function (a, b) {
        var _a$createdAt$getTime, _a$createdAt, _b$createdAt$getTime, _b$createdAt;

        return ((_a$createdAt$getTime = a == null ? void 0 : (_a$createdAt = a.createdAt()) == null ? void 0 : _a$createdAt.getTime()) != null ? _a$createdAt$getTime : 0) - ((_b$createdAt$getTime = b == null ? void 0 : (_b$createdAt = b.createdAt()) == null ? void 0 : _b$createdAt.getTime()) != null ? _b$createdAt$getTime : 0);
      }).slice(0, 20);
    } // Set up the post stream for this discussion, along with the first page of
    // posts we want to display. Tell the stream to scroll down and highlight
    // the specific post that was routed to.


    this.stream = new _states_PostStreamState__WEBPACK_IMPORTED_MODULE_12__["default"](discussion, includedPosts);
    this.stream.goToNumber(m.route.param('near') || ((_includedPosts$0$numb = (_includedPosts$ = includedPosts[0]) == null ? void 0 : _includedPosts$.number()) != null ? _includedPosts$0$numb : 0), true).then(function () {
      _this2.discussion = discussion;
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.set('discussion', discussion);
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.set('stream', _this2.stream);
    });
  }
  /**
   * Build an item list for the contents of the sidebar.
   */
  ;

  _proto.sidebarItems = function sidebarItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();

    if (this.discussion) {
      items.add('controls', _common_components_SplitDropdown__WEBPACK_IMPORTED_MODULE_9__["default"].component({
        icon: 'fas fa-ellipsis-v',
        className: 'App-primaryControl',
        buttonClassName: 'Button--primary',
        accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label')
      }, _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_11__["default"].controls(this.discussion, this).toArray()), 100);
    }

    items.add('scrubber', _PostStreamScrubber__WEBPACK_IMPORTED_MODULE_7__["default"].component({
      stream: this.stream,
      className: 'App-titleControl'
    }), -100);
    return items;
  }
  /**
   * When the posts that are visible in the post stream change (i.e. the user
   * scrolls up or down), then we update the URL and mark the posts as read.
   */
  ;

  _proto.positionChanged = function positionChanged(startNumber, endNumber) {
    var discussion = this.discussion;
    if (!discussion) return; // Construct a URL to this discussion with the updated position, then
    // replace it into the window's history and our own history stack.

    var url = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(discussion, this.near = startNumber);
    window.history.replaceState(null, document.title, url);
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].history.push('discussion', discussion.title()); // If the user hasn't read past here before, then we'll update their read
    // state and redraw.

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user && endNumber > (discussion.lastReadPostNumber() || 0)) {
      discussion.save({
        lastReadPostNumber: endNumber
      });
      m.redraw();
    }
  };

  return DiscussionPage;
}(_common_components_Page__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionRenamedNotification.js":
/*!***************************************************************!*\
  !*** ./src/forum/components/DiscussionRenamedNotification.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionRenamedNotification)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Notification */ "./src/forum/components/Notification.js");



/**
 * The `DiscussionRenamedNotification` component displays a notification which
 * indicates that a discussion has had its title changed.
 *
 * ### Attrs
 *
 * - All of the attrs for Notification
 */

var DiscussionRenamedNotification = /*#__PURE__*/function (_Notification) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionRenamedNotification, _Notification);

  function DiscussionRenamedNotification() {
    return _Notification.apply(this, arguments) || this;
  }

  var _proto = DiscussionRenamedNotification.prototype;

  _proto.icon = function icon() {
    return 'fas fa-pencil-alt';
  };

  _proto.href = function href() {
    var notification = this.attrs.notification;
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(notification.subject(), notification.content().postNumber);
  };

  _proto.content = function content() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.discussion_renamed_text', {
      user: this.attrs.notification.fromUser()
    });
  };

  return DiscussionRenamedNotification;
}(_Notification__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionRenamedPost.js":
/*!*******************************************************!*\
  !*** ./src/forum/components/DiscussionRenamedPost.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionRenamedPost)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _EventPost__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EventPost */ "./src/forum/components/EventPost.js");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");




/**
 * The `DiscussionRenamedPost` component displays a discussion event post
 * indicating that the discussion has been renamed.
 *
 * ### Attrs
 *
 * - All of the attrs for EventPost
 */

var DiscussionRenamedPost = /*#__PURE__*/function (_EventPost) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionRenamedPost, _EventPost);

  function DiscussionRenamedPost() {
    return _EventPost.apply(this, arguments) || this;
  }

  var _proto = DiscussionRenamedPost.prototype;

  _proto.icon = function icon() {
    return 'fas fa-pencil-alt';
  };

  _proto.description = function description(data) {
    var renamed = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_stream.discussion_renamed_text', data);
    var oldName = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_stream.discussion_renamed_old_tooltip', data);
    return m("span", {
      title: (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_3__["default"])(oldName)
    }, renamed);
  };

  _proto.descriptionData = function descriptionData() {
    var post = this.attrs.post;
    var oldTitle = post.content()[0];
    var newTitle = post.content()[1];
    return {
      old: oldTitle,
      "new": m("strong", {
        className: "DiscussionRenamedPost-new"
      }, newTitle)
    };
  };

  return DiscussionRenamedPost;
}(_EventPost__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/DiscussionsSearchSource.tsx":
/*!**********************************************************!*\
  !*** ./src/forum/components/DiscussionsSearchSource.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionsSearchSource)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_helpers_highlight__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/highlight */ "./src/common/helpers/highlight.tsx");
/* harmony import */ var _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/LinkButton */ "./src/common/components/LinkButton.js");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");







/**
 * The `DiscussionsSearchSource` finds and displays discussion search results in
 * the search dropdown.
 */
var DiscussionsSearchSource = /*#__PURE__*/function () {
  function DiscussionsSearchSource() {
    this.results = new Map();
  }

  var _proto = DiscussionsSearchSource.prototype;

  _proto.search = /*#__PURE__*/function () {
    var _search = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee(query) {
      var _this = this;

      var params;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              query = query.toLowerCase();
              this.results.set(query, []);
              params = {
                filter: {
                  q: query
                },
                page: {
                  limit: 3
                },
                include: 'mostRelevantPost'
              };
              return _context.abrupt("return", _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].store.find('discussions', params).then(function (results) {
                _this.results.set(query, results);

                m.redraw();
              }));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function search(_x) {
      return _search.apply(this, arguments);
    }

    return search;
  }();

  _proto.view = function view(query) {
    query = query.toLowerCase();
    var results = (this.results.get(query) || []).map(function (discussion) {
      var _mostRelevantPost$con;

      var mostRelevantPost = discussion.mostRelevantPost();
      return m("li", {
        className: "DiscussionSearchResult",
        "data-index": 'discussions' + discussion.id()
      }, m(_common_components_Link__WEBPACK_IMPORTED_MODULE_5__["default"], {
        href: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route.discussion(discussion, mostRelevantPost && mostRelevantPost.number() || 0)
      }, m("div", {
        className: "DiscussionSearchResult-title"
      }, (0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_3__["default"])(discussion.title(), query)), mostRelevantPost ? m("div", {
        className: "DiscussionSearchResult-excerpt"
      }, (0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_3__["default"])((_mostRelevantPost$con = mostRelevantPost.contentPlain()) != null ? _mostRelevantPost$con : '', query, 100)) : ''));
    });
    return [m("li", {
      className: "Dropdown-header"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.search.discussions_heading')), m("li", null, m(_common_components_LinkButton__WEBPACK_IMPORTED_MODULE_4__["default"], {
      icon: "fas fa-search",
      href: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route('index', {
        q: query
      })
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.search.all_discussions_button', {
      query: query
    })))].concat(results);
  };

  return DiscussionsSearchSource;
}();



/***/ }),

/***/ "./src/forum/components/DiscussionsUserPage.js":
/*!*****************************************************!*\
  !*** ./src/forum/components/DiscussionsUserPage.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionsUserPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _UserPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UserPage */ "./src/forum/components/UserPage.js");
/* harmony import */ var _DiscussionList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DiscussionList */ "./src/forum/components/DiscussionList.js");
/* harmony import */ var _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../states/DiscussionListState */ "./src/forum/states/DiscussionListState.ts");




/**
 * The `DiscussionsUserPage` component shows a discussion list inside of a user
 * page.
 */

var DiscussionsUserPage = /*#__PURE__*/function (_UserPage) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionsUserPage, _UserPage);

  function DiscussionsUserPage() {
    return _UserPage.apply(this, arguments) || this;
  }

  var _proto = DiscussionsUserPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _UserPage.prototype.oninit.call(this, vnode);

    this.loadUser(m.route.param('username'));
  };

  _proto.show = function show(user) {
    _UserPage.prototype.show.call(this, user);

    this.state = new _states_DiscussionListState__WEBPACK_IMPORTED_MODULE_3__["default"]({
      filter: {
        author: user.username()
      },
      sort: 'newest'
    });
    this.state.refresh();
  };

  _proto.content = function content() {
    return m("div", {
      className: "DiscussionsUserPage"
    }, _DiscussionList__WEBPACK_IMPORTED_MODULE_2__["default"].component({
      state: this.state
    }));
  };

  return DiscussionsUserPage;
}(_UserPage__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/EditPostComposer.js":
/*!**************************************************!*\
  !*** ./src/forum/components/EditPostComposer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ EditPostComposer)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _ComposerBody__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ComposerBody */ "./src/forum/components/ComposerBody.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");







function minimizeComposerIfFullScreen(e) {
  if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.isFullScreen()) {
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.minimize();
    e.stopPropagation();
  }
}
/**
 * The `EditPostComposer` component displays the composer content for editing a
 * post. It sets the initial content to the content of the post that is being
 * edited, and adds a header control to indicate which post is being edited.
 *
 * ### Attrs
 *
 * - All of the attrs for ComposerBody
 * - `post`
 */


var EditPostComposer = /*#__PURE__*/function (_ComposerBody) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(EditPostComposer, _ComposerBody);

  function EditPostComposer() {
    return _ComposerBody.apply(this, arguments) || this;
  }

  EditPostComposer.initAttrs = function initAttrs(attrs) {
    _ComposerBody.initAttrs.call(this, attrs);

    attrs.submitLabel = attrs.submitLabel || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_edit.submit_button');
    attrs.confirmExit = attrs.confirmExit || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_edit.discard_confirmation');
    attrs.originalContent = attrs.originalContent || attrs.post.content();
    attrs.user = attrs.user || attrs.post.user();
    attrs.post.editedContent = attrs.originalContent;
  };

  var _proto = EditPostComposer.prototype;

  _proto.headerItems = function headerItems() {
    var items = _ComposerBody.prototype.headerItems.call(this);

    var post = this.attrs.post;
    items.add('title', m("h3", null, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__["default"])('fas fa-pencil-alt'), ' ', m(_common_components_Link__WEBPACK_IMPORTED_MODULE_4__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(post.discussion(), post.number()),
      onclick: minimizeComposerIfFullScreen
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_edit.post_link', {
      number: post.number(),
      discussion: post.discussion().title()
    }))));
    return items;
  }
  /**
   * Jump to the preview when triggered by the text editor.
   */
  ;

  _proto.jumpToPreview = function jumpToPreview(e) {
    minimizeComposerIfFullScreen(e);
    m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(this.attrs.post));
  }
  /**
   * Get the data to submit to the server when the post is saved.
   *
   * @return {Record<string, unknown>}
   */
  ;

  _proto.data = function data() {
    return {
      content: this.composer.fields.content()
    };
  };

  _proto.onsubmit = function onsubmit() {
    var _this = this;

    var discussion = this.attrs.post.discussion();
    this.loading = true;
    var data = this.data();
    this.attrs.post.save(data).then(function (post) {
      // If we're currently viewing the discussion which this edit was made
      // in, then we can scroll to the post.
      if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].viewingDiscussion(discussion)) {
        _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.get('stream').goToNumber(post.number());
      } else {
        // Otherwise, we'll create an alert message to inform the user that
        // their edit has been made, containing a button which will
        // transition to their edited post when clicked.
        var alert;
        var viewButton = _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          className: 'Button Button--link',
          onclick: function onclick() {
            m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(post));
            _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].alerts.dismiss(alert);
          }
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_edit.view_button'));
        alert = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].alerts.show({
          type: 'success',
          controls: [viewButton]
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_edit.edited_message'));
      }

      _this.composer.hide();
    }, this.loaded.bind(this));
  };

  return EditPostComposer;
}(_ComposerBody__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/EventPost.js":
/*!*******************************************!*\
  !*** ./src/forum/components/EventPost.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ EventPost)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _Post__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Post */ "./src/forum/components/Post.js");
/* harmony import */ var _common_utils_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/string */ "./src/common/utils/string.ts");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");







/**
 * The `EventPost` component displays a post which indicating a discussion
 * event, like a discussion being renamed or stickied. Subclasses must implement
 * the `icon` and `description` methods.
 *
 * ### Attrs
 *
 * - All of the attrs for `Post`
 *
 * @abstract
 */

var EventPost = /*#__PURE__*/function (_Post) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(EventPost, _Post);

  function EventPost() {
    return _Post.apply(this, arguments) || this;
  }

  var _proto = EventPost.prototype;

  _proto.elementAttrs = function elementAttrs() {
    var attrs = _Post.prototype.elementAttrs.call(this);

    attrs.className = (attrs.className || '') + ' EventPost ' + (0,_common_utils_string__WEBPACK_IMPORTED_MODULE_3__.ucfirst)(this.attrs.post.contentType()) + 'Post';
    return attrs;
  };

  _proto.content = function content() {
    var user = this.attrs.post.user();
    var username = (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_4__["default"])(user);
    var data = Object.assign(this.descriptionData(), {
      user: user,
      username: user ? m(_common_components_Link__WEBPACK_IMPORTED_MODULE_6__["default"], {
        className: "EventPost-user",
        href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.user(user)
      }, username) : username
    });
    return _Post.prototype.content.call(this).concat([(0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__["default"])(this.icon(), {
      className: 'EventPost-icon'
    }), m("div", {
      "class": "EventPost-info"
    }, this.description(data))]);
  }
  /**
   * Get the name of the event icon.
   *
   * @return {string}
   */
  ;

  _proto.icon = function icon() {
    return '';
  }
  /**
   * Get the description text for the event.
   *
   * @param {Record<string, unknown>} data
   * @return {import('mithril').Children} The description to render in the DOM
   */
  ;

  _proto.description = function description(data) {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans(this.descriptionKey(), data);
  }
  /**
   * Get the translation key for the description of the event.
   *
   * @return {string}
   */
  ;

  _proto.descriptionKey = function descriptionKey() {
    return '';
  }
  /**
   * Get the translation data for the description of the event.
   *
   * @return {Record<string, unknown>}
   */
  ;

  _proto.descriptionData = function descriptionData() {
    return {};
  };

  return EventPost;
}(_Post__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/ForgotPasswordModal.tsx":
/*!******************************************************!*\
  !*** ./src/forum/components/ForgotPasswordModal.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ForgotPasswordModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");







/**
 * The `ForgotPasswordModal` component displays a modal which allows the user to
 * enter their email address and request a link to reset their password.
 */
var ForgotPasswordModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ForgotPasswordModal, _Modal);

  function ForgotPasswordModal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Modal.call.apply(_Modal, [this].concat(args)) || this;
    _this.email = void 0;
    _this.success = false;
    return _this;
  }

  var _proto = ForgotPasswordModal.prototype;

  _proto.oninit = function oninit(vnode) {
    _Modal.prototype.oninit.call(this, vnode);

    this.email = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_5__["default"])(this.attrs.email || '');
  };

  _proto.className = function className() {
    return 'ForgotPasswordModal Modal--small';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.title');
  };

  _proto.content = function content() {
    if (this.success) {
      return m("div", {
        className: "Modal-body"
      }, m("div", {
        className: "Form Form--centered"
      }, m("p", {
        className: "helpText"
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.email_sent_message')), m("div", {
        className: "Form-group"
      }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"], {
        className: "Button Button--primary Button--block",
        onclick: this.hide.bind(this)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.dismiss_button')))));
    }

    var emailLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_4__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.email_placeholder'));
    return m("div", {
      className: "Modal-body"
    }, m("div", {
      className: "Form Form--centered"
    }, m("p", {
      className: "helpText"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.text')), m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      name: "email",
      type: "email",
      placeholder: emailLabel,
      "aria-label": emailLabel,
      bidi: this.email,
      disabled: this.loading
    })), m("div", {
      className: "Form-group"
    }, _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--primary Button--block',
      type: 'submit',
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.submit_button')))));
  };

  _proto.onsubmit = function onsubmit(e) {
    var _this2 = this;

    e.preventDefault();
    this.loading = true;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].request({
      method: 'POST',
      url: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('apiUrl') + '/forgot',
      body: {
        email: this.email()
      },
      errorHandler: this.onerror.bind(this)
    }).then(function () {
      _this2.success = true;
      _this2.alertAttrs = null;
    })["catch"](function () {}).then(this.loaded.bind(this));
  };

  _proto.onerror = function onerror(error) {
    if (error.status === 404 && error.alert) {
      error.alert.content = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.forgot_password.not_found_message');
    }

    _Modal.prototype.onerror.call(this, error);
  };

  return ForgotPasswordModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/HeaderPrimary.js":
/*!***********************************************!*\
  !*** ./src/forum/components/HeaderPrimary.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ HeaderPrimary)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");




/**
 * The `HeaderPrimary` component displays primary header controls. On the
 * default skin, these are shown just to the right of the forum title.
 */

var HeaderPrimary = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(HeaderPrimary, _Component);

  function HeaderPrimary() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = HeaderPrimary.prototype;

  _proto.view = function view() {
    return m("ul", {
      className: "Header-controls"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__["default"])(this.items().toArray()));
  }
  /**
   * Build an item list for the controls.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.items = function items() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__["default"]();
  };

  return HeaderPrimary;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/HeaderSecondary.js":
/*!*************************************************!*\
  !*** ./src/forum/components/HeaderSecondary.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ HeaderSecondary)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _LogInModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LogInModal */ "./src/forum/components/LogInModal.tsx");
/* harmony import */ var _SignUpModal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SignUpModal */ "./src/forum/components/SignUpModal.tsx");
/* harmony import */ var _SessionDropdown__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SessionDropdown */ "./src/forum/components/SessionDropdown.js");
/* harmony import */ var _common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/components/SelectDropdown */ "./src/common/components/SelectDropdown.js");
/* harmony import */ var _NotificationsDropdown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./NotificationsDropdown */ "./src/forum/components/NotificationsDropdown.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _components_Search__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/Search */ "./src/forum/components/Search.tsx");












/**
 * The `HeaderSecondary` component displays secondary header controls, such as
 * the search box and the user menu. On the default skin, these are shown on the
 * right side of the header.
 */

var HeaderSecondary = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(HeaderSecondary, _Component);

  function HeaderSecondary() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = HeaderSecondary.prototype;

  _proto.view = function view() {
    return m("ul", {
      className: "Header-controls"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__["default"])(this.items().toArray()));
  }
  /**
   * Build an item list for the controls.
   *
   * @return {ItemList}
   */
  ;

  _proto.items = function items() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_9__["default"]();
    items.add('search', _components_Search__WEBPACK_IMPORTED_MODULE_11__["default"].component({
      state: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search
    }), 30);

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('showLanguageSelector') && Object.keys(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].data.locales).length > 1) {
      var locales = [];

      var _loop = function _loop(locale) {
        locales.push(_common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          active: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].data.locale === locale,
          icon: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].data.locale === locale ? 'fas fa-check' : true,
          onclick: function onclick() {
            if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
              _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.savePreferences({
                locale: locale
              }).then(function () {
                return window.location.reload();
              });
            } else {
              document.cookie = "locale=" + locale + "; path=/; expires=Tue, 19 Jan 2038 03:14:07 GMT";
              window.location.reload();
            }
          }
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].data.locales[locale]));
      };

      for (var locale in _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].data.locales) {
        _loop(locale);
      }

      items.add('locale', _common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_7__["default"].component({
        buttonClassName: 'Button Button--link',
        accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.header.locale_dropdown_accessible_label')
      }, locales), 20);
    }

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
      items.add('notifications', _NotificationsDropdown__WEBPACK_IMPORTED_MODULE_8__["default"].component({
        state: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].notifications
      }), 10);
      items.add('session', _SessionDropdown__WEBPACK_IMPORTED_MODULE_6__["default"].component(), 0);
    } else {
      if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('allowSignUp')) {
        items.add('signUp', _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          className: 'Button Button--link',
          onclick: function onclick() {
            return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_SignUpModal__WEBPACK_IMPORTED_MODULE_5__["default"]);
          }
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.header.sign_up_link')), 10);
      }

      items.add('logIn', _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
        className: 'Button Button--link',
        onclick: function onclick() {
          return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_LogInModal__WEBPACK_IMPORTED_MODULE_4__["default"]);
        }
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.header.log_in_link')), 0);
    }

    return items;
  };

  return HeaderSecondary;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/IndexPage.js":
/*!*******************************************!*\
  !*** ./src/forum/components/IndexPage.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ IndexPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Page */ "./src/common/components/Page.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _DiscussionList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DiscussionList */ "./src/forum/components/DiscussionList.js");
/* harmony import */ var _WelcomeHero__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WelcomeHero */ "./src/forum/components/WelcomeHero.tsx");
/* harmony import */ var _DiscussionComposer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DiscussionComposer */ "./src/forum/components/DiscussionComposer.js");
/* harmony import */ var _LogInModal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LogInModal */ "./src/forum/components/LogInModal.tsx");
/* harmony import */ var _DiscussionPage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/components/LinkButton */ "./src/common/components/LinkButton.js");
/* harmony import */ var _common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../common/components/SelectDropdown */ "./src/common/components/SelectDropdown.js");














/**
 * The `IndexPage` component displays the index page, including the welcome
 * hero, the sidebar, and the discussion list.
 */

var IndexPage = /*#__PURE__*/function (_Page) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(IndexPage, _Page);

  function IndexPage() {
    return _Page.apply(this, arguments) || this;
  }

  var _proto = IndexPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _Page.prototype.oninit.call(this, vnode); // If the user is returning from a discussion page, then take note of which
    // discussion they have just visited. After the view is rendered, we will
    // scroll down so that this discussion is in view.


    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].previous.matches(_DiscussionPage__WEBPACK_IMPORTED_MODULE_9__["default"])) {
      this.lastDiscussion = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].previous.get('discussion');
    } // If the user is coming from the discussion list, then they have either
    // just switched one of the parameters (filter, sort, search) or they
    // probably want to refresh the results. We will clear the discussion list
    // cache so that results are reloaded.


    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].previous.matches(IndexPage)) {
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.clear();
    }

    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.refreshParams(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search.params(), m.route.param('page'));
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].history.push('index', _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.header.back_to_index_tooltip'));
    this.bodyClass = 'App--index';
    this.scrollTopOnCreate = false;
  };

  _proto.view = function view() {
    return m("div", {
      className: "IndexPage"
    }, this.hero(), m("div", {
      className: "container"
    }, m("div", {
      className: "sideNavContainer"
    }, m("nav", {
      className: "IndexPage-nav sideNav"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__["default"])(this.sidebarItems().toArray()))), m("div", {
      className: "IndexPage-results sideNavOffset"
    }, m("div", {
      className: "IndexPage-toolbar"
    }, m("ul", {
      className: "IndexPage-toolbar-view"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__["default"])(this.viewItems().toArray())), m("ul", {
      className: "IndexPage-toolbar-action"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_4__["default"])(this.actionItems().toArray()))), m(_DiscussionList__WEBPACK_IMPORTED_MODULE_5__["default"], {
      state: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions
    })))));
  };

  _proto.setTitle = function setTitle() {
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitle(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.meta_title_text'));
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitleCount(0);
  };

  _proto.oncreate = function oncreate(vnode) {
    _Page.prototype.oncreate.call(this, vnode);

    this.setTitle(); // Work out the difference between the height of this hero and that of the
    // previous hero. Maintain the same scroll position relative to the bottom
    // of the hero so that the sidebar doesn't jump around.

    var oldHeroHeight = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.heroHeight;
    var heroHeight = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.heroHeight = this.$('.Hero').outerHeight() || 0;
    var scrollTop = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.scrollTop;
    $('#app').css('min-height', $(window).height() + heroHeight); // Let browser handle scrolling on page reload.

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].previous.type == null) return; // Only retain scroll position if we're coming from a discussion page.
    // Otherwise, we've just changed the filter, so we should go to the top of the page.

    if (this.lastDiscussion) {
      $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);
    } else {
      $(window).scrollTop(0);
    } // If we've just returned from a discussion page, then the constructor will
    // have set the `lastDiscussion` property. If this is the case, we want to
    // scroll down to that discussion so that it's in view.


    if (this.lastDiscussion) {
      var $discussion = this.$("li[data-id=\"" + this.lastDiscussion.id() + "\"] .DiscussionListItem");

      if ($discussion.length) {
        var indexTop = $('#header').outerHeight();
        var indexBottom = $(window).height();
        var discussionTop = $discussion.offset().top;
        var discussionBottom = discussionTop + $discussion.outerHeight();

        if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {
          $(window).scrollTop(discussionTop - indexTop);
        }
      }
    }
  };

  _proto.onbeforeremove = function onbeforeremove(vnode) {
    _Page.prototype.onbeforeremove.call(this, vnode); // Save the scroll position so we can restore it when we return to the
    // discussion list.


    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].cache.scrollTop = $(window).scrollTop();
  };

  _proto.onremove = function onremove(vnode) {
    _Page.prototype.onremove.call(this, vnode);

    $('#app').css('min-height', '');
  }
  /**
   * Get the component to display as the hero.
   *
   * @return {import('mithril').Children}
   */
  ;

  _proto.hero = function hero() {
    return _WelcomeHero__WEBPACK_IMPORTED_MODULE_6__["default"].component();
  }
  /**
   * Build an item list for the sidebar of the index page. By default this is a
   * "New Discussion" button, and then a DropdownSelect component containing a
   * list of navigation items.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.sidebarItems = function sidebarItems() {
    var _this = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    var canStartDiscussion = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('canStartDiscussion') || !_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user;
    items.add('newDiscussion', _common_components_Button__WEBPACK_IMPORTED_MODULE_11__["default"].component({
      icon: 'fas fa-edit',
      className: 'Button Button--primary IndexPage-newDiscussion',
      itemClassName: 'App-primaryControl',
      onclick: function onclick() {
        // If the user is not logged in, the promise rejects, and a login modal shows up.
        // Since that's already handled, we dont need to show an error message in the console.
        return _this.newDiscussionAction()["catch"](function () {});
      },
      disabled: !canStartDiscussion
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button')));
    items.add('nav', _common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_13__["default"].component({
      buttonClassName: 'Button',
      className: 'App-titleControl',
      accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.toggle_sidenav_dropdown_accessible_label')
    }, this.navItems(this).toArray()));
    return items;
  }
  /**
   * Build an item list for the navigation in the sidebar of the index page. By
   * default this is just the 'All Discussions' link.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.navItems = function navItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    var params = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search.stickyParams();
    items.add('allDiscussions', _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_12__["default"].component({
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route('index', params),
      icon: 'far fa-comments'
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.all_discussions_link')), 100);
    return items;
  }
  /**
   * Build an item list for the part of the toolbar which is concerned with how
   * the results are displayed. By default this is just a select box to change
   * the way discussions are sorted.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.viewItems = function viewItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    var sortMap = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.sortMap();
    var sortOptions = Object.keys(sortMap).reduce(function (acc, sortId) {
      acc[sortId] = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans("core.forum.index_sort." + sortId + "_button");
      return acc;
    }, {});
    items.add('sort', _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_10__["default"].component({
      buttonClassName: 'Button',
      label: sortOptions[_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search.params().sort] || Object.keys(sortMap).map(function (key) {
        return sortOptions[key];
      })[0],
      accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index_sort.toggle_dropdown_accessible_label')
    }, Object.keys(sortOptions).map(function (value) {
      var label = sortOptions[value];
      var active = (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search.params().sort || Object.keys(sortMap)[0]) === value;
      return _common_components_Button__WEBPACK_IMPORTED_MODULE_11__["default"].component({
        icon: active ? 'fas fa-check' : true,
        onclick: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search.changeSort.bind(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].search, value),
        active: active
      }, label);
    })));
    return items;
  }
  /**
   * Build an item list for the part of the toolbar which is about taking action
   * on the results. By default this is just a "mark all as read" button.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.actionItems = function actionItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('refresh', _common_components_Button__WEBPACK_IMPORTED_MODULE_11__["default"].component({
      title: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.refresh_tooltip'),
      icon: 'fas fa-sync',
      className: 'Button Button--icon',
      onclick: function onclick() {
        _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].discussions.refresh();

        if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
          _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.find('users', _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.id());
          m.redraw();
        }
      }
    }));

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
      items.add('markAllAsRead', _common_components_Button__WEBPACK_IMPORTED_MODULE_11__["default"].component({
        title: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.mark_all_as_read_tooltip'),
        icon: 'fas fa-check',
        className: 'Button Button--icon',
        onclick: this.markAllAsRead.bind(this)
      }));
    }

    return items;
  }
  /**
   * Open the composer for a new discussion or prompt the user to login.
   *
   * @return {Promise<void>}
   */
  ;

  _proto.newDiscussionAction = function newDiscussionAction() {
    return new Promise(function (resolve, reject) {
      if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
        _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.load(_DiscussionComposer__WEBPACK_IMPORTED_MODULE_7__["default"], {
          user: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user
        });
        _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.show();
        return resolve(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer);
      } else {
        _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_LogInModal__WEBPACK_IMPORTED_MODULE_8__["default"]);
        return reject();
      }
    });
  }
  /**
   * Mark all discussions as read.
   */
  ;

  _proto.markAllAsRead = function markAllAsRead() {
    var confirmation = confirm(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.index.mark_all_as_read_confirmation'));

    if (confirmation) {
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.save({
        markedAllAsReadAt: new Date()
      });
    }
  };

  return IndexPage;
}(_common_components_Page__WEBPACK_IMPORTED_MODULE_2__["default"]);

IndexPage.providesInitialSearch = true;


/***/ }),

/***/ "./src/forum/components/LoadingPost.js":
/*!*********************************************!*\
  !*** ./src/forum/components/LoadingPost.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LoadingPost)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");



/**
 * The `LoadingPost` component shows a placeholder that looks like a post,
 * indicating that the post is loading.
 */

var LoadingPost = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(LoadingPost, _Component);

  function LoadingPost() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LoadingPost.prototype;

  _proto.view = function view() {
    return m("div", {
      className: "Post CommentPost LoadingPost"
    }, m("header", {
      className: "Post-header"
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_2__["default"])(null, {
      className: 'PostUser-avatar'
    }), m("div", {
      className: "fakeText"
    })), m("div", {
      className: "Post-body"
    }, m("div", {
      className: "fakeText"
    }), m("div", {
      className: "fakeText"
    }), m("div", {
      className: "fakeText"
    })));
  };

  return LoadingPost;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/LogInButton.js":
/*!*********************************************!*\
  !*** ./src/forum/components/LogInButton.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LogInButton)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");



/**
 * The `LogInButton` component displays a social login button which will open
 * a popup window containing the specified path.
 *
 * ### Attrs
 *
 * - `path`
 */

var LogInButton = /*#__PURE__*/function (_Button) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(LogInButton, _Button);

  function LogInButton() {
    return _Button.apply(this, arguments) || this;
  }

  LogInButton.initAttrs = function initAttrs(attrs) {
    attrs.className = (attrs.className || '') + ' LogInButton';

    attrs.onclick = function () {
      var width = 580;
      var height = 400;
      var $window = $(window);
      window.open(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('baseUrl') + attrs.path, 'logInPopup', "width=" + width + "," + ("height=" + height + ",") + ("top=" + ($window.height() / 2 - height / 2) + ",") + ("left=" + ($window.width() / 2 - width / 2) + ",") + 'status=no,scrollbars=yes,resizable=no');
    };

    _Button.initAttrs.call(this, attrs);
  };

  return LogInButton;
}(_common_components_Button__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/LogInButtons.js":
/*!**********************************************!*\
  !*** ./src/forum/components/LogInButtons.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LogInButtons)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");



/**
 * The `LogInButtons` component displays a collection of social login buttons.
 */

var LogInButtons = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(LogInButtons, _Component);

  function LogInButtons() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = LogInButtons.prototype;

  _proto.view = function view() {
    return m("div", {
      className: "LogInButtons"
    }, this.items().toArray());
  }
  /**
   * Build a list of LogInButton components.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.items = function items() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_2__["default"]();
  };

  return LogInButtons;
}(_common_Component__WEBPACK_IMPORTED_MODULE_1__["default"]);



/***/ }),

/***/ "./src/forum/components/LogInModal.tsx":
/*!*********************************************!*\
  !*** ./src/forum/components/LogInModal.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LogInModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _ForgotPasswordModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ForgotPasswordModal */ "./src/forum/components/ForgotPasswordModal.tsx");
/* harmony import */ var _SignUpModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SignUpModal */ "./src/forum/components/SignUpModal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _LogInButtons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LogInButtons */ "./src/forum/components/LogInButtons.js");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");











var LogInModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(LogInModal, _Modal);

  function LogInModal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Modal.call.apply(_Modal, [this].concat(args)) || this;
    _this.identification = void 0;
    _this.password = void 0;
    _this.remember = void 0;
    return _this;
  }

  var _proto = LogInModal.prototype;

  _proto.oninit = function oninit(vnode) {
    _Modal.prototype.oninit.call(this, vnode);

    this.identification = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(this.attrs.identification || '');
    this.password = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(this.attrs.password || '');
    this.remember = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(!!this.attrs.remember);
  };

  _proto.className = function className() {
    return 'LogInModal Modal--small';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.title');
  };

  _proto.content = function content() {
    return [m("div", {
      className: "Modal-body"
    }, this.body()), m("div", {
      className: "Modal-footer"
    }, this.footer())];
  };

  _proto.body = function body() {
    return [m(_LogInButtons__WEBPACK_IMPORTED_MODULE_6__["default"], null), m("div", {
      className: "Form Form--centered"
    }, this.fields().toArray())];
  };

  _proto.fields = function fields() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__["default"]();
    var identificationLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.username_or_email_placeholder'));
    var passwordLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.password_placeholder'));
    items.add('identification', m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      name: "identification",
      type: "text",
      placeholder: identificationLabel,
      "aria-label": identificationLabel,
      bidi: this.identification,
      disabled: this.loading
    })), 30);
    items.add('password', m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      name: "password",
      type: "password",
      autocomplete: "current-password",
      placeholder: passwordLabel,
      "aria-label": passwordLabel,
      bidi: this.password,
      disabled: this.loading
    })), 20);
    items.add('remember', m("div", {
      className: "Form-group"
    }, m("div", null, m("label", {
      className: "checkbox"
    }, m("input", {
      type: "checkbox",
      bidi: this.remember,
      disabled: this.loading
    }), _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.remember_me_label')))), 10);
    items.add('submit', m("div", {
      className: "Form-group"
    }, _common_components_Button__WEBPACK_IMPORTED_MODULE_5__["default"].component({
      className: 'Button Button--primary Button--block',
      type: 'submit',
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.submit_button'))), -10);
    return items;
  };

  _proto.footer = function footer() {
    return [m("p", {
      className: "LogInModal-forgotPassword"
    }, m("a", {
      onclick: this.forgotPassword.bind(this)
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.forgot_password_link'))), _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('allowSignUp') ? m("p", {
      className: "LogInModal-signUp"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.sign_up_text', {
      a: m("a", {
        onclick: this.signUp.bind(this)
      })
    })) : ''];
  }
  /**
   * Open the forgot password modal, prefilling it with an email if the user has
   * entered one.
   */
  ;

  _proto.forgotPassword = function forgotPassword() {
    var email = this.identification();
    var attrs = email.includes('@') ? {
      email: email
    } : undefined;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_ForgotPasswordModal__WEBPACK_IMPORTED_MODULE_3__["default"], attrs);
  }
  /**
   * Open the sign up modal, prefilling it with an email/username/password if
   * the user has entered one.
   */
  ;

  _proto.signUp = function signUp() {
    var _attrs;

    var identification = this.identification();
    var attrs = (_attrs = {}, _attrs[identification.includes('@') ? 'email' : 'username'] = identification, _attrs.password = this.password(), _attrs);
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_SignUpModal__WEBPACK_IMPORTED_MODULE_4__["default"], attrs);
  };

  _proto.onready = function onready() {
    this.$('[name=' + (this.identification() ? 'password' : 'identification') + ']').select();
  };

  _proto.onsubmit = function onsubmit(e) {
    e.preventDefault();
    this.loading = true;
    var identification = this.identification();
    var password = this.password();
    var remember = this.remember();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.login({
      identification: identification,
      password: password,
      remember: remember
    }, {
      errorHandler: this.onerror.bind(this)
    }).then(function () {
      return window.location.reload();
    }, this.loaded.bind(this));
  };

  _proto.onerror = function onerror(error) {
    if (error.status === 401 && error.alert) {
      error.alert.content = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.log_in.invalid_login_message');
    }

    _Modal.prototype.onerror.call(this, error);
  };

  return LogInModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/Notification.js":
/*!**********************************************!*\
  !*** ./src/forum/components/Notification.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Notification)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/humanTime */ "./src/common/helpers/humanTime.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");









/**
 * The `Notification` component abstract displays a single notification.
 * Subclasses should implement the `icon`, `href`, and `content` methods.
 *
 * ### Attrs
 *
 * - `notification`
 *
 * @abstract
 */

var Notification = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Notification, _Component);

  function Notification() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Notification.prototype;

  _proto.view = function view() {
    var _this = this;

    var notification = this.attrs.notification;
    var href = this.href();
    return m(_common_components_Link__WEBPACK_IMPORTED_MODULE_7__["default"], {
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_8__["default"])('Notification', "Notification--" + notification.contentType(), [!notification.isRead() && 'unread']),
      href: href,
      external: href.includes('://'),
      onclick: this.markAsRead.bind(this)
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__["default"])(notification.fromUser()), (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])(this.icon(), {
      className: 'Notification-icon'
    }), m("span", {
      className: "Notification-title"
    }, m("span", {
      className: "Notification-content"
    }, this.content()), m("span", {
      className: "Notification-title-spring"
    }), (0,_common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_5__["default"])(notification.createdAt())), !notification.isRead() && m(_common_components_Button__WEBPACK_IMPORTED_MODULE_6__["default"], {
      className: "Notification-action Button Button--link",
      icon: "fas fa-check",
      title: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.mark_as_read_tooltip'),
      onclick: function onclick(e) {
        e.preventDefault();
        e.stopPropagation();

        _this.markAsRead();
      }
    }), m("div", {
      className: "Notification-excerpt"
    }, this.excerpt()));
  }
  /**
   * Get the name of the icon that should be displayed in the notification.
   *
   * @return {string}
   * @abstract
   */
  ;

  _proto.icon = function icon() {}
  /**
   * Get the URL that the notification should link to.
   *
   * @return {string}
   * @abstract
   */
  ;

  _proto.href = function href() {}
  /**
   * Get the content of the notification.
   *
   * @return {import('mithril').Children}
   * @abstract
   */
  ;

  _proto.content = function content() {}
  /**
   * Get the excerpt of the notification.
   *
   * @return {import('mithril').Children}
   * @abstract
   */
  ;

  _proto.excerpt = function excerpt() {}
  /**
   * Mark the notification as read.
   */
  ;

  _proto.markAsRead = function markAsRead() {
    if (this.attrs.notification.isRead()) return;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.pushAttributes({
      unreadNotificationCount: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.unreadNotificationCount() - 1
    });
    this.attrs.notification.save({
      isRead: true
    });
  };

  return Notification;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/NotificationGrid.js":
/*!**************************************************!*\
  !*** ./src/forum/components/NotificationGrid.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotificationGrid)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Checkbox */ "./src/common/components/Checkbox.js");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");






/**
 * The `NotificationGrid` component displays a table of notification types and
 * methods, allowing the user to toggle each combination.
 *
 * ### Attrs
 *
 * - `user`
 */

var NotificationGrid = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(NotificationGrid, _Component);

  function NotificationGrid() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = NotificationGrid.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
    /**
     * Information about the available notification methods.
     *
     * @type {({ name: string, icon: string, label: import('mithril').Children })[]}
     */


    this.methods = this.notificationMethods().toArray();
    /**
     * A map of which notification checkboxes are loading.
     *
     * @type {Record<string, boolean>}
     */

    this.loading = {};
    /**
     * Information about the available notification types.
     *
     * @type {({ name: string, icon: string, label: import('mithril').Children })[]}
     */

    this.types = this.notificationTypes().toArray();
  };

  _proto.view = function view() {
    var _this = this;

    var preferences = this.attrs.user.preferences();
    return m("table", {
      className: "NotificationGrid"
    }, m("thead", null, m("tr", null, m("td", null), this.methods.map(function (method) {
      return m("th", {
        className: "NotificationGrid-groupToggle",
        onclick: _this.toggleMethod.bind(_this, method.name)
      }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])(method.icon), " ", method.label);
    }))), m("tbody", null, this.types.map(function (type) {
      return m("tr", null, m("td", {
        className: "NotificationGrid-groupToggle",
        onclick: _this.toggleType.bind(_this, type.name)
      }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])(type.icon), " ", type.label), _this.methods.map(function (method) {
        var key = _this.preferenceKey(type.name, method.name);

        return m("td", {
          className: "NotificationGrid-checkbox"
        }, m(_common_components_Checkbox__WEBPACK_IMPORTED_MODULE_3__["default"], {
          state: !!preferences[key],
          loading: _this.loading[key],
          disabled: !(key in preferences),
          onchange: _this.toggle.bind(_this, [key])
        }));
      }));
    })));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    this.$('thead .NotificationGrid-groupToggle').bind('mouseenter mouseleave', function (e) {
      var i = parseInt($(this).index(), 10) + 1;
      $(this).parents('table').find('td:nth-child(' + i + ')').toggleClass('highlighted', e.type === 'mouseenter');
    });
    this.$('tbody .NotificationGrid-groupToggle').bind('mouseenter mouseleave', function (e) {
      $(this).parent().find('td').toggleClass('highlighted', e.type === 'mouseenter');
    });
  }
  /**
   * Toggle the state of the given preferences, based on the value of the first
   * one.
   *
   * @param {string[]} keys
   */
  ;

  _proto.toggle = function toggle(keys) {
    var _this2 = this;

    var user = this.attrs.user;
    var preferences = user.preferences();
    var enabled = !preferences[keys[0]];
    keys.forEach(function (key) {
      _this2.loading[key] = true;
      preferences[key] = enabled;
    });
    m.redraw();
    user.save({
      preferences: preferences
    }).then(function () {
      keys.forEach(function (key) {
        return _this2.loading[key] = false;
      });
      m.redraw();
    });
  }
  /**
   * Toggle all notification types for the given method.
   *
   * @param {string} method
   */
  ;

  _proto.toggleMethod = function toggleMethod(method) {
    var _this3 = this;

    var keys = this.types.map(function (type) {
      return _this3.preferenceKey(type.name, method);
    }).filter(function (key) {
      return key in _this3.attrs.user.preferences();
    });
    this.toggle(keys);
  }
  /**
   * Toggle all notification methods for the given type.
   *
   * @param {string} type
   */
  ;

  _proto.toggleType = function toggleType(type) {
    var _this4 = this;

    var keys = this.methods.map(function (method) {
      return _this4.preferenceKey(type, method.name);
    }).filter(function (key) {
      return key in _this4.attrs.user.preferences();
    });
    this.toggle(keys);
  }
  /**
   * Get the name of the preference key for the given notification type-method
   * combination.
   *
   * @param {string} type
   * @param {string} method
   * @return {string}
   */
  ;

  _proto.preferenceKey = function preferenceKey(type, method) {
    return 'notify_' + type + '_' + method;
  }
  /**
   * Build an item list for the notification methods to display in the grid.
   *
   * Each notification method is an object which has the following properties:
   *
   * - `name` The name of the notification method.
   * - `icon` The icon to display in the column header.
   * - `label` The label to display in the column header.
   *
   * @return {ItemList<{ name: string, icon: string, label: import('mithril').Children }>}
   */
  ;

  _proto.notificationMethods = function notificationMethods() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();
    items.add('alert', {
      name: 'alert',
      icon: 'fas fa-bell',
      label: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.notify_by_web_heading')
    });
    items.add('email', {
      name: 'email',
      icon: 'far fa-envelope',
      label: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.notify_by_email_heading')
    });
    return items;
  }
  /**
   * Build an item list for the notification types to display in the grid.
   *
   * Each notification type is an object which has the following properties:
   *
   * - `name` The name of the notification type.
   * - `icon` The icon to display in the notification grid row.
   * - `label` The label to display in the notification grid row.
   *
   * @return {ItemList<{ name: string, icon: string, label: import('mithril').Children}>}
   */
  ;

  _proto.notificationTypes = function notificationTypes() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();
    items.add('discussionRenamed', {
      name: 'discussionRenamed',
      icon: 'fas fa-pencil-alt',
      label: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.notify_discussion_renamed_label')
    });
    return items;
  };

  return NotificationGrid;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/NotificationList.js":
/*!**************************************************!*\
  !*** ./src/forum/components/NotificationList.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotificationList)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_models_Discussion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/models/Discussion */ "./src/common/models/Discussion.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");









/**
 * The `NotificationList` component displays a list of the logged-in user's
 * notifications, grouped by discussion.
 */

var NotificationList = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(NotificationList, _Component);

  function NotificationList() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = NotificationList.prototype;

  _proto.view = function view() {
    var state = this.attrs.state;
    return m("div", {
      className: "NotificationList"
    }, m("div", {
      className: "NotificationList-header"
    }, m("h4", {
      className: "App-titleControl App-titleControl--text"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.title')), m("div", {
      className: "App-primaryControl"
    }, this.controlItems().toArray())), m("div", {
      className: "NotificationList-content"
    }, this.content(state)));
  };

  _proto.controlItems = function controlItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__["default"]();
    var state = this.attrs.state;
    items.add('mark_all_as_read', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"], {
      className: "Button Button--link",
      icon: "fas fa-check",
      title: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.mark_all_as_read_tooltip'),
      onclick: state.markAllAsRead.bind(state)
    }), 70);
    return items;
  };

  _proto.content = function content(state) {
    if (state.isLoading()) {
      return m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_6__["default"], {
        className: "LoadingIndicator--block"
      });
    }

    if (state.hasItems()) {
      return state.getPages().map(function (page) {
        var groups = [];
        var discussions = {};
        page.items.forEach(function (notification) {
          var subject = notification.subject();
          if (typeof subject === 'undefined') return; // Get the discussion that this notification is related to. If it's not
          // directly related to a discussion, it may be related to a post or
          // other entity which is related to a discussion.

          var discussion = null;
          if (subject instanceof _common_models_Discussion__WEBPACK_IMPORTED_MODULE_7__["default"]) discussion = subject;else if (subject && subject.discussion) discussion = subject.discussion(); // If the notification is not related to a discussion directly or
          // indirectly, then we will assign it to a neutral group.

          var key = discussion ? discussion.id() : 0;
          discussions[key] = discussions[key] || {
            discussion: discussion,
            notifications: []
          };
          discussions[key].notifications.push(notification);

          if (groups.indexOf(discussions[key]) === -1) {
            groups.push(discussions[key]);
          }
        });
        return groups.map(function (group) {
          var badges = group.discussion && group.discussion.badges().toArray();
          return m("div", {
            className: "NotificationGroup"
          }, group.discussion ? m(_common_components_Link__WEBPACK_IMPORTED_MODULE_5__["default"], {
            className: "NotificationGroup-header",
            href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(group.discussion)
          }, badges && !!badges.length && m("ul", {
            className: "NotificationGroup-badges badges"
          }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_3__["default"])(badges)), m("span", null, group.discussion.title())) : m("div", {
            className: "NotificationGroup-header"
          }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('title')), m("ul", {
            className: "NotificationGroup-content"
          }, group.notifications.map(function (notification) {
            var NotificationComponent = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].notificationComponents[notification.contentType()];
            return NotificationComponent ? m("li", null, NotificationComponent.component({
              notification: notification
            })) : '';
          })));
        });
      });
    }

    return m("div", {
      className: "NotificationList-empty"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.empty_text'));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);

    this.$notifications = this.$('.NotificationList-content'); // If we are on the notifications page, the window will be scrolling and not the $notifications element.

    this.$scrollParent = this.inPanel() ? this.$notifications : $(window);
    this.boundScrollHandler = this.scrollHandler.bind(this);
    this.$scrollParent.on('scroll', this.boundScrollHandler);
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    this.$scrollParent.off('scroll', this.boundScrollHandler);
  };

  _proto.scrollHandler = function scrollHandler() {
    var state = this.attrs.state; // Whole-page scroll events are listened to on `window`, but we need to get the actual
    // scrollHeight, scrollTop, and clientHeight from the document element.

    var scrollParent = this.inPanel() ? this.$scrollParent[0] : document.documentElement; // On very short screens, the scrollHeight + scrollTop might not reach the clientHeight
    // by a fraction of a pixel, so we compensate for that.

    var atBottom = Math.abs(scrollParent.scrollHeight - scrollParent.scrollTop - scrollParent.clientHeight) <= 1;

    if (state.hasNext() && !state.isLoadingNext() && atBottom) {
      state.loadNext();
    }
  }
  /**
   * If the NotificationList component isn't in a panel (e.g. on NotificationPage when mobile),
   * we need to listen to scroll events on the window, and get scroll state from the body.
   */
  ;

  _proto.inPanel = function inPanel() {
    return this.$notifications.css('overflow') === 'auto';
  };

  return NotificationList;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/NotificationsDropdown.js":
/*!*******************************************************!*\
  !*** ./src/forum/components/NotificationsDropdown.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotificationsDropdown)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _NotificationList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NotificationList */ "./src/forum/components/NotificationList.js");







var NotificationsDropdown = /*#__PURE__*/function (_Dropdown) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(NotificationsDropdown, _Dropdown);

  function NotificationsDropdown() {
    return _Dropdown.apply(this, arguments) || this;
  }

  NotificationsDropdown.initAttrs = function initAttrs(attrs) {
    attrs.className = attrs.className || 'NotificationsDropdown';
    attrs.buttonClassName = attrs.buttonClassName || 'Button Button--flat';
    attrs.menuClassName = attrs.menuClassName || 'Dropdown-menu--right';
    attrs.label = attrs.label || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.tooltip');
    attrs.icon = attrs.icon || 'fas fa-bell'; // For best a11y support, both `title` and `aria-label` should be used

    attrs.accessibleToggleLabel = attrs.accessibleToggleLabel || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.notifications.toggle_dropdown_accessible_label');

    _Dropdown.initAttrs.call(this, attrs);
  };

  var _proto = NotificationsDropdown.prototype;

  _proto.getButton = function getButton() {
    var newNotifications = this.getNewCount();

    var vdom = _Dropdown.prototype.getButton.call(this);

    vdom.attrs.title = this.attrs.label;
    vdom.attrs.className = (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_4__["default"])(vdom.attrs.className, [newNotifications && 'new']);
    vdom.attrs.onclick = this.onclick.bind(this);
    return vdom;
  };

  _proto.getButtonContent = function getButtonContent() {
    var unread = this.getUnreadCount();
    return [(0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])(this.attrs.icon, {
      className: 'Button-icon'
    }), unread !== 0 && m("span", {
      className: "NotificationsDropdown-unread"
    }, unread), m("span", {
      className: "Button-label"
    }, this.attrs.label)];
  };

  _proto.getMenu = function getMenu() {
    return m("div", {
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_4__["default"])('Dropdown-menu', this.attrs.menuClassName),
      onclick: this.menuClick.bind(this)
    }, this.showing && _NotificationList__WEBPACK_IMPORTED_MODULE_5__["default"].component({
      state: this.attrs.state
    }));
  };

  _proto.onclick = function onclick() {
    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].drawer.isOpen()) {
      this.goToRoute();
    } else {
      this.attrs.state.load();
    }
  };

  _proto.goToRoute = function goToRoute() {
    m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route('notifications'));
  };

  _proto.getUnreadCount = function getUnreadCount() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.unreadNotificationCount();
  };

  _proto.getNewCount = function getNewCount() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.newNotificationCount();
  };

  _proto.menuClick = function menuClick(e) {
    // Don't close the notifications dropdown if the user is opening a link in a
    // new tab or window.
    if (e.shiftKey || e.metaKey || e.ctrlKey || e.which === 2) e.stopPropagation();
  };

  return NotificationsDropdown;
}(_common_components_Dropdown__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/NotificationsPage.js":
/*!***************************************************!*\
  !*** ./src/forum/components/NotificationsPage.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotificationsPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Page */ "./src/common/components/Page.tsx");
/* harmony import */ var _NotificationList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NotificationList */ "./src/forum/components/NotificationList.js");




/**
 * The `NotificationsPage` component shows the notifications list. It is only
 * used on mobile devices where the notifications dropdown is within the drawer.
 */

var NotificationsPage = /*#__PURE__*/function (_Page) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(NotificationsPage, _Page);

  function NotificationsPage() {
    return _Page.apply(this, arguments) || this;
  }

  var _proto = NotificationsPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _Page.prototype.oninit.call(this, vnode);

    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].history.push('notifications');
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].notifications.load();
    this.bodyClass = 'App--notifications';
  };

  _proto.view = function view() {
    return m("div", {
      className: "NotificationsPage"
    }, m(_NotificationList__WEBPACK_IMPORTED_MODULE_3__["default"], {
      state: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].notifications
    }));
  };

  return NotificationsPage;
}(_common_components_Page__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/Post.js":
/*!**************************************!*\
  !*** ./src/forum/components/Post.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Post)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/SubtreeRetainer */ "./src/common/utils/SubtreeRetainer.ts");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _utils_PostControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/PostControls */ "./src/forum/utils/PostControls.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");









/**
 * The `Post` component displays a single post. The basic post template just
 * includes a controls dropdown; subclasses must implement `content` and `attrs`
 * methods.
 *
 * ### Attrs
 *
 * - `post`
 *
 * @abstract
 */

var Post = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(Post, _Component);

  function Post() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Post.prototype;

  _proto.oninit = function oninit(vnode) {
    var _this = this;

    _Component.prototype.oninit.call(this, vnode);
    /**
     * May be set by subclasses.
     */


    this.loading = false;
    /**
     * Set up a subtree retainer so that the post will not be redrawn
     * unless new data comes in.
     *
     * @type {SubtreeRetainer}
     */

    this.subtree = new _common_utils_SubtreeRetainer__WEBPACK_IMPORTED_MODULE_3__["default"](function () {
      return _this.loading;
    }, function () {
      return _this.attrs.post.freshness;
    }, function () {
      var user = _this.attrs.post.user();

      return user && user.freshness;
    }, function () {
      return _this.controlsOpen;
    });
  };

  _proto.view = function view() {
    var _this2 = this;

    var attrs = this.elementAttrs();
    attrs.className = this.classes(attrs.className).join(' ');
    var controls = _utils_PostControls__WEBPACK_IMPORTED_MODULE_5__["default"].controls(this.attrs.post, this).toArray();
    var footerItems = this.footerItems().toArray();
    return m("article", attrs, m("div", null, this.loading ? m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_8__["default"], null) : this.content(), m("aside", {
      className: "Post-actions"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__["default"])(this.actionItems().toArray()), controls.length ? m("li", null, m(_common_components_Dropdown__WEBPACK_IMPORTED_MODULE_4__["default"], {
      className: "Post-controls",
      buttonClassName: "Button Button--icon Button--flat",
      menuClassName: "Dropdown-menu--right",
      icon: "fas fa-ellipsis-h",
      onshow: function onshow() {
        return _this2.$('.Post-controls').addClass('open');
      },
      onhide: function onhide() {
        return _this2.$('.Post-controls').removeClass('open');
      },
      accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_controls.toggle_dropdown_accessible_label')
    }, controls)) : '')), m("footer", {
      className: "Post-footer"
    }, footerItems.length ? m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_6__["default"])(footerItems)) : null)));
  };

  _proto.onbeforeupdate = function onbeforeupdate(vnode) {
    _Component.prototype.onbeforeupdate.call(this, vnode);

    return this.subtree.needsRebuild();
  };

  _proto.onupdate = function onupdate(vnode) {
    _Component.prototype.onupdate.call(this, vnode);

    var $actions = this.$('.Post-actions');
    var $controls = this.$('.Post-controls');
    $actions.toggleClass('open', $controls.hasClass('open'));
  }
  /**
   * Get attributes for the post element.
   *
   * @return {Record<string, unknown>}
   */
  ;

  _proto.elementAttrs = function elementAttrs() {
    return {};
  }
  /**
   * Get the post's content.
   *
   * @return {import('mithril').Children}
   */
  ;

  _proto.content = function content() {
    // TODO: [Flarum 2.0] return `null`
    return [];
  }
  /**
   * Get the post's classes.
   *
   * @param {string} existing
   * @returns {string[]}
   */
  ;

  _proto.classes = function classes(existing) {
    var classes = (existing || '').split(' ').concat(['Post']);
    var user = this.attrs.post.user();
    var discussion = this.attrs.post.discussion();

    if (this.loading) {
      classes.push('Post--loading');
    }

    if (user && user === _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user) {
      classes.push('Post--by-actor');
    }

    if (user && (user == null ? void 0 : user.id()) === discussion.attribute('startUserId')) {
      classes.push('Post--by-start-user');
    }

    return classes;
  }
  /**
   * Build an item list for the post's actions.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.actionItems = function actionItems() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();
  }
  /**
   * Build an item list for the post's footer.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.footerItems = function footerItems() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();
  };

  return Post;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostEdited.js":
/*!********************************************!*\
  !*** ./src/forum/components/PostEdited.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostEdited)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_humanTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/humanTime */ "./src/common/utils/humanTime.ts");
/* harmony import */ var _common_components_Tooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Tooltip */ "./src/common/components/Tooltip.tsx");





/**
 * The `PostEdited` component displays information about when and by whom a post
 * was edited.
 *
 * ### Attrs
 *
 * - `post`
 */

var PostEdited = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostEdited, _Component);

  function PostEdited() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostEdited.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
  };

  _proto.view = function view() {
    var post = this.attrs.post;
    var editedUser = post.editedUser();
    var editedInfo = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post.edited_tooltip', {
      user: editedUser,
      ago: (0,_common_utils_humanTime__WEBPACK_IMPORTED_MODULE_3__["default"])(post.editedAt())
    });
    return m(_common_components_Tooltip__WEBPACK_IMPORTED_MODULE_4__["default"], {
      text: editedInfo
    }, m("span", {
      "class": "PostEdited"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post.edited_text')));
  };

  _proto.oncreate = function oncreate(vnode) {
    _Component.prototype.oncreate.call(this, vnode);
  };

  return PostEdited;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostMeta.js":
/*!******************************************!*\
  !*** ./src/forum/components/PostMeta.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostMeta)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/humanTime */ "./src/common/helpers/humanTime.tsx");
/* harmony import */ var _common_helpers_fullTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/fullTime */ "./src/common/helpers/fullTime.tsx");





/**
 * The `PostMeta` component displays the time of a post, and when clicked, shows
 * a dropdown containing more information about the post (number, full time,
 * permalink).
 *
 * ### Attrs
 *
 * - `post`
 */

var PostMeta = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostMeta, _Component);

  function PostMeta() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostMeta.prototype;

  _proto.view = function view() {
    var post = this.attrs.post;
    var time = post.createdAt();
    var permalink = this.getPermalink(post);
    var touch = ('ontouchstart' in document.documentElement); // When the dropdown menu is shown, select the contents of the permalink
    // input so that the user can quickly copy the URL.

    var selectPermalink = function selectPermalink(e) {
      var _this = this;

      setTimeout(function () {
        return $(_this).parent().find('.PostMeta-permalink').select();
      });
      e.redraw = false;
    };

    return m("div", {
      className: "Dropdown PostMeta"
    }, m("a", {
      className: "Dropdown-toggle",
      onclick: selectPermalink,
      "data-toggle": "dropdown"
    }, (0,_common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_3__["default"])(time)), m("div", {
      className: "Dropdown-menu dropdown-menu"
    }, m("span", {
      className: "PostMeta-number"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post.number_tooltip', {
      number: post.number()
    })), ' ', m("span", {
      className: "PostMeta-time"
    }, (0,_common_helpers_fullTime__WEBPACK_IMPORTED_MODULE_4__["default"])(time)), " ", m("span", {
      className: "PostMeta-ip"
    }, post.data.attributes.ipAddress), touch ? m("a", {
      className: "Button PostMeta-permalink",
      href: permalink
    }, permalink) : m("input", {
      className: "FormControl PostMeta-permalink",
      value: permalink,
      onclick: function onclick(e) {
        return e.stopPropagation();
      }
    })));
  }
  /**
   * Get the permalink for the given post.
   *
   * @param {import('../../common/models/Post').default} post
   * @returns {string}
   */
  ;

  _proto.getPermalink = function getPermalink(post) {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('baseUrl') + _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(post);
  };

  return PostMeta;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostPreview.js":
/*!*********************************************!*\
  !*** ./src/forum/components/PostPreview.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostPreview)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_helpers_highlight__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/highlight */ "./src/common/helpers/highlight.tsx");







/**
 * The `PostPreview` component shows a link to a post containing the avatar and
 * username of the author, and a short excerpt of the post's content.
 *
 * ### Attrs
 *
 * - `post`
 */

var PostPreview = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostPreview, _Component);

  function PostPreview() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostPreview.prototype;

  _proto.view = function view() {
    var post = this.attrs.post;
    var user = post.user();
    var content = post.contentType() === 'comment' && post.contentPlain();
    var excerpt = content ? (0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_6__["default"])(content, this.attrs.highlight, 300) : '';
    return m(_common_components_Link__WEBPACK_IMPORTED_MODULE_3__["default"], {
      className: "PostPreview",
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(post),
      onclick: this.attrs.onclick
    }, m("span", {
      className: "PostPreview-content"
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_4__["default"])(user), (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_5__["default"])(user), " ", m("span", {
      className: "PostPreview-excerpt"
    }, excerpt)));
  };

  return PostPreview;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostStream.js":
/*!********************************************!*\
  !*** ./src/forum/components/PostStream.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostStream)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_ScrollListener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/ScrollListener */ "./src/common/utils/ScrollListener.js");
/* harmony import */ var _LoadingPost__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LoadingPost */ "./src/forum/components/LoadingPost.js");
/* harmony import */ var _ReplyPlaceholder__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ReplyPlaceholder */ "./src/forum/components/ReplyPlaceholder.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");







/**
 * The `PostStream` component displays an infinitely-scrollable wall of posts in
 * a discussion. Posts that have not loaded will be displayed as placeholders.
 *
 * ### Attrs
 *
 * - `discussion`
 * - `stream`
 * - `targetPost`
 * - `onPositionChange`
 */

var PostStream = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostStream, _Component);

  function PostStream() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostStream.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    this.discussion = this.attrs.discussion;
    this.stream = this.attrs.stream;
    this.scrollListener = new _common_utils_ScrollListener__WEBPACK_IMPORTED_MODULE_3__["default"](this.onscroll.bind(this));
  };

  _proto.view = function view() {
    var _this = this;

    var lastTime;
    var viewingEnd = this.stream.viewingEnd();
    var posts = this.stream.posts();
    var postIds = this.discussion.postIds();

    var postFadeIn = function postFadeIn(vnode) {
      $(vnode.dom).addClass('fadeIn'); // 500 is the duration of the fadeIn CSS animation + 100ms,
      // so the animation has time to complete

      setTimeout(function () {
        return $(vnode.dom).removeClass('fadeIn');
      }, 500);
    };

    var items = posts.map(function (post, i) {
      var content;
      var attrs = {
        'data-index': _this.stream.visibleStart + i
      };

      if (post) {
        var time = post.createdAt();
        var PostComponent = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].postComponents[post.contentType()];
        content = PostComponent ? PostComponent.component({
          post: post
        }) : '';
        attrs.key = 'post' + post.id();
        attrs.oncreate = postFadeIn;
        attrs['data-time'] = time.toISOString();
        attrs['data-number'] = post.number();
        attrs['data-id'] = post.id();
        attrs['data-type'] = post.contentType(); // If the post before this one was more than 4 days ago, we will
        // display a 'time gap' indicating how long it has been in between
        // the posts.

        var dt = time - lastTime;

        if (dt > 1000 * 60 * 60 * 24 * 4) {
          content = [m("div", {
            className: "PostStream-timeGap"
          }, m("span", null, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_stream.time_lapsed_text', {
            period: dayjs().add(dt, 'ms').fromNow(true)
          }))), content];
        }

        lastTime = time;
      } else {
        attrs.key = 'post' + postIds[_this.stream.visibleStart + i];
        content = _LoadingPost__WEBPACK_IMPORTED_MODULE_4__["default"].component();
      }

      return m("div", Object.assign({
        className: "PostStream-item"
      }, attrs), content);
    });

    if (!viewingEnd && posts[this.stream.visibleEnd - this.stream.visibleStart - 1]) {
      items.push(m("div", {
        className: "PostStream-loadMore",
        key: "loadMore"
      }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_6__["default"], {
        className: "Button",
        onclick: this.stream.loadNext.bind(this.stream)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_stream.load_more_button'))));
    } // If we're viewing the end of the discussion, the user can reply, and
    // is not already doing so, then show a 'write a reply' placeholder.


    if (viewingEnd && (!_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user || this.discussion.canReply())) {
      items.push(m("div", {
        className: "PostStream-item",
        key: "reply",
        "data-index": this.stream.count(),
        oncreate: postFadeIn
      }, _ReplyPlaceholder__WEBPACK_IMPORTED_MODULE_5__["default"].component({
        discussion: this.discussion
      })));
    }

    return m("div", {
      className: "PostStream"
    }, items);
  };

  _proto.onupdate = function onupdate(vnode) {
    _Component.prototype.onupdate.call(this, vnode);

    this.triggerScroll();
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this2 = this;

    _Component.prototype.oncreate.call(this, vnode);

    this.triggerScroll(); // This is wrapped in setTimeout due to the following Mithril issue:
    // https://github.com/lhorie/mithril.js/issues/637

    setTimeout(function () {
      return _this2.scrollListener.start();
    });
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    this.scrollListener.stop();
    clearTimeout(this.calculatePositionTimeout);
  }
  /**
   * Start scrolling, if appropriate, to a newly-targeted post.
   */
  ;

  _proto.triggerScroll = function triggerScroll() {
    if (!this.stream.needsScroll) return;
    var target = this.stream.targetPost;
    this.stream.needsScroll = false;

    if ('number' in target) {
      this.scrollToNumber(target.number, this.stream.animateScroll);
    } else if ('index' in target) {
      this.scrollToIndex(target.index, this.stream.animateScroll, target.reply);
    }
  }
  /**
   *
   * @param {number} top
   */
  ;

  _proto.onscroll = function onscroll(top) {
    if (top === void 0) {
      top = window.pageYOffset;
    }

    if (this.stream.paused || this.stream.pagesLoading) return;
    this.updateScrubber(top);
    this.loadPostsIfNeeded(top); // Throttle calculation of our position (start/end numbers of posts in the
    // viewport) to 100ms.

    clearTimeout(this.calculatePositionTimeout);
    this.calculatePositionTimeout = setTimeout(this.calculatePosition.bind(this, top), 100);
  }
  /**
   * Check if either extreme of the post stream is in the viewport,
   * and if so, trigger loading the next/previous page.
   *
   * @param {number} top
   */
  ;

  _proto.loadPostsIfNeeded = function loadPostsIfNeeded(top) {
    if (top === void 0) {
      top = window.pageYOffset;
    }

    var marginTop = this.getMarginTop();
    var viewportHeight = $(window).height() - marginTop;
    var viewportTop = top + marginTop;
    var loadAheadDistance = 300;

    if (this.stream.visibleStart > 0) {
      var $item = this.$('.PostStream-item[data-index=' + this.stream.visibleStart + ']');

      if ($item.length && $item.offset().top > viewportTop - loadAheadDistance) {
        this.stream.loadPrevious();
      }
    }

    if (this.stream.visibleEnd < this.stream.count()) {
      var _$item = this.$('.PostStream-item[data-index=' + (this.stream.visibleEnd - 1) + ']');

      if (_$item.length && _$item.offset().top + _$item.outerHeight(true) < viewportTop + viewportHeight + loadAheadDistance) {
        this.stream.loadNext();
      }
    }
  };

  _proto.updateScrubber = function updateScrubber(top) {
    if (top === void 0) {
      top = window.pageYOffset;
    }

    var marginTop = this.getMarginTop();
    var viewportHeight = $(window).height() - marginTop;
    var viewportTop = top + marginTop; // Before looping through all of the posts, we reset the scrollbar
    // properties to a 'default' state. These values reflect what would be
    // seen if the browser were scrolled right up to the top of the page,
    // and the viewport had a height of 0.

    var $items = this.$('.PostStream-item[data-index]');
    var visible = 0;
    var period = '';
    var indexFromViewPort = null; // Now loop through each of the items in the discussion. An 'item' is
    // either a single post or a 'gap' of one or more posts that haven't
    // been loaded yet.

    $items.each(function () {
      var $this = $(this);
      var top = $this.offset().top;
      var height = $this.outerHeight(true); // If this item is above the top of the viewport, skip to the next
      // one. If it's below the bottom of the viewport, break out of the
      // loop.

      if (top + height < viewportTop) {
        return true;
      }

      if (top > viewportTop + viewportHeight) {
        return false;
      } // Work out how many pixels of this item are visible inside the viewport.
      // Then add the proportion of this item's total height to the index.


      var visibleTop = Math.max(0, viewportTop - top);
      var visibleBottom = Math.min(height, viewportTop + viewportHeight - top);
      var visiblePost = visibleBottom - visibleTop; // We take the index of the first item that passed the previous checks.
      // It is the item that is first visible in the viewport.

      if (indexFromViewPort === null) {
        indexFromViewPort = parseFloat($this.data('index')) + visibleTop / height;
      }

      if (visiblePost > 0) {
        visible += visiblePost / height;
      } // If this item has a time associated with it, then set the
      // scrollbar's current period to a formatted version of this time.


      var time = $this.data('time');
      if (time) period = time;
    }); // If indexFromViewPort is null, it means no posts are visible in the
    // viewport. This can happen, when drafting a long reply post. In that case
    // set the index to the last post.

    this.stream.index = indexFromViewPort !== null ? indexFromViewPort + 1 : this.stream.count();
    this.stream.visible = visible;
    if (period) this.stream.description = dayjs(period).format('MMMM YYYY');
  }
  /**
   * Work out which posts (by number) are currently visible in the viewport, and
   * fire an event with the information.
   */
  ;

  _proto.calculatePosition = function calculatePosition(top) {
    if (top === void 0) {
      top = window.pageYOffset;
    }

    var marginTop = this.getMarginTop();
    var $window = $(window);
    var viewportHeight = $window.height() - marginTop;
    var scrollTop = $window.scrollTop() + marginTop;
    var viewportTop = top + marginTop;
    var startNumber;
    var endNumber;
    this.$('.PostStream-item').each(function () {
      var $item = $(this);
      var top = $item.offset().top;
      var height = $item.outerHeight(true);
      var visibleTop = Math.max(0, viewportTop - top);
      var threeQuartersVisible = visibleTop / height < 0.75;
      var coversQuarterOfViewport = (height - visibleTop) / viewportHeight > 0.25;

      if (startNumber === undefined && (threeQuartersVisible || coversQuarterOfViewport)) {
        startNumber = $item.data('number');
      }

      if (top + height > scrollTop) {
        if (top + height < scrollTop + viewportHeight) {
          if ($item.data('number')) {
            endNumber = $item.data('number');
          }
        } else return false;
      }
    });

    if (startNumber) {
      this.attrs.onPositionChange(startNumber || 1, endNumber, startNumber);
    }
  }
  /**
   * Get the distance from the top of the viewport to the point at which we
   * would consider a post to be the first one visible.
   *
   * @return {number}
   */
  ;

  _proto.getMarginTop = function getMarginTop() {
    var headerId = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].screen() === 'phone' ? '#app-navigation' : '#header';
    return this.$() && $(headerId).outerHeight() + parseInt(this.$().css('margin-top'), 10);
  }
  /**
   * Scroll down to a certain post by number and 'flash' it.
   *
   * @param {number} number
   * @param {boolean} animate
   * @return {JQueryDeferred}
   */
  ;

  _proto.scrollToNumber = function scrollToNumber(number, animate) {
    var $item = this.$(".PostStream-item[data-number=" + number + "]");
    return this.scrollToItem($item, animate).then(this.flashItem.bind(this, $item));
  }
  /**
   * Scroll down to a certain post by index.
   *
   * @param {number} index
   * @param {boolean} animate
   * @param {boolean} reply Whether or not to scroll to the reply placeholder.
   * @return {JQueryDeferred}
   */
  ;

  _proto.scrollToIndex = function scrollToIndex(index, animate, reply) {
    var $item = reply ? $('.PostStream-item:last-child') : this.$(".PostStream-item[data-index=" + index + "]");
    this.scrollToItem($item, animate, true, reply);

    if (reply) {
      this.flashItem($item);
    }
  }
  /**
   * Scroll down to the given post.
   *
   * @param {JQuery} $item
   * @param {boolean} animate
   * @param {boolean} force Whether or not to force scrolling to the item, even
   *     if it is already in the viewport.
   * @param {boolean} reply Whether or not to scroll to the reply placeholder.
   * @return {JQueryDeferred}
   */
  ;

  _proto.scrollToItem = function scrollToItem($item, animate, force, reply) {
    var _this3 = this;

    var $container = $('html, body').stop(true);
    var index = $item.data('index');

    if ($item.length) {
      var itemTop = $item.offset().top - this.getMarginTop();
      var itemBottom = $item.offset().top + $item.height();
      var scrollTop = $(document).scrollTop();
      var scrollBottom = scrollTop + $(window).height(); // If the item is already in the viewport, we may not need to scroll.
      // If we're scrolling to the reply placeholder, we'll make sure its
      // bottom will line up with the top of the composer.

      if (force || itemTop < scrollTop || itemBottom > scrollBottom) {
        var top = reply ? itemBottom - $(window).height() + _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.computedHeight() : $item.is(':first-child') ? 0 : itemTop;

        if (!animate) {
          $container.scrollTop(top);
        } else if (top !== scrollTop) {
          $container.animate({
            scrollTop: top
          }, 'fast');
        }
      }
    }

    var updateScrubberHeight = function updateScrubberHeight() {
      // We manually set the index because we want to display the index of the
      // exact post we've scrolled to, not just that of the first post within viewport.
      _this3.updateScrubber();

      if (index !== undefined) _this3.stream.index = index + 1;
    }; // If we don't update this before the scroll, the scrubber will start
    // at the top, and animate down, which can be confusing


    updateScrubberHeight();
    this.stream.forceUpdateScrubber = true;
    return Promise.all([$container.promise(), this.stream.loadPromise]).then(function () {
      m.redraw.sync(); // Rendering post contents will probably throw off our position.
      // To counter this, we'll scroll either:
      //   - To the reply placeholder (aligned with composer top)
      //   - To the top of the page if we're on the first post
      //   - To the top of a post (if that post exists)
      // If the post does not currently exist, it's probably
      // outside of the range we loaded in, so we won't adjust anything,
      // as it will soon be rendered by the "load more" system.

      var itemOffset;

      if (reply) {
        var $placeholder = $('.PostStream-item:last-child');
        $(window).scrollTop($placeholder.offset().top + $placeholder.height() - $(window).height() + _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.computedHeight());
      } else if (index === 0) {
        $(window).scrollTop(0);
      } else if (itemOffset = $(".PostStream-item[data-index=" + index + "]").offset()) {
        $(window).scrollTop(itemOffset.top - _this3.getMarginTop());
      } // We want to adjust this again after posts have been loaded in
      // and position adjusted so that the scrubber's height is accurate.


      updateScrubberHeight();

      _this3.calculatePosition();

      _this3.stream.paused = false; // Check if we need to load more posts after scrolling.

      _this3.loadPostsIfNeeded();
    });
  }
  /**
   * 'Flash' the given post, drawing the user's attention to it.
   *
   * @param {JQuery} $item
   */
  ;

  _proto.flashItem = function flashItem($item) {
    // This might execute before the fadeIn class has been removed in PostStreamItem's
    // oncreate, so we remove it just to be safe and avoid a double animation.
    $item.removeClass('fadeIn');
    $item.addClass('flash').on('animationend webkitAnimationEnd', function (e) {
      $item.removeClass('flash');
    });
  };

  return PostStream;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostStreamScrubber.js":
/*!****************************************************!*\
  !*** ./src/forum/components/PostStreamScrubber.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostStreamScrubber)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_utils_formatNumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/formatNumber */ "./src/common/utils/formatNumber.ts");
/* harmony import */ var _common_utils_ScrollListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/ScrollListener */ "./src/common/utils/ScrollListener.js");






/**
 * The `PostStreamScrubber` component displays a scrubber which can be used to
 * navigate/scrub through a post stream.
 *
 * ### Attrs
 *
 * - `stream`
 * - `className`
 */

var PostStreamScrubber = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostStreamScrubber, _Component);

  function PostStreamScrubber() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostStreamScrubber.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    this.stream = this.attrs.stream;
    this.handlers = {};
    this.scrollListener = new _common_utils_ScrollListener__WEBPACK_IMPORTED_MODULE_5__["default"](this.updateScrubberValues.bind(this, {
      fromScroll: true,
      forceHeightChange: true
    }));
  };

  _proto.view = function view() {
    var count = this.stream.count(); // Index is left blank for performance reasons, it is filled in in updateScubberValues

    var viewing = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_scrubber.viewing_text', {
      count: count,
      index: m("span", {
        className: "Scrubber-index"
      }),
      formattedCount: m("span", {
        className: "Scrubber-count"
      }, (0,_common_utils_formatNumber__WEBPACK_IMPORTED_MODULE_4__["default"])(count))
    });
    var unreadCount = this.stream.discussion.unreadCount();
    var unreadPercent = count ? Math.min(count - this.stream.index, unreadCount) / count : 0;

    function styleUnread(vnode) {
      var $element = $(vnode.dom);
      var newStyle = {
        top: 100 - unreadPercent * 100 + '%',
        height: unreadPercent * 100 + '%'
      };

      if (vnode.state.oldStyle) {
        $element.stop(true).css(vnode.state.oldStyle).animate(newStyle);
      } else {
        $element.css(newStyle);
      }

      vnode.state.oldStyle = newStyle;
    }

    var classNames = ['PostStreamScrubber', 'Dropdown'];
    if (this.attrs.className) classNames.push(this.attrs.className);
    return m("div", {
      className: classNames.join(' ')
    }, m("button", {
      className: "Button Dropdown-toggle",
      "data-toggle": "dropdown"
    }, viewing, " ", (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])('fas fa-sort')), m("div", {
      className: "Dropdown-menu dropdown-menu"
    }, m("div", {
      className: "Scrubber"
    }, m("a", {
      className: "Scrubber-first",
      onclick: this.goToFirst.bind(this)
    }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])('fas fa-angle-double-up'), " ", _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_scrubber.original_post_link')), m("div", {
      className: "Scrubber-scrollbar"
    }, m("div", {
      className: "Scrubber-before"
    }), m("div", {
      className: "Scrubber-handle"
    }, m("div", {
      className: "Scrubber-bar"
    }), m("div", {
      className: "Scrubber-info"
    }, m("strong", null, viewing), m("span", {
      className: "Scrubber-description"
    }))), m("div", {
      className: "Scrubber-after"
    }), m("div", {
      className: "Scrubber-unread",
      oncreate: styleUnread,
      onupdate: styleUnread
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_scrubber.unread_text', {
      count: unreadCount
    }))), m("a", {
      className: "Scrubber-last",
      onclick: this.goToLast.bind(this)
    }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_3__["default"])('fas fa-angle-double-down'), " ", _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_scrubber.now_link')))));
  };

  _proto.onupdate = function onupdate(vnode) {
    var _this = this;

    _Component.prototype.onupdate.call(this, vnode);

    if (this.stream.forceUpdateScrubber) {
      this.stream.forceUpdateScrubber = false;
      this.stream.loadPromise.then(function () {
        return _this.updateScrubberValues({
          animate: true,
          forceHeightChange: true
        });
      });
    }
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this2 = this;

    _Component.prototype.oncreate.call(this, vnode); // Whenever the window is resized, adjust the height of the scrollbar
    // so that it fills the height of the sidebar.


    $(window).on('resize', this.handlers.onresize = this.onresize.bind(this)).resize(); // When any part of the whole scrollbar is clicked, we want to jump to
    // that position.

    this.$('.Scrubber-scrollbar').bind('click', this.onclick.bind(this)) // Now we want to make the scrollbar handle draggable. Let's start by
    // preventing default browser events from messing things up.
    .bind('dragstart mousedown touchstart', function (e) {
      return e.preventDefault();
    }); // When the mouse is pressed on the scrollbar handle, we capture some
    // information about its current position. We will store this
    // information in an object and pass it on to the document's
    // mousemove/mouseup events later.

    this.dragging = false;
    this.mouseStart = 0;
    this.indexStart = 0;
    this.$('.Scrubber-handle').bind('mousedown touchstart', this.onmousedown.bind(this)) // Exempt the scrollbar handle from the 'jump to' click event.
    .click(function (e) {
      return e.stopPropagation();
    }); // When the mouse moves and when it is released, we pass the
    // information that we captured when the mouse was first pressed onto
    // some event handlers. These handlers will move the scrollbar/stream-
    // content as appropriate.

    $(document).on('mousemove touchmove', this.handlers.onmousemove = this.onmousemove.bind(this)).on('mouseup touchend', this.handlers.onmouseup = this.onmouseup.bind(this));
    setTimeout(function () {
      return _this2.scrollListener.start();
    });
    this.stream.loadPromise.then(function () {
      return _this2.updateScrubberValues({
        animate: false,
        forceHeightChange: true
      });
    });
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    this.scrollListener.stop();
    $(window).off('resize', this.handlers.onresize);
    $(document).off('mousemove touchmove', this.handlers.onmousemove).off('mouseup touchend', this.handlers.onmouseup);
  }
  /**
   * Update the scrollbar's position to reflect the current values of the
   * index/visible properties.
   *
   * @param {Partial<{fromScroll: boolean, forceHeightChange: boolean, animate: boolean}>} options
   */
  ;

  _proto.updateScrubberValues = function updateScrubberValues(options) {
    var _this3 = this;

    if (options === void 0) {
      options = {};
    }

    var index = this.stream.index;
    var count = this.stream.count();
    var visible = this.stream.visible || 1;
    var percentPerPost = this.percentPerPost();
    var $scrubber = this.$();
    $scrubber.find('.Scrubber-index').text((0,_common_utils_formatNumber__WEBPACK_IMPORTED_MODULE_4__["default"])(this.stream.sanitizeIndex(Math.max(1, index))));
    $scrubber.find('.Scrubber-description').text(this.stream.description);
    $scrubber.toggleClass('disabled', this.stream.disabled());
    var heights = {};
    heights.before = Math.max(0, percentPerPost.index * Math.min(index - 1, count - visible));
    heights.handle = Math.min(100 - heights.before, percentPerPost.visible * visible);
    heights.after = 100 - heights.before - heights.handle; // If the stream is paused, don't change height on scroll, as the viewport is being scrolled by the JS
    // If a height change animation is already in progress, don't adjust height unless overriden

    if (options.fromScroll && this.stream.paused || this.adjustingHeight && !options.forceHeightChange) return;
    var func = options.animate ? 'animate' : 'css';
    this.adjustingHeight = true;
    var animationPromises = [];

    for (var part in heights) {
      var $part = $scrubber.find(".Scrubber-" + part);
      animationPromises.push($part.stop(true, true)[func]({
        height: heights[part] + '%'
      }, 'fast').promise()); // jQuery likes to put overflow:hidden, but because the scrollbar handle
      // has a negative margin-left, we need to override.

      if (func === 'animate') $part.css('overflow', 'visible');
    }

    Promise.all(animationPromises).then(function () {
      return _this3.adjustingHeight = false;
    });
  }
  /**
   * Go to the first post in the discussion.
   */
  ;

  _proto.goToFirst = function goToFirst() {
    this.stream.goToFirst();
    this.updateScrubberValues({
      animate: true,
      forceHeightChange: true
    });
  }
  /**
   * Go to the last post in the discussion.
   */
  ;

  _proto.goToLast = function goToLast() {
    this.stream.goToLast();
    this.updateScrubberValues({
      animate: true,
      forceHeightChange: true
    });
  };

  _proto.onresize = function onresize() {
    // Adjust the height of the scrollbar so that it fills the height of
    // the sidebar and doesn't overlap the footer.
    var scrubber = this.$();
    var scrollbar = this.$('.Scrubber-scrollbar');
    scrollbar.css('max-height', $(window).height() - scrubber.offset().top + $(window).scrollTop() - parseInt($('#app').css('padding-bottom'), 10) - (scrubber.outerHeight() - scrollbar.outerHeight()));
  };

  _proto.onmousedown = function onmousedown(e) {
    e.redraw = false;
    this.mouseStart = e.clientY || e.originalEvent.touches[0].clientY;
    this.indexStart = this.stream.index;
    this.dragging = true;
    $('body').css('cursor', 'move');
    this.$().toggleClass('dragging', this.dragging);
  };

  _proto.onmousemove = function onmousemove(e) {
    if (!this.dragging) return; // Work out how much the mouse has moved by - first in pixels, then
    // convert it to a percentage of the scrollbar's height, and then
    // finally convert it into an index. Add this delta index onto
    // the index at which the drag was started, and then scroll there.

    var deltaPixels = (e.clientY || e.originalEvent.touches[0].clientY) - this.mouseStart;
    var deltaPercent = deltaPixels / this.$('.Scrubber-scrollbar').outerHeight() * 100;
    var deltaIndex = deltaPercent / this.percentPerPost().index || 0;
    var newIndex = Math.min(this.indexStart + deltaIndex, this.stream.count() - 1);
    this.stream.index = Math.max(0, newIndex);
    this.updateScrubberValues();
  };

  _proto.onmouseup = function onmouseup() {
    this.$().toggleClass('dragging', this.dragging);
    if (!this.dragging) return;
    this.mouseStart = 0;
    this.indexStart = 0;
    this.dragging = false;
    $('body').css('cursor', '');
    this.$().removeClass('open'); // If the index we've landed on is in a gap, then tell the stream-
    // content that we want to load those posts.

    var intIndex = Math.floor(this.stream.index);
    this.stream.goToIndex(intIndex);
  };

  _proto.onclick = function onclick(e) {
    // Calculate the index which we want to jump to based on the click position.
    // 1. Get the offset of the click from the top of the scrollbar, as a
    //    percentage of the scrollbar's height.
    var $scrollbar = this.$('.Scrubber-scrollbar');
    var offsetPixels = (e.pageY || e.originalEvent.touches[0].pageY) - $scrollbar.offset().top + $('body').scrollTop();
    var offsetPercent = offsetPixels / $scrollbar.outerHeight() * 100; // 2. We want the handle of the scrollbar to end up centered on the click
    //    position. Thus, we calculate the height of the handle in percent and
    //    use that to find a new offset percentage.

    offsetPercent = offsetPercent - parseFloat($scrollbar.find('.Scrubber-handle')[0].style.height) / 2; // 3. Now we can convert the percentage into an index, and tell the stream-
    //    content component to jump to that index.

    var offsetIndex = offsetPercent / this.percentPerPost().index;
    offsetIndex = Math.max(0, Math.min(this.stream.count() - 1, offsetIndex));
    this.stream.goToIndex(Math.floor(offsetIndex));
    this.updateScrubberValues({
      animate: true,
      forceHeightChange: true
    });
    this.$().removeClass('open');
  }
  /**
   * Get the percentage of the height of the scrubber that should be allocated
   * to each post.
   *
   * @return {{ index: number, visible: number }}
   * @property {Number} index The percent per post for posts on either side of
   *     the visible part of the scrubber.
   * @property {Number} visible The percent per post for the visible part of the
   *     scrubber.
   */
  ;

  _proto.percentPerPost = function percentPerPost() {
    var count = this.stream.count() || 1;
    var visible = this.stream.visible || 1; // To stop the handle of the scrollbar from getting too small when there
    // are many posts, we define a minimum percentage height for the handle
    // calculated from a 50 pixel limit. From this, we can calculate the
    // minimum percentage per visible post. If this is greater than the actual
    // percentage per post, then we need to adjust the 'before' percentage to
    // account for it.

    var minPercentVisible = 50 / this.$('.Scrubber-scrollbar').outerHeight() * 100;
    var percentPerVisiblePost = Math.max(100 / count, minPercentVisible / visible);
    var percentPerPost = count === visible ? 0 : (100 - percentPerVisiblePost * visible) / (count - visible);
    return {
      index: percentPerPost,
      visible: percentPerVisiblePost
    };
  };

  return PostStreamScrubber;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostUser.js":
/*!******************************************!*\
  !*** ./src/forum/components/PostUser.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostUser)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _UserCard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UserCard */ "./src/forum/components/UserCard.js");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_helpers_userOnline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/helpers/userOnline */ "./src/common/helpers/userOnline.tsx");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");









/**
 * The `PostUser` component shows the avatar and username of a post's author.
 *
 * ### Attrs
 *
 * - `post`
 */

var PostUser = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostUser, _Component);

  function PostUser() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = PostUser.prototype;

  _proto.view = function view() {
    var post = this.attrs.post;
    var user = post.user();

    if (!user) {
      return m("div", {
        className: "PostUser"
      }, m("h3", null, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__["default"])(user, {
        className: 'PostUser-avatar'
      }), " ", (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_6__["default"])(user)));
    }

    var card = '';

    if (!post.isHidden() && this.attrs.cardVisible) {
      card = _UserCard__WEBPACK_IMPORTED_MODULE_4__["default"].component({
        user: user,
        className: 'UserCard--popover',
        controlsButtonClassName: 'Button Button--icon Button--flat'
      });
    }

    return m("div", {
      className: "PostUser"
    }, m("h3", null, m(_common_components_Link__WEBPACK_IMPORTED_MODULE_3__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.user(user)
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__["default"])(user, {
      className: 'PostUser-avatar'
    }), (0,_common_helpers_userOnline__WEBPACK_IMPORTED_MODULE_7__["default"])(user), (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_6__["default"])(user))), m("ul", {
      className: "PostUser-badges badges"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_8__["default"])(user.badges().toArray())), card);
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this = this;

    _Component.prototype.oncreate.call(this, vnode);

    var timeout;
    this.$().on('mouseover', 'h3 a, .UserCard', function () {
      clearTimeout(timeout);
      timeout = setTimeout(_this.showCard.bind(_this), 500);
    }).on('mouseout', 'h3 a, .UserCard', function () {
      clearTimeout(timeout);
      timeout = setTimeout(_this.hideCard.bind(_this), 250);
    });
  }
  /**
   * Show the user card.
   */
  ;

  _proto.showCard = function showCard() {
    var _this2 = this;

    this.attrs.oncardshow();
    setTimeout(function () {
      return _this2.$('.UserCard').addClass('in');
    });
  }
  /**
   * Hide the user card.
   */
  ;

  _proto.hideCard = function hideCard() {
    var _this3 = this;

    this.$('.UserCard').removeClass('in').one('transitionend webkitTransitionEnd oTransitionEnd', function () {
      _this3.attrs.oncardhide();
    });
  };

  return PostUser;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/PostsUserPage.js":
/*!***********************************************!*\
  !*** ./src/forum/components/PostsUserPage.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PostsUserPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _UserPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserPage */ "./src/forum/components/UserPage.js");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_components_Placeholder__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/Placeholder */ "./src/common/components/Placeholder.js");
/* harmony import */ var _CommentPost__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CommentPost */ "./src/forum/components/CommentPost.js");








/**
 * The `PostsUserPage` component shows a user's activity feed inside of their
 * profile.
 */

var PostsUserPage = /*#__PURE__*/function (_UserPage) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(PostsUserPage, _UserPage);

  function PostsUserPage() {
    return _UserPage.apply(this, arguments) || this;
  }

  var _proto = PostsUserPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _UserPage.prototype.oninit.call(this, vnode);
    /**
     * Whether or not the activity feed is currently loading.
     *
     * @type {Boolean}
     */


    this.loading = true;
    /**
     * Whether or not there are any more activity items that can be loaded.
     *
     * @type {Boolean}
     */

    this.moreResults = false;
    /**
     * The Post models in the feed.
     *
     * @type {Post[]}
     */

    this.posts = [];
    /**
     * The number of activity items to load per request.
     *
     * @type {number}
     */

    this.loadLimit = 20;
    this.loadUser(m.route.param('username'));
  };

  _proto.content = function content() {
    if (this.posts.length === 0 && !this.loading) {
      return m("div", {
        className: "PostsUserPage"
      }, m(_common_components_Placeholder__WEBPACK_IMPORTED_MODULE_6__["default"], {
        text: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.posts_empty_text')
      }));
    }

    var footer;

    if (this.loading) {
      footer = m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_3__["default"], null);
    } else if (this.moreResults) {
      footer = m("div", {
        className: "PostsUserPage-loadMore"
      }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"], {
        className: "Button",
        onclick: this.loadMore.bind(this)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.posts_load_more_button')));
    }

    return m("div", {
      className: "PostsUserPage"
    }, m("ul", {
      className: "PostsUserPage-list"
    }, this.posts.map(function (post) {
      return m("li", null, m("div", {
        className: "PostsUserPage-discussion"
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.in_discussion_text', {
        discussion: m(_common_components_Link__WEBPACK_IMPORTED_MODULE_5__["default"], {
          href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(post)
        }, post.discussion().title())
      })), m(_CommentPost__WEBPACK_IMPORTED_MODULE_7__["default"], {
        post: post
      }));
    })), m("div", {
      className: "PostsUserPage-loadMore"
    }, footer));
  }
  /**
   * Initialize the component with a user, and trigger the loading of their
   * activity feed.
   */
  ;

  _proto.show = function show(user) {
    _UserPage.prototype.show.call(this, user);

    this.refresh();
  }
  /**
   * Clear and reload the user's activity feed.
   */
  ;

  _proto.refresh = function refresh() {
    this.loading = true;
    this.posts = [];
    m.redraw();
    this.loadResults().then(this.parseResults.bind(this));
  }
  /**
   * Load a new page of the user's activity feed.
   *
   * @param {number} [offset] The position to start getting results from.
   * @return {Promise<import('../../common/models/Post').default[]>}
   * @protected
   */
  ;

  _proto.loadResults = function loadResults(offset) {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.find('posts', {
      filter: {
        author: this.user.username(),
        type: 'comment'
      },
      page: {
        offset: offset,
        limit: this.loadLimit
      },
      sort: '-createdAt'
    });
  }
  /**
   * Load the next page of results.
   */
  ;

  _proto.loadMore = function loadMore() {
    this.loading = true;
    this.loadResults(this.posts.length).then(this.parseResults.bind(this));
  }
  /**
   * Parse results and append them to the activity feed.
   *
   * @param {import('../../common/models/Post').default[]} results
   * @return {import('../../common/models/Post').default[]}
   */
  ;

  _proto.parseResults = function parseResults(results) {
    var _this$posts;

    this.loading = false;

    (_this$posts = this.posts).push.apply(_this$posts, results);

    this.moreResults = results.length >= this.loadLimit;
    m.redraw();
    return results;
  };

  return PostsUserPage;
}(_UserPage__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/RenameDiscussionModal.js":
/*!*******************************************************!*\
  !*** ./src/forum/components/RenameDiscussionModal.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ RenameDiscussionModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");





/**
 * The 'RenameDiscussionModal' displays a modal dialog with an input to rename a discussion
 */

var RenameDiscussionModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(RenameDiscussionModal, _Modal);

  function RenameDiscussionModal() {
    return _Modal.apply(this, arguments) || this;
  }

  var _proto = RenameDiscussionModal.prototype;

  _proto.oninit = function oninit(vnode) {
    _Modal.prototype.oninit.call(this, vnode);

    this.discussion = this.attrs.discussion;
    this.currentTitle = this.attrs.currentTitle;
    this.newTitle = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_4__["default"])(this.currentTitle);
  };

  _proto.className = function className() {
    return 'RenameDiscussionModal Modal--small';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.rename_discussion.title');
  };

  _proto.content = function content() {
    return m("div", {
      className: "Modal-body"
    }, m("div", {
      className: "Form Form--centered"
    }, m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      bidi: this.newTitle,
      type: "text"
    })), m("div", {
      className: "Form-group"
    }, _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
      className: 'Button Button--primary Button--block',
      type: 'submit',
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.rename_discussion.submit_button')))));
  };

  _proto.onsubmit = function onsubmit(e) {
    var _this = this;

    e.preventDefault();
    this.loading = true;
    var title = this.newTitle();
    var currentTitle = this.currentTitle; // If the title is different to what it was before, then save it. After the
    // save has completed, update the post stream as there will be a new post
    // indicating that the discussion was renamed.

    if (title && title !== currentTitle) {
      return this.discussion.save({
        title: title
      }).then(function () {
        if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].viewingDiscussion(_this.discussion)) {
          _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.get('stream').update();
        }

        m.redraw();

        _this.hide();
      })["catch"](function () {
        _this.loading = false;
        m.redraw();
      });
    } else {
      this.hide();
    }
  };

  return RenameDiscussionModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/ReplyComposer.js":
/*!***********************************************!*\
  !*** ./src/forum/components/ReplyComposer.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ReplyComposer)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _ComposerBody__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ComposerBody */ "./src/forum/components/ComposerBody.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");








function minimizeComposerIfFullScreen(e) {
  if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.isFullScreen()) {
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.minimize();
    e.stopPropagation();
  }
}
/**
 * The `ReplyComposer` component displays the composer content for replying to a
 * discussion.
 *
 * ### Attrs
 *
 * - All of the attrs of ComposerBody
 * - `discussion`
 */


var ReplyComposer = /*#__PURE__*/function (_ComposerBody) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ReplyComposer, _ComposerBody);

  function ReplyComposer() {
    return _ComposerBody.apply(this, arguments) || this;
  }

  ReplyComposer.initAttrs = function initAttrs(attrs) {
    _ComposerBody.initAttrs.call(this, attrs);

    attrs.placeholder = attrs.placeholder || (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_6__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_reply.body_placeholder'));
    attrs.submitLabel = attrs.submitLabel || _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_reply.submit_button');
    attrs.confirmExit = attrs.confirmExit || (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_6__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_reply.discard_confirmation'));
  };

  var _proto = ReplyComposer.prototype;

  _proto.headerItems = function headerItems() {
    var items = _ComposerBody.prototype.headerItems.call(this);

    var discussion = this.attrs.discussion;
    items.add('title', m("h3", null, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_5__["default"])('fas fa-reply'), ' ', m(_common_components_Link__WEBPACK_IMPORTED_MODULE_4__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(discussion),
      onclick: minimizeComposerIfFullScreen
    }, discussion.title())));
    return items;
  }
  /**
   * Jump to the preview when triggered by the text editor.
   */
  ;

  _proto.jumpToPreview = function jumpToPreview(e) {
    minimizeComposerIfFullScreen(e);
    m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.discussion(this.attrs.discussion, 'reply'));
  }
  /**
   * Get the data to submit to the server when the reply is saved.
   *
   * @return {Record<string, unknown>}
   */
  ;

  _proto.data = function data() {
    return {
      content: this.composer.fields.content(),
      relationships: {
        discussion: this.attrs.discussion
      }
    };
  };

  _proto.onsubmit = function onsubmit() {
    var _this = this;

    var discussion = this.attrs.discussion;
    this.loading = true;
    m.redraw();
    var data = this.data();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.createRecord('posts').save(data).then(function (post) {
      // If we're currently viewing the discussion which this reply was made
      // in, then we can update the post stream and scroll to the post.
      if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].viewingDiscussion(discussion)) {
        var stream = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.get('stream');
        stream.update().then(function () {
          return stream.goToNumber(post.number());
        });
      } else {
        // Otherwise, we'll create an alert message to inform the user that
        // their reply has been posted, containing a button which will
        // transition to their new post when clicked.
        var alert;
        var viewButton = _common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"].component({
          className: 'Button Button--link',
          onclick: function onclick() {
            m.route.set(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.post(post));
            _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].alerts.dismiss(alert);
          }
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_reply.view_button'));
        alert = _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].alerts.show({
          type: 'success',
          controls: [viewButton]
        }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.composer_reply.posted_message'));
      }

      _this.composer.hide();
    }, this.loaded.bind(this));
  };

  return ReplyComposer;
}(_ComposerBody__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/ReplyPlaceholder.js":
/*!**************************************************!*\
  !*** ./src/forum/components/ReplyPlaceholder.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ReplyPlaceholder)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/DiscussionControls */ "./src/forum/utils/DiscussionControls.js");
/* harmony import */ var _ComposerPostPreview__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ComposerPostPreview */ "./src/forum/components/ComposerPostPreview.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");








/**
 * The `ReplyPlaceholder` component displays a placeholder for a reply, which,
 * when clicked, opens the reply composer.
 *
 * ### Attrs
 *
 * - `discussion`
 */

var ReplyPlaceholder = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(ReplyPlaceholder, _Component);

  function ReplyPlaceholder() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ReplyPlaceholder.prototype;

  _proto.view = function view() {
    var _this = this;

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer.composingReplyTo(this.attrs.discussion)) {
      return m("article", {
        className: "Post CommentPost editing"
      }, m("header", {
        className: "Post-header"
      }, m("div", {
        className: "PostUser"
      }, m("h3", null, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user, {
        className: 'PostUser-avatar'
      }), (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_4__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user)), m("ul", {
        className: "PostUser-badges badges"
      }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user.badges().toArray())))), m(_ComposerPostPreview__WEBPACK_IMPORTED_MODULE_6__["default"], {
        className: "Post-body",
        composer: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].composer,
        surround: this.anchorPreview.bind(this)
      }));
    }

    var reply = function reply() {
      _utils_DiscussionControls__WEBPACK_IMPORTED_MODULE_5__["default"].replyAction.call(_this.attrs.discussion, true)["catch"](function () {});
    };

    return m("article", {
      className: "Post ReplyPlaceholder",
      onclick: reply
    }, m("header", {
      className: "Post-header"
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user, {
      className: 'PostUser-avatar'
    }), " ", _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.post_stream.reply_placeholder')));
  };

  _proto.anchorPreview = function anchorPreview(preview) {
    var anchorToBottom = $(window).scrollTop() + $(window).height() >= $(document).height();
    preview();

    if (anchorToBottom) {
      $(window).scrollTop($(document).height());
    }
  };

  return ReplyPlaceholder;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/Search.tsx":
/*!*****************************************!*\
  !*** ./src/forum/components/Search.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Search)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_classList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/utils/classList */ "./src/common/utils/classList.ts");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _utils_KeyboardNavigatable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/KeyboardNavigatable */ "./src/forum/utils/KeyboardNavigatable.ts");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _DiscussionsSearchSource__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DiscussionsSearchSource */ "./src/forum/components/DiscussionsSearchSource.tsx");
/* harmony import */ var _UsersSearchSource__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./UsersSearchSource */ "./src/forum/components/UsersSearchSource.tsx");
/* harmony import */ var _common_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/helpers/fireDebugWarning */ "./src/common/helpers/fireDebugWarning.ts");














/**
 * The `Search` component displays a menu of as-you-type results from a variety
 * of sources.
 *
 * The search box will be 'activated' if the app's search state's
 * getInitialSearch() value is a truthy value. If this is the case, an 'x'
 * button will be shown next to the search field, and clicking it will clear the search.
 *
 * ATTRS:
 *
 * - state: SearchState instance.
 */
var Search = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(Search, _Component);

  function Search() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.searchState = void 0;
    _this.hasFocus = false;
    _this.sources = void 0;
    _this.loadingSources = 0;
    _this.index = 0;
    _this.navigator = void 0;
    _this.searchTimeout = void 0;
    _this.updateMaxHeightHandler = void 0;
    return _this;
  }

  var _proto = Search.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);

    this.searchState = this.attrs.state;
  };

  _proto.view = function view() {
    var _this2 = this;

    var currentSearch = this.searchState.getInitialSearch(); // Initialize search sources in the view rather than the constructor so
    // that we have access to app.forum.

    if (!this.sources) this.sources = this.sourceItems().toArray(); // Hide the search view if no sources were loaded

    if (!this.sources.length) return m("div", null);
    var searchLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.search_placeholder'));
    var isActive = !!currentSearch;
    var shouldShowResults = !!(!this.loadingSources && this.searchState.getValue() && this.hasFocus);
    var shouldShowClearButton = !!(!this.loadingSources && this.searchState.getValue());
    return m("div", {
      role: "search",
      "aria-label": _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.search_role_label'),
      className: (0,_common_utils_classList__WEBPACK_IMPORTED_MODULE_6__["default"])('Search', {
        open: this.searchState.getValue() && this.hasFocus,
        focused: this.hasFocus,
        active: isActive,
        loading: !!this.loadingSources
      })
    }, m("div", {
      className: "Search-input"
    }, m("input", {
      "aria-label": searchLabel,
      className: "FormControl",
      type: "search",
      placeholder: searchLabel,
      value: this.searchState.getValue(),
      oninput: function oninput(e) {
        var _e$target;

        return _this2.searchState.setValue(e == null ? void 0 : (_e$target = e.target) == null ? void 0 : _e$target.value);
      },
      onfocus: function onfocus() {
        return _this2.hasFocus = true;
      },
      onblur: function onblur() {
        return _this2.hasFocus = false;
      }
    }), !!this.loadingSources && m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_4__["default"], {
      size: "small",
      display: "inline",
      containerClassName: "Button Button--icon Button--link"
    }), shouldShowClearButton && m("button", {
      className: "Search-clear Button Button--icon Button--link",
      onclick: this.clear.bind(this),
      "aria-label": _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.search_clear_button_accessible_label')
    }, (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_9__["default"])('fas fa-times-circle'))), m("ul", {
      className: "Dropdown-menu Search-results",
      "aria-hidden": !shouldShowResults || undefined,
      "aria-live": shouldShowResults ? 'polite' : undefined
    }, shouldShowResults && this.sources.map(function (source) {
      return source.view(_this2.searchState.getValue());
    })));
  };

  _proto.updateMaxHeight = function updateMaxHeight() {
    var _this$element$querySe, _this$element$querySe2;

    // Since extensions might add elements above the search box on mobile,
    // we need to calculate and set the max height dynamically.
    var resultsElementMargin = 14;
    var maxHeight = window.innerHeight - this.element.querySelector('.Search-input>.FormControl').getBoundingClientRect().bottom - resultsElementMargin;
    (_this$element$querySe = this.element.querySelector('.Search-results')) == null ? void 0 : (_this$element$querySe2 = _this$element$querySe.style) == null ? void 0 : _this$element$querySe2.setProperty('max-height', maxHeight + "px");
  };

  _proto.onupdate = function onupdate(vnode) {
    var _this$sources;

    _Component.prototype.onupdate.call(this, vnode); // Highlight the item that is currently selected.


    this.setIndex(this.getCurrentNumericIndex()); // If there are no sources, the search view is not shown.

    if (!((_this$sources = this.sources) != null && _this$sources.length)) return;
    this.updateMaxHeight();
  };

  _proto.oncreate = function oncreate(vnode) {
    var _this$sources2,
        _this3 = this;

    _Component.prototype.oncreate.call(this, vnode); // If there are no sources, we shouldn't initialize logic for
    // search elements, as they will not be shown.


    if (!((_this$sources2 = this.sources) != null && _this$sources2.length)) return;
    var search = this;
    var state = this.searchState; // Highlight the item that is currently selected.

    this.setIndex(this.getCurrentNumericIndex());
    this.$('.Search-results').on('mousedown', function (e) {
      return e.preventDefault();
    }).on('click', function () {
      return _this3.$('input').trigger('blur');
    }) // Whenever the mouse is hovered over a search result, highlight it.
    .on('mouseenter', '> li:not(.Dropdown-header)', function () {
      search.setIndex(search.selectableItems().index(this));
    });
    var $input = this.$('input');
    this.navigator = new _utils_KeyboardNavigatable__WEBPACK_IMPORTED_MODULE_8__["default"]();
    this.navigator.onUp(function () {
      return _this3.setIndex(_this3.getCurrentNumericIndex() - 1, true);
    }).onDown(function () {
      return _this3.setIndex(_this3.getCurrentNumericIndex() + 1, true);
    }).onSelect(this.selectResult.bind(this), true).onCancel(this.clear.bind(this)).bindTo($input); // Handle input key events on the search input, triggering results to load.

    $input.on('input focus', function () {
      var query = this.value.toLowerCase();
      if (!query) return;
      if (search.searchTimeout) clearTimeout(search.searchTimeout);
      search.searchTimeout = setTimeout(function () {
        if (state.isCached(query)) return;

        if (query.length >= search.constructor.MIN_SEARCH_LEN) {
          var _search$sources;

          (_search$sources = search.sources) == null ? void 0 : _search$sources.map(function (source) {
            if (!source.search) return;
            search.loadingSources++;
            source.search(query).then(function () {
              search.loadingSources = Math.max(0, search.loadingSources - 1);
              m.redraw();
            });
          });
        }

        state.cache(query);
        m.redraw();
      }, 250);
    }).on('focus', function () {
      $(this).one('mouseup', function (e) {
        return e.preventDefault();
      }).trigger('select');
    });
    this.updateMaxHeightHandler = this.updateMaxHeight.bind(this);
    window.addEventListener('resize', this.updateMaxHeightHandler);
  };

  _proto.onremove = function onremove(vnode) {
    _Component.prototype.onremove.call(this, vnode);

    if (this.updateMaxHeightHandler) {
      window.removeEventListener('resize', this.updateMaxHeightHandler);
    }
  }
  /**
   * Navigate to the currently selected search result and close the list.
   */
  ;

  _proto.selectResult = function selectResult() {
    if (this.searchTimeout) clearTimeout(this.searchTimeout);
    this.loadingSources = 0;
    var selectedUrl = this.getItem(this.index).find('a').attr('href');

    if (this.searchState.getValue() && selectedUrl) {
      m.route.set(selectedUrl);
    } else {
      this.clear();
    }

    this.$('input').blur();
  }
  /**
   * Clear the search
   */
  ;

  _proto.clear = function clear() {
    this.searchState.clear();
  }
  /**
   * Build an item list of SearchSources.
   */
  ;

  _proto.sourceItems = function sourceItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();
    if (_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('canViewForum')) items.add('discussions', new _DiscussionsSearchSource__WEBPACK_IMPORTED_MODULE_10__["default"]());
    if (_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('canSearchUsers')) items.add('users', new _UsersSearchSource__WEBPACK_IMPORTED_MODULE_11__["default"]());
    return items;
  }
  /**
   * Get all of the search result items that are selectable.
   */
  ;

  _proto.selectableItems = function selectableItems() {
    return this.$('.Search-results > li:not(.Dropdown-header)');
  }
  /**
   * Get the position of the currently selected search result item.
   */
  ;

  _proto.getCurrentNumericIndex = function getCurrentNumericIndex() {
    return this.selectableItems().index(this.getItem(this.index));
  }
  /**
   * Get the <li> in the search results with the given index (numeric or named).
   */
  ;

  _proto.getItem = function getItem(index) {
    var $items = this.selectableItems();
    var $item = $items.filter("[data-index=\"" + index + "\"]");

    if (!$item.length) {
      $item = $items.eq(index);
    }

    return $item;
  }
  /**
   * Set the currently-selected search result item to the one with the given
   * index.
   */
  ;

  _proto.setIndex = function setIndex(index, scrollToItem) {
    if (scrollToItem === void 0) {
      scrollToItem = false;
    }

    var $items = this.selectableItems();
    var $dropdown = $items.parent();
    var fixedIndex = index;

    if (index < 0) {
      fixedIndex = $items.length - 1;
    } else if (index >= $items.length) {
      fixedIndex = 0;
    }

    var $item = $items.removeClass('active').eq(fixedIndex).addClass('active');
    this.index = parseInt($item.attr('data-index')) || fixedIndex;

    if (scrollToItem) {
      var dropdownScroll = $dropdown.scrollTop();
      var dropdownTop = $dropdown.offset().top;
      var dropdownBottom = dropdownTop + $dropdown.outerHeight();
      var itemTop = $item.offset().top;
      var itemBottom = itemTop + $item.outerHeight();
      var scrollTop;

      if (itemTop < dropdownTop) {
        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);
      } else if (itemBottom > dropdownBottom) {
        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);
      }

      if (typeof scrollTop !== 'undefined') {
        $dropdown.stop(true).animate({
          scrollTop: scrollTop
        }, 100);
      }
    }
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(Search, [{
    key: "state",
    get:
    /**
     * The instance of `SearchState` for this component.
     *
     * @deprecated Replace with`this.searchState` instead.
     */
    // TODO: [Flarum 2.0] Remove this.
    // @ts-expect-error This is a get accessor, while superclass defines this as a property. This is needed to prevent breaking changes, however.
    function get() {
      (0,_common_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_12__.fireDeprecationWarning)('`state` property of the Search component is deprecated', '3212');
      return this.searchState;
    },
    set: function set(state) {
      // Workaround to prevent triggering deprecation warnings due to Mithril
      // setting state to undefined when creating components
      state !== undefined && (0,_common_helpers_fireDebugWarning__WEBPACK_IMPORTED_MODULE_12__.fireDeprecationWarning)('`state` property of the Search component is deprecated', '3212');
      this.searchState = state;
    }
    /**
     * Whether or not the search input has focus.
     */

  }]);

  return Search;
}(_common_Component__WEBPACK_IMPORTED_MODULE_3__["default"]);

Search.MIN_SEARCH_LEN = 3;


/***/ }),

/***/ "./src/forum/components/SessionDropdown.js":
/*!*************************************************!*\
  !*** ./src/forum/components/SessionDropdown.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SessionDropdown)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/LinkButton */ "./src/common/components/LinkButton.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_components_Separator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/components/Separator */ "./src/common/components/Separator.js");










/**
 * The `SessionDropdown` component shows a button with the current user's
 * avatar/name, with a dropdown of session controls.
 */

var SessionDropdown = /*#__PURE__*/function (_Dropdown) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(SessionDropdown, _Dropdown);

  function SessionDropdown() {
    return _Dropdown.apply(this, arguments) || this;
  }

  SessionDropdown.initAttrs = function initAttrs(attrs) {
    _Dropdown.initAttrs.call(this, attrs);

    attrs.className = 'SessionDropdown';
    attrs.buttonClassName = 'Button Button--user Button--flat';
    attrs.menuClassName = 'Dropdown-menu--right';
    attrs.accessibleToggleLabel = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.session_dropdown_accessible_label');
  };

  var _proto = SessionDropdown.prototype;

  _proto.view = function view(vnode) {
    return _Dropdown.prototype.view.call(this, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, vnode, {
      children: this.items().toArray()
    }));
  };

  _proto.getButtonContent = function getButtonContent() {
    var user = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user;
    return [(0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_3__["default"])(user), ' ', m("span", {
      className: "Button-label"
    }, (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_4__["default"])(user))];
  }
  /**
   * Build an item list for the contents of the dropdown menu.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.items = function items() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__["default"]();
    var user = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user;
    items.add('profile', _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_6__["default"].component({
      icon: 'fas fa-user',
      href: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route.user(user)
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.profile_button')), 100);
    items.add('settings', _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_6__["default"].component({
      icon: 'fas fa-cog',
      href: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route('settings')
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.settings_button')), 50);

    if (_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('adminUrl')) {
      items.add('administration', _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_6__["default"].component({
        icon: 'fas fa-wrench',
        href: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('adminUrl'),
        target: '_blank'
      }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.admin_button')), 0);
    }

    items.add('separator', _common_components_Separator__WEBPACK_IMPORTED_MODULE_9__["default"].component(), -90);
    items.add('logOut', _common_components_Button__WEBPACK_IMPORTED_MODULE_7__["default"].component({
      icon: 'fas fa-sign-out-alt',
      onclick: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.logout.bind(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session)
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.header.log_out_button')), -100);
    return items;
  };

  return SessionDropdown;
}(_common_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__["default"]);



/***/ }),

/***/ "./src/forum/components/SettingsPage.js":
/*!**********************************************!*\
  !*** ./src/forum/components/SettingsPage.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SettingsPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _UserPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserPage */ "./src/forum/components/UserPage.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_components_Switch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Switch */ "./src/common/components/Switch.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_FieldSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/FieldSet */ "./src/common/components/FieldSet.js");
/* harmony import */ var _NotificationGrid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./NotificationGrid */ "./src/forum/components/NotificationGrid.js");
/* harmony import */ var _ChangePasswordModal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ChangePasswordModal */ "./src/forum/components/ChangePasswordModal.js");
/* harmony import */ var _ChangeEmailModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ChangeEmailModal */ "./src/forum/components/ChangeEmailModal.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");











/**
 * The `SettingsPage` component displays the user's settings control panel, in
 * the context of their user profile.
 */

var SettingsPage = /*#__PURE__*/function (_UserPage) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(SettingsPage, _UserPage);

  function SettingsPage() {
    return _UserPage.apply(this, arguments) || this;
  }

  var _proto = SettingsPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _UserPage.prototype.oninit.call(this, vnode);

    this.show(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user);
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitle(_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.title'));
  };

  _proto.content = function content() {
    return m("div", {
      className: "SettingsPage"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_10__["default"])(this.settingsItems().toArray())));
  }
  /**
   * Build an item list for the user's settings controls.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.settingsItems = function settingsItems() {
    var _this = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    ['account', 'notifications', 'privacy'].forEach(function (section) {
      items.add(section, m(_common_components_FieldSet__WEBPACK_IMPORTED_MODULE_6__["default"], {
        className: "Settings-" + section,
        label: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans("core.forum.settings." + section + "_heading")
      }, _this[section + "Items"]().toArray()));
    });
    return items;
  }
  /**
   * Build an item list for the user's account settings.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.accountItems = function accountItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('changePassword', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
      className: "Button",
      onclick: function onclick() {
        return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_ChangePasswordModal__WEBPACK_IMPORTED_MODULE_8__["default"]);
      }
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.change_password_button')));
    items.add('changeEmail', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
      className: "Button",
      onclick: function onclick() {
        return _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].modal.show(_ChangeEmailModal__WEBPACK_IMPORTED_MODULE_9__["default"]);
      }
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.change_email_button')));
    return items;
  }
  /**
   * Build an item list for the user's notification settings.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.notificationsItems = function notificationsItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('notificationGrid', m(_NotificationGrid__WEBPACK_IMPORTED_MODULE_7__["default"], {
      user: this.user
    }));
    return items;
  }
  /**
   * Build an item list for the user's privacy settings.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.privacyItems = function privacyItems() {
    var _this2 = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('discloseOnline', m(_common_components_Switch__WEBPACK_IMPORTED_MODULE_4__["default"], {
      state: this.user.preferences().discloseOnline,
      onchange: function onchange(value) {
        _this2.discloseOnlineLoading = true;

        _this2.user.savePreferences({
          discloseOnline: value
        }).then(function () {
          _this2.discloseOnlineLoading = false;
          m.redraw();
        });
      },
      loading: this.discloseOnlineLoading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.settings.privacy_disclose_online_label')));
    return items;
  };

  return SettingsPage;
}(_UserPage__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/SignUpModal.tsx":
/*!**********************************************!*\
  !*** ./src/forum/components/SignUpModal.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SignUpModal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Modal */ "./src/common/components/Modal.tsx");
/* harmony import */ var _LogInModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LogInModal */ "./src/forum/components/LogInModal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _LogInButtons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./LogInButtons */ "./src/forum/components/LogInButtons.js");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");











var SignUpModal = /*#__PURE__*/function (_Modal) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(SignUpModal, _Modal);

  function SignUpModal() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Modal.call.apply(_Modal, [this].concat(args)) || this;
    _this.username = void 0;
    _this.email = void 0;
    _this.password = void 0;
    return _this;
  }

  var _proto = SignUpModal.prototype;

  _proto.oninit = function oninit(vnode) {
    _Modal.prototype.oninit.call(this, vnode);

    this.username = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(this.attrs.username || '');
    this.email = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(this.attrs.email || '');
    this.password = (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_9__["default"])(this.attrs.password || '');
  };

  _proto.className = function className() {
    return 'Modal--small SignUpModal';
  };

  _proto.title = function title() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.title');
  };

  _proto.content = function content() {
    return [m("div", {
      className: "Modal-body"
    }, this.body()), m("div", {
      className: "Modal-footer"
    }, this.footer())];
  };

  _proto.isProvided = function isProvided(field) {
    var _this$attrs$provided$, _this$attrs$provided;

    return (_this$attrs$provided$ = (_this$attrs$provided = this.attrs.provided) == null ? void 0 : _this$attrs$provided.includes(field)) != null ? _this$attrs$provided$ : false;
  };

  _proto.body = function body() {
    return [!this.attrs.token && m(_LogInButtons__WEBPACK_IMPORTED_MODULE_6__["default"], null), m("div", {
      className: "Form Form--centered"
    }, this.fields().toArray())];
  };

  _proto.fields = function fields() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_8__["default"]();
    var usernameLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.username_placeholder'));
    var emailLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.email_placeholder'));
    var passwordLabel = (0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_7__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.password_placeholder'));
    items.add('username', m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      name: "username",
      type: "text",
      placeholder: usernameLabel,
      "aria-label": usernameLabel,
      bidi: this.username,
      disabled: this.loading || this.isProvided('username')
    })), 30);
    items.add('email', m("div", {
      className: "Form-group"
    }, m("input", {
      className: "FormControl",
      name: "email",
      type: "email",
      placeholder: emailLabel,
      "aria-label": emailLabel,
      bidi: this.email,
      disabled: this.loading || this.isProvided('email')
    })), 20);

    if (!this.attrs.token) {
      items.add('password', m("div", {
        className: "Form-group"
      }, m("input", {
        className: "FormControl",
        name: "password",
        type: "password",
        autocomplete: "new-password",
        placeholder: passwordLabel,
        "aria-label": passwordLabel,
        bidi: this.password,
        disabled: this.loading
      })), 10);
    }

    items.add('submit', m("div", {
      className: "Form-group"
    }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
      className: "Button Button--primary Button--block",
      type: "submit",
      loading: this.loading
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.submit_button'))), -10);
    return items;
  };

  _proto.footer = function footer() {
    return [m("p", {
      className: "SignUpModal-logIn"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].translator.trans('core.forum.sign_up.log_in_text', {
      a: m("a", {
        onclick: this.logIn.bind(this)
      })
    }))];
  }
  /**
   * Open the log in modal, prefilling it with an email/username/password if
   * the user has entered one.
   */
  ;

  _proto.logIn = function logIn() {
    var attrs = {
      identification: this.email() || this.username(),
      password: this.password()
    };
    _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].modal.show(_LogInModal__WEBPACK_IMPORTED_MODULE_4__["default"], attrs);
  };

  _proto.onready = function onready() {
    if (this.attrs.username && !this.attrs.email) {
      this.$('[name=email]').select();
    } else {
      this.$('[name=username]').select();
    }
  };

  _proto.onsubmit = function onsubmit(e) {
    e.preventDefault();
    this.loading = true;
    var body = this.submitData();
    _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].request({
      url: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('baseUrl') + '/register',
      method: 'POST',
      body: body,
      errorHandler: this.onerror.bind(this)
    }).then(function () {
      return window.location.reload();
    }, this.loaded.bind(this));
  }
  /**
   * Get the data that should be submitted in the sign-up request.
   */
  ;

  _proto.submitData = function submitData() {
    var authData = this.attrs.token ? {
      token: this.attrs.token
    } : {
      password: this.password()
    };

    var data = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      username: this.username(),
      email: this.email()
    }, authData);

    return data;
  };

  return SignUpModal;
}(_common_components_Modal__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/forum/components/TerminalPost.js":
/*!**********************************************!*\
  !*** ./src/forum/components/TerminalPost.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TerminalPost)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/helpers/humanTime */ "./src/common/helpers/humanTime.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");





/**
 * Displays information about a the first or last post in a discussion.
 *
 * ### Attrs
 *
 * - `discussion`
 * - `lastPost`
 */

var TerminalPost = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(TerminalPost, _Component);

  function TerminalPost() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = TerminalPost.prototype;

  _proto.view = function view() {
    var discussion = this.attrs.discussion;
    var lastPost = this.attrs.lastPost && discussion.replyCount();
    var user = discussion[lastPost ? 'lastPostedUser' : 'user']();
    var time = discussion[lastPost ? 'lastPostedAt' : 'createdAt']();
    return m("span", null, lastPost ? (0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])('fas fa-reply') : '', ' ', _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.discussion_list.' + (lastPost ? 'replied' : 'started') + '_text', {
      user: user,
      ago: (0,_common_helpers_humanTime__WEBPACK_IMPORTED_MODULE_3__["default"])(time)
    }));
  };

  return TerminalPost;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/UserCard.js":
/*!******************************************!*\
  !*** ./src/forum/components/UserCard.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ UserCard)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_utils_humanTime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/humanTime */ "./src/common/utils/humanTime.ts");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _utils_UserControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/UserControls */ "./src/forum/utils/UserControls.js");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/components/Dropdown */ "./src/common/components/Dropdown.js");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");
/* harmony import */ var _AvatarEditor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AvatarEditor */ "./src/forum/components/AvatarEditor.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");













/**
 * The `UserCard` component displays a user's profile card. This is used both on
 * the `UserPage` (in the hero) and in discussions, shown when hovering over a
 * post author.
 *
 * ### Attrs
 *
 * - `user`
 * - `className`
 * - `editable`
 * - `controlsButtonClassName`
 */

var UserCard = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(UserCard, _Component);

  function UserCard() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = UserCard.prototype;

  _proto.view = function view() {
    var user = this.attrs.user;
    var controls = _utils_UserControls__WEBPACK_IMPORTED_MODULE_5__["default"].controls(user, this).toArray();
    var color = user.color();
    var badges = user.badges().toArray();
    return m("div", {
      className: 'UserCard ' + (this.attrs.className || ''),
      style: color && {
        '--usercard-bg': color
      }
    }, m("div", {
      className: "darkenBackground"
    }, m("div", {
      className: "container"
    }, controls.length ? _common_components_Dropdown__WEBPACK_IMPORTED_MODULE_9__["default"].component({
      className: 'UserCard-controls App-primaryControl',
      menuClassName: 'Dropdown-menu--right',
      buttonClassName: this.attrs.controlsButtonClassName,
      label: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user_controls.button'),
      accessibleToggleLabel: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user_controls.toggle_dropdown_accessible_label'),
      icon: 'fas fa-ellipsis-v'
    }, controls) : '', m("div", {
      className: "UserCard-profile"
    }, m("h2", {
      className: "UserCard-identity"
    }, this.attrs.editable ? [_AvatarEditor__WEBPACK_IMPORTED_MODULE_11__["default"].component({
      user: user,
      className: 'UserCard-avatar'
    }), (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_7__["default"])(user)] : m(_common_components_Link__WEBPACK_IMPORTED_MODULE_10__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route.user(user)
    }, m("div", {
      className: "UserCard-avatar"
    }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_6__["default"])(user)), (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_7__["default"])(user))), badges.length ? m("ul", {
      className: "UserCard-badges badges"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_12__["default"])(badges)) : '', m("ul", {
      className: "UserCard-info"
    }, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_12__["default"])(this.infoItems().toArray()))))));
  }
  /**
   * Build an item list of tidbits of info to show on this user's profile.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.infoItems = function infoItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();
    var user = this.attrs.user;
    var lastSeenAt = user.lastSeenAt();

    if (lastSeenAt) {
      var online = user.isOnline();
      items.add('lastSeen', m("span", {
        className: 'UserCard-lastSeen' + (online ? ' online' : '')
      }, online ? [(0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_8__["default"])('fas fa-circle'), ' ', _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.online_text')] : [(0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_8__["default"])('far fa-clock'), ' ', (0,_common_utils_humanTime__WEBPACK_IMPORTED_MODULE_3__["default"])(lastSeenAt)]));
    }

    items.add('joined', _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.joined_date_text', {
      ago: (0,_common_utils_humanTime__WEBPACK_IMPORTED_MODULE_3__["default"])(user.joinTime())
    }));
    return items;
  };

  return UserCard;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/UserPage.js":
/*!******************************************!*\
  !*** ./src/forum/components/UserPage.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ UserPage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Page__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Page */ "./src/common/components/Page.tsx");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _UserCard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UserCard */ "./src/forum/components/UserCard.js");
/* harmony import */ var _common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/LoadingIndicator */ "./src/common/components/LoadingIndicator.tsx");
/* harmony import */ var _common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/components/SelectDropdown */ "./src/common/components/SelectDropdown.js");
/* harmony import */ var _common_components_LinkButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/components/LinkButton */ "./src/common/components/LinkButton.js");
/* harmony import */ var _common_components_Separator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _common_helpers_listItems__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../common/helpers/listItems */ "./src/common/helpers/listItems.tsx");
/* harmony import */ var _AffixedSidebar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AffixedSidebar */ "./src/forum/components/AffixedSidebar.js");











/**
 * The `UserPage` component shows a user's profile. It can be extended to show
 * content inside of the content area. See `ActivityPage` and `SettingsPage` for
 * examples.
 *
 * @abstract
 */

var UserPage = /*#__PURE__*/function (_Page) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(UserPage, _Page);

  function UserPage() {
    return _Page.apply(this, arguments) || this;
  }

  var _proto = UserPage.prototype;

  _proto.oninit = function oninit(vnode) {
    _Page.prototype.oninit.call(this, vnode);
    /**
     * The user this page is for.
     *
     * @type {User}
     */


    this.user = null;
    this.bodyClass = 'App--user';
  }
  /**
   * Base view template for the user page.
   *
   * @return {import('mithril').Children}
   */
  ;

  _proto.view = function view() {
    return m("div", {
      className: "UserPage"
    }, this.user ? [m(_UserCard__WEBPACK_IMPORTED_MODULE_4__["default"], {
      user: this.user,
      className: "Hero UserHero",
      editable: this.user.canEdit() || this.user === _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user,
      controlsButtonClassName: "Button"
    }), m("div", {
      className: "container"
    }, m("div", {
      className: "sideNavContainer"
    }, m(_AffixedSidebar__WEBPACK_IMPORTED_MODULE_10__["default"], null, m("nav", {
      className: "sideNav UserPage-nav"
    }, m("ul", null, (0,_common_helpers_listItems__WEBPACK_IMPORTED_MODULE_9__["default"])(this.sidebarItems().toArray())))), m("div", {
      className: "sideNavOffset UserPage-content"
    }, this.content())))] : [m(_common_components_LoadingIndicator__WEBPACK_IMPORTED_MODULE_5__["default"], {
      display: "block"
    })]);
  }
  /**
   * Get the content to display in the user page.
   *
   * @return {import('mithril').Children}
   */
  ;

  _proto.content = function content() {}
  /**
   * Initialize the component with a user, and trigger the loading of their
   * activity feed.
   *
   * @param {import('../../common/models/User').default} user
   * @protected
   */
  ;

  _proto.show = function show(user) {
    this.user = user;
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].current.set('user', user);
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].setTitle(user.displayName());
    m.redraw();
  }
  /**
   * Given a username, load the user's profile from the store, or make a request
   * if we don't have it yet. Then initialize the profile page with that user.
   *
   * @param {string} username
   */
  ;

  _proto.loadUser = function loadUser(username) {
    var _this = this;

    var lowercaseUsername = username.toLowerCase(); // Load the preloaded user object, if any, into the global app store
    // We don't use the output of the method because it returns raw JSON
    // instead of the parsed models

    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].preloadedApiDocument();
    _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.all('users').some(function (user) {
      if ((user.username().toLowerCase() === lowercaseUsername || user.id() === username) && user.joinTime()) {
        _this.show(user);

        return true;
      }
    });

    if (!this.user) {
      _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].store.find('users', username, {
        bySlug: true
      }).then(this.show.bind(this));
    }
  }
  /**
   * Build an item list for the content of the sidebar.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.sidebarItems = function sidebarItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    items.add('nav', m(_common_components_SelectDropdown__WEBPACK_IMPORTED_MODULE_6__["default"], {
      className: "App-titleControl",
      buttonClassName: "Button"
    }, this.navItems().toArray()));
    return items;
  }
  /**
   * Build an item list for the navigation in the sidebar.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  ;

  _proto.navItems = function navItems() {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_3__["default"]();
    var user = this.user;
    items.add('posts', m(_common_components_LinkButton__WEBPACK_IMPORTED_MODULE_7__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route('user.posts', {
        username: user.slug()
      }),
      icon: "far fa-comment"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.posts_link'), " ", m("span", {
      className: "Button-badge"
    }, user.commentCount())), 100);
    items.add('discussions', m(_common_components_LinkButton__WEBPACK_IMPORTED_MODULE_7__["default"], {
      href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route('user.discussions', {
        username: user.slug()
      }),
      icon: "fas fa-bars"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.discussions_link'), " ", m("span", {
      className: "Button-badge"
    }, user.discussionCount())), 90);

    if (_forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].session.user === user) {
      items.add('separator', m(_common_components_Separator__WEBPACK_IMPORTED_MODULE_8__["default"], null), -90);
      items.add('settings', m(_common_components_LinkButton__WEBPACK_IMPORTED_MODULE_7__["default"], {
        href: _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].route('settings'),
        icon: "fas fa-cog"
      }, _forum_app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.user.settings_link')), -100);
    }

    return items;
  };

  return UserPage;
}(_common_components_Page__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/components/UsersSearchSource.tsx":
/*!****************************************************!*\
  !*** ./src/forum/components/UsersSearchSource.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ UsersSearchResults)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_helpers_highlight__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/highlight */ "./src/common/helpers/highlight.tsx");
/* harmony import */ var _common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/helpers/avatar */ "./src/common/helpers/avatar.tsx");
/* harmony import */ var _common_helpers_username__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/helpers/username */ "./src/common/helpers/username.tsx");
/* harmony import */ var _common_components_Link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/components/Link */ "./src/common/components/Link.js");









/**
 * The `UsersSearchSource` finds and displays user search results in the search
 * dropdown.
 */
var UsersSearchResults = /*#__PURE__*/function () {
  function UsersSearchResults() {
    this.results = new Map();
  }

  var _proto = UsersSearchResults.prototype;

  _proto.search = /*#__PURE__*/function () {
    var _search = (0,_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(function _callee(query) {
      var _this = this;

      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", _forum_app__WEBPACK_IMPORTED_MODULE_3__["default"].store.find('users', {
                filter: {
                  q: query
                },
                page: {
                  limit: 5
                }
              }).then(function (results) {
                _this.results.set(query, results);

                m.redraw();
              }));

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function search(_x) {
      return _search.apply(this, arguments);
    }

    return search;
  }();

  _proto.view = function view(query) {
    query = query.toLowerCase();
    var results = (this.results.get(query) || []).concat(_forum_app__WEBPACK_IMPORTED_MODULE_3__["default"].store.all('users').filter(function (user) {
      return [user.username(), user.displayName()].some(function (value) {
        return value.toLowerCase().substr(0, query.length) === query;
      });
    })).filter(function (e, i, arr) {
      return arr.lastIndexOf(e) === i;
    }).sort(function (a, b) {
      return a.displayName().localeCompare(b.displayName());
    });
    if (!results.length) return [];
    return [m("li", {
      className: "Dropdown-header"
    }, _forum_app__WEBPACK_IMPORTED_MODULE_3__["default"].translator.trans('core.forum.search.users_heading'))].concat(results.map(function (user) {
      var name = (0,_common_helpers_username__WEBPACK_IMPORTED_MODULE_6__["default"])(user);
      var children = [(0,_common_helpers_highlight__WEBPACK_IMPORTED_MODULE_4__["default"])(name.text, query)];
      return m("li", {
        className: "UserSearchResult",
        "data-index": 'users' + user.id()
      }, m(_common_components_Link__WEBPACK_IMPORTED_MODULE_7__["default"], {
        href: _forum_app__WEBPACK_IMPORTED_MODULE_3__["default"].route.user(user)
      }, (0,_common_helpers_avatar__WEBPACK_IMPORTED_MODULE_5__["default"])(user), (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, name, {
        text: undefined,
        children: children
      })));
    }));
  };

  return UsersSearchResults;
}();



/***/ }),

/***/ "./src/forum/components/WelcomeHero.tsx":
/*!**********************************************!*\
  !*** ./src/forum/components/WelcomeHero.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ WelcomeHero)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/forum/app.ts");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");




var LOCAL_STORAGE_KEY = 'welcomeHidden';
/**
 * The `WelcomeHero` component displays a hero that welcomes the user to the
 * forum.
 */

var WelcomeHero = /*#__PURE__*/function (_Component) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(WelcomeHero, _Component);

  function WelcomeHero() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.hidden = false;
    return _this;
  }

  var _proto = WelcomeHero.prototype;

  _proto.oninit = function oninit(vnode) {
    _Component.prototype.oninit.call(this, vnode);
  };

  _proto.view = function view(vnode) {
    var _this2 = this;

    if (this.isHidden()) return null;

    var slideUp = function slideUp() {
      _this2.$().slideUp(_this2.hide.bind(_this2));
    };

    return m("header", {
      "class": "Hero WelcomeHero"
    }, m("div", {
      "class": "container"
    }, m(_common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"], {
      icon: "fas fa-times",
      onclick: slideUp,
      className: "Hero-close Button Button--icon Button--link",
      "aria-label": _app__WEBPACK_IMPORTED_MODULE_1__["default"].translator.trans('core.forum.welcome_hero.hide')
    }), m("div", {
      "class": "containerNarrow"
    }, m("h2", {
      "class": "Hero-title"
    }, _app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('welcomeTitle')), m("div", {
      "class": "Hero-subtitle"
    }, m.trust(_app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('welcomeMessage'))))));
  }
  /**
   * Hide the welcome hero.
   */
  ;

  _proto.hide = function hide() {
    localStorage.setItem(LOCAL_STORAGE_KEY, 'true');
  }
  /**
   * Determines whether the welcome hero should be hidden.
   *
   * @returns if the welcome hero is hidden.
   */
  ;

  _proto.isHidden = function isHidden() {
    var _app$forum$attribute;

    if (!((_app$forum$attribute = _app__WEBPACK_IMPORTED_MODULE_1__["default"].forum.attribute('welcomeTitle')) != null && _app$forum$attribute.trim())) return true;
    if (localStorage.getItem(LOCAL_STORAGE_KEY)) return true;
    if (this.hidden) return true;
    return false;
  };

  return WelcomeHero;
}(_common_Component__WEBPACK_IMPORTED_MODULE_2__["default"]);



/***/ }),

/***/ "./src/forum/index.ts":
/*!****************************!*\
  !*** ./src/forum/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "app": () => (/* reexport safe */ _app__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "compat": () => (/* binding */ compat)
/* harmony export */ });
/* harmony import */ var expose_loader_exposes_punycode_punycode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! expose-loader?exposes=punycode!punycode */ "./node_modules/expose-loader/dist/cjs.js?exposes=punycode!./node_modules/punycode/punycode.es6-exposed.js");
/* harmony import */ var expose_loader_exposes_punycode_punycode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(expose_loader_exposes_punycode_punycode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var expose_loader_exposes_ColorThief_color_thief_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! expose-loader?exposes=ColorThief!color-thief-browser */ "./node_modules/expose-loader/dist/cjs.js?exposes=ColorThief!./node_modules/color-thief-browser/dist/color-thief.min-exposed.js");
/* harmony import */ var expose_loader_exposes_ColorThief_color_thief_browser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(expose_loader_exposes_ColorThief_color_thief_browser__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app */ "./src/forum/app.ts");
/* harmony import */ var _compat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./compat */ "./src/forum/compat.js");
/* harmony import */ var _common_utils_proxifyCompat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/utils/proxifyCompat */ "./src/common/utils/proxifyCompat.ts");
// Expose punycode and ColorThief to the window browser object



 // Export compat API


 // @ts-ignore

_compat__WEBPACK_IMPORTED_MODULE_3__["default"].app = _app__WEBPACK_IMPORTED_MODULE_2__["default"];
var compat = (0,_common_utils_proxifyCompat__WEBPACK_IMPORTED_MODULE_4__["default"])(_compat__WEBPACK_IMPORTED_MODULE_3__["default"], 'forum');

/***/ }),

/***/ "./src/forum/resolvers/DiscussionPageResolver.ts":
/*!*******************************************************!*\
  !*** ./src/forum/resolvers/DiscussionPageResolver.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionPageResolver)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/resolvers/DefaultResolver */ "./src/common/resolvers/DefaultResolver.ts");
/* harmony import */ var _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");





/**
 * A custom route resolver for DiscussionPage that generates the same key to all posts
 * on the same discussion. It triggers a scroll when going from one post to another
 * in the same discussion.
 */

var DiscussionPageResolver = /*#__PURE__*/function (_DefaultResolver) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(DiscussionPageResolver, _DefaultResolver);

  function DiscussionPageResolver() {
    return _DefaultResolver.apply(this, arguments) || this;
  }

  var _proto = DiscussionPageResolver.prototype;

  /**
   * Remove optional parts of a discussion's slug to keep the substring
   * that bijectively maps to a discussion object. By default this just
   * extracts the numerical ID from the slug. If a custom discussion
   * slugging driver is used, this may need to be overriden.
   * @param slug
   */
  _proto.canonicalizeDiscussionSlug = function canonicalizeDiscussionSlug(slug) {
    if (!slug) return;
    return slug.split('-')[0];
  }
  /**
   * @inheritdoc
   */
  ;

  _proto.makeKey = function makeKey() {
    var params = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, m.route.param());

    if ('near' in params) {
      delete params.near;
    }

    params.id = this.canonicalizeDiscussionSlug(params.id);
    return this.routeName.replace('.near', '') + JSON.stringify(params);
  };

  _proto.onmatch = function onmatch(args, requestedPath, route) {
    if (_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.matches(_components_DiscussionPage__WEBPACK_IMPORTED_MODULE_4__["default"]) && this.canonicalizeDiscussionSlug(args.id) === this.canonicalizeDiscussionSlug(m.route.param('id'))) {
      // By default, the first post number of any discussion is 1
      DiscussionPageResolver.scrollToPostNumber = args.near || 1;
    }

    return _DefaultResolver.prototype.onmatch.call(this, args, requestedPath, route);
  };

  _proto.render = function render(vnode) {
    if (DiscussionPageResolver.scrollToPostNumber !== null) {
      var number = DiscussionPageResolver.scrollToPostNumber; // Scroll after a timeout to avoid clashes with the render.

      setTimeout(function () {
        return _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.get('stream').goToNumber(number);
      });
      DiscussionPageResolver.scrollToPostNumber = null;
    }

    return _DefaultResolver.prototype.render.call(this, vnode);
  };

  return DiscussionPageResolver;
}(_common_resolvers_DefaultResolver__WEBPACK_IMPORTED_MODULE_3__["default"]);

DiscussionPageResolver.scrollToPostNumber = null;


/***/ }),

/***/ "./src/forum/routes.ts":
/*!*****************************!*\
  !*** ./src/forum/routes.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "makeRouteHelpers": () => (/* binding */ makeRouteHelpers)
/* harmony export */ });
/* harmony import */ var _components_IndexPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/IndexPage */ "./src/forum/components/IndexPage.js");
/* harmony import */ var _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _components_PostsUserPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/PostsUserPage */ "./src/forum/components/PostsUserPage.js");
/* harmony import */ var _components_DiscussionsUserPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/DiscussionsUserPage */ "./src/forum/components/DiscussionsUserPage.js");
/* harmony import */ var _components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/SettingsPage */ "./src/forum/components/SettingsPage.js");
/* harmony import */ var _components_NotificationsPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/NotificationsPage */ "./src/forum/components/NotificationsPage.js");
/* harmony import */ var _resolvers_DiscussionPageResolver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resolvers/DiscussionPageResolver */ "./src/forum/resolvers/DiscussionPageResolver.ts");








/**
 * The `routes` initializer defines the forum app's routes.
 */
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(app) {
  app.routes = {
    index: {
      path: '/all',
      component: _components_IndexPage__WEBPACK_IMPORTED_MODULE_0__["default"]
    },
    discussion: {
      path: '/d/:id',
      component: _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_1__["default"],
      resolverClass: _resolvers_DiscussionPageResolver__WEBPACK_IMPORTED_MODULE_6__["default"]
    },
    'discussion.near': {
      path: '/d/:id/:near',
      component: _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_1__["default"],
      resolverClass: _resolvers_DiscussionPageResolver__WEBPACK_IMPORTED_MODULE_6__["default"]
    },
    user: {
      path: '/u/:username',
      component: _components_PostsUserPage__WEBPACK_IMPORTED_MODULE_2__["default"]
    },
    'user.posts': {
      path: '/u/:username',
      component: _components_PostsUserPage__WEBPACK_IMPORTED_MODULE_2__["default"]
    },
    'user.discussions': {
      path: '/u/:username/discussions',
      component: _components_DiscussionsUserPage__WEBPACK_IMPORTED_MODULE_3__["default"]
    },
    settings: {
      path: '/settings',
      component: _components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__["default"]
    },
    notifications: {
      path: '/notifications',
      component: _components_NotificationsPage__WEBPACK_IMPORTED_MODULE_5__["default"]
    }
  };
}
function makeRouteHelpers(app) {
  return {
    /**
     * Generate a URL to a discussion.
     */
    discussion: function discussion(_discussion, near) {
      return app.route(near && near !== 1 ? 'discussion.near' : 'discussion', {
        id: _discussion.slug(),
        near: near && near !== 1 ? near : undefined
      });
    },

    /**
     * Generate a URL to a post.
     */
    post: function post(_post) {
      return app.route.discussion(_post.discussion(), _post.number());
    },

    /**
     * Generate a URL to a user.
     */
    user: function user(_user) {
      return app.route('user', {
        username: _user.slug()
      });
    }
  };
}

/***/ }),

/***/ "./src/forum/states/ComposerState.js":
/*!*******************************************!*\
  !*** ./src/forum/states/ComposerState.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_utils_subclassOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/utils/subclassOf */ "./src/common/utils/subclassOf.js");
/* harmony import */ var _common_utils_Stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils/Stream */ "./src/common/utils/Stream.ts");
/* harmony import */ var _components_ReplyComposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ReplyComposer */ "./src/forum/components/ReplyComposer.js");
/* harmony import */ var _common_utils_EditorDriverInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/EditorDriverInterface */ "./src/common/utils/EditorDriverInterface.ts");
/* harmony import */ var _common_utils_EditorDriverInterface__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_common_utils_EditorDriverInterface__WEBPACK_IMPORTED_MODULE_4__);






var ComposerState = /*#__PURE__*/function () {
  function ComposerState() {
    /**
     * The composer's current position.
     *
     * @type {ComposerState.Position}
     */
    this.position = ComposerState.Position.HIDDEN;
    /**
     * The composer's intended height, which can be modified by the user
     * (by dragging the composer handle).
     *
     * @type {number}
     */

    this.height = null;
    /**
     * The dynamic component being shown inside the composer.
     *
     * @type {Object}
     */

    this.body = {
      attrs: {}
    };
    /**
     * A reference to the text editor that allows text manipulation.
     *
     * @type {EditorDriverInterface|null}
     */

    this.editor = null;
    this.clear();
  }
  /**
   * Load a content component into the composer.
   *
   * @param {typeof import('../components/ComposerBody').default} componentClass
   */


  var _proto = ComposerState.prototype;

  _proto.load = function load(componentClass, attrs) {
    var body = {
      componentClass: componentClass,
      attrs: attrs
    };
    if (this.preventExit()) return; // If we load a similar component into the composer, then Mithril will be
    // able to diff the old/new contents and some DOM-related state from the
    // old composer will remain. To prevent this from happening, we clear the
    // component and force a redraw, so that the new component will be working
    // on a blank slate.

    if (this.isVisible()) {
      this.clear();
      m.redraw.sync();
    }

    this.body = body;
  }
  /**
   * Clear the composer's content component.
   */
  ;

  _proto.clear = function clear() {
    this.position = ComposerState.Position.HIDDEN;
    this.body = {
      attrs: {}
    };
    this.onExit = null;
    this.fields = {
      content: (0,_common_utils_Stream__WEBPACK_IMPORTED_MODULE_2__["default"])('')
    };

    if (this.editor) {
      this.editor.destroy();
    }

    this.editor = null;
  }
  /**
   * Show the composer.
   */
  ;

  _proto.show = function show() {
    if (this.position === ComposerState.Position.NORMAL || this.position === ComposerState.Position.FULLSCREEN) return;
    this.position = ComposerState.Position.NORMAL;
    m.redraw.sync();
  }
  /**
   * Close the composer.
   */
  ;

  _proto.hide = function hide() {
    this.clear();
    m.redraw();
  }
  /**
   * Confirm with the user so they don't lose their content, then close the
   * composer.
   */
  ;

  _proto.close = function close() {
    if (this.preventExit()) return;
    this.hide();
  }
  /**
   * Minimize the composer. Has no effect if the composer is hidden.
   */
  ;

  _proto.minimize = function minimize() {
    if (!this.isVisible()) return;
    this.position = ComposerState.Position.MINIMIZED;
    m.redraw();
  }
  /**
   * Take the composer into fullscreen mode. Has no effect if the composer is
   * hidden.
   */
  ;

  _proto.fullScreen = function fullScreen() {
    if (!this.isVisible()) return;
    this.position = ComposerState.Position.FULLSCREEN;
    m.redraw();
  }
  /**
   * Exit fullscreen mode.
   */
  ;

  _proto.exitFullScreen = function exitFullScreen() {
    if (this.position !== ComposerState.Position.FULLSCREEN) return;
    this.position = ComposerState.Position.NORMAL;
    m.redraw();
  }
  /**
   * Determine whether the body matches the given component class and data.
   *
   * @param {object} type The component class to check against. Subclasses are accepted as well.
   * @param {object} data
   * @return {boolean}
   */
  ;

  _proto.bodyMatches = function bodyMatches(type, data) {
    var _this = this;

    if (data === void 0) {
      data = {};
    }

    // Fail early when the body is of a different type
    if (!(0,_common_utils_subclassOf__WEBPACK_IMPORTED_MODULE_1__["default"])(this.body.componentClass, type)) return false; // Now that the type is known to be correct, we loop through the provided
    // data to see whether it matches the data in the attributes for the body.

    return Object.keys(data).every(function (key) {
      return _this.body.attrs[key] === data[key];
    });
  }
  /**
   * Determine whether or not the Composer is visible.
   *
   * True when the composer is displayed on the screen and has a body component.
   * It could be open in "normal" or full-screen mode, or even minimized.
   *
   * @returns {boolean}
   */
  ;

  _proto.isVisible = function isVisible() {
    return this.position !== ComposerState.Position.HIDDEN;
  }
  /**
   * Determine whether or not the Composer is covering the screen.
   *
   * This will be true if the Composer is in full-screen mode on desktop,
   * or if we are on a mobile device, where we always consider the composer as full-screen..
   *
   * @return {boolean}
   */
  ;

  _proto.isFullScreen = function isFullScreen() {
    return this.position === ComposerState.Position.FULLSCREEN || _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].screen() === 'phone';
  }
  /**
   * Check whether or not the user is currently composing a reply to a
   * discussion.
   *
   * @param {import('../../common/models/Discussion').default} discussion
   * @return {boolean}
   */
  ;

  _proto.composingReplyTo = function composingReplyTo(discussion) {
    return this.isVisible() && this.bodyMatches(_components_ReplyComposer__WEBPACK_IMPORTED_MODULE_3__["default"], {
      discussion: discussion
    });
  }
  /**
   * Confirm with the user that they want to close the composer and lose their
   * content.
   *
   * @return {boolean} Whether or not the exit was cancelled.
   */
  ;

  _proto.preventExit = function preventExit() {
    if (!this.isVisible()) return;
    if (!this.onExit) return;

    if (this.onExit.callback()) {
      return !confirm(this.onExit.message);
    }
  }
  /**
   * Configure when / what to ask the user before closing the composer.
   *
   * The provided callback will be used to determine whether asking for
   * confirmation is necessary. If the callback returns true at the time of
   * closing, the provided text will be shown in a standard confirmation dialog.
   *
   * @param {() => boolean} callback
   * @param {string} message
   */
  ;

  _proto.preventClosingWhen = function preventClosingWhen(callback, message) {
    this.onExit = {
      callback: callback,
      message: message
    };
  }
  /**
   * Minimum height of the Composer.
   * @returns {number}
   */
  ;

  _proto.minimumHeight = function minimumHeight() {
    return 200;
  }
  /**
   * Maxmimum height of the Composer.
   * @returns {number}
   */
  ;

  _proto.maximumHeight = function maximumHeight() {
    return $(window).height() - $('#header').outerHeight();
  }
  /**
   * Computed the composer's current height, based on the intended height, and
   * the composer's current state. This will be applied to the composer
   * content's DOM element.
   * @returns {number | string}
   */
  ;

  _proto.computedHeight = function computedHeight() {
    // If the composer is minimized, then we don't want to set a height; we'll
    // let the CSS decide how high it is. If it's fullscreen, then we need to
    // make it as high as the window.
    if (this.position === ComposerState.Position.MINIMIZED) {
      return '';
    } else if (this.position === ComposerState.Position.FULLSCREEN) {
      return $(window).height();
    } // Otherwise, if it's normal or hidden, then we use the intended height.
    // We don't let the composer get too small or too big, though.


    return Math.max(this.minimumHeight(), Math.min(this.height, this.maximumHeight()));
  };

  return ComposerState;
}();

ComposerState.Position = {
  HIDDEN: 'hidden',
  NORMAL: 'normal',
  MINIMIZED: 'minimized',
  FULLSCREEN: 'fullScreen'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ComposerState);

/***/ }),

/***/ "./src/forum/states/DiscussionListState.ts":
/*!*************************************************!*\
  !*** ./src/forum/states/DiscussionListState.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DiscussionListState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_states_PaginatedListState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/states/PaginatedListState */ "./src/common/states/PaginatedListState.ts");



function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }




var DiscussionListState = /*#__PURE__*/function (_PaginatedListState) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(DiscussionListState, _PaginatedListState);

  function DiscussionListState(params, page) {
    var _this;

    if (page === void 0) {
      page = 1;
    }

    _this = _PaginatedListState.call(this, params, page, 20) || this;
    _this.extraDiscussions = [];
    return _this;
  }

  var _proto = DiscussionListState.prototype;

  _proto.requestParams = function requestParams() {
    var _this$params$sort;

    var params = {
      include: ['user', 'lastPostedUser'],
      filter: this.params.filter || {},
      sort: this.sortMap()[(_this$params$sort = this.params.sort) != null ? _this$params$sort : '']
    };

    if (this.params.q) {
      params.filter.q = this.params.q;
      params.include.push('mostRelevantPost', 'mostRelevantPost.user');
    }

    return params;
  };

  _proto.loadPage = function loadPage(page) {
    if (page === void 0) {
      page = 1;
    }

    var preloadedDiscussions = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].preloadedApiDocument();

    if (preloadedDiscussions) {
      this.initialLoading = false;
      return Promise.resolve(preloadedDiscussions);
    }

    return _PaginatedListState.prototype.loadPage.call(this, page);
  };

  _proto.clear = function clear() {
    _PaginatedListState.prototype.clear.call(this);

    this.extraDiscussions = [];
  }
  /**
   * Get a map of sort keys (which appear in the URL, and are used for
   * translation) to the API sort value that they represent.
   */
  ;

  _proto.sortMap = function sortMap() {
    var map = {};

    if (this.params.q) {
      map.relevance = '';
    }

    map.latest = '-lastPostedAt';
    map.top = '-commentCount';
    map.newest = '-createdAt';
    map.oldest = 'createdAt';
    return map;
  }
  /**
   * In the last request, has the user searched for a discussion?
   */
  ;

  _proto.isSearchResults = function isSearchResults() {
    return !!this.params.q;
  };

  _proto.removeDiscussion = function removeDiscussion(discussion) {
    for (var _iterator = _createForOfIteratorHelperLoose(this.pages), _step; !(_step = _iterator()).done;) {
      var page = _step.value;

      var _index = page.items.indexOf(discussion);

      if (_index !== -1) {
        page.items.splice(_index, 1);
        break;
      }
    }

    var index = this.extraDiscussions.indexOf(discussion);

    if (index !== -1) {
      this.extraDiscussions.splice(index);
    }

    m.redraw();
  }
  /**
   * Add a discussion to the top of the list.
   */
  ;

  _proto.addDiscussion = function addDiscussion(discussion) {
    this.removeDiscussion(discussion);
    this.extraDiscussions.unshift(discussion);
    m.redraw();
  };

  _proto.getAllItems = function getAllItems() {
    return this.extraDiscussions.concat(_PaginatedListState.prototype.getAllItems.call(this));
  };

  _proto.getPages = function getPages() {
    var pages = _PaginatedListState.prototype.getPages.call(this);

    if (this.extraDiscussions.length) {
      return [{
        number: -1,
        items: this.extraDiscussions
      }].concat(pages);
    }

    return pages;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(DiscussionListState, [{
    key: "type",
    get: function get() {
      return 'discussions';
    }
  }]);

  return DiscussionListState;
}(_common_states_PaginatedListState__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/forum/states/GlobalSearchState.ts":
/*!***********************************************!*\
  !*** ./src/forum/states/GlobalSearchState.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GlobalSearchState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/utils/setRouteWithForcedRefresh */ "./src/common/utils/setRouteWithForcedRefresh.ts");
/* harmony import */ var _SearchState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SearchState */ "./src/forum/states/SearchState.ts");


var _excluded = ["q"];




var GlobalSearchState = /*#__PURE__*/function (_SearchState) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(GlobalSearchState, _SearchState);

  function GlobalSearchState(cachedSearches) {
    var _this;

    if (cachedSearches === void 0) {
      cachedSearches = [];
    }

    _this = _SearchState.call(this, cachedSearches) || this;
    _this.initialValueSet = false;
    return _this;
  }

  var _proto = GlobalSearchState.prototype;

  _proto.getValue = function getValue() {
    // If we are on a search results page, we should initialize the value
    // from the current search, if one is present.
    // We can't do this in the constructor, as this class is instantiated
    // before pages are rendered, and we need app.current.
    if (!this.initialValueSet && this.currPageProvidesSearch()) {
      this.intializeValue();
    }

    return _SearchState.prototype.getValue.call(this);
  };

  _proto.intializeValue = function intializeValue() {
    this.setValue(this.getInitialSearch());
    this.initialValueSet = true;
  };

  _proto.currPageProvidesSearch = function currPageProvidesSearch() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.type && _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.type.providesInitialSearch;
  }
  /**
   * @inheritdoc
   */
  ;

  _proto.getInitialSearch = function getInitialSearch() {
    return this.currPageProvidesSearch() ? this.params().q : '';
  }
  /**
   * Clear the search input and the current controller's active search.
   */
  ;

  _proto.clear = function clear() {
    _SearchState.prototype.clear.call(this);

    if (this.getInitialSearch()) {
      this.clearInitialSearch();
    } else {
      m.redraw();
    }
  }
  /**
   * Redirect to the index page without a search filter. This is called when the
   * 'x' is clicked in the search box in the header.
   */
  ;

  _proto.clearInitialSearch = function clearInitialSearch() {
    var _this$params = this.params(),
        q = _this$params.q,
        params = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$params, _excluded);

    (0,_common_utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.get('routeName'), params));
  }
  /**
   * Get URL parameters that stick between filter changes.
   *
   * This can be used to generate a link that clears filters.
   */
  ;

  _proto.stickyParams = function stickyParams() {
    return {
      sort: m.route.param('sort'),
      q: m.route.param('q')
    };
  }
  /**
   * Get parameters to be used in the current page.
   */
  ;

  _proto.params = function params() {
    var params = this.stickyParams();
    params.filter = m.route.param('filter');
    return params;
  }
  /**
   * Redirect to the index page using the given sort parameter.
   */
  ;

  _proto.changeSort = function changeSort(sort) {
    var params = this.params();

    if (sort === Object.keys(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].discussions.sortMap())[0]) {
      delete params.sort;
    } else {
      params.sort = sort;
    }

    (0,_common_utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_3__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].route(_forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].current.get('routeName'), params));
  };

  return GlobalSearchState;
}(_SearchState__WEBPACK_IMPORTED_MODULE_4__["default"]);



/***/ }),

/***/ "./src/forum/states/NotificationListState.ts":
/*!***************************************************!*\
  !*** ./src/forum/states/NotificationListState.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotificationListState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_states_PaginatedListState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/states/PaginatedListState */ "./src/common/states/PaginatedListState.ts");





var NotificationListState = /*#__PURE__*/function (_PaginatedListState) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(NotificationListState, _PaginatedListState);

  function NotificationListState() {
    return _PaginatedListState.call(this, {}, 1, 10) || this;
  }

  var _proto = NotificationListState.prototype;

  /**
   * Load the next page of notification results.
   */
  _proto.load = function load() {
    var _app$session$user, _app$session$user2;

    if ((_app$session$user = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user) != null && _app$session$user.newNotificationCount()) {
      this.pages = [];
      this.location = {
        page: 1
      };
    }

    if (this.pages.length > 0) {
      return Promise.resolve();
    }

    (_app$session$user2 = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user) == null ? void 0 : _app$session$user2.pushAttributes({
      newNotificationCount: 0
    });
    return _PaginatedListState.prototype.loadNext.call(this);
  }
  /**
   * Mark all of the notifications as read.
   */
  ;

  _proto.markAllAsRead = function markAllAsRead() {
    var _app$session$user3;

    if (this.pages.length === 0) return;
    (_app$session$user3 = _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].session.user) == null ? void 0 : _app$session$user3.pushAttributes({
      unreadNotificationCount: 0
    });
    this.pages.forEach(function (page) {
      page.items.forEach(function (notification) {
        return notification.pushAttributes({
          isRead: true
        });
      });
    });
    return _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].request({
      url: _forum_app__WEBPACK_IMPORTED_MODULE_2__["default"].forum.attribute('apiUrl') + '/notifications/read',
      method: 'POST'
    });
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(NotificationListState, [{
    key: "type",
    get: function get() {
      return 'notifications';
    }
  }]);

  return NotificationListState;
}(_common_states_PaginatedListState__WEBPACK_IMPORTED_MODULE_3__["default"]);



/***/ }),

/***/ "./src/forum/states/PostStreamState.js":
/*!*********************************************!*\
  !*** ./src/forum/states/PostStreamState.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var throttle_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! throttle-debounce */ "./node_modules/throttle-debounce/esm/index.js");
/* harmony import */ var _common_utils_anchorScroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/utils/anchorScroll */ "./src/common/utils/anchorScroll.js");




var PostStreamState = /*#__PURE__*/function () {
  function PostStreamState(discussion, includedPosts) {
    if (includedPosts === void 0) {
      includedPosts = [];
    }

    /**
     * The discussion to display the post stream for.
     *
     * @type {Discussion}
     */
    this.discussion = discussion;
    /**
     * Whether or not the infinite-scrolling auto-load functionality is
     * disabled.
     *
     * @type {Boolean}
     */

    this.paused = false;
    this.loadPageTimeouts = {};
    this.pagesLoading = 0;
    this.index = 0;
    this.number = 1;
    /**
     * The number of posts that are currently visible in the viewport.
     *
     * @type {Number}
     */

    this.visible = 1;
    /**
     * The description to render on the scrubber.
     *
     * @type {String}
     */

    this.description = '';
    /**
     * When the page is scrolled, goToIndex is called, or the page is loaded,
     * various listeners result in the scrubber being updated with a new
     * position and values. However, if goToNumber is called, the scrubber
     * will not be updated. Accordingly, we add logic to the scrubber's
     * onupdate to update itself, but only when needed, as indicated by this
     * property.
     *
     * @type {Boolean}
     */

    this.forceUpdateScrubber = false;
    this.loadNext = (0,throttle_debounce__WEBPACK_IMPORTED_MODULE_1__.throttle)(300, this._loadNext);
    this.loadPrevious = (0,throttle_debounce__WEBPACK_IMPORTED_MODULE_1__.throttle)(300, this._loadPrevious);
    this.show(includedPosts);
  }
  /**
   * Update the stream so that it loads and includes the latest posts in the
   * discussion, if the end is being viewed.
   */


  var _proto = PostStreamState.prototype;

  _proto.update = function update() {
    if (!this.viewingEnd()) return Promise.resolve();
    this.visibleEnd = this.count();
    return this.loadRange(this.visibleStart, this.visibleEnd);
  }
  /**
   * Load and scroll up to the first post in the discussion.
   *
   * @return {Promise<void>}
   */
  ;

  _proto.goToFirst = function goToFirst() {
    return this.goToIndex(0);
  }
  /**
   * Load and scroll down to the last post in the discussion.
   *
   * @return {Promise<void>}
   */
  ;

  _proto.goToLast = function goToLast() {
    return this.goToIndex(this.count() - 1, true);
  }
  /**
   * Load and scroll to a post with a certain number.
   *
   * @param {number | string} number The post number to go to. If 'reply', go to the last post and scroll the reply preview into view.
   * @param {boolean} [noAnimation]
   * @return {Promise<void>}
   */
  ;

  _proto.goToNumber = function goToNumber(number, noAnimation) {
    if (noAnimation === void 0) {
      noAnimation = false;
    }

    // If we want to go to the reply preview, then we will go to the end of the
    // discussion and then scroll to the very bottom of the page.
    if (number === 'reply') {
      var resultPromise = this.goToLast();
      this.targetPost.reply = true;
      return resultPromise;
    }

    this.paused = true;
    this.loadPromise = this.loadNearNumber(number);
    this.needsScroll = true;
    this.targetPost = {
      number: number
    };
    this.animateScroll = !noAnimation;
    this.number = number; // In this case, the redraw is only called after the response has been loaded
    // because we need to know the indices of the post range before we can
    // start scrolling to items. Calling redraw early causes issues.
    // Since this is only used for external navigation to the post stream, the delay
    // before the stream is moved is not an issue.

    return this.loadPromise.then(function () {
      return m.redraw();
    });
  }
  /**
   * Load and scroll to a certain index within the discussion.
   *
   * @param {number} index
   * @param {boolean} [noAnimation]
   * @return {Promise<void>}
   */
  ;

  _proto.goToIndex = function goToIndex(index, noAnimation) {
    if (noAnimation === void 0) {
      noAnimation = false;
    }

    this.paused = true;
    this.loadPromise = this.loadNearIndex(index);
    this.needsScroll = true;
    this.targetPost = {
      index: index
    };
    this.animateScroll = !noAnimation;
    this.index = index;
    m.redraw();
    return this.loadPromise;
  }
  /**
   * Clear the stream and load posts near a certain number. Returns a promise.
   * If the post with the given number is already loaded, the promise will be
   * resolved immediately.
   *
   * @param {number} number
   * @return {Promise<void>}
   */
  ;

  _proto.loadNearNumber = function loadNearNumber(number) {
    if (this.posts().some(function (post) {
      return post && Number(post.number()) === Number(number);
    })) {
      return Promise.resolve();
    }

    this.reset();
    return _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].store.find('posts', {
      filter: {
        discussion: this.discussion.id()
      },
      page: {
        near: number
      }
    }).then(this.show.bind(this));
  }
  /**
   * Clear the stream and load posts near a certain index. A page of posts
   * surrounding the given index will be loaded. Returns a promise. If the given
   * index is already loaded, the promise will be resolved immediately.
   *
   * @param {number} index
   * @return {Promise<void>}
   */
  ;

  _proto.loadNearIndex = function loadNearIndex(index) {
    if (index >= this.visibleStart && index < this.visibleEnd) {
      return Promise.resolve();
    }

    var start = this.sanitizeIndex(index - this.constructor.loadCount / 2);
    var end = start + this.constructor.loadCount;
    this.reset(start, end);
    return this.loadRange(start, end).then(this.show.bind(this));
  }
  /**
   * Load the next page of posts.
   */
  ;

  _proto._loadNext = function _loadNext() {
    var start = this.visibleEnd;
    var end = this.visibleEnd = this.sanitizeIndex(this.visibleEnd + this.constructor.loadCount); // Unload the posts which are two pages back from the page we're currently
    // loading.

    var twoPagesAway = start - this.constructor.loadCount * 2;

    if (twoPagesAway > this.visibleStart && twoPagesAway >= 0) {
      this.visibleStart = twoPagesAway + this.constructor.loadCount + 1;

      if (this.loadPageTimeouts[twoPagesAway]) {
        clearTimeout(this.loadPageTimeouts[twoPagesAway]);
        this.loadPageTimeouts[twoPagesAway] = null;
        this.pagesLoading--;
      }
    }

    this.loadPage(start, end);
  }
  /**
   * Load the previous page of posts.
   */
  ;

  _proto._loadPrevious = function _loadPrevious() {
    var end = this.visibleStart;
    var start = this.visibleStart = this.sanitizeIndex(this.visibleStart - this.constructor.loadCount); // Unload the posts which are two pages back from the page we're currently
    // loading.

    var twoPagesAway = start + this.constructor.loadCount * 2;

    if (twoPagesAway < this.visibleEnd && twoPagesAway <= this.count()) {
      this.visibleEnd = twoPagesAway;

      if (this.loadPageTimeouts[twoPagesAway]) {
        clearTimeout(this.loadPageTimeouts[twoPagesAway]);
        this.loadPageTimeouts[twoPagesAway] = null;
        this.pagesLoading--;
      }
    }

    this.loadPage(start, end, true);
  }
  /**
   * Load a page of posts into the stream and redraw.
   *
   * @param {number} start
   * @param {number} end
   * @param {boolean} backwards
   */
  ;

  _proto.loadPage = function loadPage(start, end, backwards) {
    var _this = this;

    if (backwards === void 0) {
      backwards = false;
    }

    this.pagesLoading++;

    var redraw = function redraw() {
      if (start < _this.visibleStart || end > _this.visibleEnd) return;
      var anchorIndex = backwards ? _this.visibleEnd - 1 : _this.visibleStart;
      (0,_common_utils_anchorScroll__WEBPACK_IMPORTED_MODULE_2__["default"])(".PostStream-item[data-index=\"" + anchorIndex + "\"]", m.redraw.sync);
    };

    redraw();
    this.loadPageTimeouts[start] = setTimeout(function () {
      _this.loadRange(start, end).then(function () {
        redraw();
        _this.pagesLoading--;
      });

      _this.loadPageTimeouts[start] = null;
    }, this.pagesLoading - 1 ? 1000 : 0);
  }
  /**
   * Load and inject the specified range of posts into the stream, without
   * clearing it.
   *
   * @param {number} start
   * @param {number} end
   * @return {Promise<void>}
   */
  ;

  _proto.loadRange = function loadRange(start, end) {
    var loadIds = [];
    var loaded = [];
    this.discussion.postIds().slice(start, end).forEach(function (id) {
      var post = _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].store.getById('posts', id);

      if (post && post.discussion() && typeof post.canEdit() !== 'undefined') {
        loaded.push(post);
      } else {
        loadIds.push(id);
      }
    });

    if (loadIds.length) {
      return _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].store.find('posts', loadIds).then(function (newPosts) {
        return loaded.concat(newPosts).sort(function (a, b) {
          return a.createdAt() - b.createdAt();
        });
      });
    }

    return Promise.resolve(loaded);
  }
  /**
   * Set up the stream with the given array of posts.
   *
   * @param {import('../../common/models/Post').default[]} posts
   */
  ;

  _proto.show = function show(posts) {
    this.visibleStart = posts.length ? this.discussion.postIds().indexOf(posts[0].id()) : 0;
    this.visibleEnd = this.sanitizeIndex(this.visibleStart + posts.length);
  }
  /**
   * Reset the stream so that a specific range of posts is displayed. If a range
   * is not specified, the first page of posts will be displayed.
   *
   * @param {number} [start]
   * @param {number} [end]
   */
  ;

  _proto.reset = function reset(start, end) {
    this.visibleStart = start || 0;
    this.visibleEnd = this.sanitizeIndex(end || this.constructor.loadCount);
  }
  /**
   * Get the visible page of posts.
   *
   * @return {Post[]}
   */
  ;

  _proto.posts = function posts() {
    return this.discussion.postIds().slice(this.visibleStart, this.visibleEnd).map(function (id) {
      var post = _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].store.getById('posts', id);
      return post && post.discussion() && typeof post.canEdit() !== 'undefined' ? post : null;
    });
  }
  /**
   * Get the total number of posts in the discussion.
   *
   * @return {number}
   */
  ;

  _proto.count = function count() {
    return this.discussion.postIds().length;
  }
  /**
   * Check whether or not the scrubber should be disabled, i.e. if all of the
   * posts are visible in the viewport.
   *
   * @return {boolean}
   */
  ;

  _proto.disabled = function disabled() {
    return this.visible >= this.count();
  }
  /**
   * Are we currently viewing the end of the discussion?
   *
   * @return {boolean}
   */
  ;

  _proto.viewingEnd = function viewingEnd() {
    // In some cases, such as if we've stickied a post, an event post
    // may have been added / removed. This means that `this.visibleEnd`
    // and`this.count()` will be out of sync by 1 post, but we are still
    // "viewing the end" of the post stream, so we should still reload
    // all posts up until the last one.
    return Math.abs(this.count() - this.visibleEnd) <= 1;
  }
  /**
   * Make sure that the given index is not outside of the possible range of
   * indexes in the discussion.
   *
   * @param {number} index
   */
  ;

  _proto.sanitizeIndex = function sanitizeIndex(index) {
    return Math.max(0, Math.min(this.count(), Math.floor(index)));
  };

  return PostStreamState;
}();
/**
 * The number of posts to load per page.
 *
 * @type {number}
 */


PostStreamState.loadCount = 20;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PostStreamState);

/***/ }),

/***/ "./src/forum/states/SearchState.ts":
/*!*****************************************!*\
  !*** ./src/forum/states/SearchState.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SearchState)
/* harmony export */ });
var SearchState = /*#__PURE__*/function () {
  function SearchState(cachedSearches) {
    if (cachedSearches === void 0) {
      cachedSearches = [];
    }

    this.cachedSearches = void 0;
    this.value = '';
    this.cachedSearches = new Set(cachedSearches);
  }
  /**
   * If we are displaying the full results of a search (not just a preview),
   * this value should return the query that prompted that search.
   *
   * In this generic class, full page searching is not supported.
   * This method should be implemented by subclasses that do support it.
   *
   * @see Search
   */


  var _proto = SearchState.prototype;

  _proto.getInitialSearch = function getInitialSearch() {
    return '';
  };

  _proto.getValue = function getValue() {
    return this.value;
  };

  _proto.setValue = function setValue(value) {
    this.value = value;
  }
  /**
   * Clear the search value.
   */
  ;

  _proto.clear = function clear() {
    this.setValue('');
  }
  /**
   * Mark that we have already searched for this query so that we don't
   * have to ping the endpoint again.
   */
  ;

  _proto.cache = function cache(query) {
    this.cachedSearches.add(query);
  }
  /**
   * Check if this query has been searched before.
   */
  ;

  _proto.isCached = function isCached(query) {
    return this.cachedSearches.has(query);
  };

  return SearchState;
}();



/***/ }),

/***/ "./src/forum/utils/DiscussionControls.js":
/*!***********************************************!*\
  !*** ./src/forum/utils/DiscussionControls.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/DiscussionPage */ "./src/forum/components/DiscussionPage.tsx");
/* harmony import */ var _components_ReplyComposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ReplyComposer */ "./src/forum/components/ReplyComposer.js");
/* harmony import */ var _components_LogInModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/LogInModal */ "./src/forum/components/LogInModal.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Separator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _components_RenameDiscussionModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/RenameDiscussionModal */ "./src/forum/components/RenameDiscussionModal.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");









/**
 * The `DiscussionControls` utility constructs a list of buttons for a
 * discussion which perform actions on it.
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  /**
   * Get a list of controls for a discussion.
   *
   * @param {import('../../common/models/Discussion').default} discussion
   * @param {import('../../common/Component').default<any, any>} context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  controls: function controls(discussion, context) {
    var _this = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();
    ['user', 'moderation', 'destructive'].forEach(function (section) {
      var controls = _this[section + 'Controls'](discussion, context).toArray();

      if (controls.length) {
        controls.forEach(function (item) {
          return items.add(item.itemName, item);
        });
        items.add(section + 'Separator', _common_components_Separator__WEBPACK_IMPORTED_MODULE_5__["default"].component());
      }
    });
    return items;
  },

  /**
   * Get controls for a discussion pertaining to the current user (e.g. reply,
   * follow).
   *
   * @param {import('../../common/models/Discussion').default} discussion
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  userControls: function userControls(discussion, context) {
    var _this2 = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"](); // Only add a reply control if this is the discussion's controls dropdown
    // for the discussion page itself. We don't want it to show up for
    // discussions in the discussion list, etc.

    if (context instanceof _components_DiscussionPage__WEBPACK_IMPORTED_MODULE_1__["default"]) {
      items.add('reply', !_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user || discussion.canReply() ? _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
        icon: 'fas fa-reply',
        onclick: function onclick() {
          // If the user is not logged in, the promise rejects, and a login modal shows up.
          // Since that's already handled, we dont need to show an error message in the console.
          return _this2.replyAction.bind(discussion)(true, false)["catch"](function () {});
        }
      }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user ? 'core.forum.discussion_controls.reply_button' : 'core.forum.discussion_controls.log_in_to_reply_button')) : _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
        icon: 'fas fa-reply',
        className: 'disabled',
        title: _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.cannot_reply_text')
      }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.cannot_reply_button')));
    }

    return items;
  },

  /**
   * Get controls for a discussion pertaining to moderation (e.g. rename, lock).
   *
   * @param {import('../../common/models/Discussion').default} discussion
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  moderationControls: function moderationControls(discussion) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();

    if (discussion.canRename()) {
      items.add('rename', _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
        icon: 'fas fa-pencil-alt',
        onclick: this.renameAction.bind(discussion)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.rename_button')));
    }

    return items;
  },

  /**
   * Get controls for a discussion which are destructive (e.g. delete).
   *
   * @param {import('../../common/models/Discussion').default} discussion
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  destructiveControls: function destructiveControls(discussion) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_7__["default"]();

    if (!discussion.isHidden()) {
      if (discussion.canHide()) {
        items.add('hide', _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
          icon: 'far fa-trash-alt',
          onclick: this.hideAction.bind(discussion)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.delete_button')));
      }
    } else {
      if (discussion.canHide()) {
        items.add('restore', _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
          icon: 'fas fa-reply',
          onclick: this.restoreAction.bind(discussion)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.restore_button')));
      }

      if (discussion.canDelete()) {
        items.add('delete', _common_components_Button__WEBPACK_IMPORTED_MODULE_4__["default"].component({
          icon: 'fas fa-times',
          onclick: this.deleteAction.bind(discussion)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.delete_forever_button')));
      }
    }

    return items;
  },

  /**
   * Open the reply composer for the discussion. A promise will be returned,
   * which resolves when the composer opens successfully. If the user is not
   * logged in, they will be prompted. If they don't have permission to
   * reply, the promise will be rejected.
   *
   * @param {boolean} goToLast Whether or not to scroll down to the last post if the discussion is being viewed.
   * @param {boolean} forceRefresh Whether or not to force a reload of the composer component, even if it is already open for this discussion.
   *
   * @return {Promise<void>}
   */
  replyAction: function replyAction(goToLast, forceRefresh) {
    var _this3 = this;

    return new Promise(function (resolve, reject) {
      if (_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user) {
        if (_this3.canReply()) {
          if (!_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.composingReplyTo(_this3) || forceRefresh) {
            _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.load(_components_ReplyComposer__WEBPACK_IMPORTED_MODULE_2__["default"], {
              user: _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user,
              discussion: _this3
            });
          }

          _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.show();

          if (goToLast && _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].viewingDiscussion(_this3) && !_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.isFullScreen()) {
            _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].current.get('stream').goToNumber('reply');
          }

          return resolve(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer);
        } else {
          return reject();
        }
      }

      _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].modal.show(_components_LogInModal__WEBPACK_IMPORTED_MODULE_3__["default"]);
      return reject();
    });
  },

  /**
   * Hide a discussion.
   *
   * @return {Promise<void>}
   */
  hideAction: function hideAction() {
    this.pushData({
      attributes: {
        hiddenAt: new Date()
      },
      relationships: {
        hiddenUser: _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user
      }
    });
    return this.save({
      isHidden: true
    });
  },

  /**
   * Restore a discussion.
   *
   * @return {Promise<void>}
   */
  restoreAction: function restoreAction() {
    this.pushData({
      attributes: {
        hiddenAt: null
      },
      relationships: {
        hiddenUser: null
      }
    });
    return this.save({
      isHidden: false
    });
  },

  /**
   * Delete the discussion after confirming with the user.
   *
   * @return {Promise<void>}
   */
  deleteAction: function deleteAction() {
    var _this4 = this;

    if (confirm((0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_8__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.discussion_controls.delete_confirmation')))) {
      // If we're currently viewing the discussion that was deleted, go back
      // to the previous page.
      if (_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].viewingDiscussion(this)) {
        _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].history.back();
      }

      return this["delete"]().then(function () {
        return _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].discussions.removeDiscussion(_this4);
      });
    }
  },

  /**
   * Rename the discussion.
   */
  renameAction: function renameAction() {
    return _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].modal.show(_components_RenameDiscussionModal__WEBPACK_IMPORTED_MODULE_6__["default"], {
      currentTitle: this.title(),
      discussion: this
    });
  }
});

/***/ }),

/***/ "./src/forum/utils/History.ts":
/*!************************************!*\
  !*** ./src/forum/utils/History.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ History)
/* harmony export */ });
/* harmony import */ var _common_utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/utils/setRouteWithForcedRefresh */ "./src/common/utils/setRouteWithForcedRefresh.ts");


/**
 * The `History` class keeps track and manages a stack of routes that the user
 * has navigated to in their session.
 *
 * An item can be pushed to the top of the stack using the `push` method. An
 * item in the stack has a name and a URL. The name need not be unique; if it is
 * the same as the item before it, that will be overwritten with the new URL. In
 * this way, if a user visits a discussion, and then visits another discussion,
 * popping the history stack will still take them back to the discussion list
 * rather than the previous discussion.
 */
var History = /*#__PURE__*/function () {
  function History() {
    this.stack = [];
  }

  var _proto = History.prototype;

  /**
   * Get the item on the top of the stack.
   */
  _proto.getCurrent = function getCurrent() {
    return this.stack[this.stack.length - 1];
  }
  /**
   * Get the previous item on the stack.
   */
  ;

  _proto.getPrevious = function getPrevious() {
    return this.stack[this.stack.length - 2];
  }
  /**
   * Push an item to the top of the stack.
   *
   * @param {string} name The name of the route.
   * @param {string} title The title of the route.
   * @param {string} [url] The URL of the route. The current URL will be used if
   *     not provided.
   */
  ;

  _proto.push = function push(name, title, url) {
    if (url === void 0) {
      url = m.route.get();
    }

    // If we're pushing an item with the same name as second-to-top item in the
    // stack, we will assume that the user has clicked the 'back' button in
    // their browser. In this case, we don't want to push a new item, so we will
    // pop off the top item, and then the second-to-top item will be overwritten
    // below.
    var secondTop = this.stack[this.stack.length - 2];

    if (secondTop && secondTop.name === name) {
      this.stack.pop();
    } // If we're pushing an item with the same name as the top item in the stack,
    // then we'll overwrite it with the new URL.


    var top = this.getCurrent();

    if (top && top.name === name) {
      Object.assign(top, {
        url: url,
        title: title
      });
    } else {
      this.stack.push({
        name: name,
        url: url,
        title: title
      });
    }
  }
  /**
   * Check whether or not the history stack is able to be popped.
   */
  ;

  _proto.canGoBack = function canGoBack() {
    return this.stack.length > 1;
  }
  /**
   * Go back to the previous route in the history stack.
   */
  ;

  _proto.back = function back() {
    if (!this.canGoBack()) {
      return this.home();
    }

    this.stack.pop();
    m.route.set(this.getCurrent().url);
  }
  /**
   * Get the URL of the previous page.
   */
  ;

  _proto.backUrl = function backUrl() {
    var secondTop = this.stack[this.stack.length - 2];
    return secondTop.url;
  }
  /**
   * Go to the first route in the history stack.
   */
  ;

  _proto.home = function home() {
    this.stack.splice(0);
    (0,_common_utils_setRouteWithForcedRefresh__WEBPACK_IMPORTED_MODULE_0__["default"])('/');
  };

  return History;
}();



/***/ }),

/***/ "./src/forum/utils/KeyboardNavigatable.ts":
/*!************************************************!*\
  !*** ./src/forum/utils/KeyboardNavigatable.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ KeyboardNavigatable)
/* harmony export */ });
var Keys;
/**
 * The `KeyboardNavigatable` class manages lists that can be navigated with the
 * keyboard, calling callbacks for each actions.
 *
 * This helper encapsulates the key binding logic, providing a simple fluent
 * API for use.
 */

(function (Keys) {
  Keys[Keys["Enter"] = 13] = "Enter";
  Keys[Keys["Escape"] = 27] = "Escape";
  Keys[Keys["Space"] = 32] = "Space";
  Keys[Keys["ArrowUp"] = 38] = "ArrowUp";
  Keys[Keys["ArrowDown"] = 40] = "ArrowDown";
  Keys[Keys["ArrowLeft"] = 37] = "ArrowLeft";
  Keys[Keys["ArrowRight"] = 39] = "ArrowRight";
  Keys[Keys["Tab"] = 9] = "Tab";
  Keys[Keys["Backspace"] = 8] = "Backspace";
})(Keys || (Keys = {}));

var KeyboardNavigatable = /*#__PURE__*/function () {
  function KeyboardNavigatable() {
    this.callbacks = new Map();

    this.whenCallback = function (event) {
      return true;
    };
  }

  var _proto = KeyboardNavigatable.prototype;

  /**
   * Provide a callback to be executed when navigating upwards.
   *
   * This will be triggered by the Up key.
   */
  _proto.onUp = function onUp(callback) {
    this.callbacks.set(Keys.ArrowUp, function (e) {
      e.preventDefault();
      callback(e);
    });
    return this;
  }
  /**
   * Provide a callback to be executed when navigating downwards.
   *
   * This will be triggered by the Down key.
   */
  ;

  _proto.onDown = function onDown(callback) {
    this.callbacks.set(Keys.ArrowDown, function (e) {
      e.preventDefault();
      callback(e);
    });
    return this;
  }
  /**
   * Provide a callback to be executed when the current item is selected..
   *
   * This will be triggered by the Return key (and Tab key, if not disabled).
   */
  ;

  _proto.onSelect = function onSelect(callback, ignoreTabPress) {
    if (ignoreTabPress === void 0) {
      ignoreTabPress = false;
    }

    var handler = function handler(e) {
      e.preventDefault();
      callback(e);
    };

    if (!ignoreTabPress) this.callbacks.set(Keys.Tab, handler);
    this.callbacks.set(Keys.Enter, handler);
    return this;
  }
  /**
   * Provide a callback to be executed when the current item is tabbed into.
   *
   * This will be triggered by the Tab key.
   */
  ;

  _proto.onTab = function onTab(callback) {
    var handler = function handler(e) {
      e.preventDefault();
      callback(e);
    };

    this.callbacks.set(9, handler);
    return this;
  }
  /**
   * Provide a callback to be executed when the navigation is canceled.
   *
   * This will be triggered by the Escape key.
   */
  ;

  _proto.onCancel = function onCancel(callback) {
    this.callbacks.set(Keys.Escape, function (e) {
      e.stopPropagation();
      e.preventDefault();
      callback(e);
    });
    return this;
  }
  /**
   * Provide a callback to be executed when previous input is removed.
   *
   * This will be triggered by the Backspace key.
   */
  ;

  _proto.onRemove = function onRemove(callback) {
    this.callbacks.set(Keys.Backspace, function (e) {
      if (e instanceof KeyboardEvent && e.target instanceof HTMLInputElement && e.target.selectionStart === 0 && e.target.selectionEnd === 0) {
        callback(e);
        e.preventDefault();
      }
    });
    return this;
  }
  /**
   * Provide a callback that determines whether keyboard input should be handled.
   */
  ;

  _proto.when = function when(callback) {
    this.whenCallback = callback;
    return this;
  }
  /**
   * Set up the navigation key bindings on the given jQuery element.
   */
  ;

  _proto.bindTo = function bindTo($element) {
    // Handle navigation key events on the navigatable element.
    $element[0].addEventListener('keydown', this.navigate.bind(this));
  }
  /**
   * Interpret the given keyboard event as navigation commands.
   */
  ;

  _proto.navigate = function navigate(event) {
    // This callback determines whether keyboard should be handled or ignored.
    if (!this.whenCallback(event)) return;
    var keyCallback = this.callbacks.get(event.which);

    if (keyCallback) {
      keyCallback(event);
    }
  };

  return KeyboardNavigatable;
}();



/***/ }),

/***/ "./src/forum/utils/Pane.js":
/*!*********************************!*\
  !*** ./src/forum/utils/Pane.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Pane)
/* harmony export */ });
/**
 * The `Pane` class manages the page's discussion list sidepane. The pane is a
 * part of the content view (DiscussionPage component), but its visibility is
 * determined by CSS classes applied to the outer page element. This class
 * manages the application of those CSS classes.
 */
var Pane = /*#__PURE__*/function () {
  function Pane(element) {
    /**
     * The localStorage key to store the pane's pinned state with.
     *
     * @type {String}
     * @protected
     */
    this.pinnedKey = 'panePinned';
    /**
     * The page element.
     *
     * @type {jQuery}
     * @protected
     */

    this.$element = $(element);
    /**
     * Whether or not the pane is currently pinned.
     *
     * @type {Boolean}
     * @protected
     */

    this.pinned = localStorage.getItem(this.pinnedKey) === 'true';
    /**
     * Whether or not the pane is currently exists.
     *
     * @type {Boolean}
     * @protected
     */

    this.active = false;
    /**
     * Whether or not the pane is currently showing, or is hidden off the edge
     * of the screen.
     *
     * @type {Boolean}
     * @protected
     */

    this.showing = false;
    this.render();
  }
  /**
   * Enable the pane.
   */


  var _proto = Pane.prototype;

  _proto.enable = function enable() {
    this.active = true;
    this.render();
  }
  /**
   * Disable the pane.
   */
  ;

  _proto.disable = function disable() {
    this.active = false;
    this.showing = false;
    this.render();
  }
  /**
   * Show the pane.
   */
  ;

  _proto.show = function show() {
    clearTimeout(this.hideTimeout);
    this.showing = true;
    this.render();
  }
  /**
   * Hide the pane.
   */
  ;

  _proto.hide = function hide() {
    this.showing = false;
    this.render();
  }
  /**
   * Begin a timeout to hide the pane, which can be cancelled by showing the
   * pane.
   */
  ;

  _proto.onmouseleave = function onmouseleave() {
    this.hideTimeout = setTimeout(this.hide.bind(this), 250);
  }
  /**
   * Toggle whether or not the pane is pinned.
   */
  ;

  _proto.togglePinned = function togglePinned() {
    this.pinned = !this.pinned;
    localStorage.setItem(this.pinnedKey, this.pinned ? 'true' : 'false');
    this.render();
  }
  /**
   * Apply the appropriate CSS classes to the page element.
   *
   * @protected
   */
  ;

  _proto.render = function render() {
    this.$element.toggleClass('panePinned', this.pinned).toggleClass('hasPane', this.active).toggleClass('paneShowing', this.showing);
  };

  return Pane;
}();



/***/ }),

/***/ "./src/forum/utils/PostControls.js":
/*!*****************************************!*\
  !*** ./src/forum/utils/PostControls.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _components_EditPostComposer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/EditPostComposer */ "./src/forum/components/EditPostComposer.js");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Separator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");
/* harmony import */ var _common_utils_extractText__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/extractText */ "./src/common/utils/extractText.ts");






/**
 * The `PostControls` utility constructs a list of buttons for a post which
 * perform actions on it.
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  /**
   * Get a list of controls for a post.
   *
   * @param {import('../../common/models/Post').default} post
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}')}
   */
  controls: function controls(post, context) {
    var _this = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();
    ['user', 'moderation', 'destructive'].forEach(function (section) {
      var controls = _this[section + 'Controls'](post, context).toArray();

      if (controls.length) {
        controls.forEach(function (item) {
          return items.add(item.itemName, item);
        });
        items.add(section + 'Separator', _common_components_Separator__WEBPACK_IMPORTED_MODULE_3__["default"].component());
      }
    });
    return items;
  },

  /**
   * Get controls for a post pertaining to the current user (e.g. report).
   *
   * @param {import('../../common/models/Post').default} post
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}')}
   * @protected
   */
  userControls: function userControls(post, context) {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();
  },

  /**
   * Get controls for a post pertaining to moderation (e.g. edit).
   *
   * @param {import('../../common/models/Post').default} post
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}')}
   * @protected
   */
  moderationControls: function moderationControls(post, context) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();

    if (post.contentType() === 'comment' && post.canEdit()) {
      if (!post.isHidden()) {
        items.add('edit', _common_components_Button__WEBPACK_IMPORTED_MODULE_2__["default"].component({
          icon: 'fas fa-pencil-alt',
          onclick: this.editAction.bind(post)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.edit_button')));
      }
    }

    return items;
  },

  /**
   * Get controls for a post that are destructive (e.g. delete).
   *
   * @param {import('../../common/models/Post').default} post
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}')}
   * @protected
   */
  destructiveControls: function destructiveControls(post, context) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_4__["default"]();

    if (post.contentType() === 'comment' && !post.isHidden()) {
      if (post.canHide()) {
        items.add('hide', _common_components_Button__WEBPACK_IMPORTED_MODULE_2__["default"].component({
          icon: 'far fa-trash-alt',
          onclick: this.hideAction.bind(post)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.delete_button')));
      }
    } else {
      if (post.contentType() === 'comment' && post.canHide()) {
        items.add('restore', _common_components_Button__WEBPACK_IMPORTED_MODULE_2__["default"].component({
          icon: 'fas fa-reply',
          onclick: this.restoreAction.bind(post)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.restore_button')));
      }

      if (post.canDelete()) {
        items.add('delete', _common_components_Button__WEBPACK_IMPORTED_MODULE_2__["default"].component({
          icon: 'fas fa-times',
          onclick: this.deleteAction.bind(post, context)
        }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.delete_forever_button')));
      }
    }

    return items;
  },

  /**
   * Open the composer to edit a post.
   *
   * @return {Promise<void>}
   */
  editAction: function editAction() {
    var _this2 = this;

    return new Promise(function (resolve) {
      _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.load(_components_EditPostComposer__WEBPACK_IMPORTED_MODULE_1__["default"], {
        post: _this2
      });
      _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].composer.show();
      return resolve();
    });
  },

  /**
   * Hide a post.
   *
   * @return {Promise<void>}
   */
  hideAction: function hideAction() {
    if (!confirm((0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_5__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.hide_confirmation')))) return;
    this.pushData({
      attributes: {
        hiddenAt: new Date()
      },
      relationships: {
        hiddenUser: _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].session.user
      }
    });
    return this.save({
      isHidden: true
    }).then(function () {
      return m.redraw();
    });
  },

  /**
   * Restore a post.
   *
   * @return {Promise<void>}
   */
  restoreAction: function restoreAction() {
    this.pushData({
      attributes: {
        hiddenAt: null
      },
      relationships: {
        hiddenUser: null
      }
    });
    return this.save({
      isHidden: false
    }).then(function () {
      return m.redraw();
    });
  },

  /**
   * Delete a post.
   *
   * @return {Promise<void>}
   */
  deleteAction: function deleteAction(context) {
    var _this3 = this;

    if (!confirm((0,_common_utils_extractText__WEBPACK_IMPORTED_MODULE_5__["default"])(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.post_controls.delete_confirmation')))) return;
    if (context) context.loading = true;
    return this["delete"]().then(function () {
      var discussion = _this3.discussion();

      discussion.removePost(_this3.id()); // If this was the last post in the discussion, then we will assume that
      // the whole discussion was deleted too.

      if (!discussion.postIds().length) {
        _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].discussions.removeDiscussion(discussion);

        if (_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].viewingDiscussion(discussion)) {
          _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].history.back();
        }
      }
    })["catch"](function () {}).then(function () {
      if (context) context.loading = false;
      m.redraw();
    });
  }
});

/***/ }),

/***/ "./src/forum/utils/UserControls.js":
/*!*****************************************!*\
  !*** ./src/forum/utils/UserControls.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _forum_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../forum/app */ "./src/forum/app.ts");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_components_Separator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Separator */ "./src/common/components/Separator.js");
/* harmony import */ var _common_components_EditUserModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/EditUserModal */ "./src/common/components/EditUserModal.tsx");
/* harmony import */ var _components_UserPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/UserPage */ "./src/forum/components/UserPage.js");
/* harmony import */ var _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/utils/ItemList */ "./src/common/utils/ItemList.ts");






/**
 * The `UserControls` utility constructs a list of buttons for a user which
 * perform actions on it.
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  /**
   * Get a list of controls for a user.
   *
   * @param {import('../../common/models/User').default} user
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   */
  controls: function controls(user, context) {
    var _this = this;

    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();
    ['user', 'moderation', 'destructive'].forEach(function (section) {
      var controls = _this[section + 'Controls'](user, context).toArray();

      if (controls.length) {
        controls.forEach(function (item) {
          return items.add(item.itemName, item);
        });
        items.add(section + 'Separator', m(_common_components_Separator__WEBPACK_IMPORTED_MODULE_2__["default"], null));
      }
    });
    return items;
  },

  /**
   * Get controls for a user pertaining to the current user (e.g. poke, follow).
   *
   * @param {import('../../common/models/User').default} user
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  userControls: function userControls() {
    return new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();
  },

  /**
   * Get controls for a user pertaining to moderation (e.g. suspend, edit).
   *
   * @param {import('../../common/models/User').default} user
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  moderationControls: function moderationControls(user) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();

    if (user.canEdit() || user.canEditCredentials() || user.canEditGroups()) {
      items.add('edit', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_1__["default"], {
        icon: "fas fa-pencil-alt",
        onclick: this.editAction.bind(this, user)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.user_controls.edit_button')));
    }

    return items;
  },

  /**
   * Get controls for a user which are destructive (e.g. delete).
   *
   * @param {import('../../common/models/User').default} user
   * @param {import('../../common/Component').default<any, any>}  context The parent component under which the controls menu will be displayed.
   *
   * @return {ItemList<import('mithril').Children>}
   * @protected
   */
  destructiveControls: function destructiveControls(user) {
    var items = new _common_utils_ItemList__WEBPACK_IMPORTED_MODULE_5__["default"]();

    if (user.id() !== '1' && user.canDelete()) {
      items.add('delete', m(_common_components_Button__WEBPACK_IMPORTED_MODULE_1__["default"], {
        icon: "fas fa-times",
        onclick: this.deleteAction.bind(this, user)
      }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.user_controls.delete_button')));
    }

    return items;
  },

  /**
   * Delete the user.
   *
   * @param {import('../../common/models/User').default} user
   */
  deleteAction: function deleteAction(user) {
    var _this2 = this;

    if (!confirm(_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans('core.forum.user_controls.delete_confirmation'))) {
      return;
    }

    user["delete"]().then(function () {
      _this2.showDeletionAlert(user, 'success');

      if (_forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].current.matches(_components_UserPage__WEBPACK_IMPORTED_MODULE_4__["default"], {
        user: user
      })) {
        _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].history.back();
      } else {
        window.location.reload();
      }
    })["catch"](function () {
      return _this2.showDeletionAlert(user, 'error');
    });
  },

  /**
   * Show deletion alert of user.
   *
   * @param {import('../../common/models/User').default} user
   * @param {string} type
   */
  showDeletionAlert: function showDeletionAlert(user, type) {
    var message = {
      success: 'core.forum.user_controls.delete_success_message',
      error: 'core.forum.user_controls.delete_error_message'
    }[type];
    _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].alerts.show({
      type: type
    }, _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].translator.trans(message, {
      user: user,
      email: user.email()
    }));
  },

  /**
   * Edit the user.
   *
   * @param {import('../../common/models/User').default} user
   */
  editAction: function editAction(user) {
    _forum_app__WEBPACK_IMPORTED_MODULE_0__["default"].modal.show(_common_components_EditUserModal__WEBPACK_IMPORTED_MODULE_3__["default"], {
      user: user
    });
  }
});

/***/ }),

/***/ "./src/forum/utils/alertEmailConfirmation.js":
/*!***************************************************!*\
  !*** ./src/forum/utils/alertEmailConfirmation.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ alertEmailConfirmation)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _common_components_Alert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/components/Alert */ "./src/common/components/Alert.tsx");
/* harmony import */ var _common_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/components/Button */ "./src/common/components/Button.tsx");
/* harmony import */ var _common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/helpers/icon */ "./src/common/helpers/icon.tsx");
/* harmony import */ var _common_Component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/Component */ "./src/common/Component.ts");






/**
 * Shows an alert if the user has not yet confirmed their email address.
 *
 * @param {import('../ForumApplication').default} app
 */

function alertEmailConfirmation(app) {
  var user = app.session.user;
  if (!user || user.isEmailConfirmed()) return;

  var ResendButton = /*#__PURE__*/function (_Component) {
    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ResendButton, _Component);

    function ResendButton() {
      return _Component.apply(this, arguments) || this;
    }

    var _proto = ResendButton.prototype;

    _proto.oninit = function oninit(vnode) {
      _Component.prototype.oninit.call(this, vnode);

      this.loading = false;
      this.sent = false;
    };

    _proto.view = function view() {
      return m(_common_components_Button__WEBPACK_IMPORTED_MODULE_3__["default"], {
        "class": "Button Button--link",
        onclick: this.onclick.bind(this),
        loading: this.loading,
        disabled: this.sent
      }, this.sent ? [(0,_common_helpers_icon__WEBPACK_IMPORTED_MODULE_4__["default"])('fas fa-check'), ' ', app.translator.trans('core.forum.user_email_confirmation.sent_message')] : app.translator.trans('core.forum.user_email_confirmation.resend_button'));
    };

    _proto.onclick = function onclick() {
      var _this = this;

      this.loading = true;
      m.redraw();
      app.request({
        method: 'POST',
        url: app.forum.attribute('apiUrl') + '/users/' + user.id() + '/send-confirmation'
      }).then(function () {
        _this.loading = false;
        _this.sent = true;
        m.redraw();
      })["catch"](function () {
        _this.loading = false;
        m.redraw();
      });
    };

    return ResendButton;
  }(_common_Component__WEBPACK_IMPORTED_MODULE_5__["default"]);

  var ContainedAlert = /*#__PURE__*/function (_Alert) {
    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(ContainedAlert, _Alert);

    function ContainedAlert() {
      return _Alert.apply(this, arguments) || this;
    }

    var _proto2 = ContainedAlert.prototype;

    _proto2.view = function view(vnode) {
      var vdom = _Alert.prototype.view.call(this, vnode);

      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, vdom, {
        children: [m("div", {
          className: "container"
        }, vdom.children)]
      });
    };

    return ContainedAlert;
  }(_common_components_Alert__WEBPACK_IMPORTED_MODULE_2__["default"]);

  m.mount($('<div/>').insertBefore('#content')[0], {
    view: function view() {
      return m(ContainedAlert, {
        dismissible: false,
        controls: [m(ResendButton, null)]
      }, app.translator.trans('core.forum.user_email_confirmation.alert_message', {
        email: m("strong", null, user.email())
      }));
    }
  });
}

/***/ }),

/***/ "./src/forum/utils/isSafariMobile.ts":
/*!*******************************************!*\
  !*** ./src/forum/utils/isSafariMobile.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isSafariMobile)
/* harmony export */ });
/**
 * @see https://stackoverflow.com/a/31732310
 */
function isSafariMobile() {
  return 'ontouchstart' in window && navigator.vendor != null && navigator.vendor.includes('Apple') && navigator.userAgent != null && !navigator.userAgent.includes('CriOS') && !navigator.userAgent.includes('FxiOS');
}

/***/ }),

/***/ "./src/forum/utils/slidable.js":
/*!*************************************!*\
  !*** ./src/forum/utils/slidable.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ slidable)
/* harmony export */ });
/**
 * The `slidable` utility adds touch gestures to an element so that it can be
 * slid away to reveal controls underneath, and then released to activate those
 * controls.
 *
 * It relies on the element having children with particular CSS classes.
 *
 * The function returns a record with a `reset` proeprty. This is a function
 * which reverts the slider to its original position. This should be called,
 * for example, when a controls dropdown is closed.
 *
 * @param {HTMLElement | SVGElement | Element} element
 * @return {{ reset : () => void }}
 */
function slidable(element) {
  var $element = $(element);
  var threshold = 50;
  var $underneathLeft;
  var $underneathRight;
  var startX;
  var startY;
  var couldBeSliding = false;
  var isSliding = false;
  var pos = 0;
  /**
   * Animate the slider to a new position.
   *
   * @param {number} newPos
   * @param {Partial<JQueryAnimationOptions>} [options]
   */

  var animatePos = function animatePos(newPos, options) {
    var _options;

    if (options === void 0) {
      options = {};
    }

    // Since we can't animate the transform property with jQuery, we'll use a
    // bit of a workaround. We set up the animation with a step function that
    // will set the transform property, but then we animate an unused property
    // (background-position-x) with jQuery.
    (_options = options).duration || (_options.duration = 'fast');

    options.step = function (x) {
      $(this).css('transform', 'translate(' + x + 'px, 0)');
    };

    $element.find('.Slidable-content').animate({
      'background-position-x': newPos
    }, options);
  };
  /**
   * Revert the slider to its original position.
   */


  var reset = function reset() {
    animatePos(0, {
      complete: function complete() {
        $element.removeClass('sliding');
        $underneathLeft.hide();
        $underneathRight.hide();
        isSliding = false;
      }
    });
  };

  $element.find('.Slidable-content').on('touchstart', function (e) {
    // Update the references to the elements underneath the slider, provided
    // they're not disabled.
    $underneathLeft = $element.find('.Slidable-underneath--left:not(.disabled)');
    $underneathRight = $element.find('.Slidable-underneath--right:not(.disabled)');
    startX = e.originalEvent.targetTouches[0].clientX;
    startY = e.originalEvent.targetTouches[0].clientY;
    couldBeSliding = true;
    pos = 0;
  }).on('touchmove', function (e) {
    var newX = e.originalEvent.targetTouches[0].clientX;
    var newY = e.originalEvent.targetTouches[0].clientY; // Once the user moves their touch in a direction that's more up/down than
    // left/right, we'll assume they're scrolling the page. But if they do
    // move in a horizontal direction at first, then we'll lock their touch
    // into the slider.

    if (couldBeSliding && Math.abs(newX - startX) > Math.abs(newY - startY)) {
      isSliding = true;
    }

    couldBeSliding = false;

    if (isSliding) {
      pos = newX - startX; // If there are controls underneath the either side, then we'll show/hide
      // them depending on the slider's position. We also make the controls
      // icon get a bit bigger the further they slide.

      var toggle = function toggle($underneath, side) {
        if ($underneath.length) {
          var active = side === 'left' ? pos > 0 : pos < 0;

          if (active && $underneath.hasClass('Slidable-underneath--elastic')) {
            pos -= pos * 0.5;
          }

          $underneath.toggle(active);
          var scale = Math.max(0, Math.min(1, (Math.abs(pos) - 25) / threshold));
          $underneath.find('.icon').css('transform', 'scale(' + scale + ')');
        } else {
          pos = Math[side === 'left' ? 'min' : 'max'](0, pos);
        }
      };

      toggle($underneathLeft, 'left');
      toggle($underneathRight, 'right');
      $(this).css('transform', 'translate(' + pos + 'px, 0)');
      $(this).css('background-position-x', pos + 'px');
      $element.toggleClass('sliding', !!pos);
      e.preventDefault();
    }
  }).on('touchend', function () {
    // If the user releases the touch and the slider is past the threshold
    // position on either side, then we will activate the control for that
    // side. We will also animate the slider's position all the way to the
    // other side, or back to its original position, depending on whether or
    // not the side is 'elastic'.
    var activate = function activate($underneath) {
      $underneath.click();

      if ($underneath.hasClass('Slidable-underneath--elastic')) {
        reset();
      } else {
        animatePos((pos > 0 ? 1 : -1) * $element.width());
      }
    };

    if ($underneathRight.length && pos < -threshold) {
      activate($underneathRight);
    } else if ($underneathLeft.length && pos > threshold) {
      activate($underneathLeft);
    } else {
      reset();
    }

    couldBeSliding = false;
    isSliding = false;
  });
  return {
    reset: reset
  };
}

/***/ }),

/***/ "./node_modules/expose-loader/dist/cjs.js?exposes=$,jQuery!./node_modules/jquery/dist/jquery-exposed.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=$,jQuery!./node_modules/jquery/dist/jquery-exposed.js ***!
  \**************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../../babel-loader/lib/index.js??ruleSet[1].rules[0]!./jquery.js */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/jquery/dist/jquery.js");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../../expose-loader/dist/runtime/getGlobalThis.js */ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["$"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["$"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "$" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["jQuery"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["jQuery"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "jQuery" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ "./node_modules/expose-loader/dist/cjs.js?exposes=ColorThief!./node_modules/color-thief-browser/dist/color-thief.min-exposed.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=ColorThief!./node_modules/color-thief-browser/dist/color-thief.min-exposed.js ***!
  \**************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../../babel-loader/lib/index.js??ruleSet[1].rules[0]!./color-thief.min.js */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/color-thief-browser/dist/color-thief.min.js");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../../expose-loader/dist/runtime/getGlobalThis.js */ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["ColorThief"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["ColorThief"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "ColorThief" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ "./node_modules/expose-loader/dist/cjs.js?exposes=dayjs!./node_modules/dayjs/dayjs.min-exposed.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=dayjs!./node_modules/dayjs/dayjs.min-exposed.js ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../babel-loader/lib/index.js??ruleSet[1].rules[0]!./dayjs.min.js */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/dayjs/dayjs.min.js");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../expose-loader/dist/runtime/getGlobalThis.js */ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["dayjs"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["dayjs"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "dayjs" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ "./node_modules/expose-loader/dist/cjs.js?exposes=m!./node_modules/mithril/index-exposed.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=m!./node_modules/mithril/index-exposed.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../babel-loader/lib/index.js??ruleSet[1].rules[0]!./index.js */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/mithril/index.js");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../expose-loader/dist/runtime/getGlobalThis.js */ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["m"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["m"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "m" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ "./node_modules/expose-loader/dist/cjs.js?exposes=punycode!./node_modules/punycode/punycode.es6-exposed.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/expose-loader/dist/cjs.js?exposes=punycode!./node_modules/punycode/punycode.es6-exposed.js ***!
  \*****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ___EXPOSE_LOADER_IMPORT___ = __webpack_require__(/*! -!../babel-loader/lib/index.js??ruleSet[1].rules[0]!./punycode.es6.js */ "./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0]!./node_modules/punycode/punycode.es6.js");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = __webpack_require__(/*! ../expose-loader/dist/runtime/getGlobalThis.js */ "./node_modules/expose-loader/dist/runtime/getGlobalThis.js");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;
if (typeof ___EXPOSE_LOADER_GLOBAL_THIS___["punycode"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___["punycode"] = ___EXPOSE_LOADER_IMPORT___;
else throw new Error('[exposes-loader] The "punycode" value exists in the global scope, it may not be safe to overwrite it, use the "override" option')
module.exports = ___EXPOSE_LOADER_IMPORT___;


/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayWithHoles)
/* harmony export */ });
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _asyncToGenerator)
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _classCallCheck)
/* harmony export */ });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/createClass.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/createClass.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _createClass)
/* harmony export */ });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _defineProperty)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _getPrototypeOf)
/* harmony export */ });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inherits.js":
/*!*************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inherits.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inherits)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inheritsLoose)
/* harmony export */ });
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js");

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__["default"])(subClass, superClass);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _iterableToArrayLimit)
/* harmony export */ });
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js":
/*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _nonIterableRest)
/* harmony export */ });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _objectWithoutPropertiesLoose)
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _possibleConstructorReturn)
/* harmony export */ });
/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/esm/typeof.js");
/* harmony import */ var _assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assertThisInitialized.js */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");


function _possibleConstructorReturn(self, call) {
  if (call && ((0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__["default"])(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return (0,_assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__["default"])(self);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _slicedToArray)
/* harmony export */ });
/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayWithHoles.js */ "./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js");
/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterableToArrayLimit.js */ "./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js");
/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");
/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nonIterableRest.js */ "./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js");




function _slicedToArray(arr, i) {
  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__["default"])(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__["default"])(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _taggedTemplateLiteralLoose)
/* harmony export */ });
function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _typeof)
/* harmony export */ });
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)
/* harmony export */ });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o, minLen);
}

/***/ }),

/***/ "./node_modules/throttle-debounce/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/throttle-debounce/esm/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "debounce": () => (/* binding */ debounce),
/* harmony export */   "throttle": () => (/* binding */ throttle)
/* harmony export */ });
/* eslint-disable no-undefined,no-param-reassign,no-shadow */

/**
 * Throttle execution of a function. Especially useful for rate limiting
 * execution of handlers on events like resize and scroll.
 *
 * @param  {number}    delay -          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {boolean}   [noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the
 *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time
 *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,
 *                                    the internal counter is reset).
 * @param  {Function}  callback -       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                    to `callback` when the throttled-function is executed.
 * @param  {boolean}   [debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),
 *                                    schedule `callback` to execute after `delay` ms.
 *
 * @returns {Function}  A new, throttled, function.
 */
function throttle(delay, noTrailing, callback, debounceMode) {
  /*
   * After wrapper has stopped being called, this timeout ensures that
   * `callback` is executed at the proper times in `throttle` and `end`
   * debounce modes.
   */
  var timeoutID;
  var cancelled = false; // Keep track of the last time `callback` was executed.

  var lastExec = 0; // Function to clear existing timeout

  function clearExistingTimeout() {
    if (timeoutID) {
      clearTimeout(timeoutID);
    }
  } // Function to cancel next exec


  function cancel() {
    clearExistingTimeout();
    cancelled = true;
  } // `noTrailing` defaults to falsy.


  if (typeof noTrailing !== 'boolean') {
    debounceMode = callback;
    callback = noTrailing;
    noTrailing = undefined;
  }
  /*
   * The `wrapper` function encapsulates all of the throttling / debouncing
   * functionality and when executed will limit the rate at which `callback`
   * is executed.
   */


  function wrapper() {
    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {
      arguments_[_key] = arguments[_key];
    }

    var self = this;
    var elapsed = Date.now() - lastExec;

    if (cancelled) {
      return;
    } // Execute `callback` and update the `lastExec` timestamp.


    function exec() {
      lastExec = Date.now();
      callback.apply(self, arguments_);
    }
    /*
     * If `debounceMode` is true (at begin) this is used to clear the flag
     * to allow future `callback` executions.
     */


    function clear() {
      timeoutID = undefined;
    }

    if (debounceMode && !timeoutID) {
      /*
       * Since `wrapper` is being called for the first time and
       * `debounceMode` is true (at begin), execute `callback`.
       */
      exec();
    }

    clearExistingTimeout();

    if (debounceMode === undefined && elapsed > delay) {
      /*
       * In throttle mode, if `delay` time has been exceeded, execute
       * `callback`.
       */
      exec();
    } else if (noTrailing !== true) {
      /*
       * In trailing throttle mode, since `delay` time has not been
       * exceeded, schedule `callback` to execute `delay` ms after most
       * recent execution.
       *
       * If `debounceMode` is true (at begin), schedule `clear` to execute
       * after `delay` ms.
       *
       * If `debounceMode` is false (at end), schedule `callback` to
       * execute after `delay` ms.
       */
      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);
    }
  }

  wrapper.cancel = cancel; // Return the wrapper function.

  return wrapper;
}
/* eslint-disable no-undefined */

/**
 * Debounce execution of a function. Debouncing, unlike throttling,
 * guarantees that a function is only executed a single time, either at the
 * very beginning of a series of calls, or at the very end.
 *
 * @param  {number}   delay -         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.
 * @param  {boolean}  [atBegin] -     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds
 *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.
 *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).
 * @param  {Function} callback -      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,
 *                                  to `callback` when the debounced-function is executed.
 *
 * @returns {Function} A new, debounced function.
 */


function debounce(delay, atBegin, callback) {
  return callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);
}



/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!******************!*\
  !*** ./forum.ts ***!
  \******************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Extend": () => (/* reexport safe */ _src_common__WEBPACK_IMPORTED_MODULE_0__.Extend),
/* harmony export */   "app": () => (/* reexport safe */ _src_common__WEBPACK_IMPORTED_MODULE_0__.app),
/* harmony export */   "compat": () => (/* reexport safe */ _src_forum__WEBPACK_IMPORTED_MODULE_1__.compat)
/* harmony export */ });
/* harmony import */ var _src_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/common */ "./src/common/index.ts");
/* harmony import */ var _src_forum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/forum */ "./src/forum/index.ts");


})();

flarum.core = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=forum.js.map