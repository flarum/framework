{"version":3,"file":"forum/components/LogInModal.js","mappings":"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","sources":["webpack://@flarum/core/./src/forum/components/ForgotPasswordModal.tsx","webpack://@flarum/core/./src/forum/components/LogInModal.tsx","webpack://@flarum/core/./src/forum/components/LogInButtons.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../../forum/app';\nimport FormModal from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport extractText from '../../common/utils/extractText';\nimport Stream from '../../common/utils/Stream';\nimport ItemList from '../../common/utils/ItemList';\nimport Form from '../../common/components/Form';\n/**\n * The `ForgotPasswordModal` component displays a modal which allows the user to\n * enter their email address and request a link to reset their password.\n */\nexport default class ForgotPasswordModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    /**\n     * The value of the email input.\n     */\n    _defineProperty(this, \"email\", void 0);\n    _defineProperty(this, \"success\", false);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.email = Stream(this.attrs.email || '');\n  }\n  className() {\n    return 'ForgotPasswordModal Modal--small';\n  }\n  title() {\n    return app.translator.trans('core.forum.forgot_password.title');\n  }\n  content() {\n    if (this.success) {\n      return m(\"div\", {\n        className: \"Modal-body\"\n      }, m(Form, {\n        className: \"Form--centered\"\n      }, m(\"p\", {\n        className: \"helpText\"\n      }, app.translator.trans('core.forum.forgot_password.email_sent_message')), m(\"div\", {\n        className: \"Form-group Form-controls\"\n      }, m(Button, {\n        className: \"Button Button--primary Button--block\",\n        onclick: this.hide.bind(this)\n      }, app.translator.trans('core.forum.forgot_password.dismiss_button')))));\n    }\n    return m(\"div\", {\n      className: \"Modal-body\"\n    }, m(Form, {\n      className: \"Form--centered\",\n      description: app.translator.trans('core.forum.forgot_password.text')\n    }, this.fields().toArray()));\n  }\n  fields() {\n    const items = new ItemList();\n    const emailLabel = extractText(app.translator.trans('core.forum.forgot_password.email_placeholder'));\n    items.add('email', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: emailLabel,\n      \"aria-label\": emailLabel,\n      bidi: this.email,\n      disabled: this.loading\n    })), 50);\n    items.add('submit', m(\"div\", {\n      className: \"Form-group Form-controls\"\n    }, m(Button, {\n      className: \"Button Button--primary Button--block\",\n      type: \"submit\",\n      loading: this.loading\n    }, app.translator.trans('core.forum.forgot_password.submit_button'))), -10);\n    return items;\n  }\n  onsubmit(e) {\n    e.preventDefault();\n    this.loading = true;\n    app.request({\n      method: 'POST',\n      url: app.forum.attribute('apiUrl') + '/forgot',\n      body: this.requestParams(),\n      errorHandler: this.onerror.bind(this)\n    }).then(() => {\n      this.success = true;\n      this.alertAttrs = null;\n    }).catch(() => {}).then(this.loaded.bind(this));\n  }\n  requestParams() {\n    const data = {\n      email: this.email()\n    };\n    return data;\n  }\n  onerror(error) {\n    if (error.status === 404 && error.alert) {\n      error.alert.content = app.translator.trans('core.forum.forgot_password.not_found_message');\n    }\n    super.onerror(error);\n  }\n}\nflarum.reg.add('core', 'forum/components/ForgotPasswordModal', ForgotPasswordModal);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../../forum/app';\nimport FormModal from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\nimport ForgotPasswordModal from './ForgotPasswordModal';\nexport default class LogInModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    /**\n     * The value of the identification input.\n     */\n    _defineProperty(this, \"identification\", void 0);\n    /**\n     * The value of the password input.\n     */\n    _defineProperty(this, \"password\", void 0);\n    /**\n     * The value of the remember me input.\n     */\n    _defineProperty(this, \"remember\", void 0);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.identification = Stream(this.attrs.identification || '');\n    this.password = Stream(this.attrs.password || '');\n    this.remember = Stream(!!this.attrs.remember);\n  }\n  className() {\n    return 'LogInModal Modal--small';\n  }\n  title() {\n    return app.translator.trans('core.forum.log_in.title');\n  }\n  content() {\n    return [m(\"div\", {\n      className: \"Modal-body\"\n    }, this.body()), m(\"div\", {\n      className: \"Modal-footer\"\n    }, this.footer())];\n  }\n  body() {\n    return [m(LogInButtons, null), m(\"div\", {\n      className: \"Form Form--centered\"\n    }, this.fields().toArray())];\n  }\n  fields() {\n    const items = new ItemList();\n    const identificationLabel = extractText(app.translator.trans('core.forum.log_in.username_or_email_placeholder'));\n    const passwordLabel = extractText(app.translator.trans('core.forum.log_in.password_placeholder'));\n    items.add('identification', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"identification\",\n      type: \"text\",\n      placeholder: identificationLabel,\n      \"aria-label\": identificationLabel,\n      bidi: this.identification,\n      disabled: this.loading\n    })), 30);\n    items.add('password', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"password\",\n      type: \"password\",\n      autocomplete: \"current-password\",\n      placeholder: passwordLabel,\n      \"aria-label\": passwordLabel,\n      bidi: this.password,\n      disabled: this.loading\n    })), 20);\n    items.add('remember', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"div\", null, m(\"label\", {\n      className: \"checkbox\"\n    }, m(\"input\", {\n      type: \"checkbox\",\n      bidi: this.remember,\n      disabled: this.loading\n    }), app.translator.trans('core.forum.log_in.remember_me_label')))), 10);\n    items.add('submit', m(\"div\", {\n      className: \"Form-group\"\n    }, m(Button, {\n      className: \"Button Button--primary Button--block\",\n      type: \"submit\",\n      loading: this.loading\n    }, app.translator.trans('core.forum.log_in.submit_button'))), -10);\n    return items;\n  }\n  footer() {\n    return m('[', null, m(\"p\", {\n      className: \"LogInModal-forgotPassword\"\n    }, m(Button, {\n      className: \"Button Button--text Button--link\",\n      onclick: this.forgotPassword.bind(this)\n    }, app.translator.trans('core.forum.log_in.forgot_password_link'))), app.forum.attribute('allowSignUp') && m(\"p\", {\n      className: \"LogInModal-signUp\"\n    }, app.translator.trans('core.forum.log_in.sign_up_text', {\n      a: m(Button, {\n        className: \"Button Button--text Button--link\",\n        onclick: this.signUp.bind(this)\n      })\n    })));\n  }\n\n  /**\n   * Open the forgot password modal, prefilling it with an email if the user has\n   * entered one.\n   */\n  forgotPassword() {\n    const email = this.identification();\n    const attrs = email.includes('@') ? {\n      email\n    } : undefined;\n    app.modal.show(ForgotPasswordModal, attrs);\n  }\n\n  /**\n   * Open the sign up modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   */\n  signUp() {\n    const identification = this.identification();\n    const attrs = {\n      [identification.includes('@') ? 'email' : 'username']: identification\n    };\n    app.modal.show(() => import(/* webpackChunkName: 'forum/components/SignUpModal', webpackMode: 'lazy-once' */ './SignUpModal'), attrs);\n  }\n  onready() {\n    this.$('[name=' + (this.identification() ? 'password' : 'identification') + ']').trigger('select');\n  }\n  onsubmit(e) {\n    e.preventDefault();\n    this.loading = true;\n    app.session.login(this.loginParams(), {\n      errorHandler: this.onerror.bind(this)\n    }).then(() => window.location.reload(), this.loaded.bind(this));\n  }\n  loginParams() {\n    const data = {\n      identification: this.identification(),\n      password: this.password(),\n      remember: this.remember()\n    };\n    return data;\n  }\n  onerror(error) {\n    if (error.status === 401 && error.alert) {\n      error.alert.content = app.translator.trans('core.forum.log_in.invalid_login_message');\n      this.password('');\n    }\n    super.onerror(error);\n  }\n}\nflarum.reg.add('core', 'forum/components/LogInModal', LogInModal);","import Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\n\n/**\n * The `LogInButtons` component displays a collection of social login buttons.\n */\nexport default class LogInButtons extends Component {\n  view() {\n    return m(\"div\", {\n      className: \"LogInButtons\"\n    }, this.items().toArray());\n  }\n\n  /**\n   * Build a list of LogInButton components.\n   *\n   * @return {ItemList<import('mithril').Children>}\n   */\n  items() {\n    return new ItemList();\n  }\n}\nflarum.reg.add('core', 'forum/components/LogInButtons', LogInButtons);"],"names":["ForgotPasswordModal","FormModal","constructor","super","arguments","this","oninit","vnode","email","Stream","attrs","className","title","app","content","success","m","Form","Button","onclick","hide","bind","description","fields","toArray","items","ItemList","emailLabel","extractText","add","name","type","placeholder","bidi","disabled","loading","onsubmit","e","preventDefault","method","url","body","requestParams","errorHandler","onerror","then","alertAttrs","catch","loaded","error","status","alert","flarum","reg","LogInModal","identification","password","remember","footer","LogInButtons","identificationLabel","passwordLabel","autocomplete","forgotPassword","a","signUp","includes","undefined","onready","$","trigger","loginParams","window","location","reload","view"],"sourceRoot":""}