{"version":3,"file":"forum/components/LogInModal.js","mappings":"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","sources":["webpack://@flarum/core/./src/forum/components/ForgotPasswordModal.tsx","webpack://@flarum/core/./src/forum/components/LogInModal.tsx"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../../forum/app';\nimport FormModal from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport extractText from '../../common/utils/extractText';\nimport Stream from '../../common/utils/Stream';\nimport ItemList from '../../common/utils/ItemList';\nimport Form from '../../common/components/Form';\n/**\n * The `ForgotPasswordModal` component displays a modal which allows the user to\n * enter their email address and request a link to reset their password.\n */\nexport default class ForgotPasswordModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    /**\n     * The value of the email input.\n     */\n    _defineProperty(this, \"email\", void 0);\n    _defineProperty(this, \"success\", false);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.email = Stream(this.attrs.email || '');\n  }\n  className() {\n    return 'ForgotPasswordModal Modal--small';\n  }\n  title() {\n    return app.translator.trans('core.forum.forgot_password.title');\n  }\n  content() {\n    if (this.success) {\n      return m(\"div\", {\n        className: \"Modal-body\"\n      }, m(Form, {\n        className: \"Form--centered\"\n      }, m(\"p\", {\n        className: \"helpText\"\n      }, app.translator.trans('core.forum.forgot_password.email_sent_message')), m(\"div\", {\n        className: \"Form-group Form-controls\"\n      }, m(Button, {\n        className: \"Button Button--primary Button--block\",\n        onclick: this.hide.bind(this)\n      }, app.translator.trans('core.forum.forgot_password.dismiss_button')))));\n    }\n    return m(\"div\", {\n      className: \"Modal-body\"\n    }, m(Form, {\n      className: \"Form--centered\",\n      description: app.translator.trans('core.forum.forgot_password.text')\n    }, this.fields().toArray()));\n  }\n  fields() {\n    const items = new ItemList();\n    const emailLabel = extractText(app.translator.trans('core.forum.forgot_password.email_placeholder'));\n    items.add('email', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: emailLabel,\n      \"aria-label\": emailLabel,\n      bidi: this.email,\n      disabled: this.loading\n    })), 50);\n    items.add('submit', m(\"div\", {\n      className: \"Form-group Form-controls\"\n    }, m(Button, {\n      className: \"Button Button--primary Button--block\",\n      type: \"submit\",\n      loading: this.loading\n    }, app.translator.trans('core.forum.forgot_password.submit_button'))), -10);\n    return items;\n  }\n  onsubmit(e) {\n    e.preventDefault();\n    this.loading = true;\n    app.request({\n      method: 'POST',\n      url: app.forum.attribute('apiUrl') + '/forgot',\n      body: this.requestParams(),\n      errorHandler: this.onerror.bind(this)\n    }).then(() => {\n      this.success = true;\n      this.alertAttrs = null;\n    }).catch(() => {}).then(this.loaded.bind(this));\n  }\n  requestParams() {\n    const data = {\n      email: this.email()\n    };\n    return data;\n  }\n  onerror(error) {\n    if (error.status === 404 && error.alert) {\n      error.alert.content = app.translator.trans('core.forum.forgot_password.not_found_message');\n    }\n    super.onerror(error);\n  }\n}\nflarum.reg.add('core', 'forum/components/ForgotPasswordModal', ForgotPasswordModal);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../../forum/app';\nimport FormModal from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport LogInButtons from './LogInButtons';\nimport extractText from '../../common/utils/extractText';\nimport ItemList from '../../common/utils/ItemList';\nimport Stream from '../../common/utils/Stream';\nimport ForgotPasswordModal from './ForgotPasswordModal';\nexport default class LogInModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    /**\n     * The value of the identification input.\n     */\n    _defineProperty(this, \"identification\", void 0);\n    /**\n     * The value of the password input.\n     */\n    _defineProperty(this, \"password\", void 0);\n    /**\n     * The value of the remember me input.\n     */\n    _defineProperty(this, \"remember\", void 0);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.identification = Stream(this.attrs.identification || '');\n    this.password = Stream(this.attrs.password || '');\n    this.remember = Stream(!!this.attrs.remember);\n  }\n  className() {\n    return 'LogInModal Modal--small';\n  }\n  title() {\n    return app.translator.trans('core.forum.log_in.title');\n  }\n  content() {\n    return [m(\"div\", {\n      className: \"Modal-body\"\n    }, this.body()), m(\"div\", {\n      className: \"Modal-footer\"\n    }, this.footer())];\n  }\n  body() {\n    return [m(LogInButtons, null), m(\"div\", {\n      className: \"Form Form--centered\"\n    }, this.fields().toArray())];\n  }\n  fields() {\n    const items = new ItemList();\n    const identificationLabel = extractText(app.translator.trans('core.forum.log_in.username_or_email_placeholder'));\n    const passwordLabel = extractText(app.translator.trans('core.forum.log_in.password_placeholder'));\n    items.add('identification', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"identification\",\n      type: \"text\",\n      placeholder: identificationLabel,\n      \"aria-label\": identificationLabel,\n      bidi: this.identification,\n      disabled: this.loading\n    })), 30);\n    items.add('password', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      className: \"FormControl\",\n      name: \"password\",\n      type: \"password\",\n      autocomplete: \"current-password\",\n      placeholder: passwordLabel,\n      \"aria-label\": passwordLabel,\n      bidi: this.password,\n      disabled: this.loading\n    })), 20);\n    items.add('remember', m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"div\", null, m(\"label\", {\n      className: \"checkbox\"\n    }, m(\"input\", {\n      type: \"checkbox\",\n      bidi: this.remember,\n      disabled: this.loading\n    }), app.translator.trans('core.forum.log_in.remember_me_label')))), 10);\n    items.add('submit', m(\"div\", {\n      className: \"Form-group\"\n    }, m(Button, {\n      className: \"Button Button--primary Button--block\",\n      type: \"submit\",\n      loading: this.loading\n    }, app.translator.trans('core.forum.log_in.submit_button'))), -10);\n    return items;\n  }\n  footer() {\n    return m('[', null, m(\"p\", {\n      className: \"LogInModal-forgotPassword\"\n    }, m(Button, {\n      className: \"Button Button--text Button--link\",\n      onclick: this.forgotPassword.bind(this)\n    }, app.translator.trans('core.forum.log_in.forgot_password_link'))), app.forum.attribute('allowSignUp') && m(\"p\", {\n      className: \"LogInModal-signUp\"\n    }, app.translator.trans('core.forum.log_in.sign_up_text', {\n      a: m(Button, {\n        className: \"Button Button--text Button--link\",\n        onclick: this.signUp.bind(this)\n      })\n    })));\n  }\n\n  /**\n   * Open the forgot password modal, prefilling it with an email if the user has\n   * entered one.\n   */\n  forgotPassword() {\n    const email = this.identification();\n    const attrs = email.includes('@') ? {\n      email\n    } : undefined;\n    app.modal.show(ForgotPasswordModal, attrs);\n  }\n\n  /**\n   * Open the sign up modal, prefilling it with an email/username/password if\n   * the user has entered one.\n   */\n  signUp() {\n    const identification = this.identification();\n    const attrs = {\n      [identification.includes('@') ? 'email' : 'username']: identification\n    };\n    app.modal.show(() => import(/* webpackChunkName: 'forum/components/SignUpModal', webpackMode: 'lazy-once' */ './SignUpModal'), attrs);\n  }\n  onready() {\n    this.$('[name=' + (this.identification() ? 'password' : 'identification') + ']').trigger('select');\n  }\n  onsubmit(e) {\n    e.preventDefault();\n    this.loading = true;\n    app.session.login(this.loginParams(), {\n      errorHandler: this.onerror.bind(this)\n    }).then(() => window.location.reload(), this.loaded.bind(this));\n  }\n  loginParams() {\n    const data = {\n      identification: this.identification(),\n      password: this.password(),\n      remember: this.remember()\n    };\n    return data;\n  }\n  onerror(error) {\n    if (error.status === 401 && error.alert) {\n      error.alert.content = app.translator.trans('core.forum.log_in.invalid_login_message');\n      this.password('');\n    }\n    super.onerror(error);\n  }\n}\nflarum.reg.add('core', 'forum/components/LogInModal', LogInModal);"],"names":["ForgotPasswordModal","FormModal","constructor","super","arguments","this","oninit","vnode","email","Stream","attrs","className","title","app","translator","trans","content","success","m","Form","Button","onclick","hide","bind","description","fields","toArray","items","ItemList","emailLabel","extractText","add","name","type","placeholder","bidi","disabled","loading","onsubmit","e","preventDefault","request","method","url","forum","attribute","body","requestParams","errorHandler","onerror","then","alertAttrs","catch","loaded","error","status","alert","flarum","reg","LogInModal","identification","password","remember","footer","LogInButtons","identificationLabel","passwordLabel","autocomplete","forgotPassword","a","signUp","includes","undefined","modal","show","onready","$","trigger","session","login","loginParams","window","location","reload"],"sourceRoot":""}