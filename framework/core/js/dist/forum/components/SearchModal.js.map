{"version":3,"file":"forum/components/SearchModal.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAwE;AAC/C;AACiC;AACe;AAClB;AACE;AACP;AACE;AACL;AACS;AACgB;AACrB;AACsB;AAC1D,0BAA0B,oEAAS;AAClD;AACA;AACA,IAAI,qFAAe;AACnB,IAAI,qFAAe;AACnB;AACA;AACA;AACA,IAAI,qFAAe;AACnB;AACA;AACA;AACA,IAAI,qFAAe;AACnB;AACA;AACA;AACA,IAAI,qFAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qFAAe;AACnB,IAAI,qFAAe;AACnB,IAAI,qFAAe;AACnB,IAAI,qFAAe,sBAAsB,gEAAM;AAC/C,IAAI,qFAAe,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAM;AACvB;AACA;AACA,WAAW,6DAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gEAAM;AACtD,oKAAoK,0EAAmB;AACvL,wBAAwB,qEAAW,CAAC,6DAAoB;AACxD;AACA;AACA,KAAK;AACL;AACA,KAAK,IAAI,gEAAK;AACd;AACA;AACA;AACA;AACA,kBAAkB,6DAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,oEAAoE;AACpE;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,+DAAQ;AAC9B,wHAAwH,iEAAM;AAC9H;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,+DAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO,EAAE,6DAAoB;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,KAAK,IAAI,mEAAQ;AACjB;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,KAAK,IAAI,mEAAQ;AACjB;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,KAAK,IAAI,4EAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAwB;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,yEAAmB;AAC5C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4EAA4B;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAe;AACf","sources":["webpack://@flarum/core/./src/forum/components/SearchModal.tsx"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../app';\nimport FormModal from '../../common/components/FormModal';\nimport KeyboardNavigatable from '../../common/utils/KeyboardNavigatable';\nimport SearchManager from '../../common/SearchManager';\nimport extractText from '../../common/utils/extractText';\nimport Input from '../../common/components/Input';\nimport Button from '../../common/components/Button';\nimport Stream from '../../common/utils/Stream';\nimport InfoTile from '../../common/components/InfoTile';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport ItemList from '../../common/utils/ItemList';\nimport GambitsAutocomplete from '../../common/utils/GambitsAutocomplete';\nexport default class SearchModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"searchState\", void 0);\n    _defineProperty(this, \"query\", void 0);\n    /**\n     * An array of SearchSources.\n     */\n    _defineProperty(this, \"sources\", void 0);\n    /**\n     * The key of the currently-active search source.\n     */\n    _defineProperty(this, \"activeSource\", void 0);\n    /**\n     * The sources that are still loading results.\n     */\n    _defineProperty(this, \"loadingSources\", []);\n    /**\n     * The index of the currently-selected <li> in the results list. This can be\n     * a unique string (to account for the fact that an item's position may jump\n     * around as new results load), but otherwise it will be numeric (the\n     * sequential position within the list).\n     */\n    _defineProperty(this, \"index\", 0);\n    _defineProperty(this, \"navigator\", void 0);\n    _defineProperty(this, \"searchTimeout\", void 0);\n    _defineProperty(this, \"inputScroll\", Stream(0));\n    _defineProperty(this, \"gambitsAutocomplete\", {});\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.searchState = this.attrs.searchState;\n    this.sources = this.attrs.sources;\n    this.query = Stream(this.searchState.getValue() || '');\n  }\n  title() {\n    return app.translator.trans('core.forum.search.title');\n  }\n  className() {\n    return 'SearchModal Modal--flat';\n  }\n  content() {\n    var _this$gambitsAutocomp, _this$activeSource$re;\n    // Initialize the active source.\n    if (!this.activeSource) this.activeSource = Stream(this.sources[0]);\n    (_this$gambitsAutocomp = this.gambitsAutocomplete)[_this$activeSource$re = this.activeSource().resource] || (_this$gambitsAutocomp[_this$activeSource$re] = new GambitsAutocomplete(this.activeSource().resource, () => this.inputElement(), this.query, value => this.search(value)));\n    const searchLabel = extractText(app.translator.trans('core.forum.search.placeholder'));\n    return m(\"div\", {\n      className: \"Modal-body SearchModal-body\"\n    }, m(\"div\", {\n      className: \"SearchModal-form\"\n    }, m(Input, {\n      key: \"search\",\n      type: \"search\",\n      loading: !!this.loadingSources.length,\n      clearable: true,\n      clearLabel: app.translator.trans('core.forum.header.search_clear_button_accessible_label'),\n      prefixIcon: \"fas fa-search\",\n      \"aria-label\": searchLabel,\n      placeholder: searchLabel,\n      value: this.query(),\n      onchange: value => {\n        var _this$inputElement$0$, _this$inputElement$;\n        this.query(value);\n        this.inputScroll((_this$inputElement$0$ = (_this$inputElement$ = this.inputElement()[0]) == null ? void 0 : _this$inputElement$.scrollLeft) != null ? _this$inputElement$0$ : 0);\n      },\n      inputAttrs: {\n        className: 'SearchModal-input'\n      },\n      renderInput: attrs => m('[', null, m(\"input\", Object.assign({}, attrs, {\n        onscroll: e => this.inputScroll(e.target.scrollLeft)\n      })), m(\"div\", {\n        className: \"SearchModal-visual-wrapper\"\n      }, m(\"div\", {\n        className: \"SearchModal-visual-input\",\n        style: {\n          left: '-' + this.inputScroll() + 'px'\n        }\n      }, this.gambifyInput())))\n    })), this.tabs());\n  }\n  tabs() {\n    return m(\"div\", {\n      className: \"SearchModal-tabs\"\n    }, m(\"div\", {\n      className: \"SearchModal-tabs-nav\"\n    }, this.tabItems().toArray()), m(\"div\", {\n      className: \"SearchModal-tabs-content\"\n    }, this.activeTabItems().toArray()));\n  }\n  tabItems() {\n    var _this$sources;\n    const items = new ItemList();\n    (_this$sources = this.sources) == null ? void 0 : _this$sources.map((source, index) => items.add(source.resource, m(Button, {\n      className: \"Button Button--link\",\n      active: this.activeSource() === source,\n      onclick: () => this.switchSource(source)\n    }, source.title()), 100 - index));\n    return items;\n  }\n  activeTabItems() {\n    var _this$activeSource;\n    const items = new ItemList();\n    const loading = this.loadingSources.includes(this.activeSource().resource);\n    const shouldShowResults = !!this.query() && !loading;\n    const gambits = this.gambits();\n    const fullPageLink = this.activeSource().fullPage(this.query());\n    const results = (_this$activeSource = this.activeSource()) == null ? void 0 : _this$activeSource.view(this.query());\n    if (shouldShowResults && fullPageLink) {\n      items.add('fullPageLink', m(\"div\", {\n        className: \"SearchModal-section\"\n      }, m(\"hr\", {\n        className: \"Modal-divider\"\n      }), m(\"ul\", {\n        className: \"Dropdown-menu SearchModal-fullPage\"\n      }, fullPageLink)), 80);\n    }\n    if (!!gambits.length) {\n      items.add('gambits', m(\"div\", {\n        className: \"SearchModal-section\"\n      }, m(\"hr\", {\n        className: \"Modal-divider\"\n      }), m(\"ul\", {\n        className: \"Dropdown-menu SearchModal-options\",\n        \"aria-live\": gambits.length ? 'polite' : undefined\n      }, m(\"li\", {\n        className: \"Dropdown-header\"\n      }, app.translator.trans('core.forum.search.options_heading')), gambits)), 60);\n    }\n    items.add('results', m(\"div\", {\n      className: \"SearchModal-section\"\n    }, m(\"hr\", {\n      className: \"Modal-divider\"\n    }), m(\"ul\", {\n      className: \"Dropdown-menu SearchModal-results\",\n      \"aria-live\": shouldShowResults ? 'polite' : undefined\n    }, m(\"li\", {\n      className: \"Dropdown-header\"\n    }, app.translator.trans('core.forum.search.preview_heading')), !shouldShowResults && m(\"li\", {\n      className: \"Dropdown-message\"\n    }, m(InfoTile, {\n      icon: \"fas fa-search\"\n    }, app.translator.trans('core.forum.search.no_search_text'))), shouldShowResults && results, shouldShowResults && !(results != null && results.length) && m(\"li\", {\n      className: \"Dropdown-message\"\n    }, m(InfoTile, {\n      icon: \"far fa-tired\"\n    }, app.translator.trans('core.forum.search.no_results_text'))), loading && m(\"li\", {\n      className: \"Dropdown-message\"\n    }, m(LoadingIndicator, null)))), 40);\n    return items;\n  }\n  switchSource(source) {\n    if (this.activeSource() !== source) {\n      this.activeSource(source);\n      this.search(this.query());\n      this.inputElement().focus();\n      m.redraw();\n    }\n  }\n  gambits() {\n    return this.gambitsAutocomplete[this.activeSource().resource].suggestions(this.query());\n  }\n\n  /**\n   * Transforms a simple search text to wrap valid gambits in a mark tag.\n   * @example `lorem ipsum is:unread dolor` => `lorem ipsum <mark>is:unread</mark> dolor`\n   */\n  gambifyInput() {\n    const query = this.query();\n    let marked = query;\n    app.search.gambits.match(this.activeSource().resource, query, (gambit, matches, negate, bit) => {\n      marked = marked.replace(bit, \"<mark>\".concat(bit, \"</mark>\"));\n    });\n    const jsx = [];\n    marked.split(/(<mark>.*?<\\/mark>)/).forEach(chunk => {\n      if (chunk.startsWith('<mark>')) {\n        jsx.push(m(\"mark\", null, chunk.replace(/<\\/?mark>/g, '')));\n      } else {\n        jsx.push(chunk);\n      }\n    });\n    return jsx;\n  }\n  onupdate(vnode) {\n    var _this$sources2;\n    super.onupdate(vnode);\n\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n    const component = this;\n    this.$('.Dropdown-menu')\n    // Whenever the mouse is hovered over a search result, highlight it.\n    .on('mouseenter', '> li:not(.Dropdown-header):not(.Dropdown-message)', function () {\n      component.setIndex(component.selectableItems().index(this));\n    });\n\n    // If there are no sources, the search view is not shown.\n    if (!((_this$sources2 = this.sources) != null && _this$sources2.length)) return;\n  }\n  oncreate(vnode) {\n    var _this$sources3;\n    super.oncreate(vnode);\n\n    // If there are no sources, we shouldn't initialize logic for\n    // search elements, as they will not be shown.\n    if (!((_this$sources3 = this.sources) != null && _this$sources3.length)) return;\n    const search = this.search.bind(this);\n\n    // Highlight the item that is currently selected.\n    this.setIndex(this.getCurrentNumericIndex());\n    const $input = this.inputElement();\n    this.navigator = new KeyboardNavigatable();\n    this.navigator.onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true)).onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true)).onSelect(this.selectResult.bind(this), true).onCancel(this.clear.bind(this)).bindTo($input);\n\n    // Handle input key events on the search input, triggering results to load.\n    $input.on('input focus', function () {\n      search(this.value.toLowerCase());\n    });\n  }\n  onremove(vnode) {\n    this.searchState.setValue(this.query());\n    super.onremove(vnode);\n  }\n  search(query) {\n    if (!query) return;\n    const source = this.activeSource();\n    if (this.searchTimeout) clearTimeout(this.searchTimeout);\n    this.searchTimeout = window.setTimeout(() => {\n      if (source.isCached(query)) return;\n      if (query.length >= SearchManager.MIN_SEARCH_LEN) {\n        if (!source.search) return;\n        this.loadingSources.push(source.resource);\n        source.search(query, SearchModal.LIMIT).then(() => {\n          this.loadingSources = this.loadingSources.filter(resource => resource !== source.resource);\n          m.redraw();\n        });\n      }\n      this.searchState.cache(query);\n      m.redraw();\n    }, 250);\n  }\n\n  /**\n   * Navigate to the currently selected search result and close the list.\n   */\n  selectResult() {\n    if (this.searchTimeout) clearTimeout(this.searchTimeout);\n    this.loadingSources = [];\n    const item = this.getItem(this.index);\n    const isResult = !!item.attr('data-id');\n    let selectedUrl = null;\n    if (isResult) {\n      const id = item.attr('data-id');\n      selectedUrl = id && this.activeSource().gotoItem(id);\n    } else if (item.find('a').length) {\n      selectedUrl = item.find('a').attr('href');\n    }\n    const query = this.query();\n    if (query && selectedUrl) {\n      m.route.set(selectedUrl);\n    } else {\n      item.find('button')[0].click();\n    }\n  }\n\n  /**\n   * Clear the search\n   */\n  clear() {\n    this.query('');\n  }\n\n  /**\n   * Get all of the search result items that are selectable.\n   */\n  selectableItems() {\n    return this.$('.Dropdown-menu > li:not(.Dropdown-header):not(.Dropdown-message)');\n  }\n\n  /**\n   * Get the position of the currently selected search result item.\n   * Returns zero if not found.\n   */\n  getCurrentNumericIndex() {\n    return Math.max(0, this.selectableItems().index(this.getItem(this.index)));\n  }\n\n  /**\n   * Get the <li> in the search results with the given index (numeric or named).\n   */\n  getItem(index) {\n    const $items = this.selectableItems();\n    let $item = $items.filter(\"[data-index=\\\"\".concat(index, \"\\\"]\"));\n    if (!$item.length) {\n      $item = $items.eq(index);\n    }\n    return $item;\n  }\n\n  /**\n   * Set the currently-selected search result item to the one with the given\n   * index.\n   */\n  setIndex(index, scrollToItem) {\n    if (scrollToItem === void 0) {\n      scrollToItem = false;\n    }\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n    let fixedIndex = index;\n    if (index < 0) {\n      fixedIndex = $items.length - 1;\n    } else if (index >= $items.length) {\n      fixedIndex = 0;\n    }\n    const $item = $items.removeClass('active').eq(fixedIndex).addClass('active');\n    this.index = parseInt($item.attr('data-index')) || fixedIndex;\n    if (scrollToItem && $dropdown) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({\n          scrollTop\n        }, 100);\n      }\n    }\n  }\n  inputElement() {\n    return this.$('.SearchModal-input');\n  }\n}\n_defineProperty(SearchModal, \"LIMIT\", 6);\nflarum.reg.add('core', 'forum/components/SearchModal', SearchModal);"],"names":[],"sourceRoot":""}