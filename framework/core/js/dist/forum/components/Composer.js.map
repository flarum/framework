{"version":3,"file":"forum/components/Composer.js","mappings":"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","sources":["webpack://@flarum/core/./src/forum/components/ComposerButton.js","webpack://@flarum/core/./src/forum/components/Composer.js"],"sourcesContent":["import Button from '../../common/components/Button';\n\n/**\n * The `ComposerButton` component displays a button suitable for the composer\n * controls.\n */\nexport default class ComposerButton extends Button {\n  static initAttrs(attrs) {\n    super.initAttrs(attrs);\n    attrs.className = attrs.className || 'Button Button--icon Button--link';\n  }\n}\nflarum.reg.add('core', 'forum/components/ComposerButton', ComposerButton);","import app from '../../forum/app';\nimport Component from '../../common/Component';\nimport ItemList from '../../common/utils/ItemList';\nimport ComposerButton from './ComposerButton';\nimport listItems from '../../common/helpers/listItems';\nimport classList from '../../common/utils/classList';\nimport ComposerState from '../states/ComposerState';\n\n/**\n * The `Composer` component displays the composer. It can be loaded with a\n * content component with `load` and then its position/state can be altered with\n * `show`, `hide`, `close`, `minimize`, `fullScreen`, and `exitFullScreen`.\n */\nexport default class Composer extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The composer's \"state\".\n     *\n     * @type {ComposerState}\n     */\n    this.state = this.attrs.state;\n\n    /**\n     * Whether or not the composer currently has focus.\n     *\n     * @type {Boolean}\n     */\n    this.active = false;\n\n    // Store the initial position so that we can trigger animations correctly.\n    this.prevPosition = this.state.position;\n  }\n  view() {\n    const body = this.state.body;\n    const classes = {\n      normal: this.state.position === ComposerState.Position.NORMAL,\n      minimized: this.state.position === ComposerState.Position.MINIMIZED,\n      fullScreen: this.state.position === ComposerState.Position.FULLSCREEN,\n      active: this.active,\n      visible: this.state.isVisible()\n    };\n\n    // Set up a handler so that clicks on the content will show the composer.\n    const showIfMinimized = this.state.position === ComposerState.Position.MINIMIZED ? this.state.show.bind(this.state) : undefined;\n    const ComposerBody = body.componentClass;\n    return m(\"div\", {\n      className: 'Composer ' + classList(classes)\n    }, m(\"div\", {\n      className: \"Composer-handle\",\n      oncreate: this.configHandle.bind(this)\n    }), m(\"ul\", {\n      className: \"Composer-controls\"\n    }, listItems(this.controlItems().toArray())), m(\"div\", {\n      className: \"Composer-content\",\n      onclick: showIfMinimized\n    }, ComposerBody && m(ComposerBody, Object.assign({}, body.attrs, {\n      composer: this.state,\n      disabled: classes.minimized\n    }))));\n  }\n  onupdate(vnode) {\n    super.onupdate(vnode);\n    if (this.state.position === this.prevPosition) {\n      // Set the height of the Composer element and its contents on each redraw,\n      // so that they do not lose it if their DOM elements are recreated.\n      this.updateHeight();\n    } else {\n      this.animatePositionChange();\n      this.prevPosition = this.state.position;\n    }\n  }\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    this.initializeHeight();\n    this.$().hide().css('bottom', -this.state.computedHeight());\n\n    // Whenever any of the inputs inside the composer are have focus, we want to\n    // add a class to the composer to draw attention to it.\n    this.$().on('focus blur', ':input,.TextEditor-editorContainer', e => {\n      this.active = e.type === 'focusin';\n      m.redraw();\n    });\n\n    // When the escape key is pressed on any inputs, close the composer.\n    this.$().on('keydown', ':input,.TextEditor-editorContainer', 'esc', () => this.state.close());\n    this.handlers = {};\n    $(window).on('resize', this.handlers.onresize = this.updateHeight.bind(this)).resize();\n    $(document).on('mousemove', this.handlers.onmousemove = this.onmousemove.bind(this)).on('mouseup', this.handlers.onmouseup = this.onmouseup.bind(this));\n  }\n  onremove(vnode) {\n    super.onremove(vnode);\n    $(window).off('resize', this.handlers.onresize);\n    $(document).off('mousemove', this.handlers.onmousemove).off('mouseup', this.handlers.onmouseup);\n  }\n\n  /**\n   * Add the necessary event handlers to the composer's handle so that it can\n   * be used to resize the composer.\n   */\n  configHandle(vnode) {\n    const composer = this;\n    $(vnode.dom).css('cursor', 'row-resize').bind('dragstart mousedown', e => e.preventDefault()).mousedown(function (e) {\n      composer.mouseStart = e.clientY;\n      composer.heightStart = composer.$().height();\n      composer.handle = $(this);\n      $('body').css('cursor', 'row-resize');\n    });\n  }\n\n  /**\n   * Resize the composer according to mouse movement.\n   *\n   * @param {MouseEvent} e\n   */\n  onmousemove(e) {\n    if (!this.handle) return;\n\n    // Work out how much the mouse has been moved, and set the height\n    // relative to the old one based on that. Then update the content's\n    // height so that it fills the height of the composer, and update the\n    // body's padding.\n    const deltaPixels = this.mouseStart - e.clientY;\n    this.changeHeight(this.heightStart + deltaPixels);\n\n    // Update the body's padding-bottom so that no content on the page will ever\n    // get permanently hidden behind the composer. If the user is already\n    // scrolled to the bottom of the page, then we will keep them scrolled to\n    // the bottom after the padding has been updated.\n    const scrollTop = $(window).scrollTop();\n    const anchorToBottom = scrollTop > 0 && scrollTop + $(window).height() >= $(document).height();\n    this.updateBodyPadding(anchorToBottom);\n  }\n\n  /**\n   * Finish resizing the composer when the mouse is released.\n   */\n  onmouseup() {\n    if (!this.handle) return;\n    this.handle = null;\n    $('body').css('cursor', '');\n  }\n\n  /**\n   * Draw focus to the first focusable content element (the text editor).\n   */\n  focus() {\n    var _this$attrs$state$bod, _this$attrs$state$bod2;\n    this.$(((_this$attrs$state$bod = (_this$attrs$state$bod2 = this.attrs.state.body.componentClass).focusOnSelector) == null ? void 0 : _this$attrs$state$bod.call(_this$attrs$state$bod2)) || '.Composer-content :input:enabled:visible, .TextEditor-editor').first().focus();\n  }\n\n  /**\n   * Update the DOM to reflect the composer's current height. This involves\n   * setting the height of the composer's root element, and adjusting the height\n   * of any flexible elements inside the composer's body.\n   */\n  updateHeight() {\n    const height = this.state.computedHeight();\n    const $flexible = this.$('.Composer-flexible');\n    this.$().height(height);\n    if ($flexible.length) {\n      const headerHeight = $flexible.offset().top - this.$().offset().top;\n      const paddingBottom = parseInt($flexible.css('padding-bottom'), 10);\n      const footerHeight = this.$('.Composer-footer').outerHeight(true);\n      $flexible.height(this.$().outerHeight() - headerHeight - paddingBottom - footerHeight);\n    }\n  }\n\n  /**\n   * Update the amount of padding-bottom on the body so that the page's\n   * content will still be visible above the composer when the page is\n   * scrolled right to the bottom.\n   */\n  updateBodyPadding() {\n    const visible = this.state.position !== ComposerState.Position.HIDDEN && this.state.position !== ComposerState.Position.MINIMIZED && app.screen() !== 'phone';\n    const paddingBottom = visible ? this.state.computedHeight() - parseInt($('#app').css('padding-bottom'), 10) : 0;\n    $('#content').css({\n      paddingBottom\n    });\n  }\n\n  /**\n   * Trigger the right animation depending on the desired new position.\n   */\n  animatePositionChange() {\n    // When exiting full-screen mode: focus content\n    if (this.prevPosition === ComposerState.Position.FULLSCREEN && this.state.position === ComposerState.Position.NORMAL) {\n      this.focus();\n      return;\n    }\n    switch (this.state.position) {\n      case ComposerState.Position.HIDDEN:\n        return this.hide();\n      case ComposerState.Position.MINIMIZED:\n        return this.minimize();\n      case ComposerState.Position.FULLSCREEN:\n        return this.focus();\n      case ComposerState.Position.NORMAL:\n        return this.show();\n    }\n  }\n\n  /**\n   * Animate the Composer into the new position by changing the height.\n   */\n  animateHeightChange() {\n    const $composer = this.$().stop(true);\n    const oldHeight = $composer.outerHeight();\n    const scrollTop = $(window).scrollTop();\n    $composer.show();\n    this.updateHeight();\n    const newHeight = $composer.outerHeight();\n    if (this.prevPosition === ComposerState.Position.HIDDEN) {\n      $composer.css({\n        bottom: -newHeight,\n        height: newHeight\n      });\n    } else {\n      $composer.css({\n        height: oldHeight\n      });\n    }\n    const animation = $composer.animate({\n      bottom: 0,\n      height: newHeight\n    }, 'fast').promise();\n    this.updateBodyPadding();\n    $(window).scrollTop(scrollTop);\n    return animation;\n  }\n\n  /**\n   * Show the Composer backdrop.\n   */\n  showBackdrop() {\n    this.$backdrop = $('<div/>').addClass('composer-backdrop').appendTo('body');\n  }\n\n  /**\n   * Hide the Composer backdrop.\n   */\n  hideBackdrop() {\n    if (this.$backdrop) this.$backdrop.remove();\n  }\n\n  /**\n   * Animate the composer sliding up from the bottom to take its normal height.\n   *\n   * @private\n   */\n  show() {\n    this.animateHeightChange().then(() => this.focus());\n    if (app.screen() === 'phone') {\n      // On safari fixed position doesn't properly work on mobile,\n      // So we use absolute and set the top value.\n      // https://github.com/flarum/core/issues/2652\n\n      // Due to another safari bug, `scrollTop` is unreliable when\n      // at the very bottom of the page AND opening the composer.\n      // So we fallback to a calculated version of scrollTop.\n      // https://github.com/flarum/core/issues/2683\n      const scrollElement = document.documentElement;\n      const topOfViewport = Math.min(scrollElement.scrollTop, scrollElement.scrollHeight - scrollElement.clientHeight);\n      this.$().css('top', $('.App').is('.mobile-safari') ? topOfViewport : 0);\n      this.showBackdrop();\n    }\n  }\n\n  /**\n   * Animate closing the composer.\n   *\n   * @private\n   */\n  hide() {\n    const $composer = this.$();\n\n    // Animate the composer sliding down off the bottom edge of the viewport.\n    // Only when the animation is completed, update other elements on the page.\n    $composer.stop(true).animate({\n      bottom: -$composer.height()\n    }, 'fast', () => {\n      $composer.hide();\n      this.hideBackdrop();\n      this.updateBodyPadding();\n    });\n  }\n\n  /**\n   * Shrink the composer until only its title is visible.\n   *\n   * @private\n   */\n  minimize() {\n    this.animateHeightChange();\n    this.$().css('top', 'auto');\n    this.hideBackdrop();\n  }\n\n  /**\n   * Build an item list for the composer's controls.\n   *\n   * @return {ItemList<import('mithril').Children>}\n   */\n  controlItems() {\n    const items = new ItemList();\n    if (this.state.position === ComposerState.Position.FULLSCREEN) {\n      items.add('exitFullScreen', m(ComposerButton, {\n        icon: \"fas fa-compress\",\n        title: app.translator.trans('core.forum.composer.exit_full_screen_tooltip'),\n        onclick: this.state.exitFullScreen.bind(this.state)\n      }));\n    } else {\n      if (this.state.position !== ComposerState.Position.MINIMIZED) {\n        items.add('minimize', m(ComposerButton, {\n          icon: classList('fas minimize', {\n            'fa-minus': app.screen() !== 'phone',\n            'fa-times': app.screen() === 'phone'\n          }),\n          title: app.translator.trans('core.forum.composer.minimize_tooltip'),\n          onclick: this.state.minimize.bind(this.state),\n          itemClassName: \"App-backControl\"\n        }));\n        items.add('fullScreen', m(ComposerButton, {\n          icon: \"fas fa-expand\",\n          title: app.translator.trans('core.forum.composer.full_screen_tooltip'),\n          onclick: this.state.fullScreen.bind(this.state)\n        }));\n      }\n      items.add('close', m(ComposerButton, {\n        icon: \"fas fa-times\",\n        title: app.translator.trans('core.forum.composer.close_tooltip'),\n        onclick: this.state.close.bind(this.state)\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * Initialize default Composer height.\n   */\n  initializeHeight() {\n    this.state.height = localStorage.getItem('composerHeight');\n    if (!this.state.height) {\n      this.state.height = this.defaultHeight();\n    }\n  }\n\n  /**\n   * Default height of the Composer in case none is saved.\n   * @returns {number}\n   */\n  defaultHeight() {\n    return this.$().height();\n  }\n\n  /**\n   * Save a new Composer height and update the DOM.\n   * @param {number} height\n   */\n  changeHeight(height) {\n    this.state.height = height;\n    this.updateHeight();\n    localStorage.setItem('composerHeight', this.state.height);\n  }\n}\nflarum.reg.add('core', 'forum/components/Composer', Composer);"],"names":["ComposerButton","Button","initAttrs","attrs","super","className","flarum","reg","add","Composer","Component","oninit","vnode","this","state","active","prevPosition","position","view","body","classes","normal","ComposerState","Position","NORMAL","minimized","MINIMIZED","fullScreen","FULLSCREEN","visible","isVisible","showIfMinimized","show","bind","undefined","ComposerBody","componentClass","m","classList","oncreate","configHandle","listItems","controlItems","toArray","onclick","Object","assign","composer","disabled","onupdate","updateHeight","animatePositionChange","initializeHeight","$","hide","css","computedHeight","on","e","type","redraw","close","handlers","window","onresize","resize","document","onmousemove","onmouseup","onremove","off","dom","preventDefault","mousedown","mouseStart","clientY","heightStart","height","handle","deltaPixels","changeHeight","scrollTop","anchorToBottom","updateBodyPadding","focus","_this$attrs$state$bod","_this$attrs$state$bod2","focusOnSelector","call","first","$flexible","length","headerHeight","offset","top","paddingBottom","parseInt","footerHeight","outerHeight","HIDDEN","app","screen","minimize","animateHeightChange","$composer","stop","oldHeight","newHeight","bottom","animation","animate","promise","showBackdrop","$backdrop","addClass","appendTo","hideBackdrop","remove","then","scrollElement","documentElement","topOfViewport","Math","min","scrollHeight","clientHeight","is","items","ItemList","icon","title","translator","trans","exitFullScreen","itemClassName","localStorage","getItem","defaultHeight","setItem"],"sourceRoot":""}