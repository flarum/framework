{"version":3,"file":"forum/components/UserSecurityPage.js","mappings":";;;;;;;;;;;;;;;AAAqC;AACZ;AACzB;AACA;AACA;AACA;AACA;AACA;AACe,yBAAyB,kDAAS;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrBwE;AAC/C;AACsB;AACK;AACG;AACJ;AACS;AACH;AACJ;AACC;AACN;AACjC,+BAA+B,yDAAS;AACvD;AACA;AACA,IAAI,qFAAe,oBAAoB;AACvC,IAAI,qFAAe,0BAA0B;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA;AACA;AACA,iBAAiB,mEAAS;AAC1B;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,sBAAsB,8DAAQ;AAC9B;AACA;AACA,KAAK,IAAI,gEAAI;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,8DAAQ;AAC9B;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO,EAAE,6DAAoB;AAC7B,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,IAAI,qEAAU;AACnB,aAAa,6DAAoB;AACjC,aAAa,qEAAS;AACtB,KAAK;AACL;AACA;AACA,KAAK,IAAI,qEAAU;AACnB,aAAa,6DAAoB;AACjC,mDAAmD,qEAAS;AAC5D;AACA,OAAO,sBAAsB,6DAAoB;AACjD,KAAK;AACL;AACA;AACA;AACA,sBAAsB,8DAAQ;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC,iEAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE,6DAAoB;AAC7B;AACA,yBAAyB,iEAAM;AAC/B;AACA;AACA;AACA;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,uBAAuB,kEAAO;AAC9B,cAAc,6DAAoB;AAClC,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qEAAW,CAAC,6DAAoB;AACjD;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAe;AACnB;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,6DAAoB;AACtD;AACA,WAAW,6DAAoB;AAC/B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjJwE;AAC/C;AACiC;AACN;AACL;AACC;AACjC,kCAAkC,oEAAS;AAC1D;AACA;AACA,IAAI,qFAAe,qBAAqB,gEAAM;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAW,6DAAoB;AAC/B;AACA;AACA,uBAAuB,6DAAoB;AAC3C;AACA;AACA,KAAK,IAAI,+DAAI;AACb;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK,IAAI,iEAAM;AACf;AACA;AACA;AACA,KAAK,EAAE,6DAAoB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAsB;AAC1B;AACA,MAAM,wDAAe;AACrB,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDwE;AACtC;AACA;AACiB;AACK;AACD;AACE;AACP;AACsB;AACpB;AACI;AACF;AACc;;AAEpE;AACA;AACA;AACA;AACe,+BAA+B,iDAAQ;AACtD;AACA;AACA,IAAI,qFAAe,oBAAoB,sEAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA,gDAAgD,+DAAgB,mDAAmD,kEAAmB;AACtI;AACA;AACA;AACA,IAAI,2DAAY,CAAC,qEAAW,CAAC,mEAAoB;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB,qEAAS;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ;AAC9B,QAAQ,kEAAmB,4BAA4B,kEAAmB;AAC1E,qCAAqC,mEAAQ;AAC7C;AACA,eAAe,mEAAoB;AACnC,OAAO;AACP,MAAM;AACN,qCAAqC,2EAAgB;AACrD;AACA,4BAA4B,mEAAQ;AACpC;AACA,aAAa,mEAAoB;AACjC,KAAK;AACL,2BAA2B,kEAAmB;AAC9C,kCAAkC,mEAAQ;AAC1C;AACA,eAAe,mEAAoB;AACnC,qBAAqB,mEAAoB;AACzC,OAAO,IAAI,iEAAM;AACjB;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE,mEAAoB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ;AAC9B,mEAAmE,2EAAgB,YAAY,yDAAgB;AAC/G;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,2BAA2B,kEAAmB;AAC9C;AACA;AACA,OAAO,IAAI,iEAAM;AACjB;AACA,mBAAmB,kEAAmB;AACtC,uBAAuB,6DAAc,CAAC,6DAAmB;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO,EAAE,mEAAoB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,8DAAQ;AAC9B,gEAAgE,2EAAgB,YAAY,yDAAgB;AAC5G;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,2BAA2B,kEAAmB;AAC9C;AACA,uCAAuC,iEAAM;AAC7C;AACA;AACA;AACA;AACA,OAAO,EAAE,mEAAoB;AAC7B;AACA,qCAAqC,mEAAO;AAC5C,gBAAgB,mEAAoB;AACpC,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,6DAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,qEAAW,CAAC,mEAAoB;AACjD;AACA,WAAW,0DAAW;AACtB;AACA,WAAW,kEAAmB;AAC9B,KAAK;AACL;AACA;AACA;AACA,MAAM,8DAAe;AACrB;AACA,OAAO,EAAE,mEAAoB;AAC7B;AACA,OAAO;AACP,KAAK;AACL,MAAM,8DAAe;AACrB;AACA,OAAO,EAAE,mEAAoB;AAC7B,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,0DAAW;AACtB;AACA,WAAW,kEAAmB;AAC9B,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;AC3LwE;AACzD;AACf;AACA,IAAI,qFAAe;AACnB,IAAI,qFAAe;AACnB,IAAI,qFAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@flarum/core/./src/common/components/LabelValue.tsx","webpack://@flarum/core/./src/forum/components/AccessTokensList.tsx","webpack://@flarum/core/./src/forum/components/NewAccessTokenModal.tsx","webpack://@flarum/core/./src/forum/components/UserSecurityPage.tsx","webpack://@flarum/core/./src/forum/states/UserSecurityPageState.ts"],"sourcesContent":["import Component from '../Component';\nimport app from '../app';\n/**\n * A generic component for displaying a label and value inline.\n * Created to avoid reinventing the wheel.\n *\n * `label: value`\n */\nexport default class LabelValue extends Component {\n  view(vnode) {\n    return m(\"div\", {\n      className: \"LabelValue\"\n    }, m(\"div\", {\n      className: \"LabelValue-label\"\n    }, app.translator.trans('core.lib.data_segment.label', {\n      label: this.attrs.label\n    })), m(\"div\", {\n      className: \"LabelValue-value\"\n    }, this.attrs.value));\n  }\n}\nflarum.reg.add('core', 'common/components/LabelValue', LabelValue);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../app';\nimport Component from '../../common/Component';\nimport Button from '../../common/components/Button';\nimport humanTime from '../../common/helpers/humanTime';\nimport ItemList from '../../common/utils/ItemList';\nimport LabelValue from '../../common/components/LabelValue';\nimport extractText from '../../common/utils/extractText';\nimport classList from '../../common/utils/classList';\nimport Tooltip from '../../common/components/Tooltip';\nimport Icon from '../../common/components/Icon';\nexport default class AccessTokensList extends Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"loading\", {});\n    _defineProperty(this, \"showingTokens\", {});\n  }\n  view(vnode) {\n    return m(\"div\", {\n      className: \"AccessTokensList\"\n    }, this.attrs.tokens.length ? this.attrs.tokens.map(this.tokenView.bind(this)) : m(\"div\", {\n      className: \"AccessTokensList--empty\"\n    }, app.translator.trans('core.forum.security.empty_text')));\n  }\n  tokenView(token) {\n    return m(\"div\", {\n      className: classList('AccessTokensList-item', {\n        'AccessTokensList-item--active': token.isCurrent()\n      }),\n      key: token.id()\n    }, this.tokenViewItems(token).toArray());\n  }\n  tokenViewItems(token) {\n    const items = new ItemList();\n    items.add('icon', m(\"div\", {\n      className: \"AccessTokensList-item-icon\"\n    }, m(Icon, {\n      name: this.attrs.icon || 'fas fa-key'\n    })), 50);\n    items.add('info', m(\"div\", {\n      className: \"AccessTokensList-item-info\"\n    }, this.tokenInfoItems(token).toArray()), 40);\n    items.add('actions', m(\"div\", {\n      className: \"AccessTokensList-item-actions\"\n    }, this.tokenActionItems(token).toArray()), 30);\n    return items;\n  }\n  tokenInfoItems(token) {\n    const items = new ItemList();\n    if (this.attrs.type === 'session') {\n      items.add('title', m(\"div\", {\n        className: \"AccessTokensList-item-title\"\n      }, m(\"span\", {\n        className: \"AccessTokensList-item-title-main\"\n      }, token.device()), token.isCurrent() && [' â€” ', m(\"span\", {\n        className: \"AccessTokensList-item-title-sub\"\n      }, app.translator.trans('core.forum.security.current_active_session'))]));\n    } else {\n      items.add('title', m(\"div\", {\n        className: \"AccessTokensList-item-title\"\n      }, m(\"span\", {\n        className: \"AccessTokensList-item-title-main\"\n      }, this.generateTokenTitle(token))));\n    }\n    items.add('createdAt', m(\"div\", {\n      className: \"AccessTokensList-item-createdAt\"\n    }, m(LabelValue, {\n      label: app.translator.trans('core.forum.security.created'),\n      value: humanTime(token.createdAt())\n    })));\n    items.add('lastActivityAt', m(\"div\", {\n      className: \"AccessTokensList-item-lastActivityAt\"\n    }, m(LabelValue, {\n      label: app.translator.trans('core.forum.security.last_activity'),\n      value: token.lastActivityAt() ? m('[', null, humanTime(token.lastActivityAt()), token.lastIpAddress() && \" \\u2014 \".concat(token.lastIpAddress()), this.attrs.type === 'developer_token' && token.device() && m('[', null, ' ', \"\\u2014 \", m(\"span\", {\n        className: \"AccessTokensList-item-title-sub\"\n      }, token.device()))) : app.translator.trans('core.forum.security.never')\n    })));\n    return items;\n  }\n  tokenActionItems(token) {\n    const items = new ItemList();\n    const deleteKey = {\n      session: 'terminate_session',\n      developer_token: 'revoke_access_token'\n    }[this.attrs.type];\n    if (this.attrs.type === 'developer_token') {\n      const isHidden = !this.showingTokens[token.id()];\n      const displayKey = isHidden ? 'show_access_token' : 'hide_access_token';\n      items.add('toggleDisplay', m(Button, {\n        className: \"Button Button--inverted\",\n        icon: isHidden ? 'fas fa-eye' : 'fas fa-eye-slash',\n        onclick: () => {\n          this.showingTokens[token.id()] = isHidden;\n          m.redraw();\n        }\n      }, app.translator.trans(\"core.forum.security.\".concat(displayKey))));\n    }\n    let revokeButton = m(Button, {\n      className: \"Button Button--danger\",\n      disabled: token.isCurrent(),\n      loading: !!this.loading[token.id()],\n      onclick: () => this.revoke(token)\n    }, app.translator.trans(\"core.forum.security.\".concat(deleteKey)));\n    if (token.isCurrent()) {\n      revokeButton = m(Tooltip, {\n        text: app.translator.trans('core.forum.security.cannot_terminate_current_session')\n      }, m(\"div\", {\n        tabindex: \"0\"\n      }, revokeButton));\n    }\n    items.add('revoke', revokeButton);\n    return items;\n  }\n  async revoke(token) {\n    var _this$attrs$ondelete, _this$attrs;\n    if (!confirm(extractText(app.translator.trans('core.forum.security.revoke_access_token_confirmation')))) return;\n    this.loading[token.id()] = true;\n    await token.delete();\n    this.loading[token.id()] = false;\n    (_this$attrs$ondelete = (_this$attrs = this.attrs).ondelete) == null ? void 0 : _this$attrs$ondelete.call(_this$attrs, token);\n    const key = this.attrs.type === 'session' ? 'session_terminated' : 'token_revoked';\n    app.alerts.show({\n      type: 'success'\n    }, app.translator.trans(\"core.forum.security.\".concat(key), {\n      count: 1\n    }));\n    m.redraw();\n  }\n  generateTokenTitle(token) {\n    const name = token.title() || app.translator.trans('core.forum.security.token_title_placeholder');\n    const value = this.tokenValueDisplay(token);\n    return app.translator.trans('core.forum.security.token_item_title', {\n      title: name,\n      token: value\n    });\n  }\n  tokenValueDisplay(token) {\n    const obfuscatedName = Array(12).fill('*').join('');\n    const value = this.showingTokens[token.id()] ? token.token() : obfuscatedName;\n    return m(\"code\", {\n      className: \"AccessTokensList-item-token\"\n    }, value);\n  }\n}\nflarum.reg.add('core', 'forum/components/AccessTokensList', AccessTokensList);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../app';\nimport FormModal from '../../common/components/FormModal';\nimport Button from '../../common/components/Button';\nimport Stream from '../../common/utils/Stream';\nimport Form from '../../common/components/Form';\nexport default class NewAccessTokenModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"titleInput\", Stream(''));\n  }\n  className() {\n    return 'Modal--small NewAccessTokenModal';\n  }\n  title() {\n    return app.translator.trans('core.forum.security.new_access_token_modal.title');\n  }\n  content() {\n    const titleLabel = app.translator.trans('core.forum.security.new_access_token_modal.title_placeholder');\n    return m(\"div\", {\n      className: \"Modal-body\"\n    }, m(Form, {\n      className: \"Form--centered\"\n    }, m(\"div\", {\n      className: \"Form-group\"\n    }, m(\"input\", {\n      type: \"text\",\n      className: \"FormControl\",\n      bidi: this.titleInput,\n      placeholder: titleLabel,\n      \"aria-label\": titleLabel\n    })), m(\"div\", {\n      className: \"Form-group Form-controls\"\n    }, m(Button, {\n      className: \"Button Button--primary Button--block\",\n      type: \"submit\",\n      loading: this.loading\n    }, app.translator.trans('core.forum.security.new_access_token_modal.submit_button')))));\n  }\n  submitData() {\n    return {\n      title: this.titleInput()\n    };\n  }\n  onsubmit(e) {\n    super.onsubmit(e);\n    e.preventDefault();\n    this.loading = true;\n    app.store.createRecord('access-tokens').save(this.submitData()).then(token => {\n      this.attrs.onsuccess(token);\n      app.modal.close();\n    }).finally(this.loaded.bind(this));\n  }\n}\nflarum.reg.add('core', 'forum/components/NewAccessTokenModal', NewAccessTokenModal);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from '../../forum/app';\nimport UserPage from './UserPage';\nimport ItemList from '../../common/utils/ItemList';\nimport FieldSet from '../../common/components/FieldSet';\nimport listItems from '../../common/helpers/listItems';\nimport extractText from '../../common/utils/extractText';\nimport AccessTokensList from './AccessTokensList';\nimport LoadingIndicator from '../../common/components/LoadingIndicator';\nimport Button from '../../common/components/Button';\nimport NewAccessTokenModal from './NewAccessTokenModal';\nimport Tooltip from '../../common/components/Tooltip';\nimport UserSecurityPageState from '../states/UserSecurityPageState';\n\n/**\n * The `UserSecurityPage` component displays the user's security control panel, in\n * the context of their user profile.\n */\nexport default class UserSecurityPage extends UserPage {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", new UserSecurityPageState());\n  }\n  oninit(vnode) {\n    var _app$session$user;\n    super.oninit(vnode);\n    const routeUsername = m.route.param('username');\n    if (routeUsername !== ((_app$session$user = app.session.user) == null ? void 0 : _app$session$user.slug()) && !app.forum.attribute('canModerateAccessTokens')) {\n      m.route.set('/');\n    }\n    this.loadUser(routeUsername);\n    app.setTitle(extractText(app.translator.trans('core.forum.security.title')));\n    this.loadTokens();\n  }\n  content() {\n    return m(\"div\", {\n      className: \"UserSecurityPage\"\n    }, m(\"ul\", null, listItems(this.settingsItems().toArray())));\n  }\n\n  /**\n   * Build an item list for the user's settings controls.\n   */\n  settingsItems() {\n    var _this$state$getDevelo;\n    const items = new ItemList();\n    if (app.forum.attribute('canCreateAccessToken') || app.forum.attribute('canModerateAccessTokens') || this.state.hasLoadedTokens() && (_this$state$getDevelo = this.state.getDeveloperTokens()) != null && _this$state$getDevelo.length) {\n      items.add('developerTokens', m(FieldSet, {\n        className: \"UserSecurityPage-developerTokens\",\n        label: app.translator.trans(\"core.forum.security.developer_tokens_heading\")\n      }, this.developerTokensItems().toArray()));\n    } else if (!this.state.hasLoadedTokens()) {\n      items.add('developerTokens', m(LoadingIndicator, null));\n    }\n    items.add('sessions', m(FieldSet, {\n      className: \"UserSecurityPage-sessions\",\n      label: app.translator.trans(\"core.forum.security.sessions_heading\")\n    }, this.sessionsItems().toArray()));\n    if (this.user.id() === app.session.user.id()) {\n      items.add('globalLogout', m(FieldSet, {\n        className: \"FieldSet--col UserSecurityPage-globalLogout\",\n        label: app.translator.trans('core.forum.security.global_logout.heading'),\n        description: app.translator.trans('core.forum.security.global_logout.help_text')\n      }, m(Button, {\n        className: \"Button\",\n        icon: \"fas fa-sign-out-alt\",\n        onclick: this.globalLogout.bind(this),\n        loading: this.state.loadingGlobalLogout,\n        disabled: this.state.loadingTerminateSessions\n      }, app.translator.trans('core.forum.security.global_logout.log_out_button'))));\n    }\n    return items;\n  }\n\n  /**\n   * Build an item list for the user's access accessToken settings.\n   */\n  developerTokensItems() {\n    const items = new ItemList();\n    items.add('accessTokenList', !this.state.hasLoadedTokens() ? m(LoadingIndicator, null) : m(AccessTokensList, {\n      type: \"developer_token\",\n      ondelete: token => {\n        this.state.removeToken(token);\n        m.redraw();\n      },\n      tokens: this.state.getDeveloperTokens(),\n      icon: \"fas fa-key\",\n      hideTokens: false\n    }));\n    if (this.user.id() === app.session.user.id()) {\n      items.add('newAccessToken', m(\"div\", {\n        className: \"UserSecurityPage-controls\"\n      }, m(Button, {\n        className: \"Button\",\n        disabled: !app.forum.attribute('canCreateAccessToken'),\n        onclick: () => app.modal.show(NewAccessTokenModal, {\n          onsuccess: token => {\n            this.state.pushToken(token);\n            m.redraw();\n          }\n        })\n      }, app.translator.trans('core.forum.security.new_access_token_button'))));\n    }\n    return items;\n  }\n\n  /**\n   * Build an item list for the user's access accessToken settings.\n   */\n  sessionsItems() {\n    const items = new ItemList();\n    items.add('sessionsList', !this.state.hasLoadedTokens() ? m(LoadingIndicator, null) : m(AccessTokensList, {\n      type: \"session\",\n      ondelete: token => {\n        this.state.removeToken(token);\n        m.redraw();\n      },\n      tokens: this.state.getSessionTokens(),\n      icon: \"fas fa-laptop\",\n      hideTokens: true\n    }));\n    if (this.user.id() === app.session.user.id()) {\n      const isDisabled = !this.state.hasOtherActiveSessions();\n      let terminateAllOthersButton = m(Button, {\n        className: \"Button\",\n        onclick: this.terminateAllOtherSessions.bind(this),\n        loading: this.state.loadingTerminateSessions,\n        disabled: this.state.loadingGlobalLogout || isDisabled\n      }, app.translator.trans('core.forum.security.terminate_all_other_sessions'));\n      if (isDisabled) {\n        terminateAllOthersButton = m(Tooltip, {\n          text: app.translator.trans('core.forum.security.cannot_terminate_current_session')\n        }, m(\"span\", {\n          tabindex: \"0\"\n        }, terminateAllOthersButton));\n      }\n      items.add('terminateAllOtherSessions', m(\"div\", {\n        className: \"UserSecurityPage-controls\"\n      }, terminateAllOthersButton));\n    }\n    return items;\n  }\n  loadTokens() {\n    return app.store.find('access-tokens', {\n      filter: {\n        user: this.user.id()\n      }\n    }).then(tokens => {\n      this.state.setTokens(tokens);\n      m.redraw();\n    });\n  }\n  terminateAllOtherSessions() {\n    if (!confirm(extractText(app.translator.trans('core.forum.security.terminate_all_other_sessions_confirmation')))) return;\n    this.state.loadingTerminateSessions = true;\n    return app.request({\n      method: 'DELETE',\n      url: app.forum.attribute('apiUrl') + '/sessions'\n    }).then(() => {\n      // Count terminated sessions first.\n      const count = this.state.getOtherSessionTokens().length;\n      this.state.removeOtherSessionTokens();\n      app.alerts.show({\n        type: 'success'\n      }, app.translator.trans('core.forum.security.session_terminated', {\n        count\n      }));\n    }).catch(() => {\n      app.alerts.show({\n        type: 'error'\n      }, app.translator.trans('core.forum.security.session_termination_failed'));\n    }).finally(() => {\n      this.state.loadingTerminateSessions = false;\n      m.redraw();\n    });\n  }\n  globalLogout() {\n    this.state.loadingGlobalLogout = true;\n    return app.request({\n      method: 'POST',\n      url: app.forum.attribute('baseUrl') + '/global-logout'\n    }).then(() => window.location.reload()).finally(() => {\n      this.state.loadingGlobalLogout = false;\n      m.redraw();\n    });\n  }\n}\nflarum.reg.add('core', 'forum/components/UserSecurityPage', UserSecurityPage);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default class UserSecurityPageState {\n  constructor() {\n    _defineProperty(this, \"tokens\", null);\n    _defineProperty(this, \"loadingTerminateSessions\", false);\n    _defineProperty(this, \"loadingGlobalLogout\", false);\n  }\n  hasLoadedTokens() {\n    return this.tokens !== null;\n  }\n  getTokens() {\n    return this.tokens;\n  }\n  setTokens(tokens) {\n    this.tokens = tokens;\n  }\n  pushToken(token) {\n    var _this$tokens;\n    (_this$tokens = this.tokens) == null ? void 0 : _this$tokens.push(token);\n  }\n  removeToken(token) {\n    this.tokens = this.tokens.filter(t => t !== token);\n  }\n  getSessionTokens() {\n    var _this$tokens2;\n    return ((_this$tokens2 = this.tokens) == null ? void 0 : _this$tokens2.filter(token => token.isSessionToken()).sort((a, b) => b.isCurrent() ? 1 : -1)) || [];\n  }\n  getDeveloperTokens() {\n    var _this$tokens3;\n    return ((_this$tokens3 = this.tokens) == null ? void 0 : _this$tokens3.filter(token => !token.isSessionToken())) || null;\n  }\n\n  /**\n   * Look up session tokens other than the current one.\n   */\n  getOtherSessionTokens() {\n    var _this$tokens4;\n    return ((_this$tokens4 = this.tokens) == null ? void 0 : _this$tokens4.filter(token => token.isSessionToken() && !token.isCurrent())) || [];\n  }\n  hasOtherActiveSessions() {\n    return (this.getOtherSessionTokens() || []).length > 0;\n  }\n  removeOtherSessionTokens() {\n    this.tokens = this.tokens.filter(token => !token.isSessionToken() || token.isCurrent());\n  }\n}\nflarum.reg.add('core', 'forum/states/UserSecurityPageState', UserSecurityPageState);"],"names":[],"sourceRoot":""}