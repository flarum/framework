"use strict";(self.webpackChunkflarum_core=self.webpackChunkflarum_core||[]).push([[234],{422:(s,t,i)=>{i.r(t),i.d(t,{default:()=>A});var e=i(8805),r=i(5114),a=i(2855),n=i(3092),o=i(3550),d=i(4583),l=i(117),u=i(6064),h=i(4311),c=i(374);class A extends a.A{constructor(){super(...arguments),(0,e.A)(this,"username",void 0),(0,e.A)(this,"email",void 0),(0,e.A)(this,"isEmailConfirmed",void 0),(0,e.A)(this,"setPassword",void 0),(0,e.A)(this,"password",void 0),(0,e.A)(this,"groups",{})}oninit(s){super.oninit(s);const t=this.attrs.user;this.username=(0,h.A)(t.username()||""),this.email=(0,h.A)(t.email()||""),this.isEmailConfirmed=(0,h.A)(t.isEmailConfirmed()||!1),this.setPassword=(0,h.A)(!1),this.password=(0,h.A)(t.password()||"");const i=t.groups()||[];r.A.store.all("groups").filter((s=>![d.A.GUEST_ID,d.A.MEMBER_ID].includes(s.id()))).forEach((s=>this.groups[s.id()]=(0,h.A)(i.includes(s))))}className(){return"EditUserModal Modal--small"}title(){return r.A.translator.trans("core.lib.edit_user.title")}content(){const s=this.fields().toArray();return m("div",{className:"Modal-body"},s.length>1?m(c.A,null,this.fields().toArray()):r.A.translator.trans("core.lib.edit_user.nothing_available"))}fields(){const s=new u.A;return this.attrs.user.canEditCredentials()&&(s.add("username",m("div",{className:"Form-group"},m("label",null,r.A.translator.trans("core.lib.edit_user.username_heading")),m("input",{className:"FormControl",placeholder:(0,l.A)(r.A.translator.trans("core.lib.edit_user.username_label")),bidi:this.username,disabled:this.nonAdminEditingAdmin()})),40),r.A.session.user!==this.attrs.user&&(s.add("email",m("div",{className:"Form-group"},m("label",null,r.A.translator.trans("core.lib.edit_user.email_heading")),m("input",{className:"FormControl",placeholder:(0,l.A)(r.A.translator.trans("core.lib.edit_user.email_label")),bidi:this.email,disabled:this.nonAdminEditingAdmin()}),!this.isEmailConfirmed()&&this.userIsAdmin(r.A.session.user)&&m(n.A,{className:"Button Button--block",loading:this.loading,onclick:this.activate.bind(this)},r.A.translator.trans("core.lib.edit_user.activate_button"))),30),s.add("password",m("div",{className:"Form-group"},m("label",null,r.A.translator.trans("core.lib.edit_user.password_heading")),m("div",null,m("label",{className:"checkbox"},m("input",{type:"checkbox",onchange:s=>{const t=s.target;this.setPassword(t.checked),m.redraw.sync(),t.checked&&this.$("[name=password]").select(),s.redraw=!1},disabled:this.nonAdminEditingAdmin()}),r.A.translator.trans("core.lib.edit_user.set_password_label"))),this.setPassword()&&m("input",{className:"FormControl",type:"password",name:"password",placeholder:(0,l.A)(r.A.translator.trans("core.lib.edit_user.password_label")),bidi:this.password,disabled:this.nonAdminEditingAdmin()})),20))),this.attrs.user.canEditGroups()&&s.add("groups",m("div",{className:"Form-group EditUserModal-groups"},m("label",null,r.A.translator.trans("core.lib.edit_user.groups_heading")),m("div",null,Object.keys(this.groups).map((s=>r.A.store.getById("groups",s))).filter(Boolean).map((s=>s&&m("label",{className:"checkbox"},m("input",{type:"checkbox",bidi:this.groups[s.id()],disabled:s.id()===d.A.ADMINISTRATOR_ID&&(this.attrs.user===r.A.session.user||!this.userIsAdmin(r.A.session.user))}),m(o.A,{group:s,label:null})," ",s.nameSingular()))))),10),s.add("submit",m("div",{className:"Form-group Form-controls"},m(n.A,{className:"Button Button--primary",type:"submit",loading:this.loading},r.A.translator.trans("core.lib.edit_user.submit_button"))),-10),s}activate(){this.loading=!0;const s={username:this.username(),isEmailConfirmed:!0};this.attrs.user.save(s,{errorHandler:this.onerror.bind(this)}).then((()=>{this.isEmailConfirmed(!0),this.loading=!1,m.redraw()})).catch((()=>{this.loading=!1,m.redraw()}))}data(){const s={},t={};return this.attrs.user.canEditCredentials()&&!this.nonAdminEditingAdmin()&&(s.username=this.username(),r.A.session.user!==this.attrs.user&&(s.email=this.email()),this.setPassword()&&(s.password=this.password())),this.attrs.user.canEditGroups()&&(t.groups=Object.keys(this.groups).filter((s=>this.groups[s]())).map((s=>r.A.store.getById("groups",s))).filter((s=>s instanceof d.A))),s.relationships=t,s}onsubmit(s){s.preventDefault(),this.loading=!0,this.attrs.user.save(this.data(),{errorHandler:this.onerror.bind(this)}).then(this.hide.bind(this)).catch((()=>{this.loading=!1,m.redraw()}))}nonAdminEditingAdmin(){return this.userIsAdmin(this.attrs.user)&&!this.userIsAdmin(r.A.session.user)}userIsAdmin(s){return!!(s?.groups()||[]).some((s=>s?.id()===d.A.ADMINISTRATOR_ID))}}flarum.reg.add("core","common/components/EditUserModal",A)}}]);
//# sourceMappingURL=EditUserModal.js.map