{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@flarum/extension-manager/../../../node_modules/dayjs/plugin/duration.js","webpack://@flarum/extension-manager/webpack/bootstrap","webpack://@flarum/extension-manager/webpack/runtime/compat get default export","webpack://@flarum/extension-manager/webpack/runtime/define property getters","webpack://@flarum/extension-manager/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/extension-manager/webpack/runtime/make namespace object","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['admin/app']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['admin/components/LoadingModal']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['admin/utils/isExtensionEnabled']\"","webpack://@flarum/extension-manager/../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/extension-manager/../../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/extension-manager/../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/Component']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Link']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@flarum/extension-manager/./src/admin/components/Label.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@flarum/extension-manager/./src/admin/components/TaskOutputModal.tsx","webpack://@flarum/extension-manager/./src/admin/components/Pagination.tsx","webpack://@flarum/extension-manager/./src/admin/components/QueueSection.tsx","webpack://@flarum/extension-manager/./src/admin/utils/humanDuration.ts","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@flarum/extension-manager/./src/admin/components/Installer.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@flarum/extension-manager/./src/admin/utils/errorHandler.ts","webpack://@flarum/extension-manager/./src/admin/components/WhyNotModal.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@flarum/extension-manager/./src/admin/components/ExtensionItem.tsx","webpack://@flarum/extension-manager/./src/admin/components/MajorUpdater.tsx","webpack://@flarum/extension-manager/./src/admin/components/Updater.tsx","webpack://@flarum/extension-manager/./src/admin/components/ControlSection.tsx","webpack://@flarum/extension-manager/../../../node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flarum/extension-manager/external root \"flarum.core.compat['admin/components/AdminPage']\"","webpack://@flarum/extension-manager/./src/admin/components/ConfigureJson.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/components/Select']\"","webpack://@flarum/extension-manager/./src/admin/components/RepositoryModal.tsx","webpack://@flarum/extension-manager/./src/admin/components/ConfigureComposer.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@flarum/extension-manager/./src/admin/components/AuthMethodModal.tsx","webpack://@flarum/extension-manager/./src/admin/components/ConfigureAuth.tsx","webpack://@flarum/extension-manager/./src/admin/components/SettingsPage.tsx","webpack://@flarum/extension-manager/external root \"flarum.core.compat['common/Model']\"","webpack://@flarum/extension-manager/../../../node_modules/pretty-bytes/index.js","webpack://@flarum/extension-manager/./src/admin/models/Task.ts","webpack://@flarum/extension-manager/./src/admin/utils/jumpToQueue.ts","webpack://@flarum/extension-manager/./src/admin/states/QueueState.ts","webpack://@flarum/extension-manager/../../../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@flarum/extension-manager/./src/admin/states/ControlSectionState.ts","webpack://@flarum/extension-manager/./src/admin/states/ExtensionManagerState.ts","webpack://@flarum/extension-manager/./src/admin/index.tsx"],"sourcesContent":["!function(t,s){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=s():\"function\"==typeof define&&define.amd?define(s):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_duration=s()}(this,(function(){\"use strict\";var t,s,n=1e3,i=6e4,e=36e5,r=864e5,o=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,u=31536e6,h=2592e6,a=/^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/,d={years:u,months:h,days:r,hours:e,minutes:i,seconds:n,milliseconds:1,weeks:6048e5},c=function(t){return t instanceof p},f=function(t,s,n){return new p(t,n,s.$l)},m=function(t){return s.p(t)+\"s\"},l=function(t){return t<0},$=function(t){return l(t)?Math.ceil(t):Math.floor(t)},y=function(t){return Math.abs(t)},g=function(t,s){return t?l(t)?{negative:!0,format:\"\"+y(t)+s}:{negative:!1,format:\"\"+t+s}:{negative:!1,format:\"\"}},p=function(){function l(t,s,n){var i=this;if(this.$d={},this.$l=n,void 0===t&&(this.$ms=0,this.parseFromMilliseconds()),s)return f(t*d[m(s)],this);if(\"number\"==typeof t)return this.$ms=t,this.parseFromMilliseconds(),this;if(\"object\"==typeof t)return Object.keys(t).forEach((function(s){i.$d[m(s)]=t[s]})),this.calMilliseconds(),this;if(\"string\"==typeof t){var e=t.match(a);if(e){var r=e.slice(2).map((function(t){return null!=t?Number(t):0}));return this.$d.years=r[0],this.$d.months=r[1],this.$d.weeks=r[2],this.$d.days=r[3],this.$d.hours=r[4],this.$d.minutes=r[5],this.$d.seconds=r[6],this.calMilliseconds(),this}}return this}var y=l.prototype;return y.calMilliseconds=function(){var t=this;this.$ms=Object.keys(this.$d).reduce((function(s,n){return s+(t.$d[n]||0)*d[n]}),0)},y.parseFromMilliseconds=function(){var t=this.$ms;this.$d.years=$(t/u),t%=u,this.$d.months=$(t/h),t%=h,this.$d.days=$(t/r),t%=r,this.$d.hours=$(t/e),t%=e,this.$d.minutes=$(t/i),t%=i,this.$d.seconds=$(t/n),t%=n,this.$d.milliseconds=t},y.toISOString=function(){var t=g(this.$d.years,\"Y\"),s=g(this.$d.months,\"M\"),n=+this.$d.days||0;this.$d.weeks&&(n+=7*this.$d.weeks);var i=g(n,\"D\"),e=g(this.$d.hours,\"H\"),r=g(this.$d.minutes,\"M\"),o=this.$d.seconds||0;this.$d.milliseconds&&(o+=this.$d.milliseconds/1e3);var u=g(o,\"S\"),h=t.negative||s.negative||i.negative||e.negative||r.negative||u.negative,a=e.format||r.format||u.format?\"T\":\"\",d=(h?\"-\":\"\")+\"P\"+t.format+s.format+i.format+a+e.format+r.format+u.format;return\"P\"===d||\"-P\"===d?\"P0D\":d},y.toJSON=function(){return this.toISOString()},y.format=function(t){var n=t||\"YYYY-MM-DDTHH:mm:ss\",i={Y:this.$d.years,YY:s.s(this.$d.years,2,\"0\"),YYYY:s.s(this.$d.years,4,\"0\"),M:this.$d.months,MM:s.s(this.$d.months,2,\"0\"),D:this.$d.days,DD:s.s(this.$d.days,2,\"0\"),H:this.$d.hours,HH:s.s(this.$d.hours,2,\"0\"),m:this.$d.minutes,mm:s.s(this.$d.minutes,2,\"0\"),s:this.$d.seconds,ss:s.s(this.$d.seconds,2,\"0\"),SSS:s.s(this.$d.milliseconds,3,\"0\")};return n.replace(o,(function(t,s){return s||String(i[t])}))},y.as=function(t){return this.$ms/d[m(t)]},y.get=function(t){var s=this.$ms,n=m(t);return\"milliseconds\"===n?s%=1e3:s=\"weeks\"===n?$(s/d[n]):this.$d[n],0===s?0:s},y.add=function(t,s,n){var i;return i=s?t*d[m(s)]:c(t)?t.$ms:f(t,this).$ms,f(this.$ms+i*(n?-1:1),this)},y.subtract=function(t,s){return this.add(t,s,!0)},y.locale=function(t){var s=this.clone();return s.$l=t,s},y.clone=function(){return f(this.$ms,this)},y.humanize=function(s){return t().add(this.$ms,\"ms\").locale(this.$l).fromNow(!s)},y.milliseconds=function(){return this.get(\"milliseconds\")},y.asMilliseconds=function(){return this.as(\"milliseconds\")},y.seconds=function(){return this.get(\"seconds\")},y.asSeconds=function(){return this.as(\"seconds\")},y.minutes=function(){return this.get(\"minutes\")},y.asMinutes=function(){return this.as(\"minutes\")},y.hours=function(){return this.get(\"hours\")},y.asHours=function(){return this.as(\"hours\")},y.days=function(){return this.get(\"days\")},y.asDays=function(){return this.as(\"days\")},y.weeks=function(){return this.get(\"weeks\")},y.asWeeks=function(){return this.as(\"weeks\")},y.months=function(){return this.get(\"months\")},y.asMonths=function(){return this.as(\"months\")},y.years=function(){return this.get(\"years\")},y.asYears=function(){return this.as(\"years\")},l}();return function(n,i,e){t=e,s=e().$utils(),e.duration=function(t,s){var n=e.locale();return f(t,{$l:n},s)},e.isDuration=c;var r=i.prototype.add,o=i.prototype.subtract;i.prototype.add=function(t,s){return c(t)&&(t=t.asMilliseconds()),r.bind(this)(t,s)},i.prototype.subtract=function(t,s){return c(t)&&(t=t.asMilliseconds()),o.bind(this)(t,s)}}}));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/LoadingModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/utils/isExtensionEnabled'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","import type Mithril from 'mithril';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport classList from 'flarum/common/utils/classList';\n\ninterface LabelAttrs extends ComponentAttrs {\n  type: 'success' | 'error' | 'neutral' | 'warning';\n}\n\nexport default class Label extends Component<LabelAttrs> {\n  view(vnode: Mithril.Vnode<LabelAttrs, this>) {\n    const { className, type, ...attrs } = this.attrs;\n\n    return (\n      <span className={classList(['Label', `Label--${this.attrs.type}`, className])} {...attrs}>\n        {vnode.children}\n      </span>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","import app from 'flarum/admin/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Task from '../models/Task';\n\ninterface TaskOutputModalAttrs extends IInternalModalAttrs {\n  task: Task;\n}\n\nexport default class TaskOutputModal<CustomAttrs extends TaskOutputModalAttrs = TaskOutputModalAttrs> extends Modal<CustomAttrs> {\n  className() {\n    return 'Modal--large QuickModal';\n  }\n\n  title() {\n    return app.translator.trans(`flarum-extension-manager.admin.sections.queue.operations.${this.attrs.task.operation()}`);\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"TaskOutputModal-data\">\n          {this.attrs.task.status() === 'failure' && (\n            <div className=\"Form-group\">\n              <label>{app.translator.trans('flarum-extension-manager.admin.sections.queue.output_modal.guessed_cause')}</label>\n              <div className=\"FormControl TaskOutputModal-data-guessed-cause\">\n                {(this.attrs.task.guessedCause() &&\n                  app.translator.trans('flarum-extension-manager.admin.exceptions.guessed_cause.' + this.attrs.task.guessedCause())) ||\n                  app.translator.trans('flarum-extension-manager.admin.sections.queue.output_modal.cause_unknown')}\n              </div>\n            </div>\n          )}\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarum-extension-manager.admin.sections.queue.output_modal.command')}</label>\n            <div className=\"FormControl TaskOutputModal-data-command\">\n              <code>$ composer {this.attrs.task.command()}</code>\n            </div>\n          </div>\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarum-extension-manager.admin.sections.queue.output_modal.output')}</label>\n            <div className=\"FormControl TaskOutputModal-data-output\">\n              <code>\n                <pre>{this.attrs.task.output()}</pre>\n              </code>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport QueueState from '../states/QueueState';\n\ninterface PaginationAttrs extends ComponentAttrs {\n  list: QueueState;\n}\n\n/**\n * @todo make it abstract in core for reusability.\n */\nexport default class Pagination extends Component<PaginationAttrs> {\n  view() {\n    return (\n      <nav className=\"Pagination UserListPage-gridPagination\">\n        <Button\n          disabled={!this.attrs.list.hasPrev() || app.extensionManager.control.isLoading()}\n          title={app.translator.trans('core.admin.users.pagination.back_button')}\n          onclick={() => this.attrs.list.prev()}\n          icon=\"fas fa-chevron-left\"\n          className=\"Button Button--icon UserListPage-backBtn\"\n        />\n        <span className=\"UserListPage-pageNumber\">\n          {app.translator.trans('core.admin.users.pagination.page_counter', {\n            current: this.attrs.list.pageNumber() + 1,\n            total: this.attrs.list.getTotalPages(),\n          })}\n        </span>\n        <Button\n          disabled={!this.attrs.list.hasNext() || app.extensionManager.control.isLoading()}\n          title={app.translator.trans('core.admin.users.pagination.next_button')}\n          onclick={() => this.attrs.list.next()}\n          icon=\"fas fa-chevron-right\"\n          className=\"Button Button--icon UserListPage-nextBtn\"\n        />\n      </nav>\n    );\n  }\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport { Extension } from 'flarum/admin/AdminApplication';\nimport icon from 'flarum/common/helpers/icon';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport extractText from 'flarum/common/utils/extractText';\nimport Link from 'flarum/common/components/Link';\n\nimport Label from './Label';\nimport TaskOutputModal from './TaskOutputModal';\nimport humanDuration from '../utils/humanDuration';\nimport Task, { TaskOperations } from '../models/Task';\nimport Pagination from './Pagination';\n\ninterface QueueTableColumn extends ComponentAttrs {\n  label: string;\n  content: (task: Task) => Mithril.Children;\n}\n\nexport default class QueueSection extends Component<{}> {\n  oninit(vnode: Mithril.Vnode<{}, this>) {\n    super.oninit(vnode);\n\n    app.extensionManager.queue.load();\n  }\n\n  view() {\n    return (\n      <section id=\"ExtensionManager-queueSection\" className=\"ExtensionPage-permissions ExtensionManager-queueSection\">\n        <div className=\"ExtensionPage-permissions-header ExtensionManager-queueSection-header\">\n          <div className=\"container\">\n            <h2 className=\"ExtensionTitle\">{app.translator.trans('flarum-extension-manager.admin.sections.queue.title')}</h2>\n            <Button\n              className=\"Button Button--icon\"\n              icon=\"fas fa-sync-alt\"\n              onclick={() => app.extensionManager.queue.load()}\n              aria-label={app.translator.trans('flarum-extension-manager.admin.sections.queue.refresh')}\n              disabled={app.extensionManager.control.isLoading()}\n            />\n          </div>\n        </div>\n        <div className=\"container\">{this.queueTable()}</div>\n      </section>\n    );\n  }\n\n  columns() {\n    const items = new ItemList<QueueTableColumn>();\n\n    items.add(\n      'operation',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.operation')),\n        content: (task) => (\n          <div className=\"ExtensionManager-queueTable-operation\">\n            <span className=\"ExtensionManager-queueTable-operation-icon\">{this.operationIcon(task.operation())}</span>\n            <span className=\"ExtensionManager-queueTable-operation-name\">\n              {app.translator.trans(`flarum-extension-manager.admin.sections.queue.operations.${task.operation()}`)}\n            </span>\n          </div>\n        ),\n      },\n      80\n    );\n\n    items.add(\n      'package',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.package')),\n        content: (task) => {\n          const extension: Extension | null = app.data.extensions[task.package()?.replace(/(\\/flarum-|\\/flarum-ext-|\\/)/g, '-')];\n\n          return extension ? (\n            <Link className=\"ExtensionManager-queueTable-package\" href={app.route('extension', { id: extension.id })}>\n              <div className=\"ExtensionManager-queueTable-package-icon ExtensionIcon\" style={extension.icon}>\n                {!!extension.icon && icon(extension.icon.name)}\n              </div>\n              <div className=\"ExtensionManager-queueTable-package-details\">\n                <span className=\"ExtensionManager-queueTable-package-title\">{extension.extra['flarum-extension'].title}</span>\n                <span className=\"ExtensionManager-queueTable-package-name\">{task.package()}</span>\n              </div>\n            </Link>\n          ) : (\n            task.package()\n          );\n        },\n      },\n      75\n    );\n\n    items.add(\n      'status',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.status')),\n        content: (task) => (\n          <>\n            <Label\n              className=\"ExtensionManager-queueTable-status\"\n              type={{ running: 'neutral', failure: 'error', pending: 'warning', success: 'success' }[task.status()]}\n            >\n              {app.translator.trans(`flarum-extension-manager.admin.sections.queue.statuses.${task.status()}`)}\n            </Label>\n            {['pending', 'running'].includes(task.status()) && <LoadingIndicator size=\"small\" display=\"inline\" />}\n          </>\n        ),\n      },\n      70\n    );\n\n    items.add(\n      'elapsedTime',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.elapsed_time')),\n        content: (task) =>\n          !task.startedAt() || !task.finishedAt() ? (\n            app.translator.trans('flarum-extension-manager.admin.sections.queue.task_just_started')\n          ) : (\n            <Tooltip text={`${dayjs(task.startedAt()).format('LL LTS')}  ${dayjs(task.finishedAt()).format('LL LTS')}`}>\n              <span>{humanDuration(task.startedAt(), task.finishedAt())}</span>\n            </Tooltip>\n          ),\n      },\n      65\n    );\n\n    items.add(\n      'memoryUsed',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.peak_memory_used')),\n        content: (task) => <span>{task.peakMemoryUsed()}</span>,\n      },\n      60\n    );\n\n    items.add(\n      'details',\n      {\n        label: extractText(app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.details')),\n        content: (task) => (\n          <Button\n            className=\"Button Button--icon Table-controls-item\"\n            icon=\"fas fa-file-alt\"\n            aria-label={app.translator.trans('flarum-extension-manager.admin.sections.queue.columns.details')}\n            // @todo fix in core\n            // @ts-ignore\n            onclick={() => app.modal.show(TaskOutputModal, { task })}\n            disabled={['pending', 'running'].includes(task.status())}\n          />\n        ),\n        className: 'Table-controls',\n      },\n      55\n    );\n\n    return items;\n  }\n\n  queueTable() {\n    const tasks = app.extensionManager.queue.getItems();\n\n    if (!tasks) {\n      return <LoadingIndicator />;\n    }\n\n    if (tasks && !tasks.length) {\n      return <h3 className=\"ExtensionPage-subHeader\">{app.translator.trans('flarum-extension-manager.admin.sections.queue.none')}</h3>;\n    }\n\n    const columns = this.columns();\n\n    return (\n      <>\n        <table className=\"Table ExtensionManager-queueTable\">\n          <thead>\n            <tr>\n              {columns.toArray().map((item, index) => (\n                <th key={index}>{item.label}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map((task, index) => (\n              <tr key={index}>\n                {columns.toArray().map((item, index) => {\n                  const { label, content, ...attrs } = item;\n\n                  return (\n                    <td key={index} {...attrs}>\n                      {content(task)}\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <Pagination list={app.extensionManager.queue} />\n      </>\n    );\n  }\n\n  operationIcon(operation: TaskOperations): Mithril.Children {\n    return icon(\n      {\n        update_check: 'fas fa-sync-alt',\n        update_major: 'fas fa-play',\n        update_minor: 'fas fa-play',\n        update_global: 'fas fa-play',\n        extension_install: 'fas fa-download',\n        extension_remove: 'fas fa-times',\n        extension_update: 'fas fa-arrow-alt-circle-up',\n        why_not: 'fas fa-exclamation-circle',\n      }[operation]\n    );\n  }\n}\n","import duration from 'dayjs/plugin/duration';\n\nexport default function humanDuration(start: Date, end: Date) {\n  dayjs.extend(duration);\n\n  const durationTime = dayjs(end).diff(start);\n\n  return dayjs.duration(durationTime).humanize();\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport interface InstallerAttrs extends ComponentAttrs {}\n\nexport type InstallerLoadingTypes = 'extension-install' | null;\n\nexport default class Installer extends Component<InstallerAttrs> {\n  packageName!: Stream<string>;\n\n  oninit(vnode: Mithril.Vnode<InstallerAttrs, this>): void {\n    super.oninit(vnode);\n\n    this.packageName = Stream('');\n  }\n\n  view(): Mithril.Children {\n    return (\n      <div className=\"Form-group ExtensionManager-installer\">\n        <label htmlFor=\"install-extension\">{app.translator.trans('flarum-extension-manager.admin.extensions.install')}</label>\n        <p className=\"helpText\">\n          {app.translator.trans('flarum-extension-manager.admin.extensions.install_help', {\n            extiverse: <a href=\"https://extiverse.com\">extiverse.com</a>,\n            semantic_link: <a href=\"https://devhints.io/semver\" />,\n            code: <code />,\n          })}\n        </p>\n        <div className=\"FormControl-container\">\n          <input className=\"FormControl\" id=\"install-extension\" placeholder=\"vendor/package-name\" bidi={this.packageName} />\n          <Button\n            className=\"Button\"\n            icon=\"fas fa-download\"\n            onclick={this.onsubmit.bind(this)}\n            loading={app.extensionManager.control.isLoading('extension-install')}\n            disabled={app.extensionManager.control.hasOperationRunning()}\n          >\n            {app.translator.trans('flarum-extension-manager.admin.extensions.proceed')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  data(): any {\n    return {\n      package: this.packageName(),\n    };\n  }\n\n  onsubmit(): void {\n    app.extensionManager.control.requirePackage(this.data());\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","import app from 'flarum/admin/app';\n\nexport default function (e: any) {\n  app.extensionManager.control.setLoading(null);\n\n  const error = e.response.errors[0];\n\n  if (!['composer_command_failure', 'extension_already_installed', 'extension_not_installed'].includes(error.code)) {\n    throw e;\n  }\n\n  app.alerts.clear();\n\n  switch (error.code) {\n    case 'composer_command_failure':\n      if (error.guessed_cause) {\n        app.alerts.show({ type: 'error' }, app.translator.trans(`flarum-extension-manager.admin.exceptions.guessed_cause.${error.guessed_cause}`));\n        app.modal.close();\n      } else {\n        app.alerts.show({ type: 'error' }, app.translator.trans('flarum-extension-manager.admin.exceptions.composer_command_failure'));\n      }\n      break;\n\n    case 'extension_already_installed':\n      app.alerts.show({ type: 'error' }, app.translator.trans('flarum-extension-manager.admin.exceptions.extension_already_installed'));\n      app.modal.close();\n      break;\n\n    case 'extension_not_installed':\n      app.alerts.show({ type: 'error' }, app.translator.trans('flarum-extension-manager.admin.exceptions.extension_not_installed'));\n      app.modal.close();\n  }\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport errorHandler from '../utils/errorHandler';\n\ntype WhyNotResponse = {\n  data: {\n    reason: string;\n  };\n};\n\nexport interface WhyNotModalAttrs extends IInternalModalAttrs {\n  package: string;\n}\n\nexport default class WhyNotModal<CustomAttrs extends WhyNotModalAttrs = WhyNotModalAttrs> extends Modal<CustomAttrs> {\n  loading: boolean = true;\n  whyNot: string | null = null;\n\n  className() {\n    return 'Modal--large WhyNotModal';\n  }\n\n  title() {\n    return app.translator.trans('flarum-extension-manager.admin.why_not_modal.title');\n  }\n\n  oncreate(vnode: Mithril.VnodeDOM<CustomAttrs, this>) {\n    super.oncreate(vnode);\n\n    this.requestWhyNot();\n  }\n\n  content() {\n    return <div className=\"Modal-body\">{this.loading ? <LoadingIndicator /> : <pre className=\"WhyNotModal-contents\">{this.whyNot}</pre>}</div>;\n  }\n\n  requestWhyNot(): void {\n    app\n      .request<WhyNotResponse>({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/why-not`,\n        body: {\n          data: {\n            package: this.attrs.package,\n          },\n        },\n      })\n      .then((response) => {\n        this.loading = false;\n        this.whyNot = response.data.reason;\n        m.redraw();\n      })\n      .catch(errorHandler);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport classList from 'flarum/common/utils/classList';\nimport icon from 'flarum/common/helpers/icon';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Button from 'flarum/common/components/Button';\nimport { Extension } from 'flarum/admin/AdminApplication';\n\nimport { UpdatedPackage } from '../states/ControlSectionState';\nimport WhyNotModal from './WhyNotModal';\nimport Label from './Label';\nimport Dropdown from 'flarum/common/components/Dropdown';\n\nexport interface ExtensionItemAttrs extends ComponentAttrs {\n  extension: Extension;\n  updates: UpdatedPackage;\n  onClickUpdate:\n    | CallableFunction\n    | {\n        soft: CallableFunction;\n        hard: CallableFunction;\n      };\n  whyNotWarning?: boolean;\n  isCore?: boolean;\n  updatable?: boolean;\n  isDanger?: boolean;\n}\n\nexport default class ExtensionItem<Attrs extends ExtensionItemAttrs = ExtensionItemAttrs> extends Component<Attrs> {\n  view(vnode: Mithril.Vnode<Attrs, this>): Mithril.Children {\n    const { extension, updates, onClickUpdate, whyNotWarning, isCore, isDanger } = this.attrs;\n    const latestVersion = updates['latest-minor'] ?? (updates['latest-major'] && !isCore ? updates['latest-major'] : null);\n\n    return (\n      <div\n        className={classList({\n          'ExtensionManager-extension': true,\n          'ExtensionManager-extension--core': isCore,\n          'ExtensionManager-extension--danger': isDanger,\n        })}\n      >\n        <div className=\"ExtensionManager-extension-icon ExtensionIcon\" style={extension.icon}>\n          {extension.icon ? icon(extension.icon.name) : ''}\n        </div>\n        <div className=\"ExtensionManager-extension-info\">\n          <div className=\"ExtensionManager-extension-name\">{extension.extra['flarum-extension'].title}</div>\n          <div className=\"ExtensionManager-extension-version\">\n            <span className=\"ExtensionManager-extension-version-current\">{this.version(updates['version'])}</span>\n            {latestVersion ? (\n              <Label className=\"ExtensionManager-extension-version-latest\" type={updates['latest-minor'] ? 'success' : 'warning'}>\n                {this.version(latestVersion)}\n              </Label>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"ExtensionManager-extension-controls\">\n          {onClickUpdate && typeof onClickUpdate === 'function' ? (\n            <Tooltip text={app.translator.trans('flarum-extension-manager.admin.extensions.update')}>\n              <Button\n                icon=\"fas fa-arrow-alt-circle-up\"\n                className=\"Button Button--icon Button--flat\"\n                onclick={onClickUpdate}\n                aria-label={app.translator.trans('flarum-extension-manager.admin.extensions.update')}\n              />\n            </Tooltip>\n          ) : onClickUpdate ? (\n            <Dropdown\n              buttonClassName=\"Button Button--icon Button--flat\"\n              icon=\"fas fa-arrow-alt-circle-up\"\n              label={app.translator.trans('flarum-extension-manager.admin.extensions.update')}\n            >\n              <Button icon=\"fas fa-arrow-alt-circle-up\" className=\"Button\" onclick={onClickUpdate.soft}>\n                {app.translator.trans('flarum-extension-manager.admin.extensions.update_soft_label')}\n              </Button>\n              <Button icon=\"fas fa-arrow-alt-circle-up\" className=\"Button\" onclick={onClickUpdate.hard} disabled={!updates['direct-dependency']}>\n                {app.translator.trans('flarum-extension-manager.admin.extensions.update_hard_label')}\n              </Button>\n            </Dropdown>\n          ) : null}\n          {whyNotWarning ? (\n            <Tooltip text={app.translator.trans('flarum-extension-manager.admin.extensions.check_why_it_failed_updating')}>\n              <Button\n                icon=\"fas fa-exclamation-circle\"\n                className=\"Button Button--icon Button--flat Button--danger\"\n                onclick={() => app.modal.show(WhyNotModal, { package: extension.name })}\n                aria-label={app.translator.trans('flarum-extension-manager.admin.extensions.check_why_it_failed_updating')}\n              />\n            </Tooltip>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  version(v: string): string {\n    return v.charAt(0) === 'v' ? v.substring(1) : v;\n  }\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Alert from 'flarum/common/components/Alert';\n\nimport { UpdatedPackage, UpdateState } from '../states/ControlSectionState';\nimport WhyNotModal from './WhyNotModal';\nimport ExtensionItem from './ExtensionItem';\nimport classList from 'flarum/common/utils/classList';\n\nexport interface MajorUpdaterAttrs extends ComponentAttrs {\n  coreUpdate: UpdatedPackage;\n  updateState: UpdateState;\n}\n\nexport type MajorUpdaterLoadingTypes = 'major-update' | 'major-update-dry-run';\n\nexport default class MajorUpdater<T extends MajorUpdaterAttrs = MajorUpdaterAttrs> extends Component<T> {\n  updateState!: UpdateState;\n\n  oninit(vnode: Mithril.Vnode<T, this>) {\n    super.oninit(vnode);\n\n    this.updateState = this.attrs.updateState;\n  }\n\n  view(): Mithril.Children {\n    // @todo move Form-group--danger class to core for reuse\n    return (\n      <div\n        className={classList('Form-group Form-group--danger ExtensionManager-majorUpdate', {\n          'ExtensionManager-majorUpdate--failed': this.updateState.status === 'failure',\n          'ExtensionManager-majorUpdate--incompatibleExtensions': this.updateState.incompatibleExtensions.length,\n        })}\n      >\n        <img alt=\"flarum logo\" src={app.forum.attribute('baseUrl') + '/assets/extensions/flarum-extension-manager/flarum.svg'} />\n        <label>\n          {app.translator.trans('flarum-extension-manager.admin.major_updater.title', { version: this.attrs.coreUpdate['latest-major'] })}\n        </label>\n        <p className=\"helpText\">{app.translator.trans('flarum-extension-manager.admin.major_updater.description')}</p>\n        <div className=\"ExtensionManager-updaterControls\">\n          <Tooltip text={app.translator.trans('flarum-extension-manager.admin.major_updater.dry_run_help')}>\n            <Button\n              className=\"Button\"\n              icon=\"fas fa-vial\"\n              onclick={this.update.bind(this, true)}\n              disabled={app.extensionManager.control.hasOperationRunning()}\n            >\n              {app.translator.trans('flarum-extension-manager.admin.major_updater.dry_run')}\n            </Button>\n          </Tooltip>\n          <Button\n            className=\"Button Button--danger\"\n            icon=\"fas fa-play\"\n            onclick={this.update.bind(this, false)}\n            disabled={app.extensionManager.control.hasOperationRunning()}\n          >\n            {app.translator.trans('flarum-extension-manager.admin.major_updater.update')}\n          </Button>\n        </div>\n        {this.updateState.incompatibleExtensions.length ? (\n          <div className=\"ExtensionManager-majorUpdate-incompatibleExtensions ExtensionManager-extensions-grid\">\n            {this.updateState.incompatibleExtensions.map((extension: string) => (\n              <ExtensionItem\n                extension={app.data.extensions[extension.replace('flarum-', '').replace('flarum-ext-', '').replace('/', '-')]}\n                updates={{}}\n                onClickUpdate={null}\n                isDanger={true}\n              />\n            ))}\n          </div>\n        ) : null}\n        {this.updateState.status === 'failure' ? (\n          <Alert\n            type=\"error\"\n            className=\"ExtensionManager-majorUpdate-failure\"\n            dismissible={false}\n            controls={[\n              <Button\n                className=\"Button Button--text ExtensionManager-majorUpdate-failure-details\"\n                icon=\"fas fa-question-circle\"\n                onclick={() => app.modal.show(WhyNotModal, { package: 'flarum/core' })}\n              >\n                {app.translator.trans('flarum-extension-manager.admin.major_updater.failure.why')}\n              </Button>,\n            ]}\n          >\n            <p className=\"ExtensionManager-majorUpdate-failure-desc\">\n              {app.translator.trans('flarum-extension-manager.admin.major_updater.failure.desc')}\n            </p>\n          </Alert>\n        ) : null}\n      </div>\n    );\n  }\n\n  update(dryRun: boolean) {\n    app.extensionManager.control.majorUpdate({ dryRun });\n  }\n}\n","import app from 'flarum/admin/app';\nimport Component, { ComponentAttrs } from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport MajorUpdater from './MajorUpdater';\nimport ExtensionItem from './ExtensionItem';\nimport { Extension } from 'flarum/admin/AdminApplication';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport interface IUpdaterAttrs extends ComponentAttrs {}\n\nexport type UpdaterLoadingTypes = 'check' | 'minor-update' | 'global-update' | 'extension-update' | null;\n\nexport default class Updater extends Component<IUpdaterAttrs> {\n  view() {\n    const core = app.extensionManager.control.coreUpdate;\n\n    return [\n      <div className=\"Form-group\">\n        <label>{app.translator.trans('flarum-extension-manager.admin.updater.updater_title')}</label>\n        <p className=\"helpText\">{app.translator.trans('flarum-extension-manager.admin.updater.updater_help')}</p>\n        {this.lastUpdateCheckView()}\n        <div className=\"ExtensionManager-updaterControls\">{this.controlItems().toArray()}</div>\n        {this.availableUpdatesView()}\n      </div>,\n      core && core.package['latest-major'] ? (\n        <MajorUpdater coreUpdate={core.package} updateState={app.extensionManager.control.lastUpdateRun.major} />\n      ) : null,\n    ];\n  }\n\n  lastUpdateCheckView() {\n    return (\n      (app.extensionManager.control.lastUpdateCheck?.checkedAt && (\n        <p className=\"ExtensionManager-lastUpdatedAt\">\n          <span className=\"ExtensionManager-lastUpdatedAt-label\">\n            {app.translator.trans('flarum-extension-manager.admin.updater.last_update_checked_at')}\n          </span>\n          <span className=\"ExtensionManager-lastUpdatedAt-value\">{humanTime(app.extensionManager.control.lastUpdateCheck.checkedAt)}</span>\n        </p>\n      )) ||\n      null\n    );\n  }\n\n  availableUpdatesView() {\n    const state = app.extensionManager.control;\n\n    if (app.extensionManager.control.isLoading('check') || app.extensionManager.control.isLoading('global-update')) {\n      return (\n        <div className=\"ExtensionManager-extensions\">\n          <LoadingIndicator />\n        </div>\n      );\n    }\n\n    const hasMinorCoreUpdate = state.coreUpdate && state.coreUpdate.package['latest-minor'];\n\n    if (!(state.extensionUpdates.length || hasMinorCoreUpdate)) {\n      return (\n        <div className=\"ExtensionManager-extensions\">\n          <span className=\"helpText\">{app.translator.trans('flarum-extension-manager.admin.updater.up_to_date')}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"ExtensionManager-extensions\">\n        <div className=\"ExtensionManager-extensions-grid\">\n          {hasMinorCoreUpdate ? (\n            <ExtensionItem\n              extension={state.coreUpdate!.extension}\n              updates={state.coreUpdate!.package}\n              isCore={true}\n              onClickUpdate={() => state.updateCoreMinor()}\n              whyNotWarning={state.lastUpdateRun.limitedPackages().includes('flarum/core')}\n            />\n          ) : null}\n          {state.extensionUpdates.map((extension: Extension) => (\n            <ExtensionItem\n              extension={extension}\n              updates={state.packageUpdates[extension.id]}\n              onClickUpdate={{\n                soft: () => state.updateExtension(extension, 'soft'),\n                hard: () => state.updateExtension(extension, 'hard'),\n              }}\n              whyNotWarning={state.lastUpdateRun.limitedPackages().includes(extension.name)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  controlItems() {\n    const items = new ItemList();\n\n    items.add(\n      'updateCheck',\n      <Button\n        className=\"Button\"\n        icon=\"fas fa-sync-alt\"\n        onclick={() => app.extensionManager.control.checkForUpdates()}\n        loading={app.extensionManager.control.isLoading('check')}\n        disabled={app.extensionManager.control.hasOperationRunning()}\n      >\n        {app.translator.trans('flarum-extension-manager.admin.updater.check_for_updates')}\n      </Button>,\n      100\n    );\n\n    items.add(\n      'globalUpdate',\n      <Button\n        className=\"Button\"\n        icon=\"fas fa-play\"\n        onclick={() => app.extensionManager.control.updateGlobally()}\n        loading={app.extensionManager.control.isLoading('global-update')}\n        disabled={app.extensionManager.control.hasOperationRunning()}\n      >\n        {app.translator.trans('flarum-extension-manager.admin.updater.run_global_update')}\n      </Button>\n    );\n\n    return items;\n  }\n}\n","import app from 'flarum/admin/app';\nimport Component from 'flarum/common/Component';\nimport Alert from 'flarum/common/components/Alert';\nimport { ComponentAttrs } from 'flarum/common/Component';\n\nimport Installer from './Installer';\nimport Updater from './Updater';\nimport Mithril from 'mithril';\n\nexport default class ControlSection extends Component<ComponentAttrs> {\n  oninit(vnode: Mithril.Vnode<ComponentAttrs, this>) {\n    super.oninit(vnode);\n  }\n\n  view() {\n    return (\n      <div className=\"ExtensionPage-permissions ExtensionManager-controlSection\">\n        <div className=\"ExtensionPage-permissions-header\">\n          <div className=\"container\">\n            <h2 className=\"ExtensionTitle\">{app.translator.trans('flarum-extension-manager.admin.sections.control.title')}</h2>\n          </div>\n        </div>\n        <div className=\"container\">\n          {app.data['flarum-extension-manager.writable_dirs'] ? (\n            <>\n              <Installer />\n              <Updater />\n            </>\n          ) : (\n            <div className=\"Form-group\">\n              <Alert type=\"warning\" dismissible={false}>\n                {app.translator.trans('flarum-extension-manager.admin.file_permissions')}\n              </Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/AdminPage'];","import app from 'flarum/admin/app';\nimport type Mithril from 'mithril';\nimport Component, { type ComponentAttrs } from 'flarum/common/Component';\nimport { CommonSettingsItemOptions, type SettingsComponentOptions } from '@flarum/core/src/admin/components/AdminPage';\nimport AdminPage from 'flarum/admin/components/AdminPage';\nimport type ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\n\nexport interface IConfigureJson extends ComponentAttrs {\n  buildSettingComponent: (entry: ((this: this) => Mithril.Children) | SettingsComponentOptions) => Mithril.Children;\n}\n\nexport default abstract class ConfigureJson<CustomAttrs extends IConfigureJson = IConfigureJson> extends Component<CustomAttrs> {\n  protected settings: Record<string, Stream<any>> = {};\n  protected initialSettings: Record<string, any> | null = null;\n  protected loading: boolean = false;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.submit(true);\n  }\n\n  protected abstract type: string;\n  abstract title(): Mithril.Children;\n  abstract content(): Mithril.Children;\n\n  className(): string {\n    return '';\n  }\n\n  view(): Mithril.Children {\n    return (\n      <div className={classList('Form', this.className())}>\n        <label>{this.title()}</label>\n        {this.content()}\n        <div className=\"Form-group Form--controls\">{this.submitButton()}</div>\n      </div>\n    );\n  }\n\n  submitButton(): Mithril.Children[] {\n    return [\n      <Button className=\"Button Button--primary\" loading={this.loading} onclick={() => this.submit(false)} disabled={!this.isDirty()}>\n        {app.translator.trans('core.admin.settings.submit_button')}\n      </Button>,\n    ];\n  }\n\n  customSettingComponents(): ItemList<(attributes: CommonSettingsItemOptions) => Mithril.Children> {\n    return AdminPage.prototype.customSettingComponents();\n  }\n\n  setting(key: string) {\n    return this.settings[key] ?? (this.settings[key] = Stream());\n  }\n\n  submit(readOnly: boolean) {\n    this.loading = true;\n\n    const configuration: any = {};\n\n    Object.keys(this.settings).forEach((key) => {\n      configuration[key] = this.settings[key]();\n    });\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/extension-manager/composer',\n        body: {\n          type: this.type,\n          data: readOnly ? null : configuration,\n        },\n      })\n      .then(({ data }: any) => {\n        Object.keys(data).forEach((key) => {\n          this.settings[key] = Stream(data[key]);\n        });\n\n        this.initialSettings = Array.isArray(data) ? {} : data;\n      })\n      .finally(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  isDirty() {\n    return JSON.stringify(this.initialSettings) !== JSON.stringify(this.settings);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","import Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Select from 'flarum/common/components/Select';\nimport Stream from 'flarum/common/utils/Stream';\nimport Button from 'flarum/common/components/Button';\nimport { type Repository } from './ConfigureComposer';\n\nexport interface IRepositoryModalAttrs extends IInternalModalAttrs {\n  onsubmit: (repository: Repository, key: string) => void;\n  name?: string;\n  repository?: Repository;\n}\n\nexport default class RepositoryModal<CustomAttrs extends IRepositoryModalAttrs = IRepositoryModalAttrs> extends Modal<CustomAttrs> {\n  protected name!: Stream<string>;\n  protected repository!: Stream<Repository>;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.name = Stream(this.attrs.name || '');\n    this.repository = Stream(this.attrs.repository || { type: 'composer', url: '' });\n  }\n\n  className(): string {\n    return 'RepositoryModal Modal--small';\n  }\n\n  title(): Mithril.Children {\n    const context = this.attrs.repository ? 'edit' : 'add';\n    return app.translator.trans(`flarum-extension-manager.admin.composer.${context}_repository_label`);\n  }\n\n  content(): Mithril.Children {\n    const types = {\n      composer: app.translator.trans('flarum-extension-manager.admin.composer.repositories.types.composer'),\n      vcs: app.translator.trans('flarum-extension-manager.admin.composer.repositories.types.vcs'),\n      path: app.translator.trans('flarum-extension-manager.admin.composer.repositories.types.path'),\n    };\n\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.composer.repositories.add_modal.name_label')}</label>\n          <input className=\"FormControl\" bidi={this.name} />\n        </div>\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.composer.repositories.add_modal.type_label')}</label>\n          <Select\n            options={types}\n            value={this.repository().type}\n            onchange={(value: 'composer' | 'vcs' | 'path') => this.repository({ ...this.repository(), type: value })}\n          />\n        </div>\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.composer.repositories.add_modal.url')}</label>\n          <input\n            className=\"FormControl\"\n            onchange={(e: Event) => this.repository({ ...this.repository(), url: (e.target as HTMLInputElement).value })}\n            value={this.repository().url}\n          />\n        </div>\n        <div className=\"Form-group\">\n          <Button className=\"Button Button--primary\" onclick={this.submit.bind(this)}>\n            {app.translator.trans('flarum-extension-manager.admin.composer.repositories.add_modal.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  submit() {\n    this.attrs.onsubmit(this.repository(), this.name());\n    this.hide();\n  }\n}\n","import app from 'flarum/admin/app';\nimport type Mithril from 'mithril';\nimport ConfigureJson, { type IConfigureJson } from './ConfigureJson';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport RepositoryModal from './RepositoryModal';\n\nexport type Repository = {\n  type: 'composer' | 'vcs' | 'path';\n  url: string;\n};\n\nexport default class ConfigureComposer extends ConfigureJson<IConfigureJson> {\n  protected type = 'composer';\n\n  title(): Mithril.Children {\n    return app.translator.trans('flarum-extension-manager.admin.composer.title');\n  }\n\n  className(): string {\n    return 'ConfigureComposer';\n  }\n\n  content(): Mithril.Children {\n    return (\n      <div className=\"ExtensionManager-SettingsGroups-content\">\n        {this.attrs.buildSettingComponent.call(this, {\n          setting: 'minimum-stability',\n          label: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.label'),\n          help: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.help'),\n          type: 'select',\n          options: {\n            stable: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.options.stable'),\n            RC: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.options.rc'),\n            beta: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.options.beta'),\n            alpha: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.options.alpha'),\n            dev: app.translator.trans('flarum-extension-manager.admin.composer.minimum_stability.options.dev'),\n          },\n        })}\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.composer.repositories.label')}</label>\n          <div className=\"helpText\">{app.translator.trans('flarum-extension-manager.admin.composer.repositories.help')}</div>\n          <div className=\"ConfigureComposer-repositories\">\n            {Object.keys(this.setting('repositories')() || {}).map((name) => {\n              const repository = this.setting('repositories')()[name] as Repository;\n\n              return (\n                <div className=\"ButtonGroup ButtonGroup--full\">\n                  <Button\n                    className=\"Button\"\n                    icon={\n                      {\n                        composer: 'fas fa-cubes',\n                        vcs: 'fas fa-code-branch',\n                        path: 'fas fa-folder',\n                      }[repository.type]\n                    }\n                    onclick={() =>\n                      app.modal.show(RepositoryModal, {\n                        name,\n                        repository,\n                        onsubmit: (repository: Repository, newName: string) => {\n                          const repositories = this.setting('repositories')();\n                          delete repositories[name];\n\n                          this.setting('repositories')(repositories);\n\n                          this.onchange(repository, newName);\n                        },\n                      })\n                    }\n                  >\n                    {name} ({repository.type})\n                  </Button>\n                  <Button\n                    className=\"Button Button--icon\"\n                    icon=\"fas fa-trash\"\n                    aria-label={app.translator.trans('flarum-extension-manager.admin.composer.delete_repository_label')}\n                    onclick={() => {\n                      if (confirm(extractText(app.translator.trans('flarum-extension-manager.admin.composer.delete_repository_confirmation')))) {\n                        const repositories = { ...this.setting('repositories')() };\n                        delete repositories[name];\n\n                        this.setting('repositories')(repositories);\n                      }\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  submitButton(): Mithril.Children[] {\n    const items = super.submitButton();\n\n    items.push(\n      <Button className=\"Button\" onclick={() => app.modal.show(RepositoryModal, { onsubmit: this.onchange.bind(this) })}>\n        {app.translator.trans('flarum-extension-manager.admin.composer.add_repository_label')}\n      </Button>\n    );\n\n    return items;\n  }\n\n  onchange(repository: Repository, name: string) {\n    this.setting('repositories')({\n      ...this.setting('repositories')(),\n      [name]: repository,\n    });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","import Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport Select from 'flarum/common/components/Select';\nimport Stream from 'flarum/common/utils/Stream';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\n\nexport interface IAuthMethodModalAttrs extends IInternalModalAttrs {\n  onsubmit: (type: string, host: string, token: string) => void;\n  type?: string;\n  host?: string;\n  token?: string;\n}\n\nexport default class AuthMethodModal<CustomAttrs extends IAuthMethodModalAttrs = IAuthMethodModalAttrs> extends Modal<CustomAttrs> {\n  protected type!: Stream<string>;\n  protected host!: Stream<string>;\n  protected token!: Stream<string>;\n\n  oninit(vnode: Mithril.Vnode<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.type = Stream(this.attrs.type || 'bearer');\n    this.host = Stream(this.attrs.host || '');\n    this.token = Stream(this.attrs.token || '');\n  }\n\n  className(): string {\n    return 'AuthMethodModal Modal--small';\n  }\n\n  title(): Mithril.Children {\n    const context = this.attrs.host ? 'edit' : 'add';\n    return app.translator.trans(`flarum-extension-manager.admin.auth_config.${context}_label`);\n  }\n\n  content(): Mithril.Children {\n    const types = {\n      'github-oauth': app.translator.trans('flarum-extension-manager.admin.auth_config.types.github-oauth'),\n      'gitlab-oauth': app.translator.trans('flarum-extension-manager.admin.auth_config.types.gitlab-oauth'),\n      'gitlab-token': app.translator.trans('flarum-extension-manager.admin.auth_config.types.gitlab-token'),\n      bearer: app.translator.trans('flarum-extension-manager.admin.auth_config.types.bearer'),\n    };\n\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.type_label')}</label>\n          <Select options={types} value={this.type()} onchange={this.type} />\n        </div>\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.host_label')}</label>\n          <input\n            className=\"FormControl\"\n            bidi={this.host}\n            placeholder={app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.host_placeholder')}\n          />\n        </div>\n        <div className=\"Form-group\">\n          <label>{app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.token_label')}</label>\n          <textarea\n            className=\"FormControl\"\n            oninput={(e: InputEvent) => this.token((e.target as HTMLTextAreaElement).value)}\n            rows=\"6\"\n            placeholder={\n              this.token().startsWith('unchanged:')\n                ? extractText(app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.unchanged_token_placeholder'))\n                : ''\n            }\n          >\n            {this.token().startsWith('unchanged:') ? '' : this.token()}\n          </textarea>\n        </div>\n        <div className=\"Form-group\">\n          <Button className=\"Button Button--primary\" onclick={this.submit.bind(this)}>\n            {app.translator.trans('flarum-extension-manager.admin.auth_config.add_modal.submit_button')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  submit() {\n    this.attrs.onsubmit(this.type(), this.host(), this.token());\n    this.hide();\n  }\n}\n","import app from 'flarum/admin/app';\nimport type Mithril from 'mithril';\nimport ConfigureJson, { IConfigureJson } from './ConfigureJson';\nimport Button from 'flarum/common/components/Button';\nimport AuthMethodModal from './AuthMethodModal';\nimport extractText from 'flarum/common/utils/extractText';\n\nexport default class ConfigureAuth extends ConfigureJson<IConfigureJson> {\n  protected type = 'auth';\n\n  title(): Mithril.Children {\n    return app.translator.trans('flarum-extension-manager.admin.auth_config.title');\n  }\n\n  className(): string {\n    return 'ConfigureAuth';\n  }\n\n  content(): Mithril.Children {\n    const authSettings = Object.keys(this.settings);\n    const hasAuthSettings =\n      authSettings.length &&\n      authSettings.every((type) => {\n        const data = this.settings[type]();\n\n        return Array.isArray(data) ? data.length : Object.keys(data).length;\n      });\n\n    return (\n      <div className=\"ExtensionManager-SettingsGroups-content\">\n        {hasAuthSettings ? (\n          authSettings.map((type) => {\n            const hosts = this.settings[type]();\n\n            return (\n              <div className=\"Form-group\">\n                <label>{app.translator.trans(`flarum-extension-manager.admin.auth_config.types.${type}`)}</label>\n                <div className=\"ConfigureAuth-hosts\">\n                  {Object.keys(hosts).map((host) => {\n                    const data = hosts[host] as string | Record<string, string>;\n\n                    return (\n                      <div className=\"ButtonGroup ButtonGroup--full\">\n                        <Button\n                          className=\"Button\"\n                          icon=\"fas fa-key\"\n                          onclick={() =>\n                            app.modal.show(AuthMethodModal, {\n                              type,\n                              host,\n                              token: data,\n                              onsubmit: this.onchange.bind(this, host),\n                            })\n                          }\n                        >\n                          {host}\n                        </Button>\n                        <Button\n                          className=\"Button Button--icon\"\n                          icon=\"fas fa-trash\"\n                          aria-label={app.translator.trans('flarum-extension-manager.admin.auth_config.delete_label')}\n                          onclick={() => {\n                            if (confirm(extractText(app.translator.trans('flarum-extension-manager.admin.auth_config.delete_confirmation')))) {\n                              const newType = { ...this.setting(type)() };\n                              delete newType[host];\n\n                              if (Object.keys(newType).length) {\n                                this.setting(type)(newType);\n                              } else {\n                                delete this.settings[type];\n                              }\n                            }\n                          }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <span className=\"helpText\">{app.translator.trans('flarum-extension-manager.admin.auth_config.no_auth_methods_configured')}</span>\n        )}\n      </div>\n    );\n  }\n\n  submitButton(): Mithril.Children[] {\n    const items = super.submitButton();\n\n    items.push(\n      <Button\n        className=\"Button\"\n        loading={this.loading}\n        onclick={() =>\n          app.modal.show(AuthMethodModal, {\n            onsubmit: this.onchange.bind(this, null),\n          })\n        }\n      >\n        {app.translator.trans('flarum-extension-manager.admin.auth_config.add_label')}\n      </Button>\n    );\n\n    return items;\n  }\n\n  onchange(oldHost: string | null, type: string, host: string, token: string) {\n    const data = { ...this.setting(type)() };\n\n    if (oldHost) {\n      delete data[oldHost];\n    }\n\n    data[host] = token;\n\n    this.setting(type)(data);\n  }\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/admin/app';\nimport ExtensionPage, { ExtensionPageAttrs } from 'flarum/admin/components/ExtensionPage';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nimport QueueSection from './QueueSection';\nimport ControlSection from './ControlSection';\nimport ConfigureComposer from './ConfigureComposer';\nimport Alert from 'flarum/common/components/Alert';\nimport listItems from 'flarum/common/helpers/listItems';\nimport ConfigureAuth from './ConfigureAuth';\n\nexport default class SettingsPage extends ExtensionPage {\n  content() {\n    const settings = app.extensionData.getSettings(this.extension.id);\n\n    const warnings = [app.translator.trans('flarum-extension-manager.admin.settings.access_warning')];\n\n    if (app.data.debugEnabled) warnings.push(app.translator.trans('flarum-extension-manager.admin.settings.debug_mode_warning'));\n\n    return (\n      <div className=\"ExtensionPage-settings\">\n        <div className=\"container\">\n          <div className=\"Form-group\">\n            <Alert className=\"ExtensionManager-primaryWarning\" type=\"warning\" dismissible={false}>\n              <ul>{listItems(warnings)}</ul>\n            </Alert>\n          </div>\n          {settings ? (\n            <div className=\"ExtensionManager-SettingsGroups\">\n              <div className=\"Form\">\n                <label>{app.translator.trans('flarum-extension-manager.admin.settings.title')}</label>\n                <div className=\"SettingsGroups-content\">{settings.map(this.buildSettingComponent.bind(this))}</div>\n                <div className=\"Form-group Form--controls\">{this.submitButton()}</div>\n              </div>\n              <ConfigureComposer buildSettingComponent={this.buildSettingComponent} />\n              <ConfigureAuth buildSettingComponent={this.buildSettingComponent} />\n            </div>\n          ) : (\n            <h3 className=\"ExtensionPage-subHeader\">{app.translator.trans('core.admin.extension.no_settings')}</h3>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  sections(vnode: Mithril.VnodeDOM<ExtensionPageAttrs, this>): ItemList<unknown> {\n    const items = super.sections(vnode);\n\n    items.setPriority('content', 10);\n\n    items.add('control', <ControlSection />, 8);\n\n    if (app.data.settings['flarum-extension-manager.queue_jobs'] !== '0' && app.data.settings['flarum-extension-manager.queue_jobs']) {\n      items.add('queue', <QueueSection />, 5);\n    }\n\n    items.remove('permissions');\n\n    return items;\n  }\n\n  onsaved() {\n    super.onsaved();\n    m.redraw();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nexport default function prettyBytes(number, options) {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\tnumber /= (options.binary ? 1024 : 1000) ** exponent;\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n}\n","import Model from 'flarum/common/Model';\nimport prettyBytes from 'pretty-bytes';\n\nexport type TaskOperations =\n  | 'extension_install'\n  | 'extension_remove'\n  | 'extension_update'\n  | 'update_global'\n  | 'update_minor'\n  | 'update_major'\n  | 'update_check'\n  | 'why_not';\n\nexport default class Task extends Model {\n  status() {\n    return Model.attribute<'pending' | 'running' | 'failure' | 'success'>('status').call(this);\n  }\n\n  operation() {\n    return Model.attribute<TaskOperations>('operation').call(this);\n  }\n\n  command() {\n    return Model.attribute<string>('command').call(this);\n  }\n\n  package() {\n    return Model.attribute<string>('package').call(this);\n  }\n\n  output() {\n    return Model.attribute<string>('output').call(this);\n  }\n\n  guessedCause() {\n    return Model.attribute<string>('guessedCause').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  startedAt() {\n    return Model.attribute<Date, string>('startedAt', Model.transformDate).call(this);\n  }\n\n  finishedAt() {\n    return Model.attribute<Date, string>('finishedAt', Model.transformDate).call(this);\n  }\n\n  peakMemoryUsed() {\n    return prettyBytes(Model.attribute<number>('peakMemoryUsed').call(this) * 1024);\n  }\n}\n","import app from 'flarum/admin/app';\n\n// @ts-ignore\nwindow.jumpToQueue = jumpToQueue;\n\nexport default function jumpToQueue(): void {\n  app.modal.close();\n\n  m.route.set(app.route('extension', { id: 'flarum-extension-manager' }));\n\n  app.extensionManager.queue.load({}, true);\n\n  setTimeout(() => {\n    document.getElementById('ExtensionManager-queueSection')?.scrollIntoView({ block: 'nearest' });\n  }, 200);\n}\n","import app from 'flarum/admin/app';\nimport Task from '../models/Task';\nimport { ApiQueryParamsPlural } from 'flarum/common/Store';\n\nexport default class QueueState {\n  private polling: any = null;\n  private tasks: Task[] | null = null;\n  private limit = 20;\n  private offset = 0;\n  private total = 0;\n\n  load(params?: ApiQueryParamsPlural, actionTaken = false): Promise<Task[]> {\n    this.tasks = null;\n    params = {\n      page: {\n        limit: this.limit,\n        offset: this.offset,\n        ...params?.page,\n      },\n      ...params,\n    };\n\n    return app.store.find<Task[]>('extension-manager-tasks', params || {}).then((data) => {\n      this.tasks = data;\n      this.total = data.payload.meta?.total;\n\n      m.redraw();\n\n      // Check if there is a pending or running task\n      const pendingTask = data?.find((task) => task.status() === 'pending' || task.status() === 'running');\n\n      if (pendingTask) {\n        this.pollQueue(actionTaken);\n      } else if (actionTaken) {\n        app.extensionManager.control.setLoading(null);\n\n        // Refresh the page\n        window.location.reload();\n      } else if (app.extensionManager.control.isLoading()) {\n        app.extensionManager.control.setLoading(null);\n      }\n\n      return data;\n    });\n  }\n\n  getItems() {\n    return this.tasks;\n  }\n\n  getTotalPages(): number {\n    return Math.ceil(this.total / this.limit);\n  }\n\n  pageNumber(): number {\n    return Math.ceil(this.offset / this.limit);\n  }\n\n  hasPrev(): boolean {\n    return this.pageNumber() !== 0;\n  }\n\n  hasNext(): boolean {\n    return this.offset + this.limit < this.total;\n  }\n\n  prev(): void {\n    if (this.hasPrev()) {\n      this.offset -= this.limit;\n      this.load();\n    }\n  }\n\n  next(): void {\n    if (this.hasNext()) {\n      this.offset += this.limit;\n      this.load();\n    }\n  }\n\n  pollQueue(actionTaken = false): void {\n    if (this.polling) {\n      clearTimeout(this.polling);\n    }\n\n    this.polling = setTimeout(() => {\n      this.load({}, actionTaken);\n    }, 6000);\n  }\n\n  hasPending() {\n    return !!this.tasks?.find((task) => task.status() === 'pending' || task.status() === 'running');\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import app from 'flarum/admin/app';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport { UpdaterLoadingTypes } from '../components/Updater';\nimport { InstallerLoadingTypes } from '../components/Installer';\nimport { MajorUpdaterLoadingTypes } from '../components/MajorUpdater';\nimport { AsyncBackendResponse } from '../shims';\nimport errorHandler from '../utils/errorHandler';\nimport jumpToQueue from '../utils/jumpToQueue';\nimport { Extension } from 'flarum/admin/AdminApplication';\nimport extractText from 'flarum/common/utils/extractText';\nimport RequestError from 'flarum/common/utils/RequestError';\n\nexport type UpdatedPackage = {\n  name: string;\n  version: string;\n  latest: string;\n  'latest-minor': string | null;\n  'latest-major': string | null;\n  'latest-status': string;\n  'required-as': string;\n  'direct-dependency': boolean;\n  description: string;\n};\n\nexport type ComposerUpdates = {\n  installed: UpdatedPackage[];\n};\n\nexport type LastUpdateCheck = {\n  checkedAt: Date | null;\n  updates: ComposerUpdates;\n};\n\ntype UpdateType = 'major' | 'minor' | 'global';\ntype UpdateStatus = 'success' | 'failure' | null;\nexport type UpdateState = {\n  ranAt: Date | null;\n  status: UpdateStatus;\n  limitedPackages: string[];\n  incompatibleExtensions: string[];\n};\n\nexport type LastUpdateRun = {\n  [key in UpdateType]: UpdateState;\n} & {\n  limitedPackages: () => string[];\n};\n\nexport type LoadingTypes = UpdaterLoadingTypes | InstallerLoadingTypes | MajorUpdaterLoadingTypes | 'queued-action';\n\nexport type CoreUpdate = {\n  package: UpdatedPackage;\n  extension: Extension;\n};\n\nexport default class ControlSectionState {\n  loading: LoadingTypes = null;\n\n  public packageUpdates: Record<string, UpdatedPackage> = {};\n  public lastUpdateCheck!: LastUpdateCheck;\n  public extensionUpdates!: Extension[];\n  public coreUpdate: CoreUpdate | null = null;\n  get lastUpdateRun(): LastUpdateRun {\n    const lastUpdateRun = JSON.parse(app.data.settings['flarum-extension-manager.last_update_run']) as LastUpdateRun;\n\n    lastUpdateRun.limitedPackages = () => [\n      ...lastUpdateRun.major.limitedPackages,\n      ...lastUpdateRun.minor.limitedPackages,\n      ...lastUpdateRun.global.limitedPackages,\n    ];\n\n    return lastUpdateRun;\n  }\n\n  constructor() {\n    this.lastUpdateCheck = JSON.parse(app.data.settings['flarum-extension-manager.last_update_check']) as LastUpdateCheck;\n    this.extensionUpdates = this.formatExtensionUpdates(this.lastUpdateCheck);\n    this.coreUpdate = this.formatCoreUpdate(this.lastUpdateCheck);\n  }\n\n  isLoading(name: LoadingTypes = null): boolean {\n    return (name && this.loading === name) || (!name && this.loading !== null);\n  }\n\n  hasOperationRunning(): boolean {\n    return this.isLoading() || app.extensionManager.queue.hasPending();\n  }\n\n  setLoading(name: LoadingTypes): void {\n    this.loading = name;\n  }\n\n  requirePackage(data: any) {\n    app.extensionManager.control.setLoading('extension-install');\n    app.modal.show(LoadingModal);\n\n    app\n      .request<AsyncBackendResponse & { id: number }>({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/extensions`,\n        body: {\n          data,\n        },\n      })\n      .then((response) => {\n        if (response.processing) {\n          jumpToQueue();\n        } else {\n          const extensionId = response.id;\n          app.alerts.show(\n            { type: 'success' },\n            app.translator.trans('flarum-extension-manager.admin.extensions.successful_install', { extension: extensionId })\n          );\n          window.location.href = `${app.forum.attribute('adminUrl')}#/extension/${extensionId}`;\n          window.location.reload();\n        }\n      })\n      .catch(errorHandler)\n      .finally(() => {\n        app.modal.close();\n        m.redraw();\n      });\n  }\n\n  checkForUpdates() {\n    this.setLoading('check');\n\n    app\n      .request<AsyncBackendResponse | LastUpdateCheck>({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/check-for-updates`,\n      })\n      .then((response) => {\n        if ((response as AsyncBackendResponse).processing) {\n          jumpToQueue();\n        } else {\n          this.lastUpdateCheck = response as LastUpdateCheck;\n          this.extensionUpdates = this.formatExtensionUpdates(response as LastUpdateCheck);\n          this.coreUpdate = this.formatCoreUpdate(response as LastUpdateCheck);\n          this.setLoading(null);\n          m.redraw();\n        }\n      })\n      .catch(errorHandler)\n      .finally(() => {\n        m.redraw();\n      });\n  }\n\n  updateCoreMinor() {\n    if (confirm(extractText(app.translator.trans('flarum-extension-manager.admin.minor_update_confirmation.content')))) {\n      app.modal.show(LoadingModal);\n      this.setLoading('minor-update');\n\n      app\n        .request<AsyncBackendResponse | null>({\n          method: 'POST',\n          url: `${app.forum.attribute('apiUrl')}/extension-manager/minor-update`,\n        })\n        .then((response) => {\n          if (response?.processing) {\n            jumpToQueue();\n          } else {\n            app.alerts.show({ type: 'success' }, app.translator.trans('flarum-extension-manager.admin.update_successful'));\n            window.location.reload();\n          }\n        })\n        .catch(errorHandler)\n        .finally(() => {\n          app.modal.close();\n          m.redraw();\n        });\n    }\n  }\n\n  updateExtension(extension: Extension, updateMode: 'soft' | 'hard') {\n    app.modal.show(LoadingModal);\n    this.setLoading('extension-update');\n\n    app\n      .request<AsyncBackendResponse | null>({\n        method: 'PATCH',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/extensions/${extension.id}`,\n        body: {\n          data: {\n            updateMode,\n          },\n        },\n      })\n      .then((response) => {\n        if (response?.processing) {\n          jumpToQueue();\n        } else {\n          app.alerts.show(\n            { type: 'success' },\n            app.translator.trans('flarum-extension-manager.admin.extensions.successful_update', {\n              extension: extension.extra['flarum-extension'].title,\n            })\n          );\n          window.location.reload();\n        }\n      })\n      .catch(errorHandler)\n      .finally(() => {\n        app.modal.close();\n        m.redraw();\n      });\n  }\n\n  updateGlobally() {\n    app.modal.show(LoadingModal);\n    this.setLoading('global-update');\n\n    app\n      .request<AsyncBackendResponse | null>({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/global-update`,\n      })\n      .then((response) => {\n        if (response?.processing) {\n          jumpToQueue();\n        } else {\n          app.alerts.show({ type: 'success' }, app.translator.trans('flarum-extension-manager.admin.updater.global_update_successful'));\n          window.location.reload();\n        }\n      })\n      .catch(errorHandler)\n      .finally(() => {\n        app.modal.close();\n        m.redraw();\n      });\n  }\n\n  formatExtensionUpdates(lastUpdateCheck: LastUpdateCheck): Extension[] {\n    this.packageUpdates = {};\n\n    lastUpdateCheck?.updates?.installed?.filter((composerPackage: UpdatedPackage) => {\n      const id = composerPackage.name.replace('/', '-').replace(/(flarum-ext-)|(flarum-)/, '');\n\n      const extension = app.data.extensions[id];\n      const safeToUpdate = ['semver-safe-update', 'update-possible'].includes(composerPackage['latest-status']);\n\n      if (extension && safeToUpdate) {\n        this.packageUpdates[extension.id] = composerPackage;\n      }\n\n      return extension && safeToUpdate;\n    });\n\n    return (Object.values(app.data.extensions) as Extension[]).filter((extension: Extension) => this.packageUpdates[extension.id]);\n  }\n\n  formatCoreUpdate(lastUpdateCheck: LastUpdateCheck): CoreUpdate | null {\n    const core = lastUpdateCheck?.updates?.installed?.filter((composerPackage: UpdatedPackage) => composerPackage.name === 'flarum/core').pop();\n\n    if (!core) return null;\n\n    return {\n      package: core,\n      extension: {\n        id: 'flarum-core',\n        name: 'flarum/core',\n        version: app.data.settings.version,\n        icon: {\n          // @ts-ignore\n          backgroundImage: `url(${app.data.resources[0]['attributes']['baseUrl']}/assets/extensions/flarum-extension-manager/flarum.svg`,\n        },\n        extra: {\n          'flarum-extension': {\n            title: extractText(app.translator.trans('flarum-extension-manager.admin.updater.flarum')),\n          },\n        },\n      },\n    };\n  }\n\n  majorUpdate({ dryRun }: { dryRun: boolean }) {\n    app.extensionManager.control.setLoading(dryRun ? 'major-update-dry-run' : 'major-update');\n    app.modal.show(LoadingModal);\n    const updateState = this.lastUpdateRun.major;\n\n    app\n      .request<AsyncBackendResponse | null>({\n        method: 'POST',\n        url: `${app.forum.attribute('apiUrl')}/extension-manager/major-update`,\n        body: {\n          data: { dryRun },\n        },\n      })\n      .then((response) => {\n        if (response?.processing) {\n          jumpToQueue();\n        } else {\n          app.alerts.show({ type: 'success' }, app.translator.trans('flarum-extension-manager.admin.update_successful'));\n          window.location.reload();\n        }\n      })\n      .catch(errorHandler)\n      .catch((e: RequestError) => {\n        app.modal.close();\n        updateState.status = 'failure';\n        updateState.incompatibleExtensions = e.response?.errors?.pop()?.incompatible_extensions as string[];\n      })\n      .finally(() => {\n        m.redraw();\n      });\n  }\n}\n","import QueueState from './QueueState';\nimport ControlSectionState from './ControlSectionState';\n\nexport default class ExtensionManagerState {\n  public queue: QueueState = new QueueState();\n  public control: ControlSectionState = new ControlSectionState();\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Button from 'flarum/common/components/Button';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport isExtensionEnabled from 'flarum/admin/utils/isExtensionEnabled';\nimport SettingsPage from './components/SettingsPage';\nimport Task from './models/Task';\nimport jumpToQueue from './utils/jumpToQueue';\nimport extractText from 'flarum/common/utils/extractText';\nimport { AsyncBackendResponse } from './shims';\nimport ExtensionManagerState from './states/ExtensionManagerState';\n\napp.initializers.add('flarum-extension-manager', (app) => {\n  app.store.models['extension-manager-tasks'] = Task;\n\n  app.extensionManager = new ExtensionManagerState();\n\n  if (app.data['flarum-extension-manager.using_sync_queue']) {\n    app.data.settings['flarum-extension-manager.queue_jobs'] = '0';\n  }\n\n  app.extensionData\n    .for('flarum-extension-manager')\n    .registerSetting({\n      setting: 'flarum-extension-manager.queue_jobs',\n      label: app.translator.trans('flarum-extension-manager.admin.settings.queue_jobs'),\n      help: m.trust(\n        extractText(\n          app.translator.trans('flarum-extension-manager.admin.settings.queue_jobs_help', {\n            basic_impl_link: 'https://discuss.flarum.org/d/28151-database-queue-the-simplest-queue-even-for-shared-hosting',\n            adv_impl_link: 'https://discuss.flarum.org/d/21873-redis-sessions-cache-queues',\n            php_version: `<strong>${app.data.phpVersion}</strong>`,\n            folder_perms_link: 'https://docs.flarum.org/install#folder-ownership',\n          })\n        )\n      ),\n      type: 'boolean',\n      disabled: app.data['flarum-extension-manager.using_sync_queue'],\n    })\n    .registerSetting({\n      setting: 'flarum-extension-manager.task_retention_days',\n      label: app.translator.trans('flarum-extension-manager.admin.settings.task_retention_days'),\n      help: app.translator.trans('flarum-extension-manager.admin.settings.task_retention_days_help'),\n      type: 'number',\n    })\n    .registerPage(SettingsPage);\n\n  extend(ExtensionPage.prototype, 'topItems', function (items) {\n    if (this.extension.id === 'flarum-extension-manager' || isExtensionEnabled(this.extension.id)) {\n      return;\n    }\n\n    items.add(\n      'remove',\n      <Button\n        className=\"Button Button--danger\"\n        icon=\"fas fa-times\"\n        onclick={() => {\n          app.modal.show(LoadingModal);\n\n          app\n            .request<AsyncBackendResponse | null>({\n              url: `${app.forum.attribute('apiUrl')}/extension-manager/extensions/${this.extension.id}`,\n              method: 'DELETE',\n            })\n            .then((response) => {\n              if (response?.processing) {\n                jumpToQueue();\n              } else {\n                app.alerts.show({ type: 'success' }, app.translator.trans('flarum-extension-manager.admin.extensions.successful_remove'));\n                window.location = app.forum.attribute('adminUrl');\n              }\n            })\n            .finally(() => {\n              app.modal.close();\n            });\n        }}\n      >\n        {app.translator.trans('flarum-extension-manager.admin.extensions.remove')}\n      </Button>\n    );\n  });\n});\n"],"names":["module","exports","t","s","n","i","e","r","o","u","h","a","d","years","months","days","hours","minutes","seconds","milliseconds","weeks","c","p","f","$l","m","l","$","Math","ceil","floor","y","abs","g","negative","format","this","$d","$ms","parseFromMilliseconds","Object","keys","forEach","calMilliseconds","match","slice","map","Number","prototype","reduce","toISOString","toJSON","Y","YY","YYYY","M","MM","D","DD","H","HH","mm","ss","SSS","replace","String","as","get","add","subtract","locale","clone","humanize","fromNow","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","$utils","duration","isDuration","bind","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","getter","__esModule","definition","key","defineProperty","enumerable","obj","prop","hasOwnProperty","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","length","indexOf","Label","view","vnode","attrs","className","type","classList","children","Component","TaskOutputModal","title","app","task","operation","content","status","guessedCause","command","output","Modal","Pagination","disabled","list","hasPrev","onclick","prev","icon","current","pageNumber","total","getTotalPages","hasNext","next","QueueSection","oninit","id","queueTable","columns","items","ItemList","label","extractText","operationIcon","extension","href","style","name","extra","running","failure","pending","success","includes","size","display","startedAt","finishedAt","text","dayjs","start","end","extend","durationTime","diff","humanDuration","peakMemoryUsed","tasks","toArray","item","index","update_check","update_major","update_minor","update_global","extension_install","extension_remove","extension_update","why_not","Installer","packageName","Stream","htmlFor","extiverse","semantic_link","code","placeholder","bidi","onsubmit","loading","data","package","error","response","errors","guessed_cause","WhyNotModal","whyNot","oncreate","requestWhyNot","method","url","body","then","reason","redraw","errorHandler","ExtensionItem","updates","onClickUpdate","whyNotWarning","isCore","isDanger","latestVersion","version","buttonClassName","soft","hard","v","charAt","substring","MajorUpdater","updateState","incompatibleExtensions","alt","src","coreUpdate","update","dismissible","controls","dryRun","Updater","lastUpdateCheckView","controlItems","availableUpdatesView","checkedAt","humanTime","state","hasMinorCoreUpdate","extensionUpdates","updateCoreMinor","lastUpdateRun","limitedPackages","packageUpdates","updateExtension","ControlSection","_extends","assign","arguments","apply","ConfigureJson","settings","initialSettings","submit","submitButton","isDirty","customSettingComponents","AdminPage","setting","readOnly","configuration","Array","isArray","JSON","stringify","RepositoryModal","repository","context","types","composer","vcs","path","options","onchange","hide","ConfigureComposer","buildSettingComponent","help","stable","RC","beta","alpha","dev","newName","repositories","confirm","push","AuthMethodModal","host","token","bearer","oninput","rows","startsWith","ConfigureAuth","authSettings","hasAuthSettings","every","hosts","newType","oldHost","SettingsPage","warnings","listItems","sections","setPriority","remove","onsaved","ExtensionPage","BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","result","Task","Model","createdAt","isFinite","TypeError","UNITS","bits","binary","signed","localeOptions","isNegative","prefix","minimumFractionDigits","maximumFractionDigits","exponent","min","log","log10","toPrecision","prettyBytes","jumpToQueue","route","set","setTimeout","document","getElementById","scrollIntoView","block","window","QueueState","polling","limit","offset","load","params","actionTaken","page","payload","meta","find","pollQueue","location","reload","getItems","clearTimeout","hasPending","_defineProperties","props","descriptor","configurable","writable","ControlSectionState","lastUpdateCheck","parse","formatExtensionUpdates","formatCoreUpdate","Constructor","protoProps","isLoading","hasOperationRunning","setLoading","requirePackage","LoadingModal","processing","extensionId","checkForUpdates","updateMode","updateGlobally","installed","filter","composerPackage","safeToUpdate","values","pop","backgroundImage","majorUpdate","major","incompatible_extensions","minor","global","ExtensionManagerState","queue","control","store","models","extensionManager","extensionData","registerSetting","translator","trans","trust","basic_impl_link","adv_impl_link","php_version","phpVersion","folder_perms_link","registerPage","isExtensionEnabled","modal","show","request","forum","attribute","alerts","close"],"sourceRoot":""}