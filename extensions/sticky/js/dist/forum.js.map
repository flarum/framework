{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/sticky/webpack/bootstrap","webpack://@flarum/sticky/webpack/runtime/compat get default export","webpack://@flarum/sticky/webpack/runtime/define property getters","webpack://@flarum/sticky/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/sticky/webpack/runtime/make namespace object","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/utils/string']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['common/extenders']\"","webpack://@flarum/sticky/external root \"flarum.core.compat['forum/components/EventPost']\"","webpack://@flarum/sticky/./src/forum/components/DiscussionStickiedPost.js","webpack://@flarum/sticky/./src/forum/extend.ts","webpack://@flarum/sticky/./src/forum/index.js","webpack://@flarum/sticky/./src/forum/addStickyBadge.js","webpack://@flarum/sticky/./src/forum/addStickyControl.js","webpack://@flarum/sticky/./src/forum/addStickyExcerpt.js","webpack://@flarum/sticky/./src/forum/addStickyClass.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/EventPost'];","import EventPost from 'flarum/forum/components/EventPost';\n\nexport default class DiscussionStickiedPost extends EventPost {\n  icon() {\n    return 'fas fa-thumbtack';\n  }\n\n  descriptionKey() {\n    return this.attrs.post.content().sticky\n      ? 'flarum-sticky.forum.post_stream.discussion_stickied_text'\n      : 'flarum-sticky.forum.post_stream.discussion_unstickied_text';\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionStickiedPost from './components/DiscussionStickiedPost';\n\nexport default [\n  new Extend.PostTypes() //\n    .add('discussionStickied', DiscussionStickiedPost),\n\n  new Extend.Model(Discussion) //\n    .attribute<boolean>('isSticky')\n    .attribute<boolean>('canSticky'),\n];\n","import app from 'flarum/forum/app';\n\nimport addStickyBadge from './addStickyBadge';\nimport addStickyControl from './addStickyControl';\nimport addStickyExcerpt from './addStickyExcerpt';\nimport addStickyClass from './addStickyClass';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('flarum-sticky', () => {\n  addStickyBadge();\n  addStickyControl();\n  addStickyExcerpt();\n  addStickyClass();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\n\nexport default function addStickyBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    if (this.isSticky()) {\n      badges.add(\n        'sticky',\n        <Badge type=\"sticky\" label={app.translator.trans('flarum-sticky.forum.badge.sticky_tooltip')} icon=\"fas fa-thumbtack\" />,\n        10\n      );\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport Button from 'flarum/common/components/Button';\n\nexport default function addStickyControl() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    if (discussion.canSticky()) {\n      items.add(\n        'sticky',\n        <Button icon=\"fas fa-thumbtack\" onclick={this.stickyAction.bind(discussion)}>\n          {app.translator.trans(`flarum-sticky.forum.discussion_controls.${discussion.isSticky() ? 'unsticky' : 'sticky'}_button`)}\n        </Button>\n      );\n    }\n  });\n\n  DiscussionControls.stickyAction = function () {\n    this.save({ isSticky: !this.isSticky() }).then(() => {\n      if (app.current.matches(DiscussionPage)) {\n        app.current.get('stream').update();\n      }\n\n      m.redraw();\n    });\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default function addStickyControl() {\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (app.current.matches(IndexPage) || app.current.matches(DiscussionPage)) {\n      params.include.push('firstPost');\n    }\n  });\n\n  extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n    const discussion = this.attrs.discussion;\n\n    if (discussion.isSticky() && !this.attrs.params.q && !discussion.lastReadPostNumber()) {\n      const firstPost = discussion.firstPost();\n\n      if (firstPost) {\n        const excerpt = truncate(firstPost.contentPlain(), 175);\n\n        // Wrapping in <div> because ItemList entries need to be vnodes\n        items.add('excerpt', <div>{excerpt}</div>, -100);\n      }\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport classList from 'flarum/common/utils/classList';\n\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\n\nexport default function addStickyClass() {\n  extend(DiscussionListItem.prototype, 'elementAttrs', function (attrs) {\n    if (this.attrs.discussion.isSticky()) {\n      attrs.className = classList(attrs.className, 'DiscussionListItem--sticky');\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","DiscussionStickiedPost","EventPost","icon","descriptionKey","this","attrs","post","content","sticky","Extend","add","Discussion","attribute","app","extend","badges","isSticky","m","Badge","type","label","DiscussionControls","items","discussion","canSticky","Button","onclick","stickyAction","bind","concat","save","then","DiscussionPage","update","redraw","DiscussionListState","params","IndexPage","include","push","DiscussionListItem","q","lastReadPostNumber","firstPost","excerpt","truncate","contentPlain","className","classList"],"sourceRoot":""}