{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/subscriptions/webpack/bootstrap","webpack://@flarum/subscriptions/webpack/runtime/compat get default export","webpack://@flarum/subscriptions/webpack/runtime/define property getters","webpack://@flarum/subscriptions/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/subscriptions/webpack/runtime/make namespace object","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/models/Discussion')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/Badge')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/Button')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/components/DiscussionPage')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/utils/DiscussionControls')\"","webpack://@flarum/subscriptions/../../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@flarum/subscriptions/../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@flarum/subscriptions/../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@flarum/subscriptions/../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/Dropdown')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/utils/extractText')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/DetailedDropdownItem')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/SplitDropdown')\"","webpack://@flarum/subscriptions/./src/forum/components/SubscriptionMenu.tsx","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/LinkButton')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/components/IndexPage')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/components/IndexSidebar')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/states/DiscussionListState')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/states/GlobalSearchState')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/components/Switch')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/extenders')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/app')\"","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'common/query/IGambit')\"","webpack://@flarum/subscriptions/./src/common/query/discussions/SubscriptionGambit.ts","webpack://@flarum/subscriptions/./src/common/extend.ts","webpack://@flarum/subscriptions/external root \"flarum.reg.get('core', 'forum/components/Notification')\"","webpack://@flarum/subscriptions/./src/forum/components/NewPostNotification.js","webpack://@flarum/subscriptions/./src/forum/extend.ts","webpack://@flarum/subscriptions/./src/forum/index.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionBadge.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionControls.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionFilter.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionSettings.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extend');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/models/Discussion');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Badge');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Button');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/DiscussionPage');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/utils/DiscussionControls');","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Dropdown');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/utils/extractText');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/DetailedDropdownItem');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/SplitDropdown');","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/forum/app';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport DetailedDropdownItem from 'flarum/common/components/DetailedDropdownItem';\nimport SplitDropdown from 'flarum/common/components/SplitDropdown';\nexport default class SubscriptionMenu extends Dropdown {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"options\", [{\n      subscription: null,\n      icon: 'far fa-star',\n      label: app.translator.trans('flarum-subscriptions.forum.sub_controls.not_following_button'),\n      description: app.translator.trans('flarum-subscriptions.forum.sub_controls.not_following_text')\n    }, {\n      subscription: 'follow',\n      icon: 'fas fa-star',\n      label: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_button'),\n      description: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_text')\n    }, {\n      subscription: 'ignore',\n      icon: 'far fa-eye-slash',\n      label: app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_button'),\n      description: app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_text')\n    }]);\n    _defineProperty(this, \"possibleButtonAttrs\", {\n      null: {\n        icon: 'far fa-star',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.follow_button')\n      },\n      follow: {\n        icon: 'fas fa-star',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_button')\n      },\n      ignore: {\n        icon: 'far fa-eye-slash',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_button')\n      }\n    });\n  }\n  view() {\n    const discussion = this.attrs.discussion;\n    const subscription = discussion.subscription();\n    const buttonAttrs = this.possibleButtonAttrs[subscription];\n    const preferences = app.session.user.preferences();\n    const notifyEmail = preferences['notify_newPost_email'];\n    const notifyAlert = preferences['notify_newPost_alert'];\n    const tooltipText = extractText(app.translator.trans(notifyEmail ? 'flarum-subscriptions.forum.sub_controls.notify_email_tooltip' : 'flarum-subscriptions.forum.sub_controls.notify_alert_tooltip'));\n    const shouldShowTooltip = (notifyEmail || notifyAlert) && subscription === null;\n    return m(SplitDropdown, {\n      className: \"SubscriptionMenu\",\n      buttonClassName: \"SubscriptionMenu-button--\".concat(subscription),\n      tooltip: shouldShowTooltip ? tooltipText : null,\n      mainAction: m(Button, {\n        className: 'SubscriptionMenu-button',\n        icon: buttonAttrs.icon,\n        onclick: this.saveSubscription.bind(this, discussion, ['follow', 'ignore'].indexOf(subscription) !== -1 ? null : 'follow')\n      }, buttonAttrs.label)\n    }, this.options.map(attrs => m(DetailedDropdownItem, Object.assign({}, attrs, {\n      onclick: this.saveSubscription.bind(this, discussion, attrs.subscription),\n      active: subscription === attrs.subscription\n    }))));\n  }\n  saveSubscription(discussion, subscription) {\n    discussion.save({\n      subscription\n    });\n\n    // @ts-ignore\n    this.$('.SubscriptionMenu-button').tooltip('hide');\n  }\n}\nflarum.reg.add('flarum-subscriptions', 'forum/components/SubscriptionMenu', SubscriptionMenu);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/LinkButton');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/IndexPage');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/IndexSidebar');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/states/DiscussionListState');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/states/GlobalSearchState');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Switch');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extenders');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/query/IGambit');","import app from 'flarum/common/app';\nimport { BooleanGambit } from 'flarum/common/query/IGambit';\nexport default class SubscriptionGambit extends BooleanGambit {\n  key() {\n    return [app.translator.trans('flarum-subscriptions.lib.gambits.discussions.subscription.following_key', {}, true), app.translator.trans('flarum-subscriptions.lib.gambits.discussions.subscription.ignoring_key', {}, true)];\n  }\n  toFilter(matches, negate) {\n    const key = (negate ? '-' : '') + this.filterKey();\n    return {\n      [key]: matches[1]\n    };\n  }\n  filterKey() {\n    return 'subscription';\n  }\n  fromFilter(value, negate) {\n    return \"\".concat(negate ? '-' : '', \"is:\").concat(value);\n  }\n  enabled() {\n    return !!app.session.user;\n  }\n}\nflarum.reg.add('flarum-subscriptions', 'common/query/discussions/SubscriptionGambit', SubscriptionGambit);","import Extend from 'flarum/common/extenders';\nimport SubscriptionGambit from './query/discussions/SubscriptionGambit';\nexport default [new Extend.Search() //\n.gambit('discussions', SubscriptionGambit)];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/Notification');","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nexport default class NewPostNotification extends Notification {\n  icon() {\n    return 'fas fa-star';\n  }\n  href() {\n    const notification = this.attrs.notification;\n    const discussion = notification.subject();\n    const content = notification.content() || {};\n    return app.route.discussion(discussion, content.postNumber);\n  }\n  content() {\n    return app.translator.trans('flarum-subscriptions.forum.notifications.new_post_text', {\n      user: this.attrs.notification.fromUser()\n    });\n  }\n  excerpt() {\n    return null;\n  }\n}\nflarum.reg.add('flarum-subscriptions', 'forum/components/NewPostNotification', NewPostNotification);","import Extend from 'flarum/common/extenders';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Discussion from 'flarum/common/models/Discussion';\nimport commonExtend from '../common/extend';\nimport NewPostNotification from './components/NewPostNotification';\nexport default [...commonExtend, new Extend.Routes() //\n.add('following', '/following', IndexPage), new Extend.Notification() //\n.add('newPost', NewPostNotification), new Extend.Model(Discussion) //\n.attribute('subscription')];","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport addSubscriptionBadge from './addSubscriptionBadge';\nimport addSubscriptionControls from './addSubscriptionControls';\nimport addSubscriptionFilter from './addSubscriptionFilter';\nimport addSubscriptionSettings from './addSubscriptionSettings';\nexport { default as extend } from './extend';\napp.initializers.add('flarum-subscriptions', () => {\n  addSubscriptionBadge();\n  addSubscriptionControls();\n  addSubscriptionFilter();\n  addSubscriptionSettings();\n  extend('flarum/forum/components/NotificationGrid', 'notificationTypes', function (items) {\n    items.add('newPost', {\n      name: 'newPost',\n      icon: 'fas fa-star',\n      label: app.translator.trans('flarum-subscriptions.forum.settings.notify_new_post_label')\n    });\n  });\n});","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\nexport default function addSubscriptionBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    let badge;\n    switch (this.subscription()) {\n      case 'follow':\n        badge = m(Badge, {\n          label: app.translator.trans('flarum-subscriptions.forum.badge.following_tooltip'),\n          icon: \"fas fa-star\",\n          type: \"following\"\n        });\n        break;\n      case 'ignore':\n        badge = m(Badge, {\n          label: app.translator.trans('flarum-subscriptions.forum.badge.ignoring_tooltip'),\n          icon: \"far fa-eye-slash\",\n          type: \"ignoring\"\n        });\n        break;\n    }\n    if (badge) {\n      badges.add('subscription', badge);\n    }\n  });\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport SubscriptionMenu from './components/SubscriptionMenu';\nexport default function addSubscriptionControls() {\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\n    if (app.session.user && !(context instanceof DiscussionPage)) {\n      const states = {\n        none: {\n          label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.follow_button'),\n          icon: 'fas fa-star',\n          save: 'follow'\n        },\n        follow: {\n          label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.unfollow_button'),\n          icon: 'far fa-star',\n          save: null\n        },\n        ignore: {\n          label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.unignore_button'),\n          icon: 'fas fa-eye',\n          save: null\n        }\n      };\n      const subscription = discussion.subscription() || 'none';\n      items.add('subscription', m(Button, {\n        icon: states[subscription].icon,\n        onclick: discussion.save.bind(discussion, {\n          subscription: states[subscription].save\n        })\n      }, states[subscription].label));\n    }\n  });\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n    if (app.session.user) {\n      const discussion = this.discussion;\n      items.add('subscription', m(SubscriptionMenu, {\n        discussion: discussion\n      }), 80);\n    }\n  });\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport IndexSidebar from 'flarum/forum/components/IndexSidebar';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\nexport default function addSubscriptionFilter() {\n  extend(IndexSidebar.prototype, 'navItems', function (items) {\n    if (app.session.user) {\n      const params = app.search.state.stickyParams();\n      items.add('following', m(LinkButton, {\n        href: app.route('following', params),\n        icon: \"fas fa-star\"\n      }, app.translator.trans('flarum-subscriptions.forum.index.following_link')), 50);\n    }\n  });\n  extend(IndexPage.prototype, 'setTitle', function () {\n    if (app.current.get('routeName') === 'following') {\n      app.setTitle(app.translator.trans('flarum-subscriptions.forum.following.meta_title_text'));\n    }\n  });\n  extend(GlobalSearchState.prototype, 'params', function (params) {\n    // We can't set `q` here directly, as that would make the search bar\n    // think that text has been entered, and display the \"clear\" button.\n    params.onFollowing = app.current.get('routeName') === 'following';\n  });\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (this.params.onFollowing) {\n      params.filter || (params.filter = {});\n      params.filter.subscription = 'following';\n    }\n  });\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Switch from 'flarum/common/components/Switch';\nexport default function () {\n  extend('flarum/forum/components/SettingsPage', 'notificationsItems', function (items) {\n    var _preferences;\n    items.add('followAfterReply', m(Switch, {\n      state: this.user.preferences().followAfterReply,\n      onchange: value => {\n        this.followAfterReplyLoading = true;\n        this.user.savePreferences({\n          followAfterReply: value\n        }).then(() => {\n          this.followAfterReplyLoading = false;\n          m.redraw();\n        });\n      },\n      loading: this.followAfterReplyLoading\n    }, app.translator.trans('flarum-subscriptions.forum.settings.follow_after_reply_label')));\n    items.add('notifyForAllPosts', m(Switch, {\n      id: \"flarum_subscriptions__notify_for_all_posts\",\n      state: !!((_preferences = this.user.preferences()) != null && _preferences['flarum-subscriptions.notify_for_all_posts']),\n      onchange: val => {\n        this.notifyForAllPostsLoading = true;\n        this.user.savePreferences({\n          'flarum-subscriptions.notify_for_all_posts': val\n        }).then(() => {\n          this.notifyForAllPostsLoading = false;\n          m.redraw();\n        });\n      },\n      loading: this.notifyForAllPostsLoading\n    }, app.translator.trans('flarum-subscriptions.forum.settings.notify_for_all_posts_label')));\n  });\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","reg","_typeof","iterator","constructor","_defineProperty","i","t","r","e","toPrimitive","TypeError","String","configurable","writable","SubscriptionMenu","super","arguments","this","subscription","icon","label","trans","description","null","follow","ignore","view","discussion","attrs","buttonAttrs","possibleButtonAttrs","preferences","user","notifyEmail","notifyAlert","tooltipText","shouldShowTooltip","m","className","buttonClassName","concat","tooltip","mainAction","onclick","saveSubscription","bind","indexOf","options","map","assign","active","save","$","add","SubscriptionGambit","BooleanGambit","toFilter","matches","negate","filterKey","fromFilter","enabled","gambit","NewPostNotification","href","notification","subject","content","postNumber","fromUser","excerpt","attribute","extend","badges","badge","type","items","context","states","none","params","state","stickyParams","onFollowing","filter","_preferences","followAfterReply","onchange","followAfterReplyLoading","savePreferences","then","redraw","loading","id","val","notifyForAllPostsLoading","name"],"sourceRoot":""}