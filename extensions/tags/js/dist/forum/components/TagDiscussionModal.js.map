{"version":3,"file":"forum/components/TagDiscussionModal.js","mappings":"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","sources":["webpack://@flarum/tags/./src/forum/components/ToggleButton.js","webpack://@flarum/tags/./src/common/components/TagSelectionModal.tsx","webpack://@flarum/tags/./src/forum/components/TagDiscussionModal.tsx"],"sourcesContent":["import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\n\n/**\n * @TODO move to core\n */\nexport default class ToggleButton extends Component {\n  view(vnode) {\n    const {\n      className,\n      isToggled,\n      ...attrs\n    } = this.attrs;\n    const icon = isToggled ? 'far fa-check-circle' : 'far fa-circle';\n    return m(Button, Object.assign({}, attrs, {\n      icon: icon,\n      className: classList([className, isToggled && 'Button--toggled'])\n    }), vnode.children);\n  }\n}\nflarum.reg.add('flarum-tags', 'forum/components/ToggleButton', ToggleButton);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/common/app';\nimport Button from 'flarum/common/components/Button';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport highlight from 'flarum/common/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/common/utils/KeyboardNavigatable';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport FormModal from 'flarum/common/components/FormModal';\nimport Stream from 'flarum/common/utils/Stream';\nimport sortTags from '../utils/sortTags';\nimport tagLabel from '../helpers/tagLabel';\nimport tagIcon from '../helpers/tagIcon';\nimport ToggleButton from '../../forum/components/ToggleButton';\nexport default class TagSelectionModal extends FormModal {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"loading\", true);\n    _defineProperty(this, \"tags\", void 0);\n    _defineProperty(this, \"selected\", []);\n    _defineProperty(this, \"bypassReqs\", false);\n    _defineProperty(this, \"filter\", Stream(''));\n    _defineProperty(this, \"focused\", false);\n    _defineProperty(this, \"navigator\", new KeyboardNavigatable());\n    _defineProperty(this, \"indexTag\", void 0);\n  }\n  static initAttrs(attrs) {\n    var _attrs$allowResetting, _attrs$limits$min$tot, _attrs$limits, _attrs$limits$min$pri, _attrs$limits2, _attrs$limits$min$sec, _attrs$limits3, _attrs$limits$max$tot, _attrs$limits4, _attrs$limits$max$pri, _attrs$limits5, _attrs$limits$max$sec, _attrs$limits6;\n    super.initAttrs(attrs);\n\n    // Default values for optional attributes.\n    attrs.title || (attrs.title = extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.title')));\n    attrs.canSelect || (attrs.canSelect = () => true);\n    (_attrs$allowResetting = attrs.allowResetting) != null ? _attrs$allowResetting : attrs.allowResetting = true;\n    attrs.limits = {\n      min: {\n        total: (_attrs$limits$min$tot = (_attrs$limits = attrs.limits) == null || (_attrs$limits = _attrs$limits.min) == null ? void 0 : _attrs$limits.total) != null ? _attrs$limits$min$tot : -Infinity,\n        primary: (_attrs$limits$min$pri = (_attrs$limits2 = attrs.limits) == null || (_attrs$limits2 = _attrs$limits2.min) == null ? void 0 : _attrs$limits2.primary) != null ? _attrs$limits$min$pri : -Infinity,\n        secondary: (_attrs$limits$min$sec = (_attrs$limits3 = attrs.limits) == null || (_attrs$limits3 = _attrs$limits3.min) == null ? void 0 : _attrs$limits3.secondary) != null ? _attrs$limits$min$sec : -Infinity\n      },\n      max: {\n        total: (_attrs$limits$max$tot = (_attrs$limits4 = attrs.limits) == null || (_attrs$limits4 = _attrs$limits4.max) == null ? void 0 : _attrs$limits4.total) != null ? _attrs$limits$max$tot : Infinity,\n        primary: (_attrs$limits$max$pri = (_attrs$limits5 = attrs.limits) == null || (_attrs$limits5 = _attrs$limits5.max) == null ? void 0 : _attrs$limits5.primary) != null ? _attrs$limits$max$pri : Infinity,\n        secondary: (_attrs$limits$max$sec = (_attrs$limits6 = attrs.limits) == null || (_attrs$limits6 = _attrs$limits6.max) == null ? void 0 : _attrs$limits6.secondary) != null ? _attrs$limits$max$sec : Infinity\n      }\n    };\n\n    // Prevent illogical limits from being provided.\n    catchInvalidLimits(attrs.limits);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.navigator.onUp(() => this.setIndex(this.getCurrentNumericIndex() - 1, true)).onDown(() => this.setIndex(this.getCurrentNumericIndex() + 1, true)).onSelect(this.select.bind(this)).onRemove(() => this.selected.splice(this.selected.length - 1, 1));\n    app.tagList.load(['parent']).then(tags => {\n      this.loading = false;\n      if (this.attrs.selectableTags) {\n        tags = this.attrs.selectableTags(tags);\n      }\n      this.tags = sortTags(tags);\n      if (this.attrs.selectedTags) {\n        this.attrs.selectedTags.map(this.addTag.bind(this));\n      }\n      this.indexTag = tags[0];\n      m.redraw();\n    });\n  }\n  className() {\n    return classList('TagSelectionModal Modal--simple', this.attrs.className);\n  }\n  title() {\n    return this.attrs.title;\n  }\n  content() {\n    if (this.loading || !this.tags) {\n      return m(LoadingIndicator, null);\n    }\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    const tags = this.getFilteredTags();\n    const inputWidth = Math.max(extractText(this.getInstruction(primaryCount, secondaryCount)).length, this.filter().length);\n    return [m(\"div\", {\n      className: \"Modal-body\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form\"\n    }, m(\"div\", {\n      className: \"TagSelectionModal-form-input\"\n    }, m(\"div\", {\n      className: 'TagsInput FormControl ' + (this.focused ? 'focus' : ''),\n      onclick: () => this.$('.TagsInput input').focus()\n    }, m(\"span\", {\n      className: \"TagsInput-selected\"\n    }, this.selected.map(tag => m(\"span\", {\n      className: \"TagsInput-tag\",\n      onclick: () => {\n        this.removeTag(tag);\n        this.onready();\n      }\n    }, tagLabel(tag)))), m(\"input\", {\n      className: \"FormControl\",\n      placeholder: extractText(this.getInstruction(primaryCount, secondaryCount)),\n      bidi: this.filter,\n      style: {\n        width: inputWidth + 'ch'\n      },\n      onkeydown: this.navigator.navigate.bind(this.navigator),\n      onfocus: () => this.focused = true,\n      onblur: () => this.focused = false\n    }))), m(\"div\", {\n      className: \"TagSelectionModal-form-submit App-primaryControl\"\n    }, m(Button, {\n      type: \"submit\",\n      className: \"Button Button--primary\",\n      disabled: !this.meetsRequirements(primaryCount, secondaryCount),\n      icon: \"fas fa-check\"\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.submit_button'))))), m(\"div\", {\n      className: \"Modal-footer\"\n    }, m(\"ul\", {\n      className: \"TagSelectionModal-list SelectTagList\"\n    }, tags.map(tag => m(\"li\", {\n      \"data-index\": tag.id(),\n      className: classList('SelectTagListItem', {\n        pinned: tag.position() !== null,\n        child: !!tag.parent(),\n        colored: !!tag.color(),\n        selected: this.selected.includes(tag),\n        active: this.indexTag === tag\n      }),\n      style: {\n        color: tag.color()\n      },\n      onmouseover: () => this.indexTag = tag,\n      onclick: this.toggleTag.bind(this, tag)\n    }, m(\"i\", {\n      className: \"SelectTagListItem-icon\"\n    }, tagIcon(tag, {\n      className: 'SelectTagListItem-tagIcon'\n    }), m(\"i\", {\n      className: \"icon TagIcon fas fa-check SelectTagListItem-checkIcon\"\n    })), m(\"span\", {\n      className: \"SelectTagListItem-name\"\n    }, highlight(tag.name(), filter)), tag.description() ? m(\"span\", {\n      className: \"SelectTagListItem-description\"\n    }, tag.description()) : ''))), this.attrs.limits.allowBypassing && m(\"div\", {\n      className: \"TagSelectionModal-controls\"\n    }, m(ToggleButton, {\n      className: \"Button\",\n      onclick: () => this.bypassReqs = !this.bypassReqs,\n      isToggled: this.bypassReqs\n    }, app.translator.trans('flarum-tags.lib.tag_selection_modal.bypass_requirements'))))];\n  }\n\n  /**\n   * Filters the available tags on every state change.\n   */\n  getFilteredTags() {\n    const filter = this.filter().toLowerCase();\n    const primaryCount = this.primaryCount();\n    const secondaryCount = this.secondaryCount();\n    let tags = this.tags;\n    if (this.attrs.requireParentTag) {\n      // Filter out all child tags whose parents have not been selected. This\n      // makes it impossible to select a child if its parent hasn't been selected.\n      tags = tags.filter(tag => {\n        const parent = tag.parent();\n        return parent !== null && (parent === false || this.selected.includes(parent));\n      });\n    }\n    if (!this.bypassReqs) {\n      // If we reached the total maximum number of tags, we can't select anymore.\n      if (this.selected.length >= this.attrs.limits.max.total) {\n        tags = tags.filter(tag => this.selected.includes(tag));\n      }\n      // If the number of selected primary/secondary tags is at the maximum, then\n      // we'll filter out all other tags of that type.\n      else {\n        if (primaryCount >= this.attrs.limits.max.primary) {\n          tags = tags.filter(tag => !tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n        if (secondaryCount >= this.attrs.limits.max.secondary) {\n          tags = tags.filter(tag => tag.isPrimaryParent() || this.selected.includes(tag));\n        }\n      }\n    }\n\n    // If the user has entered text in the filter input, then filter by tags\n    // whose name matches what they've entered.\n    if (filter) {\n      tags = tags.filter(tag => tag.name().toLowerCase().includes(filter));\n    }\n    if (!this.indexTag || !tags.includes(this.indexTag)) this.indexTag = tags[0];\n    return tags;\n  }\n\n  /**\n   * Counts the number of selected primary tags.\n   */\n  primaryCount() {\n    return this.selected.filter(tag => tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Counts the number of selected secondary tags.\n   */\n  secondaryCount() {\n    return this.selected.filter(tag => !tag.isPrimaryParent()).length;\n  }\n\n  /**\n   * Validates the number of selected primary/secondary tags against the set min max limits.\n   */\n  meetsRequirements(primaryCount, secondaryCount) {\n    if (this.bypassReqs || this.attrs.allowResetting && this.selected.length === 0) {\n      return true;\n    }\n    if (this.selected.length < this.attrs.limits.min.total) {\n      return false;\n    }\n    return primaryCount >= this.attrs.limits.min.primary && secondaryCount >= this.attrs.limits.min.secondary;\n  }\n\n  /**\n   * Add the given tag to the list of selected tags.\n   */\n  addTag(tag) {\n    if (!tag || !this.attrs.canSelect(tag)) return;\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(tag, this.selected);\n    }\n\n    // If this tag has a parent, we'll also need to add the parent tag to the\n    // selected list if it's not already in there.\n    if (this.attrs.requireParentTag) {\n      const parent = tag.parent();\n      if (parent && !this.selected.includes(parent)) {\n        this.selected.push(parent);\n      }\n    }\n    if (!this.selected.includes(tag)) {\n      this.selected.push(tag);\n    }\n  }\n\n  /**\n   * Remove the given tag from the list of selected tags.\n   */\n  removeTag(tag) {\n    const index = this.selected.indexOf(tag);\n    if (index !== -1) {\n      this.selected.splice(index, 1);\n\n      // Look through the list of selected tags for any tags which have the tag\n      // we just removed as their parent. We'll need to remove them too.\n      if (this.attrs.requireParentTag) {\n        this.selected.filter(t => t.parent() === tag).forEach(this.removeTag.bind(this));\n      }\n      if (this.attrs.onDeselect) {\n        this.attrs.onDeselect(tag, this.selected);\n      }\n    }\n  }\n  toggleTag(tag) {\n    // Won't happen, needed for type safety.\n    if (!this.tags) return;\n    if (this.selected.includes(tag)) {\n      this.removeTag(tag);\n    } else {\n      this.addTag(tag);\n    }\n    if (this.filter()) {\n      this.filter('');\n      this.indexTag = this.tags[0];\n    }\n    this.onready();\n  }\n\n  /**\n   * Gives human text instructions based on the current number of selected tags and set limits.\n   */\n  getInstruction(primaryCount, secondaryCount) {\n    if (this.bypassReqs) {\n      return '';\n    }\n    if (primaryCount < this.attrs.limits.min.primary) {\n      const remaining = this.attrs.limits.min.primary - primaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_primary_placeholder', {\n        count: remaining\n      }));\n    } else if (secondaryCount < this.attrs.limits.min.secondary) {\n      const remaining = this.attrs.limits.min.secondary - secondaryCount;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_secondary_placeholder', {\n        count: remaining\n      }));\n    } else if (this.selected.length < this.attrs.limits.min.total) {\n      const remaining = this.attrs.limits.min.total - this.selected.length;\n      return extractText(app.translator.trans('flarum-tags.lib.tag_selection_modal.choose_tags_placeholder', {\n        count: remaining\n      }));\n    }\n    return '';\n  }\n\n  /**\n   * Submit tag selection.\n   */\n  onsubmit(e) {\n    e.preventDefault();\n    if (this.attrs.onsubmit) this.attrs.onsubmit(this.selected);\n    this.hide();\n  }\n  select(e) {\n    // Ctrl + Enter submits the selection, just Enter completes the current entry\n    if (e.metaKey || e.ctrlKey || this.indexTag && this.selected.includes(this.indexTag)) {\n      if (this.selected.length) {\n        // The DOM submit method doesn't emit a `submit event, so we\n        // simulate a manual submission so our `onsubmit` logic is run.\n        this.$('button[type=\"submit\"]').click();\n      }\n    } else if (this.indexTag) {\n      this.getItem(this.indexTag)[0].dispatchEvent(new Event('click'));\n    }\n  }\n  selectableItems() {\n    return this.$('.TagSelectionModal-list > li');\n  }\n  getCurrentNumericIndex() {\n    if (!this.indexTag) return -1;\n    return this.selectableItems().index(this.getItem(this.indexTag));\n  }\n  getItem(selectedTag) {\n    return this.selectableItems().filter(\"[data-index=\\\"\".concat(selectedTag.id(), \"\\\"]\"));\n  }\n  setIndex(index, scrollToItem) {\n    const $items = this.selectableItems();\n    const $dropdown = $items.parent();\n    if (index < 0) {\n      index = $items.length - 1;\n    } else if (index >= $items.length) {\n      index = 0;\n    }\n    const $item = $items.eq(index);\n    this.indexTag = app.store.getById('tags', $item.attr('data-index'));\n    m.redraw();\n    if (scrollToItem && this.indexTag) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({\n          scrollTop\n        }, 100);\n      }\n    }\n  }\n}\n\n/**\n * Catch invalid limits provided to the tag selection modal.\n */\nfunction catchInvalidLimits(limits) {\n  if (limits.min.primary > limits.max.primary) {\n    throw new Error('The minimum number of primary tags allowed cannot be more than the maximum number of primary tags allowed.');\n  }\n  if (limits.min.secondary > limits.max.secondary) {\n    throw new Error('The minimum number of secondary tags allowed cannot be more than the maximum number of secondary tags allowed.');\n  }\n  if (limits.min.total > limits.max.primary + limits.max.secondary) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of primary and secondary tags allowed together.');\n  }\n  if (limits.max.total < limits.min.primary + limits.min.secondary) {\n    throw new Error('The maximum number of tags allowed cannot be less than the minimum number of primary and secondary tags allowed together.');\n  }\n  if (limits.min.total > limits.max.total) {\n    throw new Error('The minimum number of tags allowed cannot be more than the maximum number of tags allowed.');\n  }\n}\nflarum.reg.add('flarum-tags', 'common/components/TagSelectionModal', TagSelectionModal);","import app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\nimport getSelectableTags from '../utils/getSelectableTags';\nimport TagSelectionModal from '../../common/components/TagSelectionModal';\nexport default class TagDiscussionModal extends TagSelectionModal {\n  static initAttrs(attrs) {\n    var _attrs$selectedTags, _attrs$discussion;\n    super.initAttrs(attrs);\n    const title = attrs.discussion ? app.translator.trans('flarum-tags.forum.choose_tags.edit_title', {\n      title: m(\"em\", null, attrs.discussion.title())\n    }) : app.translator.trans('flarum-tags.forum.choose_tags.title');\n    attrs.className = classList(attrs.className, 'TagDiscussionModal');\n    attrs.title = extractText(title);\n    attrs.allowResetting = !!app.forum.attribute('canBypassTagCounts');\n    attrs.limits = {\n      allowBypassing: attrs.allowResetting,\n      max: {\n        primary: app.forum.attribute('maxPrimaryTags'),\n        secondary: app.forum.attribute('maxSecondaryTags')\n      },\n      min: {\n        primary: app.forum.attribute('minPrimaryTags'),\n        secondary: app.forum.attribute('minSecondaryTags')\n      }\n    };\n    attrs.requireParentTag = true;\n    attrs.selectableTags = () => getSelectableTags(attrs.discussion);\n    (_attrs$selectedTags = attrs.selectedTags) != null ? _attrs$selectedTags : attrs.selectedTags = ((_attrs$discussion = attrs.discussion) == null ? void 0 : _attrs$discussion.tags()) || [];\n    attrs.canSelect = tag => tag.canStartDiscussion();\n    const suppliedOnsubmit = attrs.onsubmit || null;\n\n    // Save changes.\n    attrs.onsubmit = function (tags) {\n      const discussion = attrs.discussion;\n      if (discussion) {\n        discussion.save({\n          relationships: {\n            tags\n          }\n        }).then(() => {\n          if (app.current.matches(DiscussionPage)) {\n            app.current.get('stream').update();\n          }\n          m.redraw();\n        });\n      }\n      if (suppliedOnsubmit) suppliedOnsubmit(tags);\n    };\n  }\n}\nflarum.reg.add('flarum-tags', 'forum/components/TagDiscussionModal', TagDiscussionModal);"],"names":["ToggleButton","view","vnode","className","isToggled","attrs","this","icon","m","Object","assign","children","flarum","reg","add","TagSelectionModal","constructor","super","arguments","initAttrs","_attrs$limits$min$tot","_attrs$limits","_attrs$limits$min$pri","_attrs$limits2","_attrs$limits$min$sec","_attrs$limits3","_attrs$limits$max$tot","_attrs$limits4","_attrs$limits$max$pri","_attrs$limits5","_attrs$limits$max$sec","_attrs$limits6","title","trans","canSelect","allowResetting","limits","min","total","primary","secondary","max","Infinity","Error","catchInvalidLimits","oninit","navigator","onUp","setIndex","getCurrentNumericIndex","onDown","onSelect","select","bind","onRemove","selected","splice","length","load","then","tags","loading","selectableTags","sortTags","selectedTags","map","addTag","indexTag","redraw","content","filter","toLowerCase","primaryCount","secondaryCount","getFilteredTags","inputWidth","Math","getInstruction","focused","onclick","$","focus","tag","removeTag","onready","tagLabel","placeholder","bidi","style","width","onkeydown","navigate","onfocus","onblur","type","disabled","meetsRequirements","id","pinned","position","child","parent","colored","color","includes","active","onmouseover","toggleTag","tagIcon","name","description","allowBypassing","bypassReqs","requireParentTag","isPrimaryParent","push","index","indexOf","t","forEach","onDeselect","remaining","count","onsubmit","e","preventDefault","hide","metaKey","ctrlKey","click","getItem","dispatchEvent","Event","selectableItems","selectedTag","concat","scrollToItem","$items","$dropdown","$item","eq","getById","attr","dropdownScroll","scrollTop","dropdownTop","offset","top","dropdownBottom","outerHeight","itemTop","itemBottom","parseInt","css","stop","animate","TagDiscussionModal","_attrs$discussion","discussion","attribute","getSelectableTags","canStartDiscussion","suppliedOnsubmit","save","relationships","matches","get","update"],"sourceRoot":""}