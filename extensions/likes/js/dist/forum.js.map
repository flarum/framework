{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/likes/webpack/bootstrap","webpack://@flarum/likes/webpack/runtime/compat get default export","webpack://@flarum/likes/webpack/runtime/define property getters","webpack://@flarum/likes/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/likes/webpack/runtime/make namespace object","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'forum/app')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Button')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'forum/components/CommentPost')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Link')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/helpers/punctuateSeries')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/helpers/username')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Icon')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Modal')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Avatar')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/states/PaginatedListState')\"","webpack://@flarum/likes/./src/forum/states/PostLikesModalState.ts","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/LoadingIndicator')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/Form')\"","webpack://@flarum/likes/./src/forum/components/PostLikesModal.tsx","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'forum/components/UserPage')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/components/LinkButton')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/extenders')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/models/Post')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'forum/components/PostsUserPage')\"","webpack://@flarum/likes/./src/forum/components/LikesUserPage.ts","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'forum/components/Notification')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/utils/string')\"","webpack://@flarum/likes/./src/forum/components/PostLikedNotification.js","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/query/IGambit')\"","webpack://@flarum/likes/external root \"flarum.reg.get('core', 'common/app')\"","webpack://@flarum/likes/./src/common/query/posts/LikedByGambit.ts","webpack://@flarum/likes/./src/common/extend.ts","webpack://@flarum/likes/./src/forum/extend.ts","webpack://@flarum/likes/./src/forum/index.js","webpack://@flarum/likes/./src/forum/addLikeAction.js","webpack://@flarum/likes/./src/forum/addLikesList.js","webpack://@flarum/likes/./src/forum/addLikesTabToUserProfile.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extend');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Button');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/CommentPost');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Link');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/helpers/punctuateSeries');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/helpers/username');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Icon');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Modal');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Avatar');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/states/PaginatedListState');","import PaginatedListState from 'flarum/common/states/PaginatedListState';\nexport default class PostLikesModalState extends PaginatedListState {\n  constructor(params, page) {\n    if (page === void 0) {\n      page = 1;\n    }\n    const limit = 10;\n    params.page = {\n      ...(params.page || {}),\n      limit\n    };\n    super(params, page, limit);\n  }\n  get type() {\n    return 'users';\n  }\n}\nflarum.reg.add('flarum-likes', 'forum/states/PostLikesModalState', PostLikesModalState);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/LoadingIndicator');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Form');","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Link from 'flarum/common/components/Link';\nimport Avatar from 'flarum/common/components/Avatar';\nimport username from 'flarum/common/helpers/username';\nimport PostLikesModalState from '../states/PostLikesModalState';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Form from 'flarum/common/components/Form';\nexport default class PostLikesModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.state = new PostLikesModalState({\n      filter: {\n        liked: this.attrs.post.id()\n      }\n    });\n    this.state.refresh();\n  }\n  className() {\n    return 'PostLikesModal Modal--small';\n  }\n  title() {\n    return app.translator.trans('flarum-likes.forum.post_likes.title');\n  }\n  content() {\n    return m('[', null, m(\"div\", {\n      className: \"Modal-body\"\n    }, this.state.isInitialLoading() ? m(LoadingIndicator, null) : m(\"ul\", {\n      className: \"PostLikesModal-list\"\n    }, this.state.getPages().map(page => page.items.map(user => m(\"li\", null, m(Link, {\n      href: app.route.user(user)\n    }, m(Avatar, {\n      user: user\n    }), \" \", username(user))))))), this.state.hasNext() ? m(\"div\", {\n      className: \"Modal-footer\"\n    }, m(Form, {\n      className: \"Form--centered\"\n    }, m(\"div\", {\n      className: \"Form-group\"\n    }, m(Button, {\n      className: \"Button Button--block\",\n      onclick: () => this.state.loadNext(),\n      loading: this.state.isLoadingNext()\n    }, app.translator.trans('flarum-likes.forum.post_likes.load_more_button'))))) : null);\n  }\n}\nflarum.reg.add('flarum-likes', 'forum/components/PostLikesModal', PostLikesModal);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/UserPage');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/LinkButton');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extenders');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/models/Post');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/PostsUserPage');","import PostsUserPage from 'flarum/forum/components/PostsUserPage';\n/**\n * The `LikesUserPage` component shows posts which user the user liked.\n */\nexport default class LikesUserPage extends PostsUserPage {\n  params(user) {\n    return {\n      filter: {\n        type: 'comment',\n        likedBy: user.id()\n      }\n    };\n  }\n}\nflarum.reg.add('flarum-likes', 'forum/components/LikesUserPage', LikesUserPage);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'forum/components/Notification');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/utils/string');","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\nexport default class PostLikedNotification extends Notification {\n  icon() {\n    return 'far fa-thumbs-up';\n  }\n  href() {\n    return app.route.post(this.attrs.notification.subject());\n  }\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n    return app.translator.trans('flarum-likes.forum.notifications.post_liked_text', {\n      user,\n      count: 1\n    });\n  }\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\nflarum.reg.add('flarum-likes', 'forum/components/PostLikedNotification', PostLikedNotification);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/query/IGambit');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/app');","import { KeyValueGambit } from 'flarum/common/query/IGambit';\nimport app from 'flarum/common/app';\nexport default class LikedByGambit extends KeyValueGambit {\n  key() {\n    return app.translator.trans('flarum-likes.lib.gambits.posts.likedBy.key', {}, true);\n  }\n  hint() {\n    return app.translator.trans('flarum-likes.lib.gambits.posts.likedBy.hint', {}, true);\n  }\n  filterKey() {\n    return 'likedBy';\n  }\n}\nflarum.reg.add('flarum-likes', 'common/query/posts/LikedByGambit', LikedByGambit);","import Extend from 'flarum/common/extenders';\nimport LikedByGambit from './query/posts/LikedByGambit';\nexport default [new Extend.Search() //\n.gambit('posts', LikedByGambit)];","import Extend from 'flarum/common/extenders';\nimport Post from 'flarum/common/models/Post';\nimport LikesUserPage from './components/LikesUserPage';\nimport PostLikedNotification from './components/PostLikedNotification';\nimport commonExtend from '../common/extend';\nexport default [...commonExtend, new Extend.Routes() //\n.add('user.likes', '/u/:username/likes', LikesUserPage), new Extend.Notification() //\n.add('postLiked', PostLikedNotification), new Extend.Model(Post) //\n.hasMany('likes').attribute('likesCount').attribute('canLike')];","import { extend, override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport addLikeAction from './addLikeAction';\nimport addLikesList from './addLikesList';\nimport addLikesTabToUserProfile from './addLikesTabToUserProfile';\nexport { default as extend } from './extend';\napp.initializers.add('flarum-likes', () => {\n  addLikeAction();\n  addLikesList();\n  addLikesTabToUserProfile();\n  extend('flarum/forum/components/NotificationGrid', 'notificationTypes', function (items) {\n    items.add('postLiked', {\n      name: 'postLiked',\n      icon: 'far fa-thumbs-up',\n      label: app.translator.trans('flarum-likes.forum.settings.notify_post_liked_label')\n    });\n  });\n\n  // Auto scope the search to the current user liked posts.\n  override('flarum/forum/components/SearchModal', 'defaultActiveSource', function (original) {\n    const orig = original();\n    if (!orig && app.current.data.routeName && app.current.data.routeName.includes('user.likes') && app.current.data.user) {\n      return 'posts';\n    }\n    return orig;\n  });\n  extend('flarum/forum/components/SearchModal', 'defaultFilters', function (filters) {\n    if (app.current.data.routeName && app.current.data.routeName.includes('user.likes') && app.current.data.user) {\n      filters.posts.likedBy = app.current.data.user.username();\n    }\n  });\n});","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n    const post = this.attrs.post;\n    if (post.isHidden() || !post.canLike()) return;\n    const likes = post.likes();\n    let isLiked = app.session.user && likes && likes.some(user => user === app.session.user);\n    items.add('like', m(Button, {\n      className: \"Button Button--link\",\n      onclick: () => {\n        isLiked = !isLiked;\n        post.save({\n          isLiked\n        });\n\n        // We've saved the fact that we do or don't like the post, but in order\n        // to provide instantaneous feedback to the user, we'll need to add or\n        // remove the like from the relationship data manually.\n        const data = post.data.relationships.likes.data;\n        data.some((like, i) => {\n          if (like.id === app.session.user.id()) {\n            data.splice(i, 1);\n            return true;\n          }\n        });\n        if (isLiked) {\n          data.unshift({\n            type: 'users',\n            id: app.session.user.id()\n          });\n        }\n      }\n    }, app.translator.trans(isLiked ? 'flarum-likes.forum.post.unlike_link' : 'flarum-likes.forum.post.like_link')));\n  });\n}","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Link from 'flarum/common/components/Link';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport username from 'flarum/common/helpers/username';\nimport Icon from 'flarum/common/components/Icon';\nimport Button from 'flarum/common/components/Button';\nimport PostLikesModal from './components/PostLikesModal';\nexport default function () {\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const post = this.attrs.post;\n    const likes = post.likes();\n    if (likes && likes.length) {\n      const limit = 4;\n      const overLimit = post.likesCount() > limit;\n\n      // Construct a list of names of users who have liked this post. Make sure the\n      // current user is first in the list, and cap a maximum of 4 items.\n      const names = likes.sort(a => a === app.session.user ? -1 : 1).slice(0, overLimit ? limit - 1 : limit).map(user => {\n        return m(Link, {\n          href: app.route.user(user)\n        }, user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user));\n      });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = post.likesCount() - names.length;\n        const label = app.translator.trans('flarum-likes.forum.post.others_link', {\n          count\n        });\n        if (app.forum.attribute('canSearchUsers')) {\n          names.push(m(Button, {\n            className: \"Button Button--ua-reset Button--text\",\n            onclick: e => {\n              e.preventDefault();\n              app.modal.show(PostLikesModal, {\n                post\n              });\n            }\n          }, label));\n        } else {\n          names.push(m(\"span\", null, label));\n        }\n      }\n      items.add('liked', m(\"div\", {\n        className: \"Post-likedBy\"\n      }, m(Icon, {\n        name: 'far fa-thumbs-up'\n      }), app.translator.trans(\"flarum-likes.forum.post.liked_by\".concat(likes[0] === app.session.user ? '_self' : '', \"_text\"), {\n        count: names.length,\n        users: punctuateSeries(names)\n      })));\n    }\n  });\n}","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nexport default function addLikesTabToUserProfile() {\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const user = this.user;\n    items.add('likes', m(LinkButton, {\n      href: app.route('user.likes', {\n        username: user == null ? void 0 : user.slug()\n      }),\n      icon: \"far fa-thumbs-up\"\n    }, app.translator.trans('flarum-likes.forum.user.likes_link')), 88);\n  });\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","reg","PostLikesModalState","constructor","params","page","limit","super","type","add","PostLikesModal","oninit","vnode","this","state","filter","liked","attrs","post","id","refresh","className","title","trans","content","m","isInitialLoading","getPages","map","items","user","href","hasNext","onclick","loadNext","loading","isLoadingNext","LikesUserPage","likedBy","PostLikedNotification","icon","notification","subject","fromUser","count","excerpt","truncate","contentPlain","LikedByGambit","KeyValueGambit","hint","filterKey","gambit","hasMany","attribute","extend","isHidden","canLike","likes","isLiked","some","save","data","relationships","like","i","splice","unshift","length","overLimit","likesCount","names","sort","slice","label","push","e","preventDefault","show","name","concat","users","username","slug","override","original","orig","routeName","includes","filters","posts"],"sourceRoot":""}