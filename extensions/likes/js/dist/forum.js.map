{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/likes/webpack/bootstrap","webpack://@flarum/likes/webpack/runtime/compat get default export","webpack://@flarum/likes/webpack/runtime/define property getters","webpack://@flarum/likes/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/likes/webpack/runtime/make namespace object","webpack://@flarum/likes/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Link']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/punctuateSeries']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/states/PaginatedListState']\"","webpack://@flarum/likes/./src/forum/states/PostLikesModalState.ts","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flarum/likes/./src/forum/components/PostLikesModal.tsx","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/utils/string']\"","webpack://@flarum/likes/./src/forum/components/PostLikedNotification.js","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/extenders']\"","webpack://@flarum/likes/external root \"flarum.core.compat['common/models/Post']\"","webpack://@flarum/likes/external root \"flarum.core.compat['forum/components/PostsUserPage']\"","webpack://@flarum/likes/./src/forum/components/LikesUserPage.tsx","webpack://@flarum/likes/./src/forum/extend.ts","webpack://@flarum/likes/./src/forum/index.js","webpack://@flarum/likes/./src/forum/addLikeAction.js","webpack://@flarum/likes/./src/forum/addLikesList.js","webpack://@flarum/likes/./src/forum/addLikesTabToUserProfile.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/punctuateSeries'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/states/PaginatedListState'];","import PaginatedListState, { PaginatedListParams } from 'flarum/common/states/PaginatedListState';\nimport User from 'flarum/common/models/User';\n\nexport interface PostLikesModalListParams extends PaginatedListParams {\n  filter: {\n    liked: string;\n  };\n  page?: {\n    offset?: number;\n    limit: number;\n  };\n}\n\nexport default class PostLikesModalState<P extends PostLikesModalListParams = PostLikesModalListParams> extends PaginatedListState<User, P> {\n  constructor(params: P, page: number = 1) {\n    const limit = 10;\n\n    params.page = { ...(params.page || {}), limit };\n\n    super(params, page, limit);\n  }\n\n  get type(): string {\n    return 'users';\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport type { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport type Post from 'flarum/common/models/Post';\nimport type Mithril from 'mithril';\nimport PostLikesModalState from '../states/PostLikesModalState';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nexport interface IPostLikesModalAttrs extends IInternalModalAttrs {\n  post: Post;\n}\n\nexport default class PostLikesModal<CustomAttrs extends IPostLikesModalAttrs = IPostLikesModalAttrs> extends Modal<CustomAttrs, PostLikesModalState> {\n  oninit(vnode: Mithril.VnodeDOM<CustomAttrs, this>) {\n    super.oninit(vnode);\n\n    this.state = new PostLikesModalState({\n      filter: {\n        liked: this.attrs.post.id()!,\n      },\n    });\n\n    this.state.refresh();\n  }\n\n  className() {\n    return 'PostLikesModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-likes.forum.post_likes.title');\n  }\n\n  content() {\n    return (\n      <>\n        <div className=\"Modal-body\">\n          {this.state.isInitialLoading() ? (\n            <LoadingIndicator />\n          ) : (\n            <ul className=\"PostLikesModal-list\">\n              {this.state.getPages().map((page) =>\n                page.items.map((user) => (\n                  <li>\n                    <Link href={app.route.user(user)}>\n                      {avatar(user)} {username(user)}\n                    </Link>\n                  </li>\n                ))\n              )}\n            </ul>\n          )}\n        </div>\n        {this.state.hasNext() ? (\n          <div className=\"Modal-footer\">\n            <div className=\"Form Form--centered\">\n              <div className=\"Form-group\">\n                <Button className=\"Button Button--block\" onclick={() => this.state.loadNext()} loading={this.state.isLoadingNext()}>\n                  {app.translator.trans('flarum-likes.forum.post_likes.load_more_button')}\n                </Button>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostLikedNotification extends Notification {\n  icon() {\n    return 'far fa-thumbs-up';\n  }\n\n  href() {\n    return app.route.post(this.attrs.notification.subject());\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.trans('flarum-likes.forum.notifications.post_liked_text', { user, count: 1 });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostsUserPage'];","import app from 'flarum/forum/app';\nimport PostsUserPage from 'flarum/forum/components/PostsUserPage';\n\n/**\n * The `LikesUserPage` component shows posts which user the user liked.\n */\nexport default class LikesUserPage extends PostsUserPage {\n  /**\n   * Load a new page of the user's activity feed.\n   *\n   * @param offset The position to start getting results from.\n   * @protected\n   */\n  loadResults(offset: number) {\n    return app.store.find('posts', {\n      filter: {\n        type: 'comment',\n        likedBy: this.user.id(),\n      },\n      page: { offset, limit: this.loadLimit },\n      sort: '-createdAt',\n    });\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport Post from 'flarum/common/models/Post';\nimport User from 'flarum/common/models/User';\nimport LikesUserPage from './components/LikesUserPage';\n\nexport default [\n  new Extend.Routes() //\n    .add('user.likes', '/u/:username/likes', LikesUserPage),\n\n  new Extend.Model(Post) //\n    .hasMany<User>('likes')\n    .attribute<number>('likesCount')\n    .attribute<boolean>('canLike'),\n];\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nimport addLikeAction from './addLikeAction';\nimport addLikesList from './addLikesList';\nimport PostLikedNotification from './components/PostLikedNotification';\nimport addLikesTabToUserProfile from './addLikesTabToUserProfile';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('flarum-likes', () => {\n  app.notificationComponents.postLiked = PostLikedNotification;\n\n  addLikeAction();\n  addLikesList();\n  addLikesTabToUserProfile();\n\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('postLiked', {\n      name: 'postLiked',\n      icon: 'far fa-thumbs-up',\n      label: app.translator.trans('flarum-likes.forum.settings.notify_post_liked_label'),\n    });\n  });\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n    const post = this.attrs.post;\n\n    if (post.isHidden() || !post.canLike()) return;\n\n    const likes = post.likes();\n\n    let isLiked = app.session.user && likes && likes.some((user) => user === app.session.user);\n\n    items.add(\n      'like',\n      <Button\n        className=\"Button Button--link\"\n        onclick={() => {\n          isLiked = !isLiked;\n\n          post.save({ isLiked });\n\n          // We've saved the fact that we do or don't like the post, but in order\n          // to provide instantaneous feedback to the user, we'll need to add or\n          // remove the like from the relationship data manually.\n          const data = post.data.relationships.likes.data;\n          data.some((like, i) => {\n            if (like.id === app.session.user.id()) {\n              data.splice(i, 1);\n              return true;\n            }\n          });\n\n          if (isLiked) {\n            data.unshift({ type: 'users', id: app.session.user.id() });\n          }\n        }}\n      >\n        {app.translator.trans(isLiked ? 'flarum-likes.forum.post.unlike_link' : 'flarum-likes.forum.post.like_link')}\n      </Button>\n    );\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Link from 'flarum/common/components/Link';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport username from 'flarum/common/helpers/username';\nimport icon from 'flarum/common/helpers/icon';\nimport Button from 'flarum/common/components/Button';\n\nimport PostLikesModal from './components/PostLikesModal';\n\nexport default function () {\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const post = this.attrs.post;\n    const likes = post.likes();\n\n    if (likes && likes.length) {\n      const limit = 4;\n      const overLimit = post.likesCount() > limit;\n\n      // Construct a list of names of users who have liked this post. Make sure the\n      // current user is first in the list, and cap a maximum of 4 items.\n      const names = likes\n        .sort((a) => (a === app.session.user ? -1 : 1))\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map((user) => {\n          return (\n            <Link href={app.route.user(user)}>\n              {user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user)}\n            </Link>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = post.likesCount() - names.length;\n        const label = app.translator.trans('flarum-likes.forum.post.others_link', { count });\n\n        if (app.forum.attribute('canSearchUsers')) {\n          names.push(\n            <Button\n              className=\"Button Button--ua-reset Button--text\"\n              onclick={(e) => {\n                e.preventDefault();\n                app.modal.show(PostLikesModal, { post });\n              }}\n            >\n              {label}\n            </Button>\n          );\n        } else {\n          names.push(<span>{label}</span>);\n        }\n      }\n\n      items.add(\n        'liked',\n        <div className=\"Post-likedBy\">\n          {icon('far fa-thumbs-up')}\n          {app.translator.trans(`flarum-likes.forum.post.liked_by${likes[0] === app.session.user ? '_self' : ''}_text`, {\n            count: names.length,\n            users: punctuateSeries(names),\n          })}\n        </div>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport type Mithril from 'mithril';\n\nexport default function addLikesTabToUserProfile() {\n  extend(UserPage.prototype, 'navItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n    items.add(\n      'likes',\n      <LinkButton href={app.route('user.likes', { username: user?.slug() })} icon=\"far fa-thumbs-up\">\n        {app.translator.trans('flarum-likes.forum.user.likes_link')}\n      </LinkButton>,\n      88\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","PostLikesModalState","PaginatedListState","constructor","params","page","limit","super","type","PostLikesModal","Modal","oninit","vnode","this","state","filter","liked","attrs","post","id","refresh","className","title","app","content","m","'['","isInitialLoading","LoadingIndicator","getPages","map","items","user","Link","href","avatar","username","hasNext","Button","onclick","loadNext","loading","isLoadingNext","PostLikedNotification","Notification","icon","notification","subject","fromUser","count","excerpt","truncate","contentPlain","LikesUserPage","PostsUserPage","loadResults","offset","likedBy","loadLimit","sort","Extend","add","Post","hasMany","attribute","extend","CommentPost","isHidden","canLike","likes","isLiked","some","save","data","relationships","like","i","splice","unshift","length","overLimit","likesCount","names","slice","label","push","e","preventDefault","concat","users","punctuateSeries","UserPage","LinkButton","slug","NotificationGrid","name"],"sourceRoot":""}