{"version":3,"file":"forum/components/MessagesPage.js","mappings":"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","sources":["webpack://@flarum/messages/./src/forum/components/DialogListItem.tsx","webpack://@flarum/messages/./src/forum/components/DialogList.tsx","webpack://@flarum/messages/./src/forum/components/MessagesSidebar.tsx","webpack://@flarum/messages/./src/forum/components/Message.tsx","webpack://@flarum/messages/./src/forum/components/MessageStream.tsx","webpack://@flarum/messages/./src/forum/states/MessageStreamState.ts","webpack://@flarum/messages/./src/forum/components/DetailsModal.tsx","webpack://@flarum/messages/./src/forum/components/DialogSection.tsx","webpack://@flarum/messages/./src/forum/components/MessagesPage.tsx"],"sourcesContent":["import Component from 'flarum/common/Component';\nimport classList from 'flarum/common/utils/classList';\nimport Link from 'flarum/common/components/Link';\nimport app from 'flarum/forum/app';\nimport Avatar from 'flarum/common/components/Avatar';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Button from 'flarum/common/components/Button';\nexport default class DialogListItem extends Component {\n  view(vnode) {\n    const dialog = this.attrs.dialog;\n    const recipient = dialog.recipient();\n    const lastMessage = dialog.lastMessage();\n    return m(\"li\", {\n      className: classList('DialogListItem', {\n        'DialogListItem--unread': dialog.unreadCount(),\n        active: this.attrs.active\n      })\n    }, m(Link, {\n      href: app.route.dialog(dialog),\n      className: classList('DialogListItem-button', {\n        active: this.attrs.active\n      })\n    }, m(\"div\", {\n      className: \"DialogListItem-avatar\"\n    }, m(Avatar, {\n      user: recipient\n    }), !!dialog.unreadCount() && m(\"div\", {\n      className: \"Bubble Bubble--primary\"\n    }, dialog.unreadCount())), m(\"div\", {\n      className: \"DialogListItem-content\"\n    }, m(\"div\", {\n      className: \"DialogListItem-title\"\n    }, username(recipient), humanTime(dialog.lastMessageAt()), this.attrs.actions && m(\"div\", {\n      className: \"DialogListItem-actions\"\n    }, this.actionItems().toArray())), m(\"div\", {\n      className: \"DialogListItem-lastMessage\"\n    }, lastMessage ? lastMessage.contentPlain()?.slice(0, 80) : ''))));\n  }\n  actionItems() {\n    const items = new ItemList();\n    items.add('markAsRead', m(Button, {\n      className: \"Notification-action Button Button--link\",\n      icon: \"fas fa-check\",\n      \"aria-label\": app.translator.trans('flarum-messages.forum.dialog_list.mark_as_read_tooltip'),\n      onclick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.attrs.dialog.save({\n          lastReadMessageId: (this.attrs.dialog.data.relationships?.lastMessage.data).id\n        }).finally(() => {\n          if (this.attrs.dialog.unreadCount() === 0) {\n            app.session.user.pushAttributes({\n              messageCount: (app.session.user.attribute('messageCount') ?? 1) - 1\n            });\n          }\n          m.redraw();\n        });\n      }\n    }), 100);\n    return items;\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/DialogListItem', DialogListItem);","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport DialogListItem from './DialogListItem';\nexport default class DialogList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n  }\n  oncreate(vnode) {\n    super.oncreate(vnode);\n  }\n  onupdate(vnode) {\n    super.onupdate(vnode);\n  }\n  view() {\n    return m(\"div\", {\n      className: \"DialogList\"\n    }, m(\"ul\", {\n      className: \"DialogList-list\"\n    }, this.attrs.state.getAllItems().map(dialog => m(DialogListItem, {\n      dialog: dialog,\n      active: this.attrs.activeDialog?.id() === dialog.id(),\n      actions: this.attrs.itemActions\n    }))), this.attrs.state.hasNext() && !this.attrs.hideMore && m(\"div\", {\n      className: \"DialogList-loadMore\"\n    }, m(Button, {\n      className: \"Button\",\n      onclick: this.attrs.state.loadNext.bind(this.attrs.state)\n    }, app.translator.trans('flarum-messages.forum.dialog_list.load_more_button'))));\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/DialogList', DialogList);","import app from 'flarum/forum/app';\nimport IndexSidebar from 'flarum/forum/components/IndexSidebar';\nimport Button from 'flarum/common/components/Button';\nexport default class MessagesSidebar extends IndexSidebar {\n  static initAttrs(attrs) {\n    attrs.className = 'MessagesPage-nav';\n  }\n  items() {\n    const items = super.items();\n    const canSendAnyMessage = app.session.user.attribute('canSendAnyMessage');\n    items.remove('newDiscussion');\n    items.add('newMessage', m(Button, {\n      icon: \"fas fa-edit\",\n      className: \"Button Button--primary IndexPage-newDiscussion MessagesPage-newMessage\",\n      itemClassName: \"App-primaryControl\",\n      onclick: () => {\n        return this.newMessageAction();\n      },\n      disabled: !canSendAnyMessage\n    }, app.translator.trans('flarum-messages.forum.messages_page.new_message_button')), 10);\n    return items;\n  }\n\n  /**\n   * Open the composer for a new message.\n   */\n  newMessageAction() {\n    return flarum.reg.asyncModuleImport('flarum/forum/components/ComposerBody').then(() => {\n      app.composer.load(() => import(/* webpackChunkName: 'forum/components/MessageComposer', webpackMode: 'lazy-once' */ './MessageComposer'), {\n        user: app.session.user,\n        onsubmit: () => {\n          app.dialogs.refresh();\n        }\n      }).then(() => app.composer.show());\n      return app.composer;\n    });\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/MessagesSidebar', MessagesSidebar);","import ItemList from 'flarum/common/utils/ItemList';\nimport AbstractPost from 'flarum/forum/components/AbstractPost';\nimport Avatar from 'flarum/common/components/Avatar';\nimport Comment from 'flarum/forum/components/Comment';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport PostMeta from 'flarum/forum/components/PostMeta';\nimport classList from 'flarum/common/utils/classList';\n/**\n * The `Post` component displays a single post. The basic post template just\n * includes a controls dropdown; subclasses must implement `content` and `attrs`\n * methods.\n */\nexport default class Message extends AbstractPost {\n  oninit(vnode) {\n    super.oninit(vnode);\n  }\n  user() {\n    return this.attrs.message.user();\n  }\n  controls() {\n    return [];\n  }\n  freshness() {\n    return this.attrs.message.freshness;\n  }\n  createdByStarter() {\n    return false;\n  }\n  onbeforeupdate(vnode) {\n    return super.onbeforeupdate(vnode);\n  }\n  onupdate(vnode) {\n    super.onupdate(vnode);\n  }\n  elementAttrs() {\n    const message = this.attrs.message;\n    const attrs = super.elementAttrs();\n    attrs.className = classList(attrs.className || null, 'Message', {\n      'Post--renderFailed': message.renderFailed(),\n      revealContent: false,\n      editing: false\n    });\n    return attrs;\n  }\n  header() {\n    return super.header();\n  }\n  content() {\n    return super.content().concat([m(Comment, {\n      headerItems: this.headerItems(),\n      cardVisible: false,\n      isEditing: false,\n      isHidden: false,\n      contentHtml: this.attrs.message.contentHtml(),\n      user: this.attrs.message.user()\n    })]);\n  }\n  classes(existing) {\n    return super.classes(existing);\n  }\n  actionItems() {\n    return super.actionItems();\n  }\n  footerItems() {\n    return super.footerItems();\n  }\n  sideItems() {\n    return super.sideItems();\n  }\n  avatar() {\n    return this.attrs.message.user() ? m(Avatar, {\n      user: this.attrs.message.user()\n    }) : '';\n  }\n  headerItems() {\n    const items = new ItemList();\n    const message = this.attrs.message;\n    items.add('user', m(PostUser, {\n      post: message\n    }), 100);\n    items.add('meta', m(PostMeta, {\n      post: message\n    }));\n    return items;\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/Message', Message);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Stream from 'flarum/common/utils/Stream';\nimport Button from 'flarum/common/components/Button';\nimport ScrollListener from 'flarum/common/utils/ScrollListener';\nimport Message from './Message';\nexport default class MessageStream extends Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"replyPlaceholderComponent\", Stream(null));\n    _defineProperty(this, \"loadingPostComponent\", Stream(null));\n    _defineProperty(this, \"scrollListener\", void 0);\n    _defineProperty(this, \"initialToBottomScroll\", false);\n    _defineProperty(this, \"lastTime\", null);\n    _defineProperty(this, \"checkedRead\", false);\n    _defineProperty(this, \"markingAsRead\", false);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // We need the lazy ReplyPlaceholder and LoadingPost components to be loaded.\n    Promise.all([flarum.reg.asyncModuleImport('flarum/forum/components/ReplyPlaceholder'), flarum.reg.asyncModuleImport('flarum/forum/components/LoadingPost')]).then(_ref => {\n      let [ReplyPlaceholder, LoadingPost] = _ref;\n      this.replyPlaceholderComponent(ReplyPlaceholder.default);\n      this.loadingPostComponent(LoadingPost.default);\n    });\n  }\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    this.scrollListener = new ScrollListener(this.onscroll.bind(this), this.element);\n    setTimeout(() => {\n      this.scrollListener.start();\n      this.element.addEventListener('scrollend', this.markAsRead.bind(this));\n    });\n  }\n  onupdate(vnode) {\n    super.onupdate(vnode);\n\n    // @todo: for future versions, consider using the post stream scrubber to scroll through the messages. (big task..)\n    // @todo: introduce read status, to jump to the first unread message instead.\n    if (!this.initialToBottomScroll && !this.attrs.state.isLoading()) {\n      this.scrollToBottom();\n      this.initialToBottomScroll = true;\n    }\n    if (this.initialToBottomScroll && !this.checkedRead) {\n      this.markAsRead();\n      this.checkedRead = true;\n    }\n  }\n  onremove(vnode) {\n    super.onremove(vnode);\n    this.scrollListener.stop();\n  }\n  view() {\n    return m(\"div\", {\n      className: \"MessageStream\"\n    }, this.attrs.state.isLoading() ? m(LoadingIndicator, null) : this.content());\n  }\n  content() {\n    const items = [];\n    const messages = this.attrs.state.getAllItems().sort((a, b) => a.createdAt().getTime() - b.createdAt().getTime());\n    const ReplyPlaceholder = this.replyPlaceholderComponent();\n    const LoadingPost = this.loadingPostComponent();\n    if (messages[0].id() !== (this.attrs.dialog.data.relationships?.firstMessage.data).id) {\n      items.push(m(\"div\", {\n        className: \"MessageStream-item\",\n        key: \"loadPrevious\"\n      }, m(Button, {\n        onclick: () => this.whileMaintainingScroll(() => this.attrs.state.loadNext()),\n        type: \"button\",\n        className: \"Button Button--block MessageStream-loadPrev\"\n      }, app.translator.trans('flarum-messages.forum.messages_page.stream.load_previous_button'))));\n      if (LoadingPost) {\n        items.push(m(\"div\", {\n          className: \"MessageStream-item\",\n          key: \"loading-prev\"\n        }, m(LoadingPost, null)));\n      }\n    }\n    messages.forEach((message, index) => items.push(this.messageItem(message, index)));\n    if (ReplyPlaceholder) {\n      items.push(m(\"div\", {\n        className: \"MessageStream-item\",\n        key: \"reply\" /*data-index={this.attrs.state.count()}*/\n      }, m(ReplyPlaceholder, {\n        discussion: this.attrs.dialog,\n        onclick: () => {\n          flarum.reg.asyncModuleImport('flarum/forum/components/ComposerBody').then(() => {\n            app.composer.load(() => import(/* webpackChunkName: 'forum/components/MessageComposer', webpackMode: 'lazy-once' */ './MessageComposer'), {\n              user: app.session.user,\n              replyingTo: this.attrs.dialog,\n              onsubmit: () => {\n                this.attrs.state.refresh().then(() => setTimeout(() => this.scrollToBottom(), 50));\n              }\n            }).then(() => app.composer.show());\n          });\n        },\n        composingReply: () => app.composer.composingMessageTo(this.attrs.dialog)\n      })));\n    }\n    return items;\n  }\n  messageItem(message, index) {\n    return m(\"div\", {\n      className: \"MessageStream-item\",\n      key: index,\n      \"data-id\": message.id()\n    }, this.timeGap(message), m(Message, {\n      message: message\n    }));\n  }\n  timeGap(message) {\n    if (message.id() === (this.attrs.dialog.data.relationships?.firstMessage.data).id) {\n      this.lastTime = message.createdAt();\n      return m(\"div\", {\n        class: \"PostStream-timeGap\"\n      }, m(\"span\", null, app.translator.trans('flarum-messages.forum.messages_page.stream.start_of_the_conversation')));\n    }\n    const lastTime = this.lastTime;\n    const dt = message.createdAt().getTime() - (lastTime?.getTime() || 0);\n    this.lastTime = message.createdAt();\n    if (lastTime && dt > 1000 * 60 * 60 * 24 * 4) {\n      return m(\"div\", {\n        className: \"PostStream-timeGap\"\n      }, m(\"span\", null, app.translator.trans('flarum-messages.forum.messages_page.stream.time_lapsed_text', {\n        period: dayjs().add(dt, 'ms').fromNow(true)\n      })));\n    }\n    return null;\n  }\n  onscroll() {\n    this.whileMaintainingScroll(() => {\n      if (this.element.scrollTop <= 80 && this.attrs.state.hasNext()) {\n        return this.attrs.state.loadNext();\n      }\n      if (this.element.scrollTop + this.element.clientHeight === this.element.scrollHeight && this.attrs.state.hasPrev()) {\n        return this.attrs.state.loadPrev();\n      }\n      return null;\n    });\n  }\n  scrollToBottom() {\n    this.element.scrollTop = this.element.scrollHeight;\n  }\n  whileMaintainingScroll(callback) {\n    const scrollTop = this.element.scrollTop;\n    const scrollHeight = this.element.scrollHeight;\n    const result = callback();\n    if (result instanceof Promise) {\n      result.then(() => {\n        requestAnimationFrame(() => {\n          this.element.scrollTop = this.element.scrollHeight - scrollHeight + scrollTop;\n        });\n      });\n    }\n  }\n  markAsRead() {\n    const lastVisibleId = Number(this.$('.MessageStream-item[data-id]').filter((_, $el) => {\n      if (this.element.scrollHeight <= this.element.clientHeight) {\n        return true;\n      }\n      return this.$().offset().top + this.element.clientHeight > $($el).offset().top;\n    }).last().data('id'));\n    if (lastVisibleId && app.session.user && lastVisibleId > (this.attrs.dialog.lastReadMessageId() || 0) && !this.markingAsRead) {\n      this.markingAsRead = true;\n      this.attrs.dialog.save({\n        lastReadMessageId: lastVisibleId\n      }).finally(() => {\n        this.markingAsRead = false;\n        if (this.attrs.dialog.unreadCount() === 0) {\n          app.session.user.pushAttributes({\n            messageCount: (app.session.user.attribute('messageCount') ?? 1) - 1\n          });\n        }\n        m.redraw();\n      });\n    }\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/MessageStream', MessageStream);","import PaginatedListState from 'flarum/common/states/PaginatedListState';\nexport default class MessageStreamState extends PaginatedListState {\n  constructor(params, page) {\n    if (page === void 0) {\n      page = 1;\n    }\n    super(params, page, null);\n  }\n  get type() {\n    return 'dialog-messages';\n  }\n  getAllItems() {\n    return super.getAllItems();\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/states/MessageStreamState', MessageStreamState);","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Avatar from 'flarum/common/components/Avatar';\nimport fullTime from 'flarum/common/helpers/fullTime';\nimport username from 'flarum/common/helpers/username';\nimport Link from 'flarum/common/components/Link';\nimport listItems from 'flarum/common/helpers/listItems';\nexport default class DetailsModal extends Modal {\n  className() {\n    return 'Modal--small Modal--flat DetailsModal';\n  }\n  title() {\n    return app.translator.trans('flarum-messages.forum.dialog_section.details_modal.title');\n  }\n  content() {\n    let recipients = (this.attrs.dialog.users() || []).filter(Boolean);\n    return m(\"div\", {\n      className: \"Modal-body DetailsModal-infoGroups\"\n    }, m(\"div\", {\n      className: \"DetailsModal-recipients DetailsModal-info\"\n    }, m(\"div\", {\n      className: \"DetailsModal-info-title\"\n    }, app.translator.trans('flarum-messages.forum.dialog_section.details_modal.recipients')), m(\"div\", {\n      className: \"DetailsModal-recipients-list\"\n    }, recipients?.map(recipient => {\n      return m(\"div\", {\n        className: \"DetailsModal-recipient\"\n      }, m(Avatar, {\n        user: recipient\n      }), m(Link, {\n        href: app.route('user', {\n          username: recipient.slug()\n        })\n      }, m(\"span\", {\n        className: \"DetailsModal-recipient-username\"\n      }, username(recipient))), m(\"div\", {\n        className: \"badges\"\n      }, listItems(recipient.badges().toArray())));\n    }))), this.infoItems().toArray());\n  }\n  infoItems() {\n    const items = new ItemList();\n    items.add('created', m(\"div\", {\n      className: \"DetailsModal-createdAt DetailsModal-info\"\n    }, m(\"div\", {\n      className: \"DetailsModal-info-title\"\n    }, app.translator.trans('flarum-messages.forum.dialog_section.details_modal.created_at')), m(\"div\", {\n      className: \"DetailsModal-info-content\"\n    }, fullTime(this.attrs.dialog.createdAt()))));\n    return items;\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/DetailsModal', DetailsModal);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Component from 'flarum/common/Component';\nimport MessageStream from './MessageStream';\nimport username from 'flarum/common/helpers/username';\nimport MessageStreamState from '../states/MessageStreamState';\nimport Avatar from 'flarum/common/components/Avatar';\nimport Link from 'flarum/common/components/Link';\nimport app from 'flarum/forum/app';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DetailsModal from './DetailsModal';\nimport listItems from 'flarum/common/helpers/listItems';\nexport default class DialogSection extends Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"loading\", false);\n    _defineProperty(this, \"messages\", void 0);\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.messages = new MessageStreamState({\n      filter: {\n        dialog: this.attrs.dialog.id()\n      },\n      sort: '-createdAt'\n    });\n    this.messages.refresh();\n  }\n  view() {\n    const recipient = this.attrs.dialog.recipient();\n    return m(\"div\", {\n      className: \"DialogSection\"\n    }, m(\"div\", {\n      className: \"DialogSection-header\"\n    }, m(Avatar, {\n      user: recipient\n    }), m(\"div\", {\n      className: \"DialogSection-header-info\"\n    }, recipient && m(Link, {\n      href: app.route.user(recipient)\n    }, m(\"h2\", null, username(recipient))) || m(\"h2\", null, username(recipient)), m(\"div\", {\n      className: \"badges\"\n    }, listItems(recipient?.badges().toArray() || []))), m(\"div\", {\n      className: \"DialogSection-header-actions\"\n    }, this.actionItems().toArray())), m(MessageStream, {\n      dialog: this.attrs.dialog,\n      state: this.messages\n    }));\n  }\n  actionItems() {\n    const items = new ItemList();\n    items.add('details', m(Dropdown, {\n      icon: \"fas fa-ellipsis-h\",\n      className: \"DialogSection-controls\",\n      buttonClassName: \"Button Button--icon\",\n      accessibleToggleLabel: app.translator.trans('flarum-messages.forum.dialog_section.controls_toggle_label'),\n      label: app.translator.trans('flarum-messages.forum.dialog_section.controls_toggle_label')\n    }, this.controlItems().toArray()));\n    return items;\n  }\n  controlItems() {\n    const items = new ItemList();\n    items.add('details', m(Button, {\n      icon: \"fas fa-info-circle\",\n      onclick: () => app.modal.show(DetailsModal, {\n        dialog: this.attrs.dialog\n      })\n    }, app.translator.trans('flarum-messages.forum.dialog_section.controls.details_button')));\n    return items;\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/DialogSection', DialogSection);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport PageStructure from 'flarum/forum/components/PageStructure';\nimport Icon from 'flarum/common/components/Icon';\nimport DialogList from './DialogList';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Stream from 'flarum/common/utils/Stream';\nimport InfoTile from 'flarum/common/components/InfoTile';\nimport MessagesSidebar from './MessagesSidebar';\nimport DialogSection from './DialogSection';\nimport listItems from 'flarum/common/helpers/listItems';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nexport default class MessagesPage extends Page {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"selectedDialog\", Stream(null));\n  }\n  oninit(vnode) {\n    super.oninit(vnode);\n    if (!app.session.user) {\n      m.route.set(app.route('index'));\n      return;\n    }\n    app.current.set('noTagsList', true);\n    if (!app.dialogs.hasItems()) {\n      app.dialogs.refresh().then(async () => {\n        if (app.dialogs.hasItems()) {\n          await this.initDialog();\n        }\n      });\n    } else {\n      this.initDialog();\n    }\n  }\n  dialogRequestParams() {\n    return {\n      include: 'users.groups'\n    };\n  }\n  async initDialog() {\n    const dialogId = m.route.param('id');\n    const title = app.translator.trans('flarum-messages.forum.messages_page.title', {}, true);\n    let dialog;\n    if (dialogId) {\n      dialog = app.store.getById('dialogs', dialogId) || (await app.store.find('dialogs', dialogId, this.dialogRequestParams()));\n    } else {\n      dialog = app.dialogs.getAllItems()[0];\n    }\n    this.selectedDialog(dialog);\n    if (dialog) {\n      app.setTitle(dialog.title());\n      app.history.push('dialog', dialog.title());\n    } else {\n      app.setTitle(title);\n      app.history.push('messages', title);\n    }\n    m.redraw();\n  }\n  onupdate(vnode) {\n    super.onupdate(vnode);\n\n    // Scroll the dialog list to the active dialog item if present and not visible.\n    const dialogElement = this.element.querySelector('.DialogListItem.active');\n    const container = this.element.querySelector('.DialogList');\n    if (dialogElement && $(container).offset().top + container.clientHeight <= $(dialogElement).offset().top) {\n      dialogElement.scrollIntoView();\n    }\n  }\n  view() {\n    return m(PageStructure, {\n      className: \"MessagesPage Page--vertical\",\n      loading: false,\n      hero: this.hero.bind(this),\n      sidebar: () => m(MessagesSidebar, null)\n    }, app.dialogs.isLoading() ? m(LoadingIndicator, null) : !app.dialogs.hasItems() ? m(InfoTile, {\n      icon: \"far fa-envelope-open\"\n    }, app.translator.trans('flarum-messages.forum.messages_page.empty_text')) : m(\"div\", {\n      className: \"MessagesPage-content\"\n    }, m(\"div\", {\n      className: \"MessagesPage-sidebar\",\n      key: \"sidebar\"\n    }, m(\"div\", {\n      className: \"IndexPage-toolbar\",\n      key: \"toolbar\"\n    }, m(\"ul\", {\n      className: \"IndexPage-toolbar-view\"\n    }, listItems(this.viewItems().toArray())), m(\"ul\", {\n      className: \"IndexPage-toolbar-action\"\n    }, listItems(this.actionItems().toArray()))), m(DialogList, {\n      key: \"list\",\n      state: app.dialogs,\n      activeDialog: this.selectedDialog()\n    })), this.selectedDialog() ? m(DialogSection, {\n      key: \"dialog\",\n      dialog: this.selectedDialog()\n    }) : m(LoadingIndicator, {\n      key: \"loading\",\n      display: \"block\"\n    })));\n  }\n  hero() {\n    return m(\"header\", {\n      className: \"Hero MessagesPageHero\"\n    }, m(\"div\", {\n      className: \"container\"\n    }, m(\"div\", {\n      className: \"containerNarrow\"\n    }, m(\"h1\", {\n      className: \"Hero-title\"\n    }, m(Icon, {\n      name: \"fas fa-envelope\"\n    }), \" \", app.translator.trans('flarum-messages.forum.messages_page.hero.title')), m(\"div\", {\n      className: \"Hero-subtitle\"\n    }, app.translator.trans('flarum-messages.forum.messages_page.hero.subtitle')))));\n  }\n\n  /**\n   * Build an item list for the part of the toolbar which is concerned with how\n   * the results are displayed. By default this is just a select box to change\n   * the way discussions are sorted.\n   */\n  viewItems() {\n    const items = new ItemList();\n    const sortMap = app.dialogs.sortMap();\n    const sortOptions = Object.keys(sortMap).reduce((acc, sortId) => {\n      const sort = sortMap[sortId];\n      acc[sortId] = typeof sort !== 'string' ? sort.label : app.translator.trans(`flarum-messages.forum.index_sort.${sortId}_button`);\n      return acc;\n    }, {});\n    items.add('sort', m(Dropdown, {\n      buttonClassName: \"Button\",\n      label: sortOptions[app.dialogs.getParams()?.sort || 0] || Object.values(sortOptions)[0],\n      accessibleToggleLabel: app.translator.trans('core.forum.index_sort.toggle_dropdown_accessible_label')\n    }, Object.keys(sortOptions).map(value => {\n      const label = sortOptions[value];\n      const active = (app.dialogs.getParams().sort || Object.keys(sortMap)[0]) === value;\n      return m(Button, {\n        icon: active ? 'fas fa-check' : true,\n        onclick: () => app.dialogs.changeSort(value),\n        active: active\n      }, label);\n    })));\n    return items;\n  }\n\n  /**\n   * Build an item list for the part of the toolbar which is about taking action\n   * on the results. By default this is just a \"mark all as read\" button.\n   */\n  actionItems() {\n    const items = new ItemList();\n    items.add('refresh', m(Button, {\n      title: app.translator.trans('flarum-messages.forum.messages_page.refresh_tooltip'),\n      \"aria-label\": app.translator.trans('flarum-messages.forum.messages_page.refresh_tooltip'),\n      icon: \"fas fa-sync\",\n      className: \"Button Button--icon\",\n      onclick: () => {\n        app.dialogs.refresh();\n      }\n    }));\n    if (app.session.user) {\n      items.add('markAllAsRead', m(Button, {\n        title: app.translator.trans('flarum-messages.forum.messages_page.mark_all_as_read_tooltip'),\n        \"aria-label\": app.translator.trans('flarum-messages.forum.messages_page.mark_all_as_read_tooltip'),\n        icon: \"fas fa-check\",\n        className: \"Button Button--icon\",\n        onclick: () => app.dialogs.markAllAsRead()\n      }));\n    }\n    return items;\n  }\n}\nflarum.reg.add('flarum-messages', 'forum/components/MessagesPage', MessagesPage);"],"names":["DialogListItem","view","vnode","dialog","this","attrs","recipient","lastMessage","m","className","unreadCount","active","href","user","lastMessageAt","actions","actionItems","toArray","contentPlain","slice","items","add","icon","trans","onclick","e","preventDefault","stopPropagation","save","lastReadMessageId","data","relationships","id","finally","pushAttributes","messageCount","attribute","redraw","flarum","reg","DialogList","oninit","super","oncreate","onupdate","state","getAllItems","map","activeDialog","itemActions","hasNext","hideMore","loadNext","bind","MessagesSidebar","initAttrs","canSendAnyMessage","remove","itemClassName","newMessageAction","disabled","asyncModuleImport","then","load","onsubmit","refresh","show","Message","message","controls","freshness","createdByStarter","onbeforeupdate","elementAttrs","renderFailed","revealContent","editing","header","content","concat","headerItems","cardVisible","isEditing","isHidden","contentHtml","classes","existing","footerItems","sideItems","avatar","post","MessageStream","constructor","arguments","Promise","all","_ref","ReplyPlaceholder","LoadingPost","replyPlaceholderComponent","default","loadingPostComponent","scrollListener","onscroll","element","setTimeout","start","addEventListener","markAsRead","initialToBottomScroll","isLoading","scrollToBottom","checkedRead","onremove","stop","messages","sort","a","b","createdAt","getTime","firstMessage","push","key","whileMaintainingScroll","type","forEach","index","messageItem","discussion","replyingTo","composingReply","composingMessageTo","timeGap","lastTime","class","dt","period","dayjs","fromNow","scrollTop","clientHeight","scrollHeight","hasPrev","loadPrev","callback","result","requestAnimationFrame","lastVisibleId","Number","$","filter","_","$el","offset","top","last","markingAsRead","MessageStreamState","params","page","DetailsModal","title","recipients","users","Boolean","username","slug","badges","infoItems","DialogSection","buttonClassName","accessibleToggleLabel","label","controlItems","MessagesPage","set","hasItems","initDialog","async","route","dialogRequestParams","include","dialogId","param","getById","find","selectedDialog","dialogElement","querySelector","container","scrollIntoView","loading","hero","sidebar","viewItems","display","name","sortMap","sortOptions","Object","keys","reduce","acc","sortId","getParams","values","value","changeSort","markAllAsRead"],"sourceRoot":""}